// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-artifactory/sdk/v5/go/artifactory/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a remote Hugging Face repository.
//
// Official documentation can be found [here](https://jfrog.com/help/r/jfrog-artifactory-documentation/set-up-remote-hugging-face-repositories).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-artifactory/sdk/v5/go/artifactory"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := artifactory.NewRemoteHuggingfacemlRepository(ctx, "huggingfaceml-remote", &artifactory.RemoteHuggingfacemlRepositoryArgs{
//				Key: pulumi.String("huggingfaceml-remote-foo25"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Remote repositories can be imported using their name, e.g.
//
// ```sh
//
//	$ pulumi import artifactory:index/remoteHuggingfacemlRepository:RemoteHuggingfacemlRepository huggingfaceml-remote huggingfaceml-remote
//
// ```
type RemoteHuggingfacemlRepository struct {
	pulumi.CustomResourceState

	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth pulumi.BoolPtrOutput `pulumi:"allowAnyHostAuth"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs pulumi.IntPtrOutput `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolPtrOutput `pulumi:"blackedOut"`
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes pulumi.BoolPtrOutput `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests pulumi.BoolPtrOutput `pulumi:"bypassHeadRequests"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect pulumi.BoolPtrOutput `pulumi:"cdnRedirect"`
	// Client TLS certificate name.
	ClientTlsCertificate   pulumi.StringOutput                                       `pulumi:"clientTlsCertificate"`
	ContentSynchronisation RemoteHuggingfacemlRepositoryContentSynchronisationOutput `pulumi:"contentSynchronisation"`
	// Public description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
	// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
	DisableProxy pulumi.BoolPtrOutput `pulumi:"disableProxy"`
	// Whether to disable URL normalization, default is `false`.
	DisableUrlNormalization pulumi.BoolPtrOutput `pulumi:"disableUrlNormalization"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect pulumi.BoolPtrOutput `pulumi:"downloadDirect"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrOutput `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringPtrOutput `pulumi:"excludesPattern"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolPtrOutput `pulumi:"hardFail"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrOutput `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key pulumi.StringOutput `pulumi:"key"`
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'true'.
	ListRemoteFolderItems pulumi.BoolPtrOutput `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrOutput `pulumi:"localAddress"`
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs pulumi.IntPtrOutput `pulumi:"metadataRetrievalTimeoutSecs"`
	// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrOutput `pulumi:"mismatchingMimeTypesOverrideList"`
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrOutput `pulumi:"missedCachePeriodSeconds"`
	// Internal description.
	Notes pulumi.StringPtrOutput `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline     pulumi.BoolPtrOutput   `pulumi:"offline"`
	PackageType pulumi.StringOutput    `pulumi:"packageType"`
	Password    pulumi.StringPtrOutput `pulumi:"password"`
	// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
	// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
	// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
	PriorityResolution pulumi.BoolPtrOutput `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV", "PROD", or one of custom environment. Before
	// Artifactory 7.53.1, up to 2 values ("DEV" and "PROD") are allowed. From 7.53.1 onward, only one value is allowed. The
	// attribute should only be used if the repository is already assigned to the existing project. If not, the attribute will
	// be ignored by Artifactory, but will remain in the Terraform state, which will create state drift during the update.
	ProjectEnvironments pulumi.StringArrayOutput `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrOutput `pulumi:"projectKey"`
	// List of property set names
	PropertySets pulumi.StringArrayOutput `pulumi:"propertySets"`
	// Proxy key from Artifactory Proxies settings. Can't be set if `disable_proxy = true`.
	Proxy pulumi.StringPtrOutput `pulumi:"proxy"`
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams pulumi.StringPtrOutput `pulumi:"queryParams"`
	// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
	// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
	// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
	RemoteRepoLayoutRef pulumi.StringPtrOutput `pulumi:"remoteRepoLayoutRef"`
	// Repository layout key for the remote repository
	RepoLayoutRef pulumi.StringPtrOutput `pulumi:"repoLayoutRef"`
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds pulumi.IntPtrOutput `pulumi:"retrievalCachePeriodSeconds"`
	ShareConfiguration          pulumi.BoolOutput   `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrOutput `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolPtrOutput `pulumi:"storeArtifactsLocally"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties pulumi.BoolPtrOutput `pulumi:"synchronizeProperties"`
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrOutput `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// The remote repo URL. Default to 'https://huggingface.co'
	Url      pulumi.StringPtrOutput `pulumi:"url"`
	Username pulumi.StringPtrOutput `pulumi:"username"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrOutput `pulumi:"xrayIndex"`
}

// NewRemoteHuggingfacemlRepository registers a new resource with the given unique name, arguments, and options.
func NewRemoteHuggingfacemlRepository(ctx *pulumi.Context,
	name string, args *RemoteHuggingfacemlRepositoryArgs, opts ...pulumi.ResourceOption) (*RemoteHuggingfacemlRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RemoteHuggingfacemlRepository
	err := ctx.RegisterResource("artifactory:index/remoteHuggingfacemlRepository:RemoteHuggingfacemlRepository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRemoteHuggingfacemlRepository gets an existing RemoteHuggingfacemlRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRemoteHuggingfacemlRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RemoteHuggingfacemlRepositoryState, opts ...pulumi.ResourceOption) (*RemoteHuggingfacemlRepository, error) {
	var resource RemoteHuggingfacemlRepository
	err := ctx.ReadResource("artifactory:index/remoteHuggingfacemlRepository:RemoteHuggingfacemlRepository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RemoteHuggingfacemlRepository resources.
type remoteHuggingfacemlRepositoryState struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth *bool `pulumi:"allowAnyHostAuth"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs *int `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut *bool `pulumi:"blackedOut"`
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes *bool `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests *bool `pulumi:"bypassHeadRequests"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect *bool `pulumi:"cdnRedirect"`
	// Client TLS certificate name.
	ClientTlsCertificate   *string                                              `pulumi:"clientTlsCertificate"`
	ContentSynchronisation *RemoteHuggingfacemlRepositoryContentSynchronisation `pulumi:"contentSynchronisation"`
	// Public description.
	Description *string `pulumi:"description"`
	// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
	// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
	DisableProxy *bool `pulumi:"disableProxy"`
	// Whether to disable URL normalization, default is `false`.
	DisableUrlNormalization *bool `pulumi:"disableUrlNormalization"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect *bool `pulumi:"downloadDirect"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement *bool `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
	// artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail *bool `pulumi:"hardFail"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern *string `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key *string `pulumi:"key"`
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'true'.
	ListRemoteFolderItems *bool `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress *string `pulumi:"localAddress"`
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs *int `pulumi:"metadataRetrievalTimeoutSecs"`
	// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList *string `pulumi:"mismatchingMimeTypesOverrideList"`
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds *int `pulumi:"missedCachePeriodSeconds"`
	// Internal description.
	Notes *string `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline     *bool   `pulumi:"offline"`
	PackageType *string `pulumi:"packageType"`
	Password    *string `pulumi:"password"`
	// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
	// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
	// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
	PriorityResolution *bool `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV", "PROD", or one of custom environment. Before
	// Artifactory 7.53.1, up to 2 values ("DEV" and "PROD") are allowed. From 7.53.1 onward, only one value is allowed. The
	// attribute should only be used if the repository is already assigned to the existing project. If not, the attribute will
	// be ignored by Artifactory, but will remain in the Terraform state, which will create state drift during the update.
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// List of property set names
	PropertySets []string `pulumi:"propertySets"`
	// Proxy key from Artifactory Proxies settings. Can't be set if `disable_proxy = true`.
	Proxy *string `pulumi:"proxy"`
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams *string `pulumi:"queryParams"`
	// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
	// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
	// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
	RemoteRepoLayoutRef *string `pulumi:"remoteRepoLayoutRef"`
	// Repository layout key for the remote repository
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds *int  `pulumi:"retrievalCachePeriodSeconds"`
	ShareConfiguration          *bool `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis *int `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally *bool `pulumi:"storeArtifactsLocally"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties *bool `pulumi:"synchronizeProperties"`
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours *int `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// The remote repo URL. Default to 'https://huggingface.co'
	Url      *string `pulumi:"url"`
	Username *string `pulumi:"username"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

type RemoteHuggingfacemlRepositoryState struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth pulumi.BoolPtrInput
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs pulumi.IntPtrInput
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolPtrInput
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect pulumi.BoolPtrInput
	// Client TLS certificate name.
	ClientTlsCertificate   pulumi.StringPtrInput
	ContentSynchronisation RemoteHuggingfacemlRepositoryContentSynchronisationPtrInput
	// Public description.
	Description pulumi.StringPtrInput
	// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
	// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
	DisableProxy pulumi.BoolPtrInput
	// Whether to disable URL normalization, default is `false`.
	DisableUrlNormalization pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect pulumi.BoolPtrInput
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolPtrInput
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrInput
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key pulumi.StringPtrInput
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'true'.
	ListRemoteFolderItems pulumi.BoolPtrInput
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrInput
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs pulumi.IntPtrInput
	// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrInput
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrInput
	// Internal description.
	Notes pulumi.StringPtrInput
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline     pulumi.BoolPtrInput
	PackageType pulumi.StringPtrInput
	Password    pulumi.StringPtrInput
	// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
	// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
	// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
	PriorityResolution pulumi.BoolPtrInput
	// Project environment for assigning this repository to. Allow values: "DEV", "PROD", or one of custom environment. Before
	// Artifactory 7.53.1, up to 2 values ("DEV" and "PROD") are allowed. From 7.53.1 onward, only one value is allowed. The
	// attribute should only be used if the repository is already assigned to the existing project. If not, the attribute will
	// be ignored by Artifactory, but will remain in the Terraform state, which will create state drift during the update.
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// List of property set names
	PropertySets pulumi.StringArrayInput
	// Proxy key from Artifactory Proxies settings. Can't be set if `disable_proxy = true`.
	Proxy pulumi.StringPtrInput
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams pulumi.StringPtrInput
	// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
	// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
	// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
	RemoteRepoLayoutRef pulumi.StringPtrInput
	// Repository layout key for the remote repository
	RepoLayoutRef pulumi.StringPtrInput
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds pulumi.IntPtrInput
	ShareConfiguration          pulumi.BoolPtrInput
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrInput
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolPtrInput
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties pulumi.BoolPtrInput
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrInput
	// The remote repo URL. Default to 'https://huggingface.co'
	Url      pulumi.StringPtrInput
	Username pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (RemoteHuggingfacemlRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*remoteHuggingfacemlRepositoryState)(nil)).Elem()
}

type remoteHuggingfacemlRepositoryArgs struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth *bool `pulumi:"allowAnyHostAuth"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs *int `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut *bool `pulumi:"blackedOut"`
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes *bool `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests *bool `pulumi:"bypassHeadRequests"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect *bool `pulumi:"cdnRedirect"`
	// Client TLS certificate name.
	ClientTlsCertificate   *string                                              `pulumi:"clientTlsCertificate"`
	ContentSynchronisation *RemoteHuggingfacemlRepositoryContentSynchronisation `pulumi:"contentSynchronisation"`
	// Public description.
	Description *string `pulumi:"description"`
	// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
	// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
	DisableProxy *bool `pulumi:"disableProxy"`
	// Whether to disable URL normalization, default is `false`.
	DisableUrlNormalization *bool `pulumi:"disableUrlNormalization"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect *bool `pulumi:"downloadDirect"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement *bool `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
	// artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail *bool `pulumi:"hardFail"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern *string `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key string `pulumi:"key"`
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'true'.
	ListRemoteFolderItems *bool `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress *string `pulumi:"localAddress"`
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs *int `pulumi:"metadataRetrievalTimeoutSecs"`
	// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList *string `pulumi:"mismatchingMimeTypesOverrideList"`
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds *int `pulumi:"missedCachePeriodSeconds"`
	// Internal description.
	Notes *string `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  *bool   `pulumi:"offline"`
	Password *string `pulumi:"password"`
	// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
	// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
	// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
	PriorityResolution *bool `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV", "PROD", or one of custom environment. Before
	// Artifactory 7.53.1, up to 2 values ("DEV" and "PROD") are allowed. From 7.53.1 onward, only one value is allowed. The
	// attribute should only be used if the repository is already assigned to the existing project. If not, the attribute will
	// be ignored by Artifactory, but will remain in the Terraform state, which will create state drift during the update.
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// List of property set names
	PropertySets []string `pulumi:"propertySets"`
	// Proxy key from Artifactory Proxies settings. Can't be set if `disable_proxy = true`.
	Proxy *string `pulumi:"proxy"`
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams *string `pulumi:"queryParams"`
	// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
	// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
	// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
	RemoteRepoLayoutRef *string `pulumi:"remoteRepoLayoutRef"`
	// Repository layout key for the remote repository
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds *int  `pulumi:"retrievalCachePeriodSeconds"`
	ShareConfiguration          *bool `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis *int `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally *bool `pulumi:"storeArtifactsLocally"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties *bool `pulumi:"synchronizeProperties"`
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours *int `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// The remote repo URL. Default to 'https://huggingface.co'
	Url      *string `pulumi:"url"`
	Username *string `pulumi:"username"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

// The set of arguments for constructing a RemoteHuggingfacemlRepository resource.
type RemoteHuggingfacemlRepositoryArgs struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth pulumi.BoolPtrInput
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs pulumi.IntPtrInput
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolPtrInput
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect pulumi.BoolPtrInput
	// Client TLS certificate name.
	ClientTlsCertificate   pulumi.StringPtrInput
	ContentSynchronisation RemoteHuggingfacemlRepositoryContentSynchronisationPtrInput
	// Public description.
	Description pulumi.StringPtrInput
	// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
	// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
	DisableProxy pulumi.BoolPtrInput
	// Whether to disable URL normalization, default is `false`.
	DisableUrlNormalization pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect pulumi.BoolPtrInput
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolPtrInput
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrInput
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key pulumi.StringInput
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'true'.
	ListRemoteFolderItems pulumi.BoolPtrInput
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrInput
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs pulumi.IntPtrInput
	// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrInput
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrInput
	// Internal description.
	Notes pulumi.StringPtrInput
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  pulumi.BoolPtrInput
	Password pulumi.StringPtrInput
	// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
	// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
	// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
	PriorityResolution pulumi.BoolPtrInput
	// Project environment for assigning this repository to. Allow values: "DEV", "PROD", or one of custom environment. Before
	// Artifactory 7.53.1, up to 2 values ("DEV" and "PROD") are allowed. From 7.53.1 onward, only one value is allowed. The
	// attribute should only be used if the repository is already assigned to the existing project. If not, the attribute will
	// be ignored by Artifactory, but will remain in the Terraform state, which will create state drift during the update.
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// List of property set names
	PropertySets pulumi.StringArrayInput
	// Proxy key from Artifactory Proxies settings. Can't be set if `disable_proxy = true`.
	Proxy pulumi.StringPtrInput
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams pulumi.StringPtrInput
	// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
	// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
	// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
	RemoteRepoLayoutRef pulumi.StringPtrInput
	// Repository layout key for the remote repository
	RepoLayoutRef pulumi.StringPtrInput
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds pulumi.IntPtrInput
	ShareConfiguration          pulumi.BoolPtrInput
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrInput
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolPtrInput
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties pulumi.BoolPtrInput
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrInput
	// The remote repo URL. Default to 'https://huggingface.co'
	Url      pulumi.StringPtrInput
	Username pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (RemoteHuggingfacemlRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*remoteHuggingfacemlRepositoryArgs)(nil)).Elem()
}

type RemoteHuggingfacemlRepositoryInput interface {
	pulumi.Input

	ToRemoteHuggingfacemlRepositoryOutput() RemoteHuggingfacemlRepositoryOutput
	ToRemoteHuggingfacemlRepositoryOutputWithContext(ctx context.Context) RemoteHuggingfacemlRepositoryOutput
}

func (*RemoteHuggingfacemlRepository) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteHuggingfacemlRepository)(nil)).Elem()
}

func (i *RemoteHuggingfacemlRepository) ToRemoteHuggingfacemlRepositoryOutput() RemoteHuggingfacemlRepositoryOutput {
	return i.ToRemoteHuggingfacemlRepositoryOutputWithContext(context.Background())
}

func (i *RemoteHuggingfacemlRepository) ToRemoteHuggingfacemlRepositoryOutputWithContext(ctx context.Context) RemoteHuggingfacemlRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteHuggingfacemlRepositoryOutput)
}

func (i *RemoteHuggingfacemlRepository) ToOutput(ctx context.Context) pulumix.Output[*RemoteHuggingfacemlRepository] {
	return pulumix.Output[*RemoteHuggingfacemlRepository]{
		OutputState: i.ToRemoteHuggingfacemlRepositoryOutputWithContext(ctx).OutputState,
	}
}

// RemoteHuggingfacemlRepositoryArrayInput is an input type that accepts RemoteHuggingfacemlRepositoryArray and RemoteHuggingfacemlRepositoryArrayOutput values.
// You can construct a concrete instance of `RemoteHuggingfacemlRepositoryArrayInput` via:
//
//	RemoteHuggingfacemlRepositoryArray{ RemoteHuggingfacemlRepositoryArgs{...} }
type RemoteHuggingfacemlRepositoryArrayInput interface {
	pulumi.Input

	ToRemoteHuggingfacemlRepositoryArrayOutput() RemoteHuggingfacemlRepositoryArrayOutput
	ToRemoteHuggingfacemlRepositoryArrayOutputWithContext(context.Context) RemoteHuggingfacemlRepositoryArrayOutput
}

type RemoteHuggingfacemlRepositoryArray []RemoteHuggingfacemlRepositoryInput

func (RemoteHuggingfacemlRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemoteHuggingfacemlRepository)(nil)).Elem()
}

func (i RemoteHuggingfacemlRepositoryArray) ToRemoteHuggingfacemlRepositoryArrayOutput() RemoteHuggingfacemlRepositoryArrayOutput {
	return i.ToRemoteHuggingfacemlRepositoryArrayOutputWithContext(context.Background())
}

func (i RemoteHuggingfacemlRepositoryArray) ToRemoteHuggingfacemlRepositoryArrayOutputWithContext(ctx context.Context) RemoteHuggingfacemlRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteHuggingfacemlRepositoryArrayOutput)
}

func (i RemoteHuggingfacemlRepositoryArray) ToOutput(ctx context.Context) pulumix.Output[[]*RemoteHuggingfacemlRepository] {
	return pulumix.Output[[]*RemoteHuggingfacemlRepository]{
		OutputState: i.ToRemoteHuggingfacemlRepositoryArrayOutputWithContext(ctx).OutputState,
	}
}

// RemoteHuggingfacemlRepositoryMapInput is an input type that accepts RemoteHuggingfacemlRepositoryMap and RemoteHuggingfacemlRepositoryMapOutput values.
// You can construct a concrete instance of `RemoteHuggingfacemlRepositoryMapInput` via:
//
//	RemoteHuggingfacemlRepositoryMap{ "key": RemoteHuggingfacemlRepositoryArgs{...} }
type RemoteHuggingfacemlRepositoryMapInput interface {
	pulumi.Input

	ToRemoteHuggingfacemlRepositoryMapOutput() RemoteHuggingfacemlRepositoryMapOutput
	ToRemoteHuggingfacemlRepositoryMapOutputWithContext(context.Context) RemoteHuggingfacemlRepositoryMapOutput
}

type RemoteHuggingfacemlRepositoryMap map[string]RemoteHuggingfacemlRepositoryInput

func (RemoteHuggingfacemlRepositoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemoteHuggingfacemlRepository)(nil)).Elem()
}

func (i RemoteHuggingfacemlRepositoryMap) ToRemoteHuggingfacemlRepositoryMapOutput() RemoteHuggingfacemlRepositoryMapOutput {
	return i.ToRemoteHuggingfacemlRepositoryMapOutputWithContext(context.Background())
}

func (i RemoteHuggingfacemlRepositoryMap) ToRemoteHuggingfacemlRepositoryMapOutputWithContext(ctx context.Context) RemoteHuggingfacemlRepositoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteHuggingfacemlRepositoryMapOutput)
}

func (i RemoteHuggingfacemlRepositoryMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*RemoteHuggingfacemlRepository] {
	return pulumix.Output[map[string]*RemoteHuggingfacemlRepository]{
		OutputState: i.ToRemoteHuggingfacemlRepositoryMapOutputWithContext(ctx).OutputState,
	}
}

type RemoteHuggingfacemlRepositoryOutput struct{ *pulumi.OutputState }

func (RemoteHuggingfacemlRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteHuggingfacemlRepository)(nil)).Elem()
}

func (o RemoteHuggingfacemlRepositoryOutput) ToRemoteHuggingfacemlRepositoryOutput() RemoteHuggingfacemlRepositoryOutput {
	return o
}

func (o RemoteHuggingfacemlRepositoryOutput) ToRemoteHuggingfacemlRepositoryOutputWithContext(ctx context.Context) RemoteHuggingfacemlRepositoryOutput {
	return o
}

func (o RemoteHuggingfacemlRepositoryOutput) ToOutput(ctx context.Context) pulumix.Output[*RemoteHuggingfacemlRepository] {
	return pulumix.Output[*RemoteHuggingfacemlRepository]{
		OutputState: o.OutputState,
	}
}

// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
// other host.
func (o RemoteHuggingfacemlRepositoryOutput) AllowAnyHostAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.AllowAnyHostAuth }).(pulumi.BoolPtrOutput)
}

// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
// offline.
func (o RemoteHuggingfacemlRepositoryOutput) AssumedOfflinePeriodSecs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.IntPtrOutput { return v.AssumedOfflinePeriodSecs }).(pulumi.IntPtrOutput)
}

// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
// resolution.
func (o RemoteHuggingfacemlRepositoryOutput) BlackedOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.BlackedOut }).(pulumi.BoolPtrOutput)
}

// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
// to the override list 'mismatching_mime_types_override_list'.
func (o RemoteHuggingfacemlRepositoryOutput) BlockMismatchingMimeTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.BlockMismatchingMimeTypes }).(pulumi.BoolPtrOutput)
}

// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
func (o RemoteHuggingfacemlRepositoryOutput) BypassHeadRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.BypassHeadRequests }).(pulumi.BoolPtrOutput)
}

// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
func (o RemoteHuggingfacemlRepositoryOutput) CdnRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.CdnRedirect }).(pulumi.BoolPtrOutput)
}

// Client TLS certificate name.
func (o RemoteHuggingfacemlRepositoryOutput) ClientTlsCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringOutput { return v.ClientTlsCertificate }).(pulumi.StringOutput)
}

func (o RemoteHuggingfacemlRepositoryOutput) ContentSynchronisation() RemoteHuggingfacemlRepositoryContentSynchronisationOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) RemoteHuggingfacemlRepositoryContentSynchronisationOutput {
		return v.ContentSynchronisation
	}).(RemoteHuggingfacemlRepositoryContentSynchronisationOutput)
}

// Public description.
func (o RemoteHuggingfacemlRepositoryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
func (o RemoteHuggingfacemlRepositoryOutput) DisableProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.DisableProxy }).(pulumi.BoolPtrOutput)
}

// Whether to disable URL normalization, default is `false`.
func (o RemoteHuggingfacemlRepositoryOutput) DisableUrlNormalization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.DisableUrlNormalization }).(pulumi.BoolPtrOutput)
}

// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
func (o RemoteHuggingfacemlRepositoryOutput) DownloadDirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.DownloadDirect }).(pulumi.BoolPtrOutput)
}

// Enables cookie management if the remote repository uses cookies to manage client state.
func (o RemoteHuggingfacemlRepositoryOutput) EnableCookieManagement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.EnableCookieManagement }).(pulumi.BoolPtrOutput)
}

// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
// artifacts are excluded.
func (o RemoteHuggingfacemlRepositoryOutput) ExcludesPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringPtrOutput { return v.ExcludesPattern }).(pulumi.StringPtrOutput)
}

// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
// communicate with this repository.
func (o RemoteHuggingfacemlRepositoryOutput) HardFail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.HardFail }).(pulumi.BoolPtrOutput)
}

// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
func (o RemoteHuggingfacemlRepositoryOutput) IncludesPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringPtrOutput { return v.IncludesPattern }).(pulumi.StringPtrOutput)
}

// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
// contain spaces or special characters.
func (o RemoteHuggingfacemlRepositoryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
// the 'Retrieval Cache Period'. Default value is 'true'.
func (o RemoteHuggingfacemlRepositoryOutput) ListRemoteFolderItems() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.ListRemoteFolderItems }).(pulumi.BoolPtrOutput)
}

// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
// multiple network interfaces.
func (o RemoteHuggingfacemlRepositoryOutput) LocalAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringPtrOutput { return v.LocalAddress }).(pulumi.StringPtrOutput)
}

// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
// the remote before serving locally cached artifact or fail the request.
func (o RemoteHuggingfacemlRepositoryOutput) MetadataRetrievalTimeoutSecs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.IntPtrOutput { return v.MetadataRetrievalTimeoutSecs }).(pulumi.IntPtrOutput)
}

// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
// 'application/json,application/xml'. Default value is empty.
func (o RemoteHuggingfacemlRepositoryOutput) MismatchingMimeTypesOverrideList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringPtrOutput {
		return v.MismatchingMimeTypesOverrideList
	}).(pulumi.StringPtrOutput)
}

// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
// found). A value of 0 indicates no caching.
func (o RemoteHuggingfacemlRepositoryOutput) MissedCachePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.IntPtrOutput { return v.MissedCachePeriodSeconds }).(pulumi.IntPtrOutput)
}

// Internal description.
func (o RemoteHuggingfacemlRepositoryOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringPtrOutput { return v.Notes }).(pulumi.StringPtrOutput)
}

// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
func (o RemoteHuggingfacemlRepositoryOutput) Offline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.Offline }).(pulumi.BoolPtrOutput)
}

func (o RemoteHuggingfacemlRepositoryOutput) PackageType() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringOutput { return v.PackageType }).(pulumi.StringOutput)
}

func (o RemoteHuggingfacemlRepositoryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
func (o RemoteHuggingfacemlRepositoryOutput) PriorityResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.PriorityResolution }).(pulumi.BoolPtrOutput)
}

// Project environment for assigning this repository to. Allow values: "DEV", "PROD", or one of custom environment. Before
// Artifactory 7.53.1, up to 2 values ("DEV" and "PROD") are allowed. From 7.53.1 onward, only one value is allowed. The
// attribute should only be used if the repository is already assigned to the existing project. If not, the attribute will
// be ignored by Artifactory, but will remain in the Terraform state, which will create state drift during the update.
func (o RemoteHuggingfacemlRepositoryOutput) ProjectEnvironments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringArrayOutput { return v.ProjectEnvironments }).(pulumi.StringArrayOutput)
}

// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
func (o RemoteHuggingfacemlRepositoryOutput) ProjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringPtrOutput { return v.ProjectKey }).(pulumi.StringPtrOutput)
}

// List of property set names
func (o RemoteHuggingfacemlRepositoryOutput) PropertySets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringArrayOutput { return v.PropertySets }).(pulumi.StringArrayOutput)
}

// Proxy key from Artifactory Proxies settings. Can't be set if `disable_proxy = true`.
func (o RemoteHuggingfacemlRepositoryOutput) Proxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringPtrOutput { return v.Proxy }).(pulumi.StringPtrOutput)
}

// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
// `param1=val1&param2=val2&param3=val3`
func (o RemoteHuggingfacemlRepositoryOutput) QueryParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringPtrOutput { return v.QueryParams }).(pulumi.StringPtrOutput)
}

// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
func (o RemoteHuggingfacemlRepositoryOutput) RemoteRepoLayoutRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringPtrOutput { return v.RemoteRepoLayoutRef }).(pulumi.StringPtrOutput)
}

// Repository layout key for the remote repository
func (o RemoteHuggingfacemlRepositoryOutput) RepoLayoutRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringPtrOutput { return v.RepoLayoutRef }).(pulumi.StringPtrOutput)
}

// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
// before checking for newer versions on remote server. A value of 0 indicates no caching.
func (o RemoteHuggingfacemlRepositoryOutput) RetrievalCachePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.IntPtrOutput { return v.RetrievalCachePeriodSeconds }).(pulumi.IntPtrOutput)
}

func (o RemoteHuggingfacemlRepositoryOutput) ShareConfiguration() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolOutput { return v.ShareConfiguration }).(pulumi.BoolOutput)
}

// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
// operation is considered a retrieval failure.
func (o RemoteHuggingfacemlRepositoryOutput) SocketTimeoutMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.IntPtrOutput { return v.SocketTimeoutMillis }).(pulumi.IntPtrOutput)
}

// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
// servers.
func (o RemoteHuggingfacemlRepositoryOutput) StoreArtifactsLocally() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.StoreArtifactsLocally }).(pulumi.BoolPtrOutput)
}

// When set, remote artifacts are fetched along with their properties.
func (o RemoteHuggingfacemlRepositoryOutput) SynchronizeProperties() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.SynchronizeProperties }).(pulumi.BoolPtrOutput)
}

// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
func (o RemoteHuggingfacemlRepositoryOutput) UnusedArtifactsCleanupPeriodHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.IntPtrOutput { return v.UnusedArtifactsCleanupPeriodHours }).(pulumi.IntPtrOutput)
}

// The remote repo URL. Default to 'https://huggingface.co'
func (o RemoteHuggingfacemlRepositoryOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringPtrOutput { return v.Url }).(pulumi.StringPtrOutput)
}

func (o RemoteHuggingfacemlRepositoryOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
// Xray settings.
func (o RemoteHuggingfacemlRepositoryOutput) XrayIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteHuggingfacemlRepository) pulumi.BoolPtrOutput { return v.XrayIndex }).(pulumi.BoolPtrOutput)
}

type RemoteHuggingfacemlRepositoryArrayOutput struct{ *pulumi.OutputState }

func (RemoteHuggingfacemlRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemoteHuggingfacemlRepository)(nil)).Elem()
}

func (o RemoteHuggingfacemlRepositoryArrayOutput) ToRemoteHuggingfacemlRepositoryArrayOutput() RemoteHuggingfacemlRepositoryArrayOutput {
	return o
}

func (o RemoteHuggingfacemlRepositoryArrayOutput) ToRemoteHuggingfacemlRepositoryArrayOutputWithContext(ctx context.Context) RemoteHuggingfacemlRepositoryArrayOutput {
	return o
}

func (o RemoteHuggingfacemlRepositoryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*RemoteHuggingfacemlRepository] {
	return pulumix.Output[[]*RemoteHuggingfacemlRepository]{
		OutputState: o.OutputState,
	}
}

func (o RemoteHuggingfacemlRepositoryArrayOutput) Index(i pulumi.IntInput) RemoteHuggingfacemlRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RemoteHuggingfacemlRepository {
		return vs[0].([]*RemoteHuggingfacemlRepository)[vs[1].(int)]
	}).(RemoteHuggingfacemlRepositoryOutput)
}

type RemoteHuggingfacemlRepositoryMapOutput struct{ *pulumi.OutputState }

func (RemoteHuggingfacemlRepositoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemoteHuggingfacemlRepository)(nil)).Elem()
}

func (o RemoteHuggingfacemlRepositoryMapOutput) ToRemoteHuggingfacemlRepositoryMapOutput() RemoteHuggingfacemlRepositoryMapOutput {
	return o
}

func (o RemoteHuggingfacemlRepositoryMapOutput) ToRemoteHuggingfacemlRepositoryMapOutputWithContext(ctx context.Context) RemoteHuggingfacemlRepositoryMapOutput {
	return o
}

func (o RemoteHuggingfacemlRepositoryMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*RemoteHuggingfacemlRepository] {
	return pulumix.Output[map[string]*RemoteHuggingfacemlRepository]{
		OutputState: o.OutputState,
	}
}

func (o RemoteHuggingfacemlRepositoryMapOutput) MapIndex(k pulumi.StringInput) RemoteHuggingfacemlRepositoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RemoteHuggingfacemlRepository {
		return vs[0].(map[string]*RemoteHuggingfacemlRepository)[vs[1].(string)]
	}).(RemoteHuggingfacemlRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteHuggingfacemlRepositoryInput)(nil)).Elem(), &RemoteHuggingfacemlRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteHuggingfacemlRepositoryArrayInput)(nil)).Elem(), RemoteHuggingfacemlRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteHuggingfacemlRepositoryMapInput)(nil)).Elem(), RemoteHuggingfacemlRepositoryMap{})
	pulumi.RegisterOutputType(RemoteHuggingfacemlRepositoryOutput{})
	pulumi.RegisterOutputType(RemoteHuggingfacemlRepositoryArrayOutput{})
	pulumi.RegisterOutputType(RemoteHuggingfacemlRepositoryMapOutput{})
}
