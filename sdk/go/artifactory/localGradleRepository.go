// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Artifactory Local Gradle Repository Resource
//
// Creates a local Gradle repository and allows for the creation of a
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-artifactory/sdk/go/artifactory"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := artifactory.NewLocalGradleRepository(ctx, "terraform-local-test-gradle-repo-basic", &artifactory.LocalGradleRepositoryArgs{
// 			ChecksumPolicyType:           pulumi.String("client-checksums"),
// 			HandleReleases:               pulumi.Bool(true),
// 			HandleSnapshots:              pulumi.Bool(true),
// 			Key:                          pulumi.String("terraform-local-test-gradle-repo-basic"),
// 			MaxUniqueSnapshots:           pulumi.Int(10),
// 			SnapshotVersionBehavior:      pulumi.String("unique"),
// 			SuppressPomConsistencyChecks: pulumi.Bool(true),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type LocalGradleRepository struct {
	pulumi.CustomResourceState

	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled pulumi.BoolPtrOutput `pulumi:"archiveBrowsingEnabled"`
	BlackedOut             pulumi.BoolPtrOutput `pulumi:"blackedOut"`
	// - Checksum policy determines how Artifactory behaves when a client checksum for a deployed
	//   "resource is missing or conflicts with the locally calculated checksum (bad checksum). For more details,
	//   "please refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy)
	ChecksumPolicyType pulumi.StringPtrOutput `pulumi:"checksumPolicyType"`
	Description        pulumi.StringPtrOutput `pulumi:"description"`
	DownloadDirect     pulumi.BoolPtrOutput   `pulumi:"downloadDirect"`
	ExcludesPattern    pulumi.StringOutput    `pulumi:"excludesPattern"`
	// If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases pulumi.BoolPtrOutput `pulumi:"handleReleases"`
	// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots pulumi.BoolPtrOutput `pulumi:"handleSnapshots"`
	IncludesPattern pulumi.StringOutput  `pulumi:"includesPattern"`
	// - the identity key of the repo
	Key pulumi.StringOutput `pulumi:"key"`
	// - The maximum number of unique snapshots of a single artifact to store.
	//   Once the number of snapshots exceeds this setting, older versions are removed.
	//   A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.
	MaxUniqueSnapshots pulumi.IntPtrOutput    `pulumi:"maxUniqueSnapshots"`
	Notes              pulumi.StringPtrOutput `pulumi:"notes"`
	PackageType        pulumi.StringOutput    `pulumi:"packageType"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution pulumi.BoolPtrOutput `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD"
	ProjectEnvironments pulumi.StringArrayOutput `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed
	// with project key, separated by a dash.
	ProjectKey    pulumi.StringPtrOutput   `pulumi:"projectKey"`
	PropertySets  pulumi.StringArrayOutput `pulumi:"propertySets"`
	RepoLayoutRef pulumi.StringOutput      `pulumi:"repoLayoutRef"`
	// Specifies the naming convention for Maven SNAPSHOT versions.
	// The options are -
	// Unique: Version number is based on a time-stamp (default)
	// Non-unique: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type
	// Deployer: Respects the settings in the Maven client that is deploying the artifact.
	SnapshotVersionBehavior pulumi.StringPtrOutput `pulumi:"snapshotVersionBehavior"`
	// By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).
	// If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error.
	// You can disable this behavior by setting the Suppress POM Consistency Checks checkbox. True by default for Gradle repository.
	SuppressPomConsistencyChecks pulumi.BoolPtrOutput `pulumi:"suppressPomConsistencyChecks"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrOutput `pulumi:"xrayIndex"`
}

// NewLocalGradleRepository registers a new resource with the given unique name, arguments, and options.
func NewLocalGradleRepository(ctx *pulumi.Context,
	name string, args *LocalGradleRepositoryArgs, opts ...pulumi.ResourceOption) (*LocalGradleRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	var resource LocalGradleRepository
	err := ctx.RegisterResource("artifactory:index/localGradleRepository:LocalGradleRepository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocalGradleRepository gets an existing LocalGradleRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalGradleRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocalGradleRepositoryState, opts ...pulumi.ResourceOption) (*LocalGradleRepository, error) {
	var resource LocalGradleRepository
	err := ctx.ReadResource("artifactory:index/localGradleRepository:LocalGradleRepository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocalGradleRepository resources.
type localGradleRepositoryState struct {
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled *bool `pulumi:"archiveBrowsingEnabled"`
	BlackedOut             *bool `pulumi:"blackedOut"`
	// - Checksum policy determines how Artifactory behaves when a client checksum for a deployed
	//   "resource is missing or conflicts with the locally calculated checksum (bad checksum). For more details,
	//   "please refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy)
	ChecksumPolicyType *string `pulumi:"checksumPolicyType"`
	Description        *string `pulumi:"description"`
	DownloadDirect     *bool   `pulumi:"downloadDirect"`
	ExcludesPattern    *string `pulumi:"excludesPattern"`
	// If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases *bool `pulumi:"handleReleases"`
	// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots *bool   `pulumi:"handleSnapshots"`
	IncludesPattern *string `pulumi:"includesPattern"`
	// - the identity key of the repo
	Key *string `pulumi:"key"`
	// - The maximum number of unique snapshots of a single artifact to store.
	//   Once the number of snapshots exceeds this setting, older versions are removed.
	//   A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.
	MaxUniqueSnapshots *int    `pulumi:"maxUniqueSnapshots"`
	Notes              *string `pulumi:"notes"`
	PackageType        *string `pulumi:"packageType"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution *bool `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD"
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed
	// with project key, separated by a dash.
	ProjectKey    *string  `pulumi:"projectKey"`
	PropertySets  []string `pulumi:"propertySets"`
	RepoLayoutRef *string  `pulumi:"repoLayoutRef"`
	// Specifies the naming convention for Maven SNAPSHOT versions.
	// The options are -
	// Unique: Version number is based on a time-stamp (default)
	// Non-unique: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type
	// Deployer: Respects the settings in the Maven client that is deploying the artifact.
	SnapshotVersionBehavior *string `pulumi:"snapshotVersionBehavior"`
	// By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).
	// If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error.
	// You can disable this behavior by setting the Suppress POM Consistency Checks checkbox. True by default for Gradle repository.
	SuppressPomConsistencyChecks *bool `pulumi:"suppressPomConsistencyChecks"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

type LocalGradleRepositoryState struct {
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled pulumi.BoolPtrInput
	BlackedOut             pulumi.BoolPtrInput
	// - Checksum policy determines how Artifactory behaves when a client checksum for a deployed
	//   "resource is missing or conflicts with the locally calculated checksum (bad checksum). For more details,
	//   "please refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy)
	ChecksumPolicyType pulumi.StringPtrInput
	Description        pulumi.StringPtrInput
	DownloadDirect     pulumi.BoolPtrInput
	ExcludesPattern    pulumi.StringPtrInput
	// If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases pulumi.BoolPtrInput
	// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots pulumi.BoolPtrInput
	IncludesPattern pulumi.StringPtrInput
	// - the identity key of the repo
	Key pulumi.StringPtrInput
	// - The maximum number of unique snapshots of a single artifact to store.
	//   Once the number of snapshots exceeds this setting, older versions are removed.
	//   A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.
	MaxUniqueSnapshots pulumi.IntPtrInput
	Notes              pulumi.StringPtrInput
	PackageType        pulumi.StringPtrInput
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution pulumi.BoolPtrInput
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD"
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed
	// with project key, separated by a dash.
	ProjectKey    pulumi.StringPtrInput
	PropertySets  pulumi.StringArrayInput
	RepoLayoutRef pulumi.StringPtrInput
	// Specifies the naming convention for Maven SNAPSHOT versions.
	// The options are -
	// Unique: Version number is based on a time-stamp (default)
	// Non-unique: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type
	// Deployer: Respects the settings in the Maven client that is deploying the artifact.
	SnapshotVersionBehavior pulumi.StringPtrInput
	// By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).
	// If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error.
	// You can disable this behavior by setting the Suppress POM Consistency Checks checkbox. True by default for Gradle repository.
	SuppressPomConsistencyChecks pulumi.BoolPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (LocalGradleRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*localGradleRepositoryState)(nil)).Elem()
}

type localGradleRepositoryArgs struct {
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled *bool `pulumi:"archiveBrowsingEnabled"`
	BlackedOut             *bool `pulumi:"blackedOut"`
	// - Checksum policy determines how Artifactory behaves when a client checksum for a deployed
	//   "resource is missing or conflicts with the locally calculated checksum (bad checksum). For more details,
	//   "please refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy)
	ChecksumPolicyType *string `pulumi:"checksumPolicyType"`
	Description        *string `pulumi:"description"`
	DownloadDirect     *bool   `pulumi:"downloadDirect"`
	ExcludesPattern    *string `pulumi:"excludesPattern"`
	// If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases *bool `pulumi:"handleReleases"`
	// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots *bool   `pulumi:"handleSnapshots"`
	IncludesPattern *string `pulumi:"includesPattern"`
	// - the identity key of the repo
	Key string `pulumi:"key"`
	// - The maximum number of unique snapshots of a single artifact to store.
	//   Once the number of snapshots exceeds this setting, older versions are removed.
	//   A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.
	MaxUniqueSnapshots *int    `pulumi:"maxUniqueSnapshots"`
	Notes              *string `pulumi:"notes"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution *bool `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD"
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed
	// with project key, separated by a dash.
	ProjectKey    *string  `pulumi:"projectKey"`
	PropertySets  []string `pulumi:"propertySets"`
	RepoLayoutRef *string  `pulumi:"repoLayoutRef"`
	// Specifies the naming convention for Maven SNAPSHOT versions.
	// The options are -
	// Unique: Version number is based on a time-stamp (default)
	// Non-unique: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type
	// Deployer: Respects the settings in the Maven client that is deploying the artifact.
	SnapshotVersionBehavior *string `pulumi:"snapshotVersionBehavior"`
	// By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).
	// If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error.
	// You can disable this behavior by setting the Suppress POM Consistency Checks checkbox. True by default for Gradle repository.
	SuppressPomConsistencyChecks *bool `pulumi:"suppressPomConsistencyChecks"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

// The set of arguments for constructing a LocalGradleRepository resource.
type LocalGradleRepositoryArgs struct {
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled pulumi.BoolPtrInput
	BlackedOut             pulumi.BoolPtrInput
	// - Checksum policy determines how Artifactory behaves when a client checksum for a deployed
	//   "resource is missing or conflicts with the locally calculated checksum (bad checksum). For more details,
	//   "please refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy)
	ChecksumPolicyType pulumi.StringPtrInput
	Description        pulumi.StringPtrInput
	DownloadDirect     pulumi.BoolPtrInput
	ExcludesPattern    pulumi.StringPtrInput
	// If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases pulumi.BoolPtrInput
	// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots pulumi.BoolPtrInput
	IncludesPattern pulumi.StringPtrInput
	// - the identity key of the repo
	Key pulumi.StringInput
	// - The maximum number of unique snapshots of a single artifact to store.
	//   Once the number of snapshots exceeds this setting, older versions are removed.
	//   A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.
	MaxUniqueSnapshots pulumi.IntPtrInput
	Notes              pulumi.StringPtrInput
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution pulumi.BoolPtrInput
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD"
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed
	// with project key, separated by a dash.
	ProjectKey    pulumi.StringPtrInput
	PropertySets  pulumi.StringArrayInput
	RepoLayoutRef pulumi.StringPtrInput
	// Specifies the naming convention for Maven SNAPSHOT versions.
	// The options are -
	// Unique: Version number is based on a time-stamp (default)
	// Non-unique: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type
	// Deployer: Respects the settings in the Maven client that is deploying the artifact.
	SnapshotVersionBehavior pulumi.StringPtrInput
	// By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).
	// If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error.
	// You can disable this behavior by setting the Suppress POM Consistency Checks checkbox. True by default for Gradle repository.
	SuppressPomConsistencyChecks pulumi.BoolPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (LocalGradleRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*localGradleRepositoryArgs)(nil)).Elem()
}

type LocalGradleRepositoryInput interface {
	pulumi.Input

	ToLocalGradleRepositoryOutput() LocalGradleRepositoryOutput
	ToLocalGradleRepositoryOutputWithContext(ctx context.Context) LocalGradleRepositoryOutput
}

func (*LocalGradleRepository) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalGradleRepository)(nil)).Elem()
}

func (i *LocalGradleRepository) ToLocalGradleRepositoryOutput() LocalGradleRepositoryOutput {
	return i.ToLocalGradleRepositoryOutputWithContext(context.Background())
}

func (i *LocalGradleRepository) ToLocalGradleRepositoryOutputWithContext(ctx context.Context) LocalGradleRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalGradleRepositoryOutput)
}

// LocalGradleRepositoryArrayInput is an input type that accepts LocalGradleRepositoryArray and LocalGradleRepositoryArrayOutput values.
// You can construct a concrete instance of `LocalGradleRepositoryArrayInput` via:
//
//          LocalGradleRepositoryArray{ LocalGradleRepositoryArgs{...} }
type LocalGradleRepositoryArrayInput interface {
	pulumi.Input

	ToLocalGradleRepositoryArrayOutput() LocalGradleRepositoryArrayOutput
	ToLocalGradleRepositoryArrayOutputWithContext(context.Context) LocalGradleRepositoryArrayOutput
}

type LocalGradleRepositoryArray []LocalGradleRepositoryInput

func (LocalGradleRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalGradleRepository)(nil)).Elem()
}

func (i LocalGradleRepositoryArray) ToLocalGradleRepositoryArrayOutput() LocalGradleRepositoryArrayOutput {
	return i.ToLocalGradleRepositoryArrayOutputWithContext(context.Background())
}

func (i LocalGradleRepositoryArray) ToLocalGradleRepositoryArrayOutputWithContext(ctx context.Context) LocalGradleRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalGradleRepositoryArrayOutput)
}

// LocalGradleRepositoryMapInput is an input type that accepts LocalGradleRepositoryMap and LocalGradleRepositoryMapOutput values.
// You can construct a concrete instance of `LocalGradleRepositoryMapInput` via:
//
//          LocalGradleRepositoryMap{ "key": LocalGradleRepositoryArgs{...} }
type LocalGradleRepositoryMapInput interface {
	pulumi.Input

	ToLocalGradleRepositoryMapOutput() LocalGradleRepositoryMapOutput
	ToLocalGradleRepositoryMapOutputWithContext(context.Context) LocalGradleRepositoryMapOutput
}

type LocalGradleRepositoryMap map[string]LocalGradleRepositoryInput

func (LocalGradleRepositoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalGradleRepository)(nil)).Elem()
}

func (i LocalGradleRepositoryMap) ToLocalGradleRepositoryMapOutput() LocalGradleRepositoryMapOutput {
	return i.ToLocalGradleRepositoryMapOutputWithContext(context.Background())
}

func (i LocalGradleRepositoryMap) ToLocalGradleRepositoryMapOutputWithContext(ctx context.Context) LocalGradleRepositoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalGradleRepositoryMapOutput)
}

type LocalGradleRepositoryOutput struct{ *pulumi.OutputState }

func (LocalGradleRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalGradleRepository)(nil)).Elem()
}

func (o LocalGradleRepositoryOutput) ToLocalGradleRepositoryOutput() LocalGradleRepositoryOutput {
	return o
}

func (o LocalGradleRepositoryOutput) ToLocalGradleRepositoryOutputWithContext(ctx context.Context) LocalGradleRepositoryOutput {
	return o
}

type LocalGradleRepositoryArrayOutput struct{ *pulumi.OutputState }

func (LocalGradleRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalGradleRepository)(nil)).Elem()
}

func (o LocalGradleRepositoryArrayOutput) ToLocalGradleRepositoryArrayOutput() LocalGradleRepositoryArrayOutput {
	return o
}

func (o LocalGradleRepositoryArrayOutput) ToLocalGradleRepositoryArrayOutputWithContext(ctx context.Context) LocalGradleRepositoryArrayOutput {
	return o
}

func (o LocalGradleRepositoryArrayOutput) Index(i pulumi.IntInput) LocalGradleRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LocalGradleRepository {
		return vs[0].([]*LocalGradleRepository)[vs[1].(int)]
	}).(LocalGradleRepositoryOutput)
}

type LocalGradleRepositoryMapOutput struct{ *pulumi.OutputState }

func (LocalGradleRepositoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalGradleRepository)(nil)).Elem()
}

func (o LocalGradleRepositoryMapOutput) ToLocalGradleRepositoryMapOutput() LocalGradleRepositoryMapOutput {
	return o
}

func (o LocalGradleRepositoryMapOutput) ToLocalGradleRepositoryMapOutputWithContext(ctx context.Context) LocalGradleRepositoryMapOutput {
	return o
}

func (o LocalGradleRepositoryMapOutput) MapIndex(k pulumi.StringInput) LocalGradleRepositoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LocalGradleRepository {
		return vs[0].(map[string]*LocalGradleRepository)[vs[1].(string)]
	}).(LocalGradleRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocalGradleRepositoryInput)(nil)).Elem(), &LocalGradleRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalGradleRepositoryArrayInput)(nil)).Elem(), LocalGradleRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalGradleRepositoryMapInput)(nil)).Elem(), LocalGradleRepositoryMap{})
	pulumi.RegisterOutputType(LocalGradleRepositoryOutput{})
	pulumi.RegisterOutputType(LocalGradleRepositoryArrayOutput{})
	pulumi.RegisterOutputType(LocalGradleRepositoryMapOutput{})
}
