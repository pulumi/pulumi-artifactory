// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-artifactory/sdk/v8/go/artifactory/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupFederatedHuggingfacemlRepository(ctx *pulumi.Context, args *LookupFederatedHuggingfacemlRepositoryArgs, opts ...pulumi.InvokeOption) (*LookupFederatedHuggingfacemlRepositoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFederatedHuggingfacemlRepositoryResult
	err := ctx.Invoke("artifactory:index/getFederatedHuggingfacemlRepository:getFederatedHuggingfacemlRepository", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFederatedHuggingfacemlRepository.
type LookupFederatedHuggingfacemlRepositoryArgs struct {
	ArchiveBrowsingEnabled *bool                                       `pulumi:"archiveBrowsingEnabled"`
	BlackedOut             *bool                                       `pulumi:"blackedOut"`
	CdnRedirect            *bool                                       `pulumi:"cdnRedirect"`
	CleanupOnDelete        *bool                                       `pulumi:"cleanupOnDelete"`
	Description            *string                                     `pulumi:"description"`
	DisableProxy           *bool                                       `pulumi:"disableProxy"`
	DownloadDirect         *bool                                       `pulumi:"downloadDirect"`
	ExcludesPattern        *string                                     `pulumi:"excludesPattern"`
	IncludesPattern        *string                                     `pulumi:"includesPattern"`
	Key                    string                                      `pulumi:"key"`
	Members                []GetFederatedHuggingfacemlRepositoryMember `pulumi:"members"`
	Notes                  *string                                     `pulumi:"notes"`
	PriorityResolution     *bool                                       `pulumi:"priorityResolution"`
	ProjectEnvironments    []string                                    `pulumi:"projectEnvironments"`
	ProjectKey             *string                                     `pulumi:"projectKey"`
	PropertySets           []string                                    `pulumi:"propertySets"`
	Proxy                  *string                                     `pulumi:"proxy"`
	RepoLayoutRef          *string                                     `pulumi:"repoLayoutRef"`
	XrayIndex              *bool                                       `pulumi:"xrayIndex"`
}

// A collection of values returned by getFederatedHuggingfacemlRepository.
type LookupFederatedHuggingfacemlRepositoryResult struct {
	ArchiveBrowsingEnabled *bool   `pulumi:"archiveBrowsingEnabled"`
	BlackedOut             *bool   `pulumi:"blackedOut"`
	CdnRedirect            *bool   `pulumi:"cdnRedirect"`
	CleanupOnDelete        *bool   `pulumi:"cleanupOnDelete"`
	Description            *string `pulumi:"description"`
	DisableProxy           *bool   `pulumi:"disableProxy"`
	DownloadDirect         *bool   `pulumi:"downloadDirect"`
	ExcludesPattern        *string `pulumi:"excludesPattern"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string                                      `pulumi:"id"`
	IncludesPattern     *string                                     `pulumi:"includesPattern"`
	Key                 string                                      `pulumi:"key"`
	Members             []GetFederatedHuggingfacemlRepositoryMember `pulumi:"members"`
	Notes               *string                                     `pulumi:"notes"`
	PackageType         string                                      `pulumi:"packageType"`
	PriorityResolution  *bool                                       `pulumi:"priorityResolution"`
	ProjectEnvironments []string                                    `pulumi:"projectEnvironments"`
	ProjectKey          *string                                     `pulumi:"projectKey"`
	PropertySets        []string                                    `pulumi:"propertySets"`
	Proxy               *string                                     `pulumi:"proxy"`
	RepoLayoutRef       *string                                     `pulumi:"repoLayoutRef"`
	XrayIndex           *bool                                       `pulumi:"xrayIndex"`
}

func LookupFederatedHuggingfacemlRepositoryOutput(ctx *pulumi.Context, args LookupFederatedHuggingfacemlRepositoryOutputArgs, opts ...pulumi.InvokeOption) LookupFederatedHuggingfacemlRepositoryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFederatedHuggingfacemlRepositoryResultOutput, error) {
			args := v.(LookupFederatedHuggingfacemlRepositoryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("artifactory:index/getFederatedHuggingfacemlRepository:getFederatedHuggingfacemlRepository", args, LookupFederatedHuggingfacemlRepositoryResultOutput{}, options).(LookupFederatedHuggingfacemlRepositoryResultOutput), nil
		}).(LookupFederatedHuggingfacemlRepositoryResultOutput)
}

// A collection of arguments for invoking getFederatedHuggingfacemlRepository.
type LookupFederatedHuggingfacemlRepositoryOutputArgs struct {
	ArchiveBrowsingEnabled pulumi.BoolPtrInput                                 `pulumi:"archiveBrowsingEnabled"`
	BlackedOut             pulumi.BoolPtrInput                                 `pulumi:"blackedOut"`
	CdnRedirect            pulumi.BoolPtrInput                                 `pulumi:"cdnRedirect"`
	CleanupOnDelete        pulumi.BoolPtrInput                                 `pulumi:"cleanupOnDelete"`
	Description            pulumi.StringPtrInput                               `pulumi:"description"`
	DisableProxy           pulumi.BoolPtrInput                                 `pulumi:"disableProxy"`
	DownloadDirect         pulumi.BoolPtrInput                                 `pulumi:"downloadDirect"`
	ExcludesPattern        pulumi.StringPtrInput                               `pulumi:"excludesPattern"`
	IncludesPattern        pulumi.StringPtrInput                               `pulumi:"includesPattern"`
	Key                    pulumi.StringInput                                  `pulumi:"key"`
	Members                GetFederatedHuggingfacemlRepositoryMemberArrayInput `pulumi:"members"`
	Notes                  pulumi.StringPtrInput                               `pulumi:"notes"`
	PriorityResolution     pulumi.BoolPtrInput                                 `pulumi:"priorityResolution"`
	ProjectEnvironments    pulumi.StringArrayInput                             `pulumi:"projectEnvironments"`
	ProjectKey             pulumi.StringPtrInput                               `pulumi:"projectKey"`
	PropertySets           pulumi.StringArrayInput                             `pulumi:"propertySets"`
	Proxy                  pulumi.StringPtrInput                               `pulumi:"proxy"`
	RepoLayoutRef          pulumi.StringPtrInput                               `pulumi:"repoLayoutRef"`
	XrayIndex              pulumi.BoolPtrInput                                 `pulumi:"xrayIndex"`
}

func (LookupFederatedHuggingfacemlRepositoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFederatedHuggingfacemlRepositoryArgs)(nil)).Elem()
}

// A collection of values returned by getFederatedHuggingfacemlRepository.
type LookupFederatedHuggingfacemlRepositoryResultOutput struct{ *pulumi.OutputState }

func (LookupFederatedHuggingfacemlRepositoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFederatedHuggingfacemlRepositoryResult)(nil)).Elem()
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) ToLookupFederatedHuggingfacemlRepositoryResultOutput() LookupFederatedHuggingfacemlRepositoryResultOutput {
	return o
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) ToLookupFederatedHuggingfacemlRepositoryResultOutputWithContext(ctx context.Context) LookupFederatedHuggingfacemlRepositoryResultOutput {
	return o
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) ArchiveBrowsingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) *bool { return v.ArchiveBrowsingEnabled }).(pulumi.BoolPtrOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) BlackedOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) *bool { return v.BlackedOut }).(pulumi.BoolPtrOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) CdnRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) *bool { return v.CdnRedirect }).(pulumi.BoolPtrOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) CleanupOnDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) *bool { return v.CleanupOnDelete }).(pulumi.BoolPtrOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) DisableProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) *bool { return v.DisableProxy }).(pulumi.BoolPtrOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) DownloadDirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) *bool { return v.DownloadDirect }).(pulumi.BoolPtrOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) ExcludesPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) *string { return v.ExcludesPattern }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFederatedHuggingfacemlRepositoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) IncludesPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) *string { return v.IncludesPattern }).(pulumi.StringPtrOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) string { return v.Key }).(pulumi.StringOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) Members() GetFederatedHuggingfacemlRepositoryMemberArrayOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) []GetFederatedHuggingfacemlRepositoryMember {
		return v.Members
	}).(GetFederatedHuggingfacemlRepositoryMemberArrayOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) PackageType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) string { return v.PackageType }).(pulumi.StringOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) PriorityResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) *bool { return v.PriorityResolution }).(pulumi.BoolPtrOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) ProjectEnvironments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) []string { return v.ProjectEnvironments }).(pulumi.StringArrayOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) ProjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) *string { return v.ProjectKey }).(pulumi.StringPtrOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) PropertySets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) []string { return v.PropertySets }).(pulumi.StringArrayOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) Proxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) *string { return v.Proxy }).(pulumi.StringPtrOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) RepoLayoutRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) *string { return v.RepoLayoutRef }).(pulumi.StringPtrOutput)
}

func (o LookupFederatedHuggingfacemlRepositoryResultOutput) XrayIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupFederatedHuggingfacemlRepositoryResult) *bool { return v.XrayIndex }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFederatedHuggingfacemlRepositoryResultOutput{})
}
