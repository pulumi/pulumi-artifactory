// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupGroup(ctx *pulumi.Context, args *LookupGroupArgs, opts ...pulumi.InvokeOption) (*LookupGroupResult, error) {
	var rv LookupGroupResult
	err := ctx.Invoke("artifactory:index/getGroup:getGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroup.
type LookupGroupArgs struct {
	AdminPrivileges *bool    `pulumi:"adminPrivileges"`
	AutoJoin        *bool    `pulumi:"autoJoin"`
	Description     *string  `pulumi:"description"`
	ExternalId      *string  `pulumi:"externalId"`
	IncludeUsers    *string  `pulumi:"includeUsers"`
	Name            string   `pulumi:"name"`
	PolicyManager   *bool    `pulumi:"policyManager"`
	Realm           *string  `pulumi:"realm"`
	RealmAttributes *string  `pulumi:"realmAttributes"`
	ReportsManager  *bool    `pulumi:"reportsManager"`
	UsersNames      []string `pulumi:"usersNames"`
	WatchManager    *bool    `pulumi:"watchManager"`
}

// A collection of values returned by getGroup.
type LookupGroupResult struct {
	AdminPrivileges bool    `pulumi:"adminPrivileges"`
	AutoJoin        bool    `pulumi:"autoJoin"`
	Description     *string `pulumi:"description"`
	ExternalId      *string `pulumi:"externalId"`
	// The provider-assigned unique ID for this managed resource.
	Id              string   `pulumi:"id"`
	IncludeUsers    *string  `pulumi:"includeUsers"`
	Name            string   `pulumi:"name"`
	PolicyManager   *bool    `pulumi:"policyManager"`
	Realm           string   `pulumi:"realm"`
	RealmAttributes *string  `pulumi:"realmAttributes"`
	ReportsManager  *bool    `pulumi:"reportsManager"`
	UsersNames      []string `pulumi:"usersNames"`
	WatchManager    *bool    `pulumi:"watchManager"`
}

func LookupGroupOutput(ctx *pulumi.Context, args LookupGroupOutputArgs, opts ...pulumi.InvokeOption) LookupGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGroupResult, error) {
			args := v.(LookupGroupArgs)
			r, err := LookupGroup(ctx, &args, opts...)
			var s LookupGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGroupResultOutput)
}

// A collection of arguments for invoking getGroup.
type LookupGroupOutputArgs struct {
	AdminPrivileges pulumi.BoolPtrInput     `pulumi:"adminPrivileges"`
	AutoJoin        pulumi.BoolPtrInput     `pulumi:"autoJoin"`
	Description     pulumi.StringPtrInput   `pulumi:"description"`
	ExternalId      pulumi.StringPtrInput   `pulumi:"externalId"`
	IncludeUsers    pulumi.StringPtrInput   `pulumi:"includeUsers"`
	Name            pulumi.StringInput      `pulumi:"name"`
	PolicyManager   pulumi.BoolPtrInput     `pulumi:"policyManager"`
	Realm           pulumi.StringPtrInput   `pulumi:"realm"`
	RealmAttributes pulumi.StringPtrInput   `pulumi:"realmAttributes"`
	ReportsManager  pulumi.BoolPtrInput     `pulumi:"reportsManager"`
	UsersNames      pulumi.StringArrayInput `pulumi:"usersNames"`
	WatchManager    pulumi.BoolPtrInput     `pulumi:"watchManager"`
}

func (LookupGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupArgs)(nil)).Elem()
}

// A collection of values returned by getGroup.
type LookupGroupResultOutput struct{ *pulumi.OutputState }

func (LookupGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupResult)(nil)).Elem()
}

func (o LookupGroupResultOutput) ToLookupGroupResultOutput() LookupGroupResultOutput {
	return o
}

func (o LookupGroupResultOutput) ToLookupGroupResultOutputWithContext(ctx context.Context) LookupGroupResultOutput {
	return o
}

func (o LookupGroupResultOutput) AdminPrivileges() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.AdminPrivileges }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) AutoJoin() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.AutoJoin }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupGroupResultOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupGroupResultOutput) IncludeUsers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *string { return v.IncludeUsers }).(pulumi.StringPtrOutput)
}

func (o LookupGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupGroupResultOutput) PolicyManager() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *bool { return v.PolicyManager }).(pulumi.BoolPtrOutput)
}

func (o LookupGroupResultOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.Realm }).(pulumi.StringOutput)
}

func (o LookupGroupResultOutput) RealmAttributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *string { return v.RealmAttributes }).(pulumi.StringPtrOutput)
}

func (o LookupGroupResultOutput) ReportsManager() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *bool { return v.ReportsManager }).(pulumi.BoolPtrOutput)
}

func (o LookupGroupResultOutput) UsersNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGroupResult) []string { return v.UsersNames }).(pulumi.StringArrayOutput)
}

func (o LookupGroupResultOutput) WatchManager() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *bool { return v.WatchManager }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGroupResultOutput{})
}
