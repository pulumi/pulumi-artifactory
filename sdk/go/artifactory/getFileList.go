// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-artifactory/sdk/v5/go/artifactory/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a flat (the default) or deep listing of the files and folders (not included by default) within a folder. For deep listing you can specify an optional depth to limit the results. Optionally include a map of metadata timestamp values as part of the result.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-artifactory/sdk/v5/go/artifactory"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := artifactory.GetFileList(ctx, &artifactory.GetFileListArgs{
//				FolderPath:    "path/to/artifact",
//				RepositoryKey: "my-generic-local",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFileList(ctx *pulumi.Context, args *GetFileListArgs, opts ...pulumi.InvokeOption) (*GetFileListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFileListResult
	err := ctx.Invoke("artifactory:index/getFileList:getFileList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFileList.
type GetFileListArgs struct {
	// Get deep listing
	DeepListing *bool `pulumi:"deepListing"`
	// Depth of the deep listing
	Depth *int `pulumi:"depth"`
	// Path of the folder
	FolderPath string `pulumi:"folderPath"`
	// Include root path
	IncludeRootPath *bool `pulumi:"includeRootPath"`
	// Include folders
	ListFolders *bool `pulumi:"listFolders"`
	// File metadata
	MetadataTimestamps *bool `pulumi:"metadataTimestamps"`
	// Repository key
	RepositoryKey string `pulumi:"repositoryKey"`
}

// A collection of values returned by getFileList.
type GetFileListResult struct {
	// Creation time
	Created string `pulumi:"created"`
	// Get deep listing
	DeepListing *bool `pulumi:"deepListing"`
	// Depth of the deep listing
	Depth *int `pulumi:"depth"`
	// A list of files.
	Files []GetFileListFile `pulumi:"files"`
	// Path of the folder
	FolderPath string `pulumi:"folderPath"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Include root path
	IncludeRootPath *bool `pulumi:"includeRootPath"`
	// Include folders
	ListFolders *bool `pulumi:"listFolders"`
	// Include metadata timestamps
	MetadataTimestamps *bool `pulumi:"metadataTimestamps"`
	// Repository key
	RepositoryKey string `pulumi:"repositoryKey"`
	// URL to file/path
	Uri string `pulumi:"uri"`
}

func GetFileListOutput(ctx *pulumi.Context, args GetFileListOutputArgs, opts ...pulumi.InvokeOption) GetFileListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetFileListResult, error) {
			args := v.(GetFileListArgs)
			r, err := GetFileList(ctx, &args, opts...)
			var s GetFileListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetFileListResultOutput)
}

// A collection of arguments for invoking getFileList.
type GetFileListOutputArgs struct {
	// Get deep listing
	DeepListing pulumi.BoolPtrInput `pulumi:"deepListing"`
	// Depth of the deep listing
	Depth pulumi.IntPtrInput `pulumi:"depth"`
	// Path of the folder
	FolderPath pulumi.StringInput `pulumi:"folderPath"`
	// Include root path
	IncludeRootPath pulumi.BoolPtrInput `pulumi:"includeRootPath"`
	// Include folders
	ListFolders pulumi.BoolPtrInput `pulumi:"listFolders"`
	// File metadata
	MetadataTimestamps pulumi.BoolPtrInput `pulumi:"metadataTimestamps"`
	// Repository key
	RepositoryKey pulumi.StringInput `pulumi:"repositoryKey"`
}

func (GetFileListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileListArgs)(nil)).Elem()
}

// A collection of values returned by getFileList.
type GetFileListResultOutput struct{ *pulumi.OutputState }

func (GetFileListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileListResult)(nil)).Elem()
}

func (o GetFileListResultOutput) ToGetFileListResultOutput() GetFileListResultOutput {
	return o
}

func (o GetFileListResultOutput) ToGetFileListResultOutputWithContext(ctx context.Context) GetFileListResultOutput {
	return o
}

// Creation time
func (o GetFileListResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileListResult) string { return v.Created }).(pulumi.StringOutput)
}

// Get deep listing
func (o GetFileListResultOutput) DeepListing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetFileListResult) *bool { return v.DeepListing }).(pulumi.BoolPtrOutput)
}

// Depth of the deep listing
func (o GetFileListResultOutput) Depth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetFileListResult) *int { return v.Depth }).(pulumi.IntPtrOutput)
}

// A list of files.
func (o GetFileListResultOutput) Files() GetFileListFileArrayOutput {
	return o.ApplyT(func(v GetFileListResult) []GetFileListFile { return v.Files }).(GetFileListFileArrayOutput)
}

// Path of the folder
func (o GetFileListResultOutput) FolderPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileListResult) string { return v.FolderPath }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFileListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileListResult) string { return v.Id }).(pulumi.StringOutput)
}

// Include root path
func (o GetFileListResultOutput) IncludeRootPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetFileListResult) *bool { return v.IncludeRootPath }).(pulumi.BoolPtrOutput)
}

// Include folders
func (o GetFileListResultOutput) ListFolders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetFileListResult) *bool { return v.ListFolders }).(pulumi.BoolPtrOutput)
}

// Include metadata timestamps
func (o GetFileListResultOutput) MetadataTimestamps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetFileListResult) *bool { return v.MetadataTimestamps }).(pulumi.BoolPtrOutput)
}

// Repository key
func (o GetFileListResultOutput) RepositoryKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileListResult) string { return v.RepositoryKey }).(pulumi.StringOutput)
}

// URL to file/path
func (o GetFileListResultOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileListResult) string { return v.Uri }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFileListResultOutput{})
}
