// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-artifactory/sdk/v8/go/artifactory/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to creates a local Machine Learning repository.
//
// Official documentation can be found [here](https://jfrog.com/help/r/jfrog-artifactory-documentation/machine-learning-repositories).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-artifactory/sdk/v8/go/artifactory"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := artifactory.NewLocalMachinelearningRepository(ctx, "my-machinelearning-local", &artifactory.LocalMachinelearningRepositoryArgs{
//				Key: pulumi.String("my-machinelearning-local"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import artifactory:index/localMachinelearningRepository:LocalMachinelearningRepository my-machinelearning-local my-machinelearning-local
// ```
type LocalMachinelearningRepository struct {
	pulumi.CustomResourceState

	// When set, you may view content such as HTML or Javadoc files directly from Artifactory.
	// This may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled pulumi.BoolOutput `pulumi:"archiveBrowsingEnabled"`
	// When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.
	BlackedOut pulumi.BoolOutput `pulumi:"blackedOut"`
	// Public description.
	Description pulumi.StringOutput `pulumi:"description"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider. Available in Enterprise+ and Edge licenses only.
	DownloadDirect pulumi.BoolOutput `pulumi:"downloadDirect"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no artifacts are excluded.
	ExcludesPattern pulumi.StringOutput `pulumi:"excludesPattern"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern pulumi.StringOutput `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. Must be 1 - 64 alphanumeric and hyphen characters. It cannot contain spaces or special characters.
	Key pulumi.StringOutput `pulumi:"key"`
	// Internal description.
	Notes pulumi.StringOutput `pulumi:"notes"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution  pulumi.BoolOutput        `pulumi:"priorityResolution"`
	ProjectEnvironments pulumi.StringArrayOutput `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringOutput `pulumi:"projectKey"`
	// List of property set name
	PropertySets pulumi.StringArrayOutput `pulumi:"propertySets"`
	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
	// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef pulumi.StringOutput `pulumi:"repoLayoutRef"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
	XrayIndex pulumi.BoolOutput `pulumi:"xrayIndex"`
}

// NewLocalMachinelearningRepository registers a new resource with the given unique name, arguments, and options.
func NewLocalMachinelearningRepository(ctx *pulumi.Context,
	name string, args *LocalMachinelearningRepositoryArgs, opts ...pulumi.ResourceOption) (*LocalMachinelearningRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LocalMachinelearningRepository
	err := ctx.RegisterResource("artifactory:index/localMachinelearningRepository:LocalMachinelearningRepository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocalMachinelearningRepository gets an existing LocalMachinelearningRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalMachinelearningRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocalMachinelearningRepositoryState, opts ...pulumi.ResourceOption) (*LocalMachinelearningRepository, error) {
	var resource LocalMachinelearningRepository
	err := ctx.ReadResource("artifactory:index/localMachinelearningRepository:LocalMachinelearningRepository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocalMachinelearningRepository resources.
type localMachinelearningRepositoryState struct {
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory.
	// This may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled *bool `pulumi:"archiveBrowsingEnabled"`
	// When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.
	BlackedOut *bool `pulumi:"blackedOut"`
	// Public description.
	Description *string `pulumi:"description"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider. Available in Enterprise+ and Edge licenses only.
	DownloadDirect *bool `pulumi:"downloadDirect"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern *string `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. Must be 1 - 64 alphanumeric and hyphen characters. It cannot contain spaces or special characters.
	Key *string `pulumi:"key"`
	// Internal description.
	Notes *string `pulumi:"notes"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution  *bool    `pulumi:"priorityResolution"`
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// List of property set name
	PropertySets []string `pulumi:"propertySets"`
	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
	// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

type LocalMachinelearningRepositoryState struct {
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory.
	// This may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled pulumi.BoolPtrInput
	// When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.
	BlackedOut pulumi.BoolPtrInput
	// Public description.
	Description pulumi.StringPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider. Available in Enterprise+ and Edge licenses only.
	DownloadDirect pulumi.BoolPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern pulumi.StringPtrInput
	// A mandatory identifier for the repository that must be unique. Must be 1 - 64 alphanumeric and hyphen characters. It cannot contain spaces or special characters.
	Key pulumi.StringPtrInput
	// Internal description.
	Notes pulumi.StringPtrInput
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution  pulumi.BoolPtrInput
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// List of property set name
	PropertySets pulumi.StringArrayInput
	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
	// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (LocalMachinelearningRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*localMachinelearningRepositoryState)(nil)).Elem()
}

type localMachinelearningRepositoryArgs struct {
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory.
	// This may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled *bool `pulumi:"archiveBrowsingEnabled"`
	// When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.
	BlackedOut *bool `pulumi:"blackedOut"`
	// Public description.
	Description *string `pulumi:"description"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider. Available in Enterprise+ and Edge licenses only.
	DownloadDirect *bool `pulumi:"downloadDirect"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern *string `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. Must be 1 - 64 alphanumeric and hyphen characters. It cannot contain spaces or special characters.
	Key string `pulumi:"key"`
	// Internal description.
	Notes *string `pulumi:"notes"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution  *bool    `pulumi:"priorityResolution"`
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// List of property set name
	PropertySets []string `pulumi:"propertySets"`
	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
	// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

// The set of arguments for constructing a LocalMachinelearningRepository resource.
type LocalMachinelearningRepositoryArgs struct {
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory.
	// This may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled pulumi.BoolPtrInput
	// When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.
	BlackedOut pulumi.BoolPtrInput
	// Public description.
	Description pulumi.StringPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider. Available in Enterprise+ and Edge licenses only.
	DownloadDirect pulumi.BoolPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern pulumi.StringPtrInput
	// A mandatory identifier for the repository that must be unique. Must be 1 - 64 alphanumeric and hyphen characters. It cannot contain spaces or special characters.
	Key pulumi.StringInput
	// Internal description.
	Notes pulumi.StringPtrInput
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution  pulumi.BoolPtrInput
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// List of property set name
	PropertySets pulumi.StringArrayInput
	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
	// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (LocalMachinelearningRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*localMachinelearningRepositoryArgs)(nil)).Elem()
}

type LocalMachinelearningRepositoryInput interface {
	pulumi.Input

	ToLocalMachinelearningRepositoryOutput() LocalMachinelearningRepositoryOutput
	ToLocalMachinelearningRepositoryOutputWithContext(ctx context.Context) LocalMachinelearningRepositoryOutput
}

func (*LocalMachinelearningRepository) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalMachinelearningRepository)(nil)).Elem()
}

func (i *LocalMachinelearningRepository) ToLocalMachinelearningRepositoryOutput() LocalMachinelearningRepositoryOutput {
	return i.ToLocalMachinelearningRepositoryOutputWithContext(context.Background())
}

func (i *LocalMachinelearningRepository) ToLocalMachinelearningRepositoryOutputWithContext(ctx context.Context) LocalMachinelearningRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalMachinelearningRepositoryOutput)
}

// LocalMachinelearningRepositoryArrayInput is an input type that accepts LocalMachinelearningRepositoryArray and LocalMachinelearningRepositoryArrayOutput values.
// You can construct a concrete instance of `LocalMachinelearningRepositoryArrayInput` via:
//
//	LocalMachinelearningRepositoryArray{ LocalMachinelearningRepositoryArgs{...} }
type LocalMachinelearningRepositoryArrayInput interface {
	pulumi.Input

	ToLocalMachinelearningRepositoryArrayOutput() LocalMachinelearningRepositoryArrayOutput
	ToLocalMachinelearningRepositoryArrayOutputWithContext(context.Context) LocalMachinelearningRepositoryArrayOutput
}

type LocalMachinelearningRepositoryArray []LocalMachinelearningRepositoryInput

func (LocalMachinelearningRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalMachinelearningRepository)(nil)).Elem()
}

func (i LocalMachinelearningRepositoryArray) ToLocalMachinelearningRepositoryArrayOutput() LocalMachinelearningRepositoryArrayOutput {
	return i.ToLocalMachinelearningRepositoryArrayOutputWithContext(context.Background())
}

func (i LocalMachinelearningRepositoryArray) ToLocalMachinelearningRepositoryArrayOutputWithContext(ctx context.Context) LocalMachinelearningRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalMachinelearningRepositoryArrayOutput)
}

// LocalMachinelearningRepositoryMapInput is an input type that accepts LocalMachinelearningRepositoryMap and LocalMachinelearningRepositoryMapOutput values.
// You can construct a concrete instance of `LocalMachinelearningRepositoryMapInput` via:
//
//	LocalMachinelearningRepositoryMap{ "key": LocalMachinelearningRepositoryArgs{...} }
type LocalMachinelearningRepositoryMapInput interface {
	pulumi.Input

	ToLocalMachinelearningRepositoryMapOutput() LocalMachinelearningRepositoryMapOutput
	ToLocalMachinelearningRepositoryMapOutputWithContext(context.Context) LocalMachinelearningRepositoryMapOutput
}

type LocalMachinelearningRepositoryMap map[string]LocalMachinelearningRepositoryInput

func (LocalMachinelearningRepositoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalMachinelearningRepository)(nil)).Elem()
}

func (i LocalMachinelearningRepositoryMap) ToLocalMachinelearningRepositoryMapOutput() LocalMachinelearningRepositoryMapOutput {
	return i.ToLocalMachinelearningRepositoryMapOutputWithContext(context.Background())
}

func (i LocalMachinelearningRepositoryMap) ToLocalMachinelearningRepositoryMapOutputWithContext(ctx context.Context) LocalMachinelearningRepositoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalMachinelearningRepositoryMapOutput)
}

type LocalMachinelearningRepositoryOutput struct{ *pulumi.OutputState }

func (LocalMachinelearningRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalMachinelearningRepository)(nil)).Elem()
}

func (o LocalMachinelearningRepositoryOutput) ToLocalMachinelearningRepositoryOutput() LocalMachinelearningRepositoryOutput {
	return o
}

func (o LocalMachinelearningRepositoryOutput) ToLocalMachinelearningRepositoryOutputWithContext(ctx context.Context) LocalMachinelearningRepositoryOutput {
	return o
}

// When set, you may view content such as HTML or Javadoc files directly from Artifactory.
// This may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).
func (o LocalMachinelearningRepositoryOutput) ArchiveBrowsingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *LocalMachinelearningRepository) pulumi.BoolOutput { return v.ArchiveBrowsingEnabled }).(pulumi.BoolOutput)
}

// When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.
func (o LocalMachinelearningRepositoryOutput) BlackedOut() pulumi.BoolOutput {
	return o.ApplyT(func(v *LocalMachinelearningRepository) pulumi.BoolOutput { return v.BlackedOut }).(pulumi.BoolOutput)
}

// Public description.
func (o LocalMachinelearningRepositoryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalMachinelearningRepository) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider. Available in Enterprise+ and Edge licenses only.
func (o LocalMachinelearningRepositoryOutput) DownloadDirect() pulumi.BoolOutput {
	return o.ApplyT(func(v *LocalMachinelearningRepository) pulumi.BoolOutput { return v.DownloadDirect }).(pulumi.BoolOutput)
}

// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no artifacts are excluded.
func (o LocalMachinelearningRepositoryOutput) ExcludesPattern() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalMachinelearningRepository) pulumi.StringOutput { return v.ExcludesPattern }).(pulumi.StringOutput)
}

// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
func (o LocalMachinelearningRepositoryOutput) IncludesPattern() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalMachinelearningRepository) pulumi.StringOutput { return v.IncludesPattern }).(pulumi.StringOutput)
}

// A mandatory identifier for the repository that must be unique. Must be 1 - 64 alphanumeric and hyphen characters. It cannot contain spaces or special characters.
func (o LocalMachinelearningRepositoryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalMachinelearningRepository) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// Internal description.
func (o LocalMachinelearningRepositoryOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalMachinelearningRepository) pulumi.StringOutput { return v.Notes }).(pulumi.StringOutput)
}

// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
func (o LocalMachinelearningRepositoryOutput) PriorityResolution() pulumi.BoolOutput {
	return o.ApplyT(func(v *LocalMachinelearningRepository) pulumi.BoolOutput { return v.PriorityResolution }).(pulumi.BoolOutput)
}

func (o LocalMachinelearningRepositoryOutput) ProjectEnvironments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LocalMachinelearningRepository) pulumi.StringArrayOutput { return v.ProjectEnvironments }).(pulumi.StringArrayOutput)
}

// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
func (o LocalMachinelearningRepositoryOutput) ProjectKey() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalMachinelearningRepository) pulumi.StringOutput { return v.ProjectKey }).(pulumi.StringOutput)
}

// List of property set name
func (o LocalMachinelearningRepositoryOutput) PropertySets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LocalMachinelearningRepository) pulumi.StringArrayOutput { return v.PropertySets }).(pulumi.StringArrayOutput)
}

// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
func (o LocalMachinelearningRepositoryOutput) RepoLayoutRef() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalMachinelearningRepository) pulumi.StringOutput { return v.RepoLayoutRef }).(pulumi.StringOutput)
}

// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
func (o LocalMachinelearningRepositoryOutput) XrayIndex() pulumi.BoolOutput {
	return o.ApplyT(func(v *LocalMachinelearningRepository) pulumi.BoolOutput { return v.XrayIndex }).(pulumi.BoolOutput)
}

type LocalMachinelearningRepositoryArrayOutput struct{ *pulumi.OutputState }

func (LocalMachinelearningRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalMachinelearningRepository)(nil)).Elem()
}

func (o LocalMachinelearningRepositoryArrayOutput) ToLocalMachinelearningRepositoryArrayOutput() LocalMachinelearningRepositoryArrayOutput {
	return o
}

func (o LocalMachinelearningRepositoryArrayOutput) ToLocalMachinelearningRepositoryArrayOutputWithContext(ctx context.Context) LocalMachinelearningRepositoryArrayOutput {
	return o
}

func (o LocalMachinelearningRepositoryArrayOutput) Index(i pulumi.IntInput) LocalMachinelearningRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LocalMachinelearningRepository {
		return vs[0].([]*LocalMachinelearningRepository)[vs[1].(int)]
	}).(LocalMachinelearningRepositoryOutput)
}

type LocalMachinelearningRepositoryMapOutput struct{ *pulumi.OutputState }

func (LocalMachinelearningRepositoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalMachinelearningRepository)(nil)).Elem()
}

func (o LocalMachinelearningRepositoryMapOutput) ToLocalMachinelearningRepositoryMapOutput() LocalMachinelearningRepositoryMapOutput {
	return o
}

func (o LocalMachinelearningRepositoryMapOutput) ToLocalMachinelearningRepositoryMapOutputWithContext(ctx context.Context) LocalMachinelearningRepositoryMapOutput {
	return o
}

func (o LocalMachinelearningRepositoryMapOutput) MapIndex(k pulumi.StringInput) LocalMachinelearningRepositoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LocalMachinelearningRepository {
		return vs[0].(map[string]*LocalMachinelearningRepository)[vs[1].(string)]
	}).(LocalMachinelearningRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocalMachinelearningRepositoryInput)(nil)).Elem(), &LocalMachinelearningRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalMachinelearningRepositoryArrayInput)(nil)).Elem(), LocalMachinelearningRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalMachinelearningRepositoryMapInput)(nil)).Elem(), LocalMachinelearningRepositoryMap{})
	pulumi.RegisterOutputType(LocalMachinelearningRepositoryOutput{})
	pulumi.RegisterOutputType(LocalMachinelearningRepositoryArrayOutput{})
	pulumi.RegisterOutputType(LocalMachinelearningRepositoryMapOutput{})
}
