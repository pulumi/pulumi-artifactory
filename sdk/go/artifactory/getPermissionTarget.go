// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupPermissionTarget(ctx *pulumi.Context, args *LookupPermissionTargetArgs, opts ...pulumi.InvokeOption) (*LookupPermissionTargetResult, error) {
	var rv LookupPermissionTargetResult
	err := ctx.Invoke("artifactory:index/getPermissionTarget:getPermissionTarget", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPermissionTarget.
type LookupPermissionTargetArgs struct {
	Build         *GetPermissionTargetBuild         `pulumi:"build"`
	Name          string                            `pulumi:"name"`
	ReleaseBundle *GetPermissionTargetReleaseBundle `pulumi:"releaseBundle"`
	Repo          *GetPermissionTargetRepo          `pulumi:"repo"`
}

// A collection of values returned by getPermissionTarget.
type LookupPermissionTargetResult struct {
	Build *GetPermissionTargetBuild `pulumi:"build"`
	// The provider-assigned unique ID for this managed resource.
	Id            string                            `pulumi:"id"`
	Name          string                            `pulumi:"name"`
	ReleaseBundle *GetPermissionTargetReleaseBundle `pulumi:"releaseBundle"`
	Repo          *GetPermissionTargetRepo          `pulumi:"repo"`
}

func LookupPermissionTargetOutput(ctx *pulumi.Context, args LookupPermissionTargetOutputArgs, opts ...pulumi.InvokeOption) LookupPermissionTargetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPermissionTargetResult, error) {
			args := v.(LookupPermissionTargetArgs)
			r, err := LookupPermissionTarget(ctx, &args, opts...)
			var s LookupPermissionTargetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPermissionTargetResultOutput)
}

// A collection of arguments for invoking getPermissionTarget.
type LookupPermissionTargetOutputArgs struct {
	Build         GetPermissionTargetBuildPtrInput         `pulumi:"build"`
	Name          pulumi.StringInput                       `pulumi:"name"`
	ReleaseBundle GetPermissionTargetReleaseBundlePtrInput `pulumi:"releaseBundle"`
	Repo          GetPermissionTargetRepoPtrInput          `pulumi:"repo"`
}

func (LookupPermissionTargetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPermissionTargetArgs)(nil)).Elem()
}

// A collection of values returned by getPermissionTarget.
type LookupPermissionTargetResultOutput struct{ *pulumi.OutputState }

func (LookupPermissionTargetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPermissionTargetResult)(nil)).Elem()
}

func (o LookupPermissionTargetResultOutput) ToLookupPermissionTargetResultOutput() LookupPermissionTargetResultOutput {
	return o
}

func (o LookupPermissionTargetResultOutput) ToLookupPermissionTargetResultOutputWithContext(ctx context.Context) LookupPermissionTargetResultOutput {
	return o
}

func (o LookupPermissionTargetResultOutput) Build() GetPermissionTargetBuildPtrOutput {
	return o.ApplyT(func(v LookupPermissionTargetResult) *GetPermissionTargetBuild { return v.Build }).(GetPermissionTargetBuildPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPermissionTargetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionTargetResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPermissionTargetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionTargetResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupPermissionTargetResultOutput) ReleaseBundle() GetPermissionTargetReleaseBundlePtrOutput {
	return o.ApplyT(func(v LookupPermissionTargetResult) *GetPermissionTargetReleaseBundle { return v.ReleaseBundle }).(GetPermissionTargetReleaseBundlePtrOutput)
}

func (o LookupPermissionTargetResultOutput) Repo() GetPermissionTargetRepoPtrOutput {
	return o.ApplyT(func(v LookupPermissionTargetResult) *GetPermissionTargetRepo { return v.Repo }).(GetPermissionTargetRepoPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPermissionTargetResultOutput{})
}
