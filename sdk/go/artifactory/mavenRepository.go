// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Artifactory Virtual Maven Repository Resource
//
// Provides an Artifactory virtual repository resource, but with specific maven feature. This should be preferred over the original
// one-size-fits-all `VirtualRepository`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-artifactory/sdk/go/artifactory"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		bar, err := artifactory.NewLocalRepository(ctx, "bar", &artifactory.LocalRepositoryArgs{
// 			Key:           pulumi.String("bar"),
// 			PackageType:   pulumi.String("maven"),
// 			RepoLayoutRef: pulumi.String("maven-2-default"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = artifactory.NewRemoteRepository(ctx, "baz", &artifactory.RemoteRepositoryArgs{
// 			Key:           pulumi.String("baz"),
// 			PackageType:   pulumi.String("maven"),
// 			RepoLayoutRef: pulumi.String("maven-2-default"),
// 			Url:           pulumi.String("https://search.maven.com/"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = artifactory.NewMavenRepository(ctx, "foo", &artifactory.MavenRepositoryArgs{
// 			Description:                          pulumi.String("A test virtual repo"),
// 			ExcludesPattern:                      pulumi.String("com/google/**"),
// 			ForceMavenAuthentication:             pulumi.Bool(true),
// 			IncludesPattern:                      pulumi.String("com/jfrog/**,cloud/jfrog/**"),
// 			Key:                                  pulumi.String("maven-virt-repo"),
// 			Notes:                                pulumi.String("Internal description"),
// 			PomRepositoryReferencesCleanupPolicy: pulumi.String("discard_active_reference"),
// 			RepoLayoutRef:                        pulumi.String("maven-2-default"),
// 			Repositories: pulumi.StringArray{
// 				bar.Key,
// 				pulumi.Any(artifactory_local_repository.Baz.Key),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Virtual repositories can be imported using their name, e.g.
//
// ```sh
//  $ pulumi import artifactory:index/mavenRepository:MavenRepository foo foo
// ```
type MavenRepository struct {
	pulumi.CustomResourceState

	ArtifactoryRequestsCanRetrieveRemoteArtifacts pulumi.BoolPtrOutput   `pulumi:"artifactoryRequestsCanRetrieveRemoteArtifacts"`
	DefaultDeploymentRepo                         pulumi.StringPtrOutput `pulumi:"defaultDeploymentRepo"`
	Description                                   pulumi.StringPtrOutput `pulumi:"description"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringPtrOutput `pulumi:"excludesPattern"`
	// - forces authentication when fetching from remote repos
	ForceMavenAuthentication pulumi.BoolOutput `pulumi:"forceMavenAuthentication"`
	// List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only
	// artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrOutput `pulumi:"includesPattern"`
	Key             pulumi.StringOutput    `pulumi:"key"`
	// - Key pair to use for... well, I'm not sure. Maybe ssh auth to remote repo?
	KeyPair     pulumi.StringPtrOutput `pulumi:"keyPair"`
	Notes       pulumi.StringPtrOutput `pulumi:"notes"`
	PackageType pulumi.StringOutput    `pulumi:"packageType"`
	// . One of: `"discardActiveReference", "discardAnyReference", "nothing"`
	PomRepositoryReferencesCleanupPolicy pulumi.StringOutput      `pulumi:"pomRepositoryReferencesCleanupPolicy"`
	RepoLayoutRef                        pulumi.StringOutput      `pulumi:"repoLayoutRef"`
	Repositories                         pulumi.StringArrayOutput `pulumi:"repositories"`
}

// NewMavenRepository registers a new resource with the given unique name, arguments, and options.
func NewMavenRepository(ctx *pulumi.Context,
	name string, args *MavenRepositoryArgs, opts ...pulumi.ResourceOption) (*MavenRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Repositories == nil {
		return nil, errors.New("invalid value for required argument 'Repositories'")
	}
	var resource MavenRepository
	err := ctx.RegisterResource("artifactory:index/mavenRepository:MavenRepository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMavenRepository gets an existing MavenRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMavenRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MavenRepositoryState, opts ...pulumi.ResourceOption) (*MavenRepository, error) {
	var resource MavenRepository
	err := ctx.ReadResource("artifactory:index/mavenRepository:MavenRepository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MavenRepository resources.
type mavenRepositoryState struct {
	ArtifactoryRequestsCanRetrieveRemoteArtifacts *bool   `pulumi:"artifactoryRequestsCanRetrieveRemoteArtifacts"`
	DefaultDeploymentRepo                         *string `pulumi:"defaultDeploymentRepo"`
	Description                                   *string `pulumi:"description"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
	// artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// - forces authentication when fetching from remote repos
	ForceMavenAuthentication *bool `pulumi:"forceMavenAuthentication"`
	// List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only
	// artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern *string `pulumi:"includesPattern"`
	Key             *string `pulumi:"key"`
	// - Key pair to use for... well, I'm not sure. Maybe ssh auth to remote repo?
	KeyPair     *string `pulumi:"keyPair"`
	Notes       *string `pulumi:"notes"`
	PackageType *string `pulumi:"packageType"`
	// . One of: `"discardActiveReference", "discardAnyReference", "nothing"`
	PomRepositoryReferencesCleanupPolicy *string  `pulumi:"pomRepositoryReferencesCleanupPolicy"`
	RepoLayoutRef                        *string  `pulumi:"repoLayoutRef"`
	Repositories                         []string `pulumi:"repositories"`
}

type MavenRepositoryState struct {
	ArtifactoryRequestsCanRetrieveRemoteArtifacts pulumi.BoolPtrInput
	DefaultDeploymentRepo                         pulumi.StringPtrInput
	Description                                   pulumi.StringPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// - forces authentication when fetching from remote repos
	ForceMavenAuthentication pulumi.BoolPtrInput
	// List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only
	// artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrInput
	Key             pulumi.StringPtrInput
	// - Key pair to use for... well, I'm not sure. Maybe ssh auth to remote repo?
	KeyPair     pulumi.StringPtrInput
	Notes       pulumi.StringPtrInput
	PackageType pulumi.StringPtrInput
	// . One of: `"discardActiveReference", "discardAnyReference", "nothing"`
	PomRepositoryReferencesCleanupPolicy pulumi.StringPtrInput
	RepoLayoutRef                        pulumi.StringPtrInput
	Repositories                         pulumi.StringArrayInput
}

func (MavenRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*mavenRepositoryState)(nil)).Elem()
}

type mavenRepositoryArgs struct {
	ArtifactoryRequestsCanRetrieveRemoteArtifacts *bool   `pulumi:"artifactoryRequestsCanRetrieveRemoteArtifacts"`
	DefaultDeploymentRepo                         *string `pulumi:"defaultDeploymentRepo"`
	Description                                   *string `pulumi:"description"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
	// artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// - forces authentication when fetching from remote repos
	ForceMavenAuthentication *bool `pulumi:"forceMavenAuthentication"`
	// List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only
	// artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern *string `pulumi:"includesPattern"`
	Key             string  `pulumi:"key"`
	// - Key pair to use for... well, I'm not sure. Maybe ssh auth to remote repo?
	KeyPair *string `pulumi:"keyPair"`
	Notes   *string `pulumi:"notes"`
	// . One of: `"discardActiveReference", "discardAnyReference", "nothing"`
	PomRepositoryReferencesCleanupPolicy *string  `pulumi:"pomRepositoryReferencesCleanupPolicy"`
	RepoLayoutRef                        *string  `pulumi:"repoLayoutRef"`
	Repositories                         []string `pulumi:"repositories"`
}

// The set of arguments for constructing a MavenRepository resource.
type MavenRepositoryArgs struct {
	ArtifactoryRequestsCanRetrieveRemoteArtifacts pulumi.BoolPtrInput
	DefaultDeploymentRepo                         pulumi.StringPtrInput
	Description                                   pulumi.StringPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// - forces authentication when fetching from remote repos
	ForceMavenAuthentication pulumi.BoolPtrInput
	// List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only
	// artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrInput
	Key             pulumi.StringInput
	// - Key pair to use for... well, I'm not sure. Maybe ssh auth to remote repo?
	KeyPair pulumi.StringPtrInput
	Notes   pulumi.StringPtrInput
	// . One of: `"discardActiveReference", "discardAnyReference", "nothing"`
	PomRepositoryReferencesCleanupPolicy pulumi.StringPtrInput
	RepoLayoutRef                        pulumi.StringPtrInput
	Repositories                         pulumi.StringArrayInput
}

func (MavenRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mavenRepositoryArgs)(nil)).Elem()
}

type MavenRepositoryInput interface {
	pulumi.Input

	ToMavenRepositoryOutput() MavenRepositoryOutput
	ToMavenRepositoryOutputWithContext(ctx context.Context) MavenRepositoryOutput
}

func (*MavenRepository) ElementType() reflect.Type {
	return reflect.TypeOf((*MavenRepository)(nil))
}

func (i *MavenRepository) ToMavenRepositoryOutput() MavenRepositoryOutput {
	return i.ToMavenRepositoryOutputWithContext(context.Background())
}

func (i *MavenRepository) ToMavenRepositoryOutputWithContext(ctx context.Context) MavenRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MavenRepositoryOutput)
}

func (i *MavenRepository) ToMavenRepositoryPtrOutput() MavenRepositoryPtrOutput {
	return i.ToMavenRepositoryPtrOutputWithContext(context.Background())
}

func (i *MavenRepository) ToMavenRepositoryPtrOutputWithContext(ctx context.Context) MavenRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MavenRepositoryPtrOutput)
}

type MavenRepositoryPtrInput interface {
	pulumi.Input

	ToMavenRepositoryPtrOutput() MavenRepositoryPtrOutput
	ToMavenRepositoryPtrOutputWithContext(ctx context.Context) MavenRepositoryPtrOutput
}

type mavenRepositoryPtrType MavenRepositoryArgs

func (*mavenRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MavenRepository)(nil))
}

func (i *mavenRepositoryPtrType) ToMavenRepositoryPtrOutput() MavenRepositoryPtrOutput {
	return i.ToMavenRepositoryPtrOutputWithContext(context.Background())
}

func (i *mavenRepositoryPtrType) ToMavenRepositoryPtrOutputWithContext(ctx context.Context) MavenRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MavenRepositoryPtrOutput)
}

// MavenRepositoryArrayInput is an input type that accepts MavenRepositoryArray and MavenRepositoryArrayOutput values.
// You can construct a concrete instance of `MavenRepositoryArrayInput` via:
//
//          MavenRepositoryArray{ MavenRepositoryArgs{...} }
type MavenRepositoryArrayInput interface {
	pulumi.Input

	ToMavenRepositoryArrayOutput() MavenRepositoryArrayOutput
	ToMavenRepositoryArrayOutputWithContext(context.Context) MavenRepositoryArrayOutput
}

type MavenRepositoryArray []MavenRepositoryInput

func (MavenRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MavenRepository)(nil)).Elem()
}

func (i MavenRepositoryArray) ToMavenRepositoryArrayOutput() MavenRepositoryArrayOutput {
	return i.ToMavenRepositoryArrayOutputWithContext(context.Background())
}

func (i MavenRepositoryArray) ToMavenRepositoryArrayOutputWithContext(ctx context.Context) MavenRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MavenRepositoryArrayOutput)
}

// MavenRepositoryMapInput is an input type that accepts MavenRepositoryMap and MavenRepositoryMapOutput values.
// You can construct a concrete instance of `MavenRepositoryMapInput` via:
//
//          MavenRepositoryMap{ "key": MavenRepositoryArgs{...} }
type MavenRepositoryMapInput interface {
	pulumi.Input

	ToMavenRepositoryMapOutput() MavenRepositoryMapOutput
	ToMavenRepositoryMapOutputWithContext(context.Context) MavenRepositoryMapOutput
}

type MavenRepositoryMap map[string]MavenRepositoryInput

func (MavenRepositoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MavenRepository)(nil)).Elem()
}

func (i MavenRepositoryMap) ToMavenRepositoryMapOutput() MavenRepositoryMapOutput {
	return i.ToMavenRepositoryMapOutputWithContext(context.Background())
}

func (i MavenRepositoryMap) ToMavenRepositoryMapOutputWithContext(ctx context.Context) MavenRepositoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MavenRepositoryMapOutput)
}

type MavenRepositoryOutput struct{ *pulumi.OutputState }

func (MavenRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MavenRepository)(nil))
}

func (o MavenRepositoryOutput) ToMavenRepositoryOutput() MavenRepositoryOutput {
	return o
}

func (o MavenRepositoryOutput) ToMavenRepositoryOutputWithContext(ctx context.Context) MavenRepositoryOutput {
	return o
}

func (o MavenRepositoryOutput) ToMavenRepositoryPtrOutput() MavenRepositoryPtrOutput {
	return o.ToMavenRepositoryPtrOutputWithContext(context.Background())
}

func (o MavenRepositoryOutput) ToMavenRepositoryPtrOutputWithContext(ctx context.Context) MavenRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MavenRepository) *MavenRepository {
		return &v
	}).(MavenRepositoryPtrOutput)
}

type MavenRepositoryPtrOutput struct{ *pulumi.OutputState }

func (MavenRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MavenRepository)(nil))
}

func (o MavenRepositoryPtrOutput) ToMavenRepositoryPtrOutput() MavenRepositoryPtrOutput {
	return o
}

func (o MavenRepositoryPtrOutput) ToMavenRepositoryPtrOutputWithContext(ctx context.Context) MavenRepositoryPtrOutput {
	return o
}

func (o MavenRepositoryPtrOutput) Elem() MavenRepositoryOutput {
	return o.ApplyT(func(v *MavenRepository) MavenRepository {
		if v != nil {
			return *v
		}
		var ret MavenRepository
		return ret
	}).(MavenRepositoryOutput)
}

type MavenRepositoryArrayOutput struct{ *pulumi.OutputState }

func (MavenRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MavenRepository)(nil))
}

func (o MavenRepositoryArrayOutput) ToMavenRepositoryArrayOutput() MavenRepositoryArrayOutput {
	return o
}

func (o MavenRepositoryArrayOutput) ToMavenRepositoryArrayOutputWithContext(ctx context.Context) MavenRepositoryArrayOutput {
	return o
}

func (o MavenRepositoryArrayOutput) Index(i pulumi.IntInput) MavenRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MavenRepository {
		return vs[0].([]MavenRepository)[vs[1].(int)]
	}).(MavenRepositoryOutput)
}

type MavenRepositoryMapOutput struct{ *pulumi.OutputState }

func (MavenRepositoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MavenRepository)(nil))
}

func (o MavenRepositoryMapOutput) ToMavenRepositoryMapOutput() MavenRepositoryMapOutput {
	return o
}

func (o MavenRepositoryMapOutput) ToMavenRepositoryMapOutputWithContext(ctx context.Context) MavenRepositoryMapOutput {
	return o
}

func (o MavenRepositoryMapOutput) MapIndex(k pulumi.StringInput) MavenRepositoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MavenRepository {
		return vs[0].(map[string]MavenRepository)[vs[1].(string)]
	}).(MavenRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MavenRepositoryInput)(nil)).Elem(), &MavenRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*MavenRepositoryPtrInput)(nil)).Elem(), &MavenRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*MavenRepositoryArrayInput)(nil)).Elem(), MavenRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MavenRepositoryMapInput)(nil)).Elem(), MavenRepositoryMap{})
	pulumi.RegisterOutputType(MavenRepositoryOutput{})
	pulumi.RegisterOutputType(MavenRepositoryPtrOutput{})
	pulumi.RegisterOutputType(MavenRepositoryArrayOutput{})
	pulumi.RegisterOutputType(MavenRepositoryMapOutput{})
}
