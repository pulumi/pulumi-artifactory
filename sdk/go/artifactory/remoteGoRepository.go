// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-artifactory/sdk/v8/go/artifactory/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a remote Go repository.
//
// Official documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Go+Registry).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-artifactory/sdk/v8/go/artifactory"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := artifactory.NewRemoteGoRepository(ctx, "my-remote-go", &artifactory.RemoteGoRepositoryArgs{
//				Key:            pulumi.String("my-remote-go"),
//				Url:            pulumi.String("https://proxy.golang.org/"),
//				VcsGitProvider: pulumi.String("ARTIFACTORY"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Remote repositories can be imported using their name, e.g.
//
// ```sh
// $ pulumi import artifactory:index/remoteGoRepository:RemoteGoRepository my-remote-go my-remote-go
// ```
type RemoteGoRepository struct {
	pulumi.CustomResourceState

	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth pulumi.BoolOutput `pulumi:"allowAnyHostAuth"`
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled pulumi.BoolOutput `pulumi:"archiveBrowsingEnabled"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs pulumi.IntOutput `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolOutput `pulumi:"blackedOut"`
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes pulumi.BoolOutput `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests pulumi.BoolOutput `pulumi:"bypassHeadRequests"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect pulumi.BoolOutput `pulumi:"cdnRedirect"`
	// Client TLS certificate name.
	ClientTlsCertificate   pulumi.StringOutput                               `pulumi:"clientTlsCertificate"`
	ContentSynchronisation RemoteGoRepositoryContentSynchronisationPtrOutput `pulumi:"contentSynchronisation"`
	// Enable repository to be protected by the Curation service.
	Curated pulumi.BoolOutput `pulumi:"curated"`
	// Public description.
	Description pulumi.StringOutput `pulumi:"description"`
	// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
	// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
	DisableProxy pulumi.BoolOutput `pulumi:"disableProxy"`
	// Whether to disable URL normalization. Default is `false`.
	DisableUrlNormalization pulumi.BoolOutput `pulumi:"disableUrlNormalization"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect pulumi.BoolOutput `pulumi:"downloadDirect"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolOutput `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringOutput `pulumi:"excludesPattern"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolOutput `pulumi:"hardFail"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern pulumi.StringOutput `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key pulumi.StringOutput `pulumi:"key"`
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'false'. This field exists in the API but not in the UI.
	ListRemoteFolderItems pulumi.BoolOutput `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringOutput `pulumi:"localAddress"`
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs pulumi.IntOutput `pulumi:"metadataRetrievalTimeoutSecs"`
	// The set of mime types that should override the blockMismatchingMimeTypes setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringOutput `pulumi:"mismatchingMimeTypesOverrideList"`
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntOutput `pulumi:"missedCachePeriodSeconds"`
	// Internal description.
	Notes pulumi.StringOutput `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  pulumi.BoolOutput      `pulumi:"offline"`
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution  pulumi.BoolOutput        `pulumi:"priorityResolution"`
	ProjectEnvironments pulumi.StringArrayOutput `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringOutput `pulumi:"projectKey"`
	// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
	PropagateQueryParams pulumi.BoolOutput `pulumi:"propagateQueryParams"`
	// List of property set name
	PropertySets pulumi.StringArrayOutput `pulumi:"propertySets"`
	// Proxy key from Artifactory Proxies settings. Can't be set if `disableProxy = true`.
	Proxy pulumi.StringOutput `pulumi:"proxy"`
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams pulumi.StringOutput `pulumi:"queryParams"`
	// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
	// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
	// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
	RemoteRepoLayoutRef pulumi.StringOutput `pulumi:"remoteRepoLayoutRef"`
	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
	// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef pulumi.StringOutput `pulumi:"repoLayoutRef"`
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds pulumi.IntOutput `pulumi:"retrievalCachePeriodSeconds"`
	// When set to `true`, Artifactory retrieves the SHA256 from the remote server if it is not cached in the remote repo.
	RetrieveSha256FromServer pulumi.BoolOutput `pulumi:"retrieveSha256FromServer"`
	// Deprecated: No longer supported
	ShareConfiguration pulumi.BoolOutput `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntOutput `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolOutput `pulumi:"storeArtifactsLocally"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties pulumi.BoolOutput `pulumi:"synchronizeProperties"`
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntOutput `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// The remote repo URL.
	Url      pulumi.StringOutput `pulumi:"url"`
	Username pulumi.StringOutput `pulumi:"username"`
	// Artifactory supports proxying the following Git providers out-of-the-box: GitHub (`GITHUB`), GitHub Enterprise (`GITHUBENTERPRISE`), BitBucket Cloud (`BITBUCKET`), BitBucket Server (`STASH`), GitLab (`GITLAB`), or a remote Artifactory instance (`ARTIFACTORY`). Default value is `ARTIFACTORY`.
	VcsGitProvider pulumi.StringOutput `pulumi:"vcsGitProvider"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolOutput `pulumi:"xrayIndex"`
}

// NewRemoteGoRepository registers a new resource with the given unique name, arguments, and options.
func NewRemoteGoRepository(ctx *pulumi.Context,
	name string, args *RemoteGoRepositoryArgs, opts ...pulumi.ResourceOption) (*RemoteGoRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RemoteGoRepository
	err := ctx.RegisterResource("artifactory:index/remoteGoRepository:RemoteGoRepository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRemoteGoRepository gets an existing RemoteGoRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRemoteGoRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RemoteGoRepositoryState, opts ...pulumi.ResourceOption) (*RemoteGoRepository, error) {
	var resource RemoteGoRepository
	err := ctx.ReadResource("artifactory:index/remoteGoRepository:RemoteGoRepository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RemoteGoRepository resources.
type remoteGoRepositoryState struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth *bool `pulumi:"allowAnyHostAuth"`
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled *bool `pulumi:"archiveBrowsingEnabled"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs *int `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut *bool `pulumi:"blackedOut"`
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes *bool `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests *bool `pulumi:"bypassHeadRequests"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect *bool `pulumi:"cdnRedirect"`
	// Client TLS certificate name.
	ClientTlsCertificate   *string                                   `pulumi:"clientTlsCertificate"`
	ContentSynchronisation *RemoteGoRepositoryContentSynchronisation `pulumi:"contentSynchronisation"`
	// Enable repository to be protected by the Curation service.
	Curated *bool `pulumi:"curated"`
	// Public description.
	Description *string `pulumi:"description"`
	// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
	// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
	DisableProxy *bool `pulumi:"disableProxy"`
	// Whether to disable URL normalization. Default is `false`.
	DisableUrlNormalization *bool `pulumi:"disableUrlNormalization"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect *bool `pulumi:"downloadDirect"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement *bool `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no
	// artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail *bool `pulumi:"hardFail"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern *string `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key *string `pulumi:"key"`
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'false'. This field exists in the API but not in the UI.
	ListRemoteFolderItems *bool `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress *string `pulumi:"localAddress"`
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs *int `pulumi:"metadataRetrievalTimeoutSecs"`
	// The set of mime types that should override the blockMismatchingMimeTypes setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList *string `pulumi:"mismatchingMimeTypesOverrideList"`
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds *int `pulumi:"missedCachePeriodSeconds"`
	// Internal description.
	Notes *string `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  *bool   `pulumi:"offline"`
	Password *string `pulumi:"password"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution  *bool    `pulumi:"priorityResolution"`
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
	PropagateQueryParams *bool `pulumi:"propagateQueryParams"`
	// List of property set name
	PropertySets []string `pulumi:"propertySets"`
	// Proxy key from Artifactory Proxies settings. Can't be set if `disableProxy = true`.
	Proxy *string `pulumi:"proxy"`
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams *string `pulumi:"queryParams"`
	// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
	// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
	// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
	RemoteRepoLayoutRef *string `pulumi:"remoteRepoLayoutRef"`
	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
	// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds *int `pulumi:"retrievalCachePeriodSeconds"`
	// When set to `true`, Artifactory retrieves the SHA256 from the remote server if it is not cached in the remote repo.
	RetrieveSha256FromServer *bool `pulumi:"retrieveSha256FromServer"`
	// Deprecated: No longer supported
	ShareConfiguration *bool `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis *int `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally *bool `pulumi:"storeArtifactsLocally"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties *bool `pulumi:"synchronizeProperties"`
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours *int `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// The remote repo URL.
	Url      *string `pulumi:"url"`
	Username *string `pulumi:"username"`
	// Artifactory supports proxying the following Git providers out-of-the-box: GitHub (`GITHUB`), GitHub Enterprise (`GITHUBENTERPRISE`), BitBucket Cloud (`BITBUCKET`), BitBucket Server (`STASH`), GitLab (`GITLAB`), or a remote Artifactory instance (`ARTIFACTORY`). Default value is `ARTIFACTORY`.
	VcsGitProvider *string `pulumi:"vcsGitProvider"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

type RemoteGoRepositoryState struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth pulumi.BoolPtrInput
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled pulumi.BoolPtrInput
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs pulumi.IntPtrInput
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolPtrInput
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect pulumi.BoolPtrInput
	// Client TLS certificate name.
	ClientTlsCertificate   pulumi.StringPtrInput
	ContentSynchronisation RemoteGoRepositoryContentSynchronisationPtrInput
	// Enable repository to be protected by the Curation service.
	Curated pulumi.BoolPtrInput
	// Public description.
	Description pulumi.StringPtrInput
	// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
	// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
	DisableProxy pulumi.BoolPtrInput
	// Whether to disable URL normalization. Default is `false`.
	DisableUrlNormalization pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect pulumi.BoolPtrInput
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolPtrInput
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern pulumi.StringPtrInput
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key pulumi.StringPtrInput
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'false'. This field exists in the API but not in the UI.
	ListRemoteFolderItems pulumi.BoolPtrInput
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrInput
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs pulumi.IntPtrInput
	// The set of mime types that should override the blockMismatchingMimeTypes setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrInput
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrInput
	// Internal description.
	Notes pulumi.StringPtrInput
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  pulumi.BoolPtrInput
	Password pulumi.StringPtrInput
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution  pulumi.BoolPtrInput
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
	PropagateQueryParams pulumi.BoolPtrInput
	// List of property set name
	PropertySets pulumi.StringArrayInput
	// Proxy key from Artifactory Proxies settings. Can't be set if `disableProxy = true`.
	Proxy pulumi.StringPtrInput
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams pulumi.StringPtrInput
	// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
	// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
	// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
	RemoteRepoLayoutRef pulumi.StringPtrInput
	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
	// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef pulumi.StringPtrInput
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds pulumi.IntPtrInput
	// When set to `true`, Artifactory retrieves the SHA256 from the remote server if it is not cached in the remote repo.
	RetrieveSha256FromServer pulumi.BoolPtrInput
	// Deprecated: No longer supported
	ShareConfiguration pulumi.BoolPtrInput
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrInput
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolPtrInput
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties pulumi.BoolPtrInput
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrInput
	// The remote repo URL.
	Url      pulumi.StringPtrInput
	Username pulumi.StringPtrInput
	// Artifactory supports proxying the following Git providers out-of-the-box: GitHub (`GITHUB`), GitHub Enterprise (`GITHUBENTERPRISE`), BitBucket Cloud (`BITBUCKET`), BitBucket Server (`STASH`), GitLab (`GITLAB`), or a remote Artifactory instance (`ARTIFACTORY`). Default value is `ARTIFACTORY`.
	VcsGitProvider pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (RemoteGoRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*remoteGoRepositoryState)(nil)).Elem()
}

type remoteGoRepositoryArgs struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth *bool `pulumi:"allowAnyHostAuth"`
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled *bool `pulumi:"archiveBrowsingEnabled"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs *int `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut *bool `pulumi:"blackedOut"`
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes *bool `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests *bool `pulumi:"bypassHeadRequests"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect *bool `pulumi:"cdnRedirect"`
	// Client TLS certificate name.
	ClientTlsCertificate   *string                                   `pulumi:"clientTlsCertificate"`
	ContentSynchronisation *RemoteGoRepositoryContentSynchronisation `pulumi:"contentSynchronisation"`
	// Enable repository to be protected by the Curation service.
	Curated *bool `pulumi:"curated"`
	// Public description.
	Description *string `pulumi:"description"`
	// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
	// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
	DisableProxy *bool `pulumi:"disableProxy"`
	// Whether to disable URL normalization. Default is `false`.
	DisableUrlNormalization *bool `pulumi:"disableUrlNormalization"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect *bool `pulumi:"downloadDirect"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement *bool `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no
	// artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail *bool `pulumi:"hardFail"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern *string `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key string `pulumi:"key"`
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'false'. This field exists in the API but not in the UI.
	ListRemoteFolderItems *bool `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress *string `pulumi:"localAddress"`
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs *int `pulumi:"metadataRetrievalTimeoutSecs"`
	// The set of mime types that should override the blockMismatchingMimeTypes setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList *string `pulumi:"mismatchingMimeTypesOverrideList"`
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds *int `pulumi:"missedCachePeriodSeconds"`
	// Internal description.
	Notes *string `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  *bool   `pulumi:"offline"`
	Password *string `pulumi:"password"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution  *bool    `pulumi:"priorityResolution"`
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
	PropagateQueryParams *bool `pulumi:"propagateQueryParams"`
	// List of property set name
	PropertySets []string `pulumi:"propertySets"`
	// Proxy key from Artifactory Proxies settings. Can't be set if `disableProxy = true`.
	Proxy *string `pulumi:"proxy"`
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams *string `pulumi:"queryParams"`
	// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
	// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
	// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
	RemoteRepoLayoutRef *string `pulumi:"remoteRepoLayoutRef"`
	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
	// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds *int `pulumi:"retrievalCachePeriodSeconds"`
	// When set to `true`, Artifactory retrieves the SHA256 from the remote server if it is not cached in the remote repo.
	RetrieveSha256FromServer *bool `pulumi:"retrieveSha256FromServer"`
	// Deprecated: No longer supported
	ShareConfiguration *bool `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis *int `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally *bool `pulumi:"storeArtifactsLocally"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties *bool `pulumi:"synchronizeProperties"`
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours *int `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// The remote repo URL.
	Url      string  `pulumi:"url"`
	Username *string `pulumi:"username"`
	// Artifactory supports proxying the following Git providers out-of-the-box: GitHub (`GITHUB`), GitHub Enterprise (`GITHUBENTERPRISE`), BitBucket Cloud (`BITBUCKET`), BitBucket Server (`STASH`), GitLab (`GITLAB`), or a remote Artifactory instance (`ARTIFACTORY`). Default value is `ARTIFACTORY`.
	VcsGitProvider *string `pulumi:"vcsGitProvider"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

// The set of arguments for constructing a RemoteGoRepository resource.
type RemoteGoRepositoryArgs struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth pulumi.BoolPtrInput
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled pulumi.BoolPtrInput
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs pulumi.IntPtrInput
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolPtrInput
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect pulumi.BoolPtrInput
	// Client TLS certificate name.
	ClientTlsCertificate   pulumi.StringPtrInput
	ContentSynchronisation RemoteGoRepositoryContentSynchronisationPtrInput
	// Enable repository to be protected by the Curation service.
	Curated pulumi.BoolPtrInput
	// Public description.
	Description pulumi.StringPtrInput
	// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
	// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
	DisableProxy pulumi.BoolPtrInput
	// Whether to disable URL normalization. Default is `false`.
	DisableUrlNormalization pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect pulumi.BoolPtrInput
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolPtrInput
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern pulumi.StringPtrInput
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key pulumi.StringInput
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'false'. This field exists in the API but not in the UI.
	ListRemoteFolderItems pulumi.BoolPtrInput
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrInput
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs pulumi.IntPtrInput
	// The set of mime types that should override the blockMismatchingMimeTypes setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrInput
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrInput
	// Internal description.
	Notes pulumi.StringPtrInput
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  pulumi.BoolPtrInput
	Password pulumi.StringPtrInput
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution  pulumi.BoolPtrInput
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
	PropagateQueryParams pulumi.BoolPtrInput
	// List of property set name
	PropertySets pulumi.StringArrayInput
	// Proxy key from Artifactory Proxies settings. Can't be set if `disableProxy = true`.
	Proxy pulumi.StringPtrInput
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams pulumi.StringPtrInput
	// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
	// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
	// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
	RemoteRepoLayoutRef pulumi.StringPtrInput
	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
	// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef pulumi.StringPtrInput
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds pulumi.IntPtrInput
	// When set to `true`, Artifactory retrieves the SHA256 from the remote server if it is not cached in the remote repo.
	RetrieveSha256FromServer pulumi.BoolPtrInput
	// Deprecated: No longer supported
	ShareConfiguration pulumi.BoolPtrInput
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrInput
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolPtrInput
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties pulumi.BoolPtrInput
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrInput
	// The remote repo URL.
	Url      pulumi.StringInput
	Username pulumi.StringPtrInput
	// Artifactory supports proxying the following Git providers out-of-the-box: GitHub (`GITHUB`), GitHub Enterprise (`GITHUBENTERPRISE`), BitBucket Cloud (`BITBUCKET`), BitBucket Server (`STASH`), GitLab (`GITLAB`), or a remote Artifactory instance (`ARTIFACTORY`). Default value is `ARTIFACTORY`.
	VcsGitProvider pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (RemoteGoRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*remoteGoRepositoryArgs)(nil)).Elem()
}

type RemoteGoRepositoryInput interface {
	pulumi.Input

	ToRemoteGoRepositoryOutput() RemoteGoRepositoryOutput
	ToRemoteGoRepositoryOutputWithContext(ctx context.Context) RemoteGoRepositoryOutput
}

func (*RemoteGoRepository) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteGoRepository)(nil)).Elem()
}

func (i *RemoteGoRepository) ToRemoteGoRepositoryOutput() RemoteGoRepositoryOutput {
	return i.ToRemoteGoRepositoryOutputWithContext(context.Background())
}

func (i *RemoteGoRepository) ToRemoteGoRepositoryOutputWithContext(ctx context.Context) RemoteGoRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteGoRepositoryOutput)
}

// RemoteGoRepositoryArrayInput is an input type that accepts RemoteGoRepositoryArray and RemoteGoRepositoryArrayOutput values.
// You can construct a concrete instance of `RemoteGoRepositoryArrayInput` via:
//
//	RemoteGoRepositoryArray{ RemoteGoRepositoryArgs{...} }
type RemoteGoRepositoryArrayInput interface {
	pulumi.Input

	ToRemoteGoRepositoryArrayOutput() RemoteGoRepositoryArrayOutput
	ToRemoteGoRepositoryArrayOutputWithContext(context.Context) RemoteGoRepositoryArrayOutput
}

type RemoteGoRepositoryArray []RemoteGoRepositoryInput

func (RemoteGoRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemoteGoRepository)(nil)).Elem()
}

func (i RemoteGoRepositoryArray) ToRemoteGoRepositoryArrayOutput() RemoteGoRepositoryArrayOutput {
	return i.ToRemoteGoRepositoryArrayOutputWithContext(context.Background())
}

func (i RemoteGoRepositoryArray) ToRemoteGoRepositoryArrayOutputWithContext(ctx context.Context) RemoteGoRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteGoRepositoryArrayOutput)
}

// RemoteGoRepositoryMapInput is an input type that accepts RemoteGoRepositoryMap and RemoteGoRepositoryMapOutput values.
// You can construct a concrete instance of `RemoteGoRepositoryMapInput` via:
//
//	RemoteGoRepositoryMap{ "key": RemoteGoRepositoryArgs{...} }
type RemoteGoRepositoryMapInput interface {
	pulumi.Input

	ToRemoteGoRepositoryMapOutput() RemoteGoRepositoryMapOutput
	ToRemoteGoRepositoryMapOutputWithContext(context.Context) RemoteGoRepositoryMapOutput
}

type RemoteGoRepositoryMap map[string]RemoteGoRepositoryInput

func (RemoteGoRepositoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemoteGoRepository)(nil)).Elem()
}

func (i RemoteGoRepositoryMap) ToRemoteGoRepositoryMapOutput() RemoteGoRepositoryMapOutput {
	return i.ToRemoteGoRepositoryMapOutputWithContext(context.Background())
}

func (i RemoteGoRepositoryMap) ToRemoteGoRepositoryMapOutputWithContext(ctx context.Context) RemoteGoRepositoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteGoRepositoryMapOutput)
}

type RemoteGoRepositoryOutput struct{ *pulumi.OutputState }

func (RemoteGoRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteGoRepository)(nil)).Elem()
}

func (o RemoteGoRepositoryOutput) ToRemoteGoRepositoryOutput() RemoteGoRepositoryOutput {
	return o
}

func (o RemoteGoRepositoryOutput) ToRemoteGoRepositoryOutputWithContext(ctx context.Context) RemoteGoRepositoryOutput {
	return o
}

// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
// other host.
func (o RemoteGoRepositoryOutput) AllowAnyHostAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.AllowAnyHostAuth }).(pulumi.BoolOutput)
}

// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
// security (e.g., cross-site scripting attacks).
func (o RemoteGoRepositoryOutput) ArchiveBrowsingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.ArchiveBrowsingEnabled }).(pulumi.BoolOutput)
}

// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
// offline.
func (o RemoteGoRepositoryOutput) AssumedOfflinePeriodSecs() pulumi.IntOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.IntOutput { return v.AssumedOfflinePeriodSecs }).(pulumi.IntOutput)
}

// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
// resolution.
func (o RemoteGoRepositoryOutput) BlackedOut() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.BlackedOut }).(pulumi.BoolOutput)
}

// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
// to the override list 'mismatching_mime_types_override_list'.
func (o RemoteGoRepositoryOutput) BlockMismatchingMimeTypes() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.BlockMismatchingMimeTypes }).(pulumi.BoolOutput)
}

// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
func (o RemoteGoRepositoryOutput) BypassHeadRequests() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.BypassHeadRequests }).(pulumi.BoolOutput)
}

// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
func (o RemoteGoRepositoryOutput) CdnRedirect() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.CdnRedirect }).(pulumi.BoolOutput)
}

// Client TLS certificate name.
func (o RemoteGoRepositoryOutput) ClientTlsCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.ClientTlsCertificate }).(pulumi.StringOutput)
}

func (o RemoteGoRepositoryOutput) ContentSynchronisation() RemoteGoRepositoryContentSynchronisationPtrOutput {
	return o.ApplyT(func(v *RemoteGoRepository) RemoteGoRepositoryContentSynchronisationPtrOutput {
		return v.ContentSynchronisation
	}).(RemoteGoRepositoryContentSynchronisationPtrOutput)
}

// Enable repository to be protected by the Curation service.
func (o RemoteGoRepositoryOutput) Curated() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.Curated }).(pulumi.BoolOutput)
}

// Public description.
func (o RemoteGoRepositoryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
func (o RemoteGoRepositoryOutput) DisableProxy() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.DisableProxy }).(pulumi.BoolOutput)
}

// Whether to disable URL normalization. Default is `false`.
func (o RemoteGoRepositoryOutput) DisableUrlNormalization() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.DisableUrlNormalization }).(pulumi.BoolOutput)
}

// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
func (o RemoteGoRepositoryOutput) DownloadDirect() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.DownloadDirect }).(pulumi.BoolOutput)
}

// Enables cookie management if the remote repository uses cookies to manage client state.
func (o RemoteGoRepositoryOutput) EnableCookieManagement() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.EnableCookieManagement }).(pulumi.BoolOutput)
}

// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no
// artifacts are excluded.
func (o RemoteGoRepositoryOutput) ExcludesPattern() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.ExcludesPattern }).(pulumi.StringOutput)
}

// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
// communicate with this repository.
func (o RemoteGoRepositoryOutput) HardFail() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.HardFail }).(pulumi.BoolOutput)
}

// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When
// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
func (o RemoteGoRepositoryOutput) IncludesPattern() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.IncludesPattern }).(pulumi.StringOutput)
}

// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
// contain spaces or special characters.
func (o RemoteGoRepositoryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
// the 'Retrieval Cache Period'. Default value is 'false'. This field exists in the API but not in the UI.
func (o RemoteGoRepositoryOutput) ListRemoteFolderItems() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.ListRemoteFolderItems }).(pulumi.BoolOutput)
}

// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
// multiple network interfaces.
func (o RemoteGoRepositoryOutput) LocalAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.LocalAddress }).(pulumi.StringOutput)
}

// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
// the remote before serving locally cached artifact or fail the request.
func (o RemoteGoRepositoryOutput) MetadataRetrievalTimeoutSecs() pulumi.IntOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.IntOutput { return v.MetadataRetrievalTimeoutSecs }).(pulumi.IntOutput)
}

// The set of mime types that should override the blockMismatchingMimeTypes setting. Eg:
// 'application/json,application/xml'. Default value is empty.
func (o RemoteGoRepositoryOutput) MismatchingMimeTypesOverrideList() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.MismatchingMimeTypesOverrideList }).(pulumi.StringOutput)
}

// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
// found). A value of 0 indicates no caching.
func (o RemoteGoRepositoryOutput) MissedCachePeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.IntOutput { return v.MissedCachePeriodSeconds }).(pulumi.IntOutput)
}

// Internal description.
func (o RemoteGoRepositoryOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.Notes }).(pulumi.StringOutput)
}

// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
func (o RemoteGoRepositoryOutput) Offline() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.Offline }).(pulumi.BoolOutput)
}

func (o RemoteGoRepositoryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
func (o RemoteGoRepositoryOutput) PriorityResolution() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.PriorityResolution }).(pulumi.BoolOutput)
}

func (o RemoteGoRepositoryOutput) ProjectEnvironments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringArrayOutput { return v.ProjectEnvironments }).(pulumi.StringArrayOutput)
}

// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When
// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
func (o RemoteGoRepositoryOutput) ProjectKey() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.ProjectKey }).(pulumi.StringOutput)
}

// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
func (o RemoteGoRepositoryOutput) PropagateQueryParams() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.PropagateQueryParams }).(pulumi.BoolOutput)
}

// List of property set name
func (o RemoteGoRepositoryOutput) PropertySets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringArrayOutput { return v.PropertySets }).(pulumi.StringArrayOutput)
}

// Proxy key from Artifactory Proxies settings. Can't be set if `disableProxy = true`.
func (o RemoteGoRepositoryOutput) Proxy() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.Proxy }).(pulumi.StringOutput)
}

// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
// `param1=val1&param2=val2&param3=val3`
func (o RemoteGoRepositoryOutput) QueryParams() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.QueryParams }).(pulumi.StringOutput)
}

// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
func (o RemoteGoRepositoryOutput) RemoteRepoLayoutRef() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.RemoteRepoLayoutRef }).(pulumi.StringOutput)
}

// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
func (o RemoteGoRepositoryOutput) RepoLayoutRef() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.RepoLayoutRef }).(pulumi.StringOutput)
}

// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
// before checking for newer versions on remote server. A value of 0 indicates no caching.
func (o RemoteGoRepositoryOutput) RetrievalCachePeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.IntOutput { return v.RetrievalCachePeriodSeconds }).(pulumi.IntOutput)
}

// When set to `true`, Artifactory retrieves the SHA256 from the remote server if it is not cached in the remote repo.
func (o RemoteGoRepositoryOutput) RetrieveSha256FromServer() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.RetrieveSha256FromServer }).(pulumi.BoolOutput)
}

// Deprecated: No longer supported
func (o RemoteGoRepositoryOutput) ShareConfiguration() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.ShareConfiguration }).(pulumi.BoolOutput)
}

// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
// operation is considered a retrieval failure.
func (o RemoteGoRepositoryOutput) SocketTimeoutMillis() pulumi.IntOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.IntOutput { return v.SocketTimeoutMillis }).(pulumi.IntOutput)
}

// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
// servers.
func (o RemoteGoRepositoryOutput) StoreArtifactsLocally() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.StoreArtifactsLocally }).(pulumi.BoolOutput)
}

// When set, remote artifacts are fetched along with their properties.
func (o RemoteGoRepositoryOutput) SynchronizeProperties() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.SynchronizeProperties }).(pulumi.BoolOutput)
}

// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
func (o RemoteGoRepositoryOutput) UnusedArtifactsCleanupPeriodHours() pulumi.IntOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.IntOutput { return v.UnusedArtifactsCleanupPeriodHours }).(pulumi.IntOutput)
}

// The remote repo URL.
func (o RemoteGoRepositoryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

func (o RemoteGoRepositoryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

// Artifactory supports proxying the following Git providers out-of-the-box: GitHub (`GITHUB`), GitHub Enterprise (`GITHUBENTERPRISE`), BitBucket Cloud (`BITBUCKET`), BitBucket Server (`STASH`), GitLab (`GITLAB`), or a remote Artifactory instance (`ARTIFACTORY`). Default value is `ARTIFACTORY`.
func (o RemoteGoRepositoryOutput) VcsGitProvider() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.StringOutput { return v.VcsGitProvider }).(pulumi.StringOutput)
}

// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
// Xray settings.
func (o RemoteGoRepositoryOutput) XrayIndex() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGoRepository) pulumi.BoolOutput { return v.XrayIndex }).(pulumi.BoolOutput)
}

type RemoteGoRepositoryArrayOutput struct{ *pulumi.OutputState }

func (RemoteGoRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemoteGoRepository)(nil)).Elem()
}

func (o RemoteGoRepositoryArrayOutput) ToRemoteGoRepositoryArrayOutput() RemoteGoRepositoryArrayOutput {
	return o
}

func (o RemoteGoRepositoryArrayOutput) ToRemoteGoRepositoryArrayOutputWithContext(ctx context.Context) RemoteGoRepositoryArrayOutput {
	return o
}

func (o RemoteGoRepositoryArrayOutput) Index(i pulumi.IntInput) RemoteGoRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RemoteGoRepository {
		return vs[0].([]*RemoteGoRepository)[vs[1].(int)]
	}).(RemoteGoRepositoryOutput)
}

type RemoteGoRepositoryMapOutput struct{ *pulumi.OutputState }

func (RemoteGoRepositoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemoteGoRepository)(nil)).Elem()
}

func (o RemoteGoRepositoryMapOutput) ToRemoteGoRepositoryMapOutput() RemoteGoRepositoryMapOutput {
	return o
}

func (o RemoteGoRepositoryMapOutput) ToRemoteGoRepositoryMapOutputWithContext(ctx context.Context) RemoteGoRepositoryMapOutput {
	return o
}

func (o RemoteGoRepositoryMapOutput) MapIndex(k pulumi.StringInput) RemoteGoRepositoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RemoteGoRepository {
		return vs[0].(map[string]*RemoteGoRepository)[vs[1].(string)]
	}).(RemoteGoRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteGoRepositoryInput)(nil)).Elem(), &RemoteGoRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteGoRepositoryArrayInput)(nil)).Elem(), RemoteGoRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteGoRepositoryMapInput)(nil)).Elem(), RemoteGoRepositoryMap{})
	pulumi.RegisterOutputType(RemoteGoRepositoryOutput{})
	pulumi.RegisterOutputType(RemoteGoRepositoryArrayOutput{})
	pulumi.RegisterOutputType(RemoteGoRepositoryMapOutput{})
}
