// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Artifactory Local Sbt Repository Resource
//
// Creates a local sbt repository.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-artifactory/sdk/go/artifactory"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := artifactory.NewLocalSbtRepository(ctx, "terraform_local_test_sbt_repo", &artifactory.LocalSbtRepositoryArgs{
// 			Key: pulumi.String("terraform-local-test-sbt-repo"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type LocalSbtRepository struct {
	pulumi.CustomResourceState

	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled pulumi.BoolPtrOutput   `pulumi:"archiveBrowsingEnabled"`
	BlackedOut             pulumi.BoolPtrOutput   `pulumi:"blackedOut"`
	Description            pulumi.StringPtrOutput `pulumi:"description"`
	DownloadDirect         pulumi.BoolPtrOutput   `pulumi:"downloadDirect"`
	ExcludesPattern        pulumi.StringOutput    `pulumi:"excludesPattern"`
	IncludesPattern        pulumi.StringOutput    `pulumi:"includesPattern"`
	// - the identity key of the repo
	Key           pulumi.StringOutput      `pulumi:"key"`
	Notes         pulumi.StringPtrOutput   `pulumi:"notes"`
	PackageType   pulumi.StringOutput      `pulumi:"packageType"`
	PropertySets  pulumi.StringArrayOutput `pulumi:"propertySets"`
	RepoLayoutRef pulumi.StringOutput      `pulumi:"repoLayoutRef"`
	XrayIndex     pulumi.BoolOutput        `pulumi:"xrayIndex"`
}

// NewLocalSbtRepository registers a new resource with the given unique name, arguments, and options.
func NewLocalSbtRepository(ctx *pulumi.Context,
	name string, args *LocalSbtRepositoryArgs, opts ...pulumi.ResourceOption) (*LocalSbtRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	var resource LocalSbtRepository
	err := ctx.RegisterResource("artifactory:index/localSbtRepository:LocalSbtRepository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocalSbtRepository gets an existing LocalSbtRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalSbtRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocalSbtRepositoryState, opts ...pulumi.ResourceOption) (*LocalSbtRepository, error) {
	var resource LocalSbtRepository
	err := ctx.ReadResource("artifactory:index/localSbtRepository:LocalSbtRepository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocalSbtRepository resources.
type localSbtRepositoryState struct {
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled *bool   `pulumi:"archiveBrowsingEnabled"`
	BlackedOut             *bool   `pulumi:"blackedOut"`
	Description            *string `pulumi:"description"`
	DownloadDirect         *bool   `pulumi:"downloadDirect"`
	ExcludesPattern        *string `pulumi:"excludesPattern"`
	IncludesPattern        *string `pulumi:"includesPattern"`
	// - the identity key of the repo
	Key           *string  `pulumi:"key"`
	Notes         *string  `pulumi:"notes"`
	PackageType   *string  `pulumi:"packageType"`
	PropertySets  []string `pulumi:"propertySets"`
	RepoLayoutRef *string  `pulumi:"repoLayoutRef"`
	XrayIndex     *bool    `pulumi:"xrayIndex"`
}

type LocalSbtRepositoryState struct {
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled pulumi.BoolPtrInput
	BlackedOut             pulumi.BoolPtrInput
	Description            pulumi.StringPtrInput
	DownloadDirect         pulumi.BoolPtrInput
	ExcludesPattern        pulumi.StringPtrInput
	IncludesPattern        pulumi.StringPtrInput
	// - the identity key of the repo
	Key           pulumi.StringPtrInput
	Notes         pulumi.StringPtrInput
	PackageType   pulumi.StringPtrInput
	PropertySets  pulumi.StringArrayInput
	RepoLayoutRef pulumi.StringPtrInput
	XrayIndex     pulumi.BoolPtrInput
}

func (LocalSbtRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*localSbtRepositoryState)(nil)).Elem()
}

type localSbtRepositoryArgs struct {
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled *bool   `pulumi:"archiveBrowsingEnabled"`
	BlackedOut             *bool   `pulumi:"blackedOut"`
	Description            *string `pulumi:"description"`
	DownloadDirect         *bool   `pulumi:"downloadDirect"`
	ExcludesPattern        *string `pulumi:"excludesPattern"`
	IncludesPattern        *string `pulumi:"includesPattern"`
	// - the identity key of the repo
	Key           string   `pulumi:"key"`
	Notes         *string  `pulumi:"notes"`
	PropertySets  []string `pulumi:"propertySets"`
	RepoLayoutRef *string  `pulumi:"repoLayoutRef"`
	XrayIndex     *bool    `pulumi:"xrayIndex"`
}

// The set of arguments for constructing a LocalSbtRepository resource.
type LocalSbtRepositoryArgs struct {
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled pulumi.BoolPtrInput
	BlackedOut             pulumi.BoolPtrInput
	Description            pulumi.StringPtrInput
	DownloadDirect         pulumi.BoolPtrInput
	ExcludesPattern        pulumi.StringPtrInput
	IncludesPattern        pulumi.StringPtrInput
	// - the identity key of the repo
	Key           pulumi.StringInput
	Notes         pulumi.StringPtrInput
	PropertySets  pulumi.StringArrayInput
	RepoLayoutRef pulumi.StringPtrInput
	XrayIndex     pulumi.BoolPtrInput
}

func (LocalSbtRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*localSbtRepositoryArgs)(nil)).Elem()
}

type LocalSbtRepositoryInput interface {
	pulumi.Input

	ToLocalSbtRepositoryOutput() LocalSbtRepositoryOutput
	ToLocalSbtRepositoryOutputWithContext(ctx context.Context) LocalSbtRepositoryOutput
}

func (*LocalSbtRepository) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalSbtRepository)(nil))
}

func (i *LocalSbtRepository) ToLocalSbtRepositoryOutput() LocalSbtRepositoryOutput {
	return i.ToLocalSbtRepositoryOutputWithContext(context.Background())
}

func (i *LocalSbtRepository) ToLocalSbtRepositoryOutputWithContext(ctx context.Context) LocalSbtRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalSbtRepositoryOutput)
}

func (i *LocalSbtRepository) ToLocalSbtRepositoryPtrOutput() LocalSbtRepositoryPtrOutput {
	return i.ToLocalSbtRepositoryPtrOutputWithContext(context.Background())
}

func (i *LocalSbtRepository) ToLocalSbtRepositoryPtrOutputWithContext(ctx context.Context) LocalSbtRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalSbtRepositoryPtrOutput)
}

type LocalSbtRepositoryPtrInput interface {
	pulumi.Input

	ToLocalSbtRepositoryPtrOutput() LocalSbtRepositoryPtrOutput
	ToLocalSbtRepositoryPtrOutputWithContext(ctx context.Context) LocalSbtRepositoryPtrOutput
}

type localSbtRepositoryPtrType LocalSbtRepositoryArgs

func (*localSbtRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalSbtRepository)(nil))
}

func (i *localSbtRepositoryPtrType) ToLocalSbtRepositoryPtrOutput() LocalSbtRepositoryPtrOutput {
	return i.ToLocalSbtRepositoryPtrOutputWithContext(context.Background())
}

func (i *localSbtRepositoryPtrType) ToLocalSbtRepositoryPtrOutputWithContext(ctx context.Context) LocalSbtRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalSbtRepositoryPtrOutput)
}

// LocalSbtRepositoryArrayInput is an input type that accepts LocalSbtRepositoryArray and LocalSbtRepositoryArrayOutput values.
// You can construct a concrete instance of `LocalSbtRepositoryArrayInput` via:
//
//          LocalSbtRepositoryArray{ LocalSbtRepositoryArgs{...} }
type LocalSbtRepositoryArrayInput interface {
	pulumi.Input

	ToLocalSbtRepositoryArrayOutput() LocalSbtRepositoryArrayOutput
	ToLocalSbtRepositoryArrayOutputWithContext(context.Context) LocalSbtRepositoryArrayOutput
}

type LocalSbtRepositoryArray []LocalSbtRepositoryInput

func (LocalSbtRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalSbtRepository)(nil)).Elem()
}

func (i LocalSbtRepositoryArray) ToLocalSbtRepositoryArrayOutput() LocalSbtRepositoryArrayOutput {
	return i.ToLocalSbtRepositoryArrayOutputWithContext(context.Background())
}

func (i LocalSbtRepositoryArray) ToLocalSbtRepositoryArrayOutputWithContext(ctx context.Context) LocalSbtRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalSbtRepositoryArrayOutput)
}

// LocalSbtRepositoryMapInput is an input type that accepts LocalSbtRepositoryMap and LocalSbtRepositoryMapOutput values.
// You can construct a concrete instance of `LocalSbtRepositoryMapInput` via:
//
//          LocalSbtRepositoryMap{ "key": LocalSbtRepositoryArgs{...} }
type LocalSbtRepositoryMapInput interface {
	pulumi.Input

	ToLocalSbtRepositoryMapOutput() LocalSbtRepositoryMapOutput
	ToLocalSbtRepositoryMapOutputWithContext(context.Context) LocalSbtRepositoryMapOutput
}

type LocalSbtRepositoryMap map[string]LocalSbtRepositoryInput

func (LocalSbtRepositoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalSbtRepository)(nil)).Elem()
}

func (i LocalSbtRepositoryMap) ToLocalSbtRepositoryMapOutput() LocalSbtRepositoryMapOutput {
	return i.ToLocalSbtRepositoryMapOutputWithContext(context.Background())
}

func (i LocalSbtRepositoryMap) ToLocalSbtRepositoryMapOutputWithContext(ctx context.Context) LocalSbtRepositoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalSbtRepositoryMapOutput)
}

type LocalSbtRepositoryOutput struct{ *pulumi.OutputState }

func (LocalSbtRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalSbtRepository)(nil))
}

func (o LocalSbtRepositoryOutput) ToLocalSbtRepositoryOutput() LocalSbtRepositoryOutput {
	return o
}

func (o LocalSbtRepositoryOutput) ToLocalSbtRepositoryOutputWithContext(ctx context.Context) LocalSbtRepositoryOutput {
	return o
}

func (o LocalSbtRepositoryOutput) ToLocalSbtRepositoryPtrOutput() LocalSbtRepositoryPtrOutput {
	return o.ToLocalSbtRepositoryPtrOutputWithContext(context.Background())
}

func (o LocalSbtRepositoryOutput) ToLocalSbtRepositoryPtrOutputWithContext(ctx context.Context) LocalSbtRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LocalSbtRepository) *LocalSbtRepository {
		return &v
	}).(LocalSbtRepositoryPtrOutput)
}

type LocalSbtRepositoryPtrOutput struct{ *pulumi.OutputState }

func (LocalSbtRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalSbtRepository)(nil))
}

func (o LocalSbtRepositoryPtrOutput) ToLocalSbtRepositoryPtrOutput() LocalSbtRepositoryPtrOutput {
	return o
}

func (o LocalSbtRepositoryPtrOutput) ToLocalSbtRepositoryPtrOutputWithContext(ctx context.Context) LocalSbtRepositoryPtrOutput {
	return o
}

func (o LocalSbtRepositoryPtrOutput) Elem() LocalSbtRepositoryOutput {
	return o.ApplyT(func(v *LocalSbtRepository) LocalSbtRepository {
		if v != nil {
			return *v
		}
		var ret LocalSbtRepository
		return ret
	}).(LocalSbtRepositoryOutput)
}

type LocalSbtRepositoryArrayOutput struct{ *pulumi.OutputState }

func (LocalSbtRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalSbtRepository)(nil))
}

func (o LocalSbtRepositoryArrayOutput) ToLocalSbtRepositoryArrayOutput() LocalSbtRepositoryArrayOutput {
	return o
}

func (o LocalSbtRepositoryArrayOutput) ToLocalSbtRepositoryArrayOutputWithContext(ctx context.Context) LocalSbtRepositoryArrayOutput {
	return o
}

func (o LocalSbtRepositoryArrayOutput) Index(i pulumi.IntInput) LocalSbtRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LocalSbtRepository {
		return vs[0].([]LocalSbtRepository)[vs[1].(int)]
	}).(LocalSbtRepositoryOutput)
}

type LocalSbtRepositoryMapOutput struct{ *pulumi.OutputState }

func (LocalSbtRepositoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LocalSbtRepository)(nil))
}

func (o LocalSbtRepositoryMapOutput) ToLocalSbtRepositoryMapOutput() LocalSbtRepositoryMapOutput {
	return o
}

func (o LocalSbtRepositoryMapOutput) ToLocalSbtRepositoryMapOutputWithContext(ctx context.Context) LocalSbtRepositoryMapOutput {
	return o
}

func (o LocalSbtRepositoryMapOutput) MapIndex(k pulumi.StringInput) LocalSbtRepositoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LocalSbtRepository {
		return vs[0].(map[string]LocalSbtRepository)[vs[1].(string)]
	}).(LocalSbtRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocalSbtRepositoryInput)(nil)).Elem(), &LocalSbtRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalSbtRepositoryPtrInput)(nil)).Elem(), &LocalSbtRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalSbtRepositoryArrayInput)(nil)).Elem(), LocalSbtRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalSbtRepositoryMapInput)(nil)).Elem(), LocalSbtRepositoryMap{})
	pulumi.RegisterOutputType(LocalSbtRepositoryOutput{})
	pulumi.RegisterOutputType(LocalSbtRepositoryPtrOutput{})
	pulumi.RegisterOutputType(LocalSbtRepositoryArrayOutput{})
	pulumi.RegisterOutputType(LocalSbtRepositoryMapOutput{})
}
