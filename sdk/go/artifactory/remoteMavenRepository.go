// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Artifactory Remote Maven Repository Resource
//
// Provides an Artifactory remote `maven` repository resource.
// Official documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Remote+Repositories).
//
// ## Example Usage
//
// Includes only new and relevant fields, for anything else, see: generic repo.
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := artifactory.NewRemoteMavenRepository(ctx, "maven-remote", &artifactory.RemoteMavenRepositoryArgs{
// 			FetchJarsEagerly:             pulumi.Bool(true),
// 			FetchSourcesEagerly:          pulumi.Bool(false),
// 			Key:                          pulumi.String("maven-remote-foo"),
// 			RejectInvalidJars:            pulumi.Bool(true),
// 			SuppressPomConsistencyChecks: pulumi.Bool(false),
// 			Url:                          pulumi.String("https://repo1.maven.org/maven2/"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type RemoteMavenRepository struct {
	pulumi.CustomResourceState

	// Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.
	AllowAnyHostAuth pulumi.BoolOutput `pulumi:"allowAnyHostAuth"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.
	AssumedOfflinePeriodSecs pulumi.IntPtrOutput `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.
	BlackedOut pulumi.BoolOutput `pulumi:"blackedOut"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BlockMismatchingMimeTypes pulumi.BoolOutput `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests   pulumi.BoolOutput   `pulumi:"bypassHeadRequests"`
	ClientTlsCertificate pulumi.StringOutput `pulumi:"clientTlsCertificate"`
	// Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)
	ContentSynchronisation RemoteMavenRepositoryContentSynchronisationOutput `pulumi:"contentSynchronisation"`
	Description            pulumi.StringOutput                               `pulumi:"description"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolOutput `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.
	ExcludesPattern pulumi.StringOutput `pulumi:"excludesPattern"`
	// This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function
	//
	// Deprecated: This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function
	FailedRetrievalCachePeriodSecs pulumi.IntOutput `pulumi:"failedRetrievalCachePeriodSecs"`
	// - When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
	FetchJarsEagerly pulumi.BoolPtrOutput `pulumi:"fetchJarsEagerly"`
	// - When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
	FetchSourcesEagerly pulumi.BoolPtrOutput `pulumi:"fetchSourcesEagerly"`
	// - If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases pulumi.BoolPtrOutput `pulumi:"handleReleases"`
	// - If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots pulumi.BoolPtrOutput `pulumi:"handleSnapshots"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.
	HardFail pulumi.BoolOutput `pulumi:"hardFail"`
	// List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringOutput `pulumi:"includesPattern"`
	// The repository identifier. Must be unique system-wide
	Key pulumi.StringOutput `pulumi:"key"`
	// - Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.
	ListRemoteFolderItems pulumi.BoolPtrOutput `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.
	LocalAddress pulumi.StringPtrOutput `pulumi:"localAddress"`
	// (Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// "application/json,application/xml". Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrOutput `pulumi:"mismatchingMimeTypesOverrideList"`
	// The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntOutput       `pulumi:"missedCachePeriodSeconds"`
	Notes                    pulumi.StringPtrOutput `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline     pulumi.BoolOutput      `pulumi:"offline"`
	PackageType pulumi.StringOutput    `pulumi:"packageType"`
	Password    pulumi.StringPtrOutput `pulumi:"password"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution pulumi.BoolOutput `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD"
	ProjectEnvironments pulumi.StringArrayOutput `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrOutput `pulumi:"projectKey"`
	// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
	PropagateQueryParams pulumi.BoolPtrOutput `pulumi:"propagateQueryParams"`
	// List of property set name
	PropertySets pulumi.StringArrayOutput `pulumi:"propertySets"`
	Proxy        pulumi.StringOutput      `pulumi:"proxy"`
	// - Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
	RejectInvalidJars pulumi.BoolPtrOutput `pulumi:"rejectInvalidJars"`
	// - Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.
	RemoteRepoChecksumPolicyType pulumi.StringPtrOutput `pulumi:"remoteRepoChecksumPolicyType"`
	// Repository layout key for the remote layout mapping
	RemoteRepoLayoutRef pulumi.StringOutput `pulumi:"remoteRepoLayoutRef"`
	// Repository layout key for the remote repository
	RepoLayoutRef pulumi.StringPtrOutput `pulumi:"repoLayoutRef"`
	// The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.
	RetrievalCachePeriodSeconds pulumi.IntOutput  `pulumi:"retrievalCachePeriodSeconds"`
	ShareConfiguration          pulumi.BoolOutput `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntOutput `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.
	StoreArtifactsLocally pulumi.BoolOutput `pulumi:"storeArtifactsLocally"`
	// - By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to 'true'.
	SuppressPomConsistencyChecks pulumi.BoolPtrOutput `pulumi:"suppressPomConsistencyChecks"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties               pulumi.BoolOutput `pulumi:"synchronizeProperties"`
	UnusedArtifactsCleanupPeriodEnabled pulumi.BoolOutput `pulumi:"unusedArtifactsCleanupPeriodEnabled"`
	// The number of hours to wait before an artifact is deemed "unused" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntOutput `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// - the remote repo URL. You kinda don't have a remote repo without it
	Url      pulumi.StringOutput    `pulumi:"url"`
	Username pulumi.StringPtrOutput `pulumi:"username"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
	XrayIndex pulumi.BoolPtrOutput `pulumi:"xrayIndex"`
}

// NewRemoteMavenRepository registers a new resource with the given unique name, arguments, and options.
func NewRemoteMavenRepository(ctx *pulumi.Context,
	name string, args *RemoteMavenRepositoryArgs, opts ...pulumi.ResourceOption) (*RemoteMavenRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	var resource RemoteMavenRepository
	err := ctx.RegisterResource("artifactory:index/remoteMavenRepository:RemoteMavenRepository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRemoteMavenRepository gets an existing RemoteMavenRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRemoteMavenRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RemoteMavenRepositoryState, opts ...pulumi.ResourceOption) (*RemoteMavenRepository, error) {
	var resource RemoteMavenRepository
	err := ctx.ReadResource("artifactory:index/remoteMavenRepository:RemoteMavenRepository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RemoteMavenRepository resources.
type remoteMavenRepositoryState struct {
	// Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.
	AllowAnyHostAuth *bool `pulumi:"allowAnyHostAuth"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.
	AssumedOfflinePeriodSecs *int `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.
	BlackedOut *bool `pulumi:"blackedOut"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BlockMismatchingMimeTypes *bool `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests   *bool   `pulumi:"bypassHeadRequests"`
	ClientTlsCertificate *string `pulumi:"clientTlsCertificate"`
	// Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)
	ContentSynchronisation *RemoteMavenRepositoryContentSynchronisation `pulumi:"contentSynchronisation"`
	Description            *string                                      `pulumi:"description"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement *bool `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function
	//
	// Deprecated: This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function
	FailedRetrievalCachePeriodSecs *int `pulumi:"failedRetrievalCachePeriodSecs"`
	// - When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
	FetchJarsEagerly *bool `pulumi:"fetchJarsEagerly"`
	// - When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
	FetchSourcesEagerly *bool `pulumi:"fetchSourcesEagerly"`
	// - If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases *bool `pulumi:"handleReleases"`
	// - If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots *bool `pulumi:"handleSnapshots"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.
	HardFail *bool `pulumi:"hardFail"`
	// List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern *string `pulumi:"includesPattern"`
	// The repository identifier. Must be unique system-wide
	Key *string `pulumi:"key"`
	// - Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.
	ListRemoteFolderItems *bool `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.
	LocalAddress *string `pulumi:"localAddress"`
	// (Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// "application/json,application/xml". Default value is empty.
	MismatchingMimeTypesOverrideList *string `pulumi:"mismatchingMimeTypesOverrideList"`
	// The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds *int    `pulumi:"missedCachePeriodSeconds"`
	Notes                    *string `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline     *bool   `pulumi:"offline"`
	PackageType *string `pulumi:"packageType"`
	Password    *string `pulumi:"password"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution *bool `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD"
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
	PropagateQueryParams *bool `pulumi:"propagateQueryParams"`
	// List of property set name
	PropertySets []string `pulumi:"propertySets"`
	Proxy        *string  `pulumi:"proxy"`
	// - Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
	RejectInvalidJars *bool `pulumi:"rejectInvalidJars"`
	// - Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.
	RemoteRepoChecksumPolicyType *string `pulumi:"remoteRepoChecksumPolicyType"`
	// Repository layout key for the remote layout mapping
	RemoteRepoLayoutRef *string `pulumi:"remoteRepoLayoutRef"`
	// Repository layout key for the remote repository
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.
	RetrievalCachePeriodSeconds *int  `pulumi:"retrievalCachePeriodSeconds"`
	ShareConfiguration          *bool `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.
	SocketTimeoutMillis *int `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.
	StoreArtifactsLocally *bool `pulumi:"storeArtifactsLocally"`
	// - By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to 'true'.
	SuppressPomConsistencyChecks *bool `pulumi:"suppressPomConsistencyChecks"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties               *bool `pulumi:"synchronizeProperties"`
	UnusedArtifactsCleanupPeriodEnabled *bool `pulumi:"unusedArtifactsCleanupPeriodEnabled"`
	// The number of hours to wait before an artifact is deemed "unused" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours *int `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// - the remote repo URL. You kinda don't have a remote repo without it
	Url      *string `pulumi:"url"`
	Username *string `pulumi:"username"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

type RemoteMavenRepositoryState struct {
	// Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.
	AllowAnyHostAuth pulumi.BoolPtrInput
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.
	AssumedOfflinePeriodSecs pulumi.IntPtrInput
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.
	BlackedOut pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BlockMismatchingMimeTypes pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests   pulumi.BoolPtrInput
	ClientTlsCertificate pulumi.StringPtrInput
	// Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)
	ContentSynchronisation RemoteMavenRepositoryContentSynchronisationPtrInput
	Description            pulumi.StringPtrInput
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function
	//
	// Deprecated: This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function
	FailedRetrievalCachePeriodSecs pulumi.IntPtrInput
	// - When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
	FetchJarsEagerly pulumi.BoolPtrInput
	// - When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
	FetchSourcesEagerly pulumi.BoolPtrInput
	// - If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases pulumi.BoolPtrInput
	// - If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots pulumi.BoolPtrInput
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.
	HardFail pulumi.BoolPtrInput
	// List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrInput
	// The repository identifier. Must be unique system-wide
	Key pulumi.StringPtrInput
	// - Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.
	ListRemoteFolderItems pulumi.BoolPtrInput
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.
	LocalAddress pulumi.StringPtrInput
	// (Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// "application/json,application/xml". Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrInput
	// The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrInput
	Notes                    pulumi.StringPtrInput
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline     pulumi.BoolPtrInput
	PackageType pulumi.StringPtrInput
	Password    pulumi.StringPtrInput
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution pulumi.BoolPtrInput
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD"
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
	PropagateQueryParams pulumi.BoolPtrInput
	// List of property set name
	PropertySets pulumi.StringArrayInput
	Proxy        pulumi.StringPtrInput
	// - Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
	RejectInvalidJars pulumi.BoolPtrInput
	// - Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.
	RemoteRepoChecksumPolicyType pulumi.StringPtrInput
	// Repository layout key for the remote layout mapping
	RemoteRepoLayoutRef pulumi.StringPtrInput
	// Repository layout key for the remote repository
	RepoLayoutRef pulumi.StringPtrInput
	// The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.
	RetrievalCachePeriodSeconds pulumi.IntPtrInput
	ShareConfiguration          pulumi.BoolPtrInput
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrInput
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.
	StoreArtifactsLocally pulumi.BoolPtrInput
	// - By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to 'true'.
	SuppressPomConsistencyChecks pulumi.BoolPtrInput
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties               pulumi.BoolPtrInput
	UnusedArtifactsCleanupPeriodEnabled pulumi.BoolPtrInput
	// The number of hours to wait before an artifact is deemed "unused" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrInput
	// - the remote repo URL. You kinda don't have a remote repo without it
	Url      pulumi.StringPtrInput
	Username pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (RemoteMavenRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*remoteMavenRepositoryState)(nil)).Elem()
}

type remoteMavenRepositoryArgs struct {
	// Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.
	AllowAnyHostAuth *bool `pulumi:"allowAnyHostAuth"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.
	AssumedOfflinePeriodSecs *int `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.
	BlackedOut *bool `pulumi:"blackedOut"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BlockMismatchingMimeTypes *bool `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests   *bool   `pulumi:"bypassHeadRequests"`
	ClientTlsCertificate *string `pulumi:"clientTlsCertificate"`
	// Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)
	ContentSynchronisation *RemoteMavenRepositoryContentSynchronisation `pulumi:"contentSynchronisation"`
	Description            *string                                      `pulumi:"description"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement *bool `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// - When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
	FetchJarsEagerly *bool `pulumi:"fetchJarsEagerly"`
	// - When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
	FetchSourcesEagerly *bool `pulumi:"fetchSourcesEagerly"`
	// - If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases *bool `pulumi:"handleReleases"`
	// - If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots *bool `pulumi:"handleSnapshots"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.
	HardFail *bool `pulumi:"hardFail"`
	// List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern *string `pulumi:"includesPattern"`
	// The repository identifier. Must be unique system-wide
	Key string `pulumi:"key"`
	// - Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.
	ListRemoteFolderItems *bool `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.
	LocalAddress *string `pulumi:"localAddress"`
	// (Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// "application/json,application/xml". Default value is empty.
	MismatchingMimeTypesOverrideList *string `pulumi:"mismatchingMimeTypesOverrideList"`
	// The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds *int    `pulumi:"missedCachePeriodSeconds"`
	Notes                    *string `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  *bool   `pulumi:"offline"`
	Password *string `pulumi:"password"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution *bool `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD"
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
	PropagateQueryParams *bool `pulumi:"propagateQueryParams"`
	// List of property set name
	PropertySets []string `pulumi:"propertySets"`
	Proxy        *string  `pulumi:"proxy"`
	// - Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
	RejectInvalidJars *bool `pulumi:"rejectInvalidJars"`
	// - Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.
	RemoteRepoChecksumPolicyType *string `pulumi:"remoteRepoChecksumPolicyType"`
	// Repository layout key for the remote layout mapping
	RemoteRepoLayoutRef *string `pulumi:"remoteRepoLayoutRef"`
	// Repository layout key for the remote repository
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.
	RetrievalCachePeriodSeconds *int  `pulumi:"retrievalCachePeriodSeconds"`
	ShareConfiguration          *bool `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.
	SocketTimeoutMillis *int `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.
	StoreArtifactsLocally *bool `pulumi:"storeArtifactsLocally"`
	// - By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to 'true'.
	SuppressPomConsistencyChecks *bool `pulumi:"suppressPomConsistencyChecks"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties               *bool `pulumi:"synchronizeProperties"`
	UnusedArtifactsCleanupPeriodEnabled *bool `pulumi:"unusedArtifactsCleanupPeriodEnabled"`
	// The number of hours to wait before an artifact is deemed "unused" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours *int `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// - the remote repo URL. You kinda don't have a remote repo without it
	Url      string  `pulumi:"url"`
	Username *string `pulumi:"username"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

// The set of arguments for constructing a RemoteMavenRepository resource.
type RemoteMavenRepositoryArgs struct {
	// Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.
	AllowAnyHostAuth pulumi.BoolPtrInput
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.
	AssumedOfflinePeriodSecs pulumi.IntPtrInput
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.
	BlackedOut pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BlockMismatchingMimeTypes pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests   pulumi.BoolPtrInput
	ClientTlsCertificate pulumi.StringPtrInput
	// Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)
	ContentSynchronisation RemoteMavenRepositoryContentSynchronisationPtrInput
	Description            pulumi.StringPtrInput
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// - When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
	FetchJarsEagerly pulumi.BoolPtrInput
	// - When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
	FetchSourcesEagerly pulumi.BoolPtrInput
	// - If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases pulumi.BoolPtrInput
	// - If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots pulumi.BoolPtrInput
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.
	HardFail pulumi.BoolPtrInput
	// List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrInput
	// The repository identifier. Must be unique system-wide
	Key pulumi.StringInput
	// - Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.
	ListRemoteFolderItems pulumi.BoolPtrInput
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.
	LocalAddress pulumi.StringPtrInput
	// (Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// "application/json,application/xml". Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrInput
	// The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrInput
	Notes                    pulumi.StringPtrInput
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  pulumi.BoolPtrInput
	Password pulumi.StringPtrInput
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution pulumi.BoolPtrInput
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD"
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
	PropagateQueryParams pulumi.BoolPtrInput
	// List of property set name
	PropertySets pulumi.StringArrayInput
	Proxy        pulumi.StringPtrInput
	// - Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
	RejectInvalidJars pulumi.BoolPtrInput
	// - Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.
	RemoteRepoChecksumPolicyType pulumi.StringPtrInput
	// Repository layout key for the remote layout mapping
	RemoteRepoLayoutRef pulumi.StringPtrInput
	// Repository layout key for the remote repository
	RepoLayoutRef pulumi.StringPtrInput
	// The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.
	RetrievalCachePeriodSeconds pulumi.IntPtrInput
	ShareConfiguration          pulumi.BoolPtrInput
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrInput
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.
	StoreArtifactsLocally pulumi.BoolPtrInput
	// - By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to 'true'.
	SuppressPomConsistencyChecks pulumi.BoolPtrInput
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties               pulumi.BoolPtrInput
	UnusedArtifactsCleanupPeriodEnabled pulumi.BoolPtrInput
	// The number of hours to wait before an artifact is deemed "unused" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrInput
	// - the remote repo URL. You kinda don't have a remote repo without it
	Url      pulumi.StringInput
	Username pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (RemoteMavenRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*remoteMavenRepositoryArgs)(nil)).Elem()
}

type RemoteMavenRepositoryInput interface {
	pulumi.Input

	ToRemoteMavenRepositoryOutput() RemoteMavenRepositoryOutput
	ToRemoteMavenRepositoryOutputWithContext(ctx context.Context) RemoteMavenRepositoryOutput
}

func (*RemoteMavenRepository) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteMavenRepository)(nil)).Elem()
}

func (i *RemoteMavenRepository) ToRemoteMavenRepositoryOutput() RemoteMavenRepositoryOutput {
	return i.ToRemoteMavenRepositoryOutputWithContext(context.Background())
}

func (i *RemoteMavenRepository) ToRemoteMavenRepositoryOutputWithContext(ctx context.Context) RemoteMavenRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteMavenRepositoryOutput)
}

// RemoteMavenRepositoryArrayInput is an input type that accepts RemoteMavenRepositoryArray and RemoteMavenRepositoryArrayOutput values.
// You can construct a concrete instance of `RemoteMavenRepositoryArrayInput` via:
//
//          RemoteMavenRepositoryArray{ RemoteMavenRepositoryArgs{...} }
type RemoteMavenRepositoryArrayInput interface {
	pulumi.Input

	ToRemoteMavenRepositoryArrayOutput() RemoteMavenRepositoryArrayOutput
	ToRemoteMavenRepositoryArrayOutputWithContext(context.Context) RemoteMavenRepositoryArrayOutput
}

type RemoteMavenRepositoryArray []RemoteMavenRepositoryInput

func (RemoteMavenRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemoteMavenRepository)(nil)).Elem()
}

func (i RemoteMavenRepositoryArray) ToRemoteMavenRepositoryArrayOutput() RemoteMavenRepositoryArrayOutput {
	return i.ToRemoteMavenRepositoryArrayOutputWithContext(context.Background())
}

func (i RemoteMavenRepositoryArray) ToRemoteMavenRepositoryArrayOutputWithContext(ctx context.Context) RemoteMavenRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteMavenRepositoryArrayOutput)
}

// RemoteMavenRepositoryMapInput is an input type that accepts RemoteMavenRepositoryMap and RemoteMavenRepositoryMapOutput values.
// You can construct a concrete instance of `RemoteMavenRepositoryMapInput` via:
//
//          RemoteMavenRepositoryMap{ "key": RemoteMavenRepositoryArgs{...} }
type RemoteMavenRepositoryMapInput interface {
	pulumi.Input

	ToRemoteMavenRepositoryMapOutput() RemoteMavenRepositoryMapOutput
	ToRemoteMavenRepositoryMapOutputWithContext(context.Context) RemoteMavenRepositoryMapOutput
}

type RemoteMavenRepositoryMap map[string]RemoteMavenRepositoryInput

func (RemoteMavenRepositoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemoteMavenRepository)(nil)).Elem()
}

func (i RemoteMavenRepositoryMap) ToRemoteMavenRepositoryMapOutput() RemoteMavenRepositoryMapOutput {
	return i.ToRemoteMavenRepositoryMapOutputWithContext(context.Background())
}

func (i RemoteMavenRepositoryMap) ToRemoteMavenRepositoryMapOutputWithContext(ctx context.Context) RemoteMavenRepositoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteMavenRepositoryMapOutput)
}

type RemoteMavenRepositoryOutput struct{ *pulumi.OutputState }

func (RemoteMavenRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteMavenRepository)(nil)).Elem()
}

func (o RemoteMavenRepositoryOutput) ToRemoteMavenRepositoryOutput() RemoteMavenRepositoryOutput {
	return o
}

func (o RemoteMavenRepositoryOutput) ToRemoteMavenRepositoryOutputWithContext(ctx context.Context) RemoteMavenRepositoryOutput {
	return o
}

type RemoteMavenRepositoryArrayOutput struct{ *pulumi.OutputState }

func (RemoteMavenRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemoteMavenRepository)(nil)).Elem()
}

func (o RemoteMavenRepositoryArrayOutput) ToRemoteMavenRepositoryArrayOutput() RemoteMavenRepositoryArrayOutput {
	return o
}

func (o RemoteMavenRepositoryArrayOutput) ToRemoteMavenRepositoryArrayOutputWithContext(ctx context.Context) RemoteMavenRepositoryArrayOutput {
	return o
}

func (o RemoteMavenRepositoryArrayOutput) Index(i pulumi.IntInput) RemoteMavenRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RemoteMavenRepository {
		return vs[0].([]*RemoteMavenRepository)[vs[1].(int)]
	}).(RemoteMavenRepositoryOutput)
}

type RemoteMavenRepositoryMapOutput struct{ *pulumi.OutputState }

func (RemoteMavenRepositoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemoteMavenRepository)(nil)).Elem()
}

func (o RemoteMavenRepositoryMapOutput) ToRemoteMavenRepositoryMapOutput() RemoteMavenRepositoryMapOutput {
	return o
}

func (o RemoteMavenRepositoryMapOutput) ToRemoteMavenRepositoryMapOutputWithContext(ctx context.Context) RemoteMavenRepositoryMapOutput {
	return o
}

func (o RemoteMavenRepositoryMapOutput) MapIndex(k pulumi.StringInput) RemoteMavenRepositoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RemoteMavenRepository {
		return vs[0].(map[string]*RemoteMavenRepository)[vs[1].(string)]
	}).(RemoteMavenRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteMavenRepositoryInput)(nil)).Elem(), &RemoteMavenRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteMavenRepositoryArrayInput)(nil)).Elem(), RemoteMavenRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteMavenRepositoryMapInput)(nil)).Elem(), RemoteMavenRepositoryMap{})
	pulumi.RegisterOutputType(RemoteMavenRepositoryOutput{})
	pulumi.RegisterOutputType(RemoteMavenRepositoryArrayOutput{})
	pulumi.RegisterOutputType(RemoteMavenRepositoryMapOutput{})
}
