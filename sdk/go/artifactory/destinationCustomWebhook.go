// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-artifactory/sdk/v8/go/artifactory/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an Artifactory custom webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.
//
// ## Example Usage
//
// .
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-artifactory/sdk/v8/go/artifactory"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := artifactory.NewDestinationCustomWebhook(ctx, "destination-custom-webhook", &artifactory.DestinationCustomWebhookArgs{
//				Key: pulumi.String("destination-custom-webhook"),
//				EventTypes: pulumi.StringArray{
//					pulumi.String("received"),
//					pulumi.String("delete_started"),
//					pulumi.String("delete_completed"),
//					pulumi.String("delete_failed"),
//				},
//				Criteria: &artifactory.DestinationCustomWebhookCriteriaArgs{
//					AnyReleaseBundle: pulumi.Bool(false),
//					RegisteredReleaseBundleNames: pulumi.StringArray{
//						pulumi.String("bundle-name"),
//					},
//					IncludePatterns: pulumi.StringArray{
//						pulumi.String("foo/**"),
//					},
//					ExcludePatterns: pulumi.StringArray{
//						pulumi.String("bar/**"),
//					},
//				},
//				Handlers: artifactory.DestinationCustomWebhookHandlerArray{
//					&artifactory.DestinationCustomWebhookHandlerArgs{
//						Url: pulumi.String("https://tempurl.org"),
//						Secrets: pulumi.StringMap{
//							"secretName1": pulumi.String("value1"),
//							"secretName2": pulumi.String("value2"),
//						},
//						HttpHeaders: pulumi.StringMap{
//							"headerName1": pulumi.String("value1"),
//							"headerName2": pulumi.String("value2"),
//						},
//						Payload: pulumi.String("{ \"ref\": \"main\" , \"inputs\": { \"artifact_path\": \"test-repo/repo-path\" } }"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DestinationCustomWebhook struct {
	pulumi.CustomResourceState

	// Specifies where the webhook will be applied on which repositories.
	Criteria DestinationCustomWebhookCriteriaPtrOutput `pulumi:"criteria"`
	// Webhook description. Max length 1000 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Status of webhook. Default to `true`
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: `received`, `deleteStarted`, `deleteCompleted`, `deleteFailed`
	EventTypes pulumi.StringArrayOutput `pulumi:"eventTypes"`
	// At least one is required.
	Handlers DestinationCustomWebhookHandlerArrayOutput `pulumi:"handlers"`
	// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
	Key pulumi.StringOutput `pulumi:"key"`
}

// NewDestinationCustomWebhook registers a new resource with the given unique name, arguments, and options.
func NewDestinationCustomWebhook(ctx *pulumi.Context,
	name string, args *DestinationCustomWebhookArgs, opts ...pulumi.ResourceOption) (*DestinationCustomWebhook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EventTypes == nil {
		return nil, errors.New("invalid value for required argument 'EventTypes'")
	}
	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DestinationCustomWebhook
	err := ctx.RegisterResource("artifactory:index/destinationCustomWebhook:DestinationCustomWebhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDestinationCustomWebhook gets an existing DestinationCustomWebhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDestinationCustomWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DestinationCustomWebhookState, opts ...pulumi.ResourceOption) (*DestinationCustomWebhook, error) {
	var resource DestinationCustomWebhook
	err := ctx.ReadResource("artifactory:index/destinationCustomWebhook:DestinationCustomWebhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DestinationCustomWebhook resources.
type destinationCustomWebhookState struct {
	// Specifies where the webhook will be applied on which repositories.
	Criteria *DestinationCustomWebhookCriteria `pulumi:"criteria"`
	// Webhook description. Max length 1000 characters.
	Description *string `pulumi:"description"`
	// Status of webhook. Default to `true`
	Enabled *bool `pulumi:"enabled"`
	// List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: `received`, `deleteStarted`, `deleteCompleted`, `deleteFailed`
	EventTypes []string `pulumi:"eventTypes"`
	// At least one is required.
	Handlers []DestinationCustomWebhookHandler `pulumi:"handlers"`
	// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
	Key *string `pulumi:"key"`
}

type DestinationCustomWebhookState struct {
	// Specifies where the webhook will be applied on which repositories.
	Criteria DestinationCustomWebhookCriteriaPtrInput
	// Webhook description. Max length 1000 characters.
	Description pulumi.StringPtrInput
	// Status of webhook. Default to `true`
	Enabled pulumi.BoolPtrInput
	// List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: `received`, `deleteStarted`, `deleteCompleted`, `deleteFailed`
	EventTypes pulumi.StringArrayInput
	// At least one is required.
	Handlers DestinationCustomWebhookHandlerArrayInput
	// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
	Key pulumi.StringPtrInput
}

func (DestinationCustomWebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*destinationCustomWebhookState)(nil)).Elem()
}

type destinationCustomWebhookArgs struct {
	// Specifies where the webhook will be applied on which repositories.
	Criteria *DestinationCustomWebhookCriteria `pulumi:"criteria"`
	// Webhook description. Max length 1000 characters.
	Description *string `pulumi:"description"`
	// Status of webhook. Default to `true`
	Enabled *bool `pulumi:"enabled"`
	// List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: `received`, `deleteStarted`, `deleteCompleted`, `deleteFailed`
	EventTypes []string `pulumi:"eventTypes"`
	// At least one is required.
	Handlers []DestinationCustomWebhookHandler `pulumi:"handlers"`
	// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
	Key string `pulumi:"key"`
}

// The set of arguments for constructing a DestinationCustomWebhook resource.
type DestinationCustomWebhookArgs struct {
	// Specifies where the webhook will be applied on which repositories.
	Criteria DestinationCustomWebhookCriteriaPtrInput
	// Webhook description. Max length 1000 characters.
	Description pulumi.StringPtrInput
	// Status of webhook. Default to `true`
	Enabled pulumi.BoolPtrInput
	// List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: `received`, `deleteStarted`, `deleteCompleted`, `deleteFailed`
	EventTypes pulumi.StringArrayInput
	// At least one is required.
	Handlers DestinationCustomWebhookHandlerArrayInput
	// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
	Key pulumi.StringInput
}

func (DestinationCustomWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*destinationCustomWebhookArgs)(nil)).Elem()
}

type DestinationCustomWebhookInput interface {
	pulumi.Input

	ToDestinationCustomWebhookOutput() DestinationCustomWebhookOutput
	ToDestinationCustomWebhookOutputWithContext(ctx context.Context) DestinationCustomWebhookOutput
}

func (*DestinationCustomWebhook) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationCustomWebhook)(nil)).Elem()
}

func (i *DestinationCustomWebhook) ToDestinationCustomWebhookOutput() DestinationCustomWebhookOutput {
	return i.ToDestinationCustomWebhookOutputWithContext(context.Background())
}

func (i *DestinationCustomWebhook) ToDestinationCustomWebhookOutputWithContext(ctx context.Context) DestinationCustomWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationCustomWebhookOutput)
}

// DestinationCustomWebhookArrayInput is an input type that accepts DestinationCustomWebhookArray and DestinationCustomWebhookArrayOutput values.
// You can construct a concrete instance of `DestinationCustomWebhookArrayInput` via:
//
//	DestinationCustomWebhookArray{ DestinationCustomWebhookArgs{...} }
type DestinationCustomWebhookArrayInput interface {
	pulumi.Input

	ToDestinationCustomWebhookArrayOutput() DestinationCustomWebhookArrayOutput
	ToDestinationCustomWebhookArrayOutputWithContext(context.Context) DestinationCustomWebhookArrayOutput
}

type DestinationCustomWebhookArray []DestinationCustomWebhookInput

func (DestinationCustomWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DestinationCustomWebhook)(nil)).Elem()
}

func (i DestinationCustomWebhookArray) ToDestinationCustomWebhookArrayOutput() DestinationCustomWebhookArrayOutput {
	return i.ToDestinationCustomWebhookArrayOutputWithContext(context.Background())
}

func (i DestinationCustomWebhookArray) ToDestinationCustomWebhookArrayOutputWithContext(ctx context.Context) DestinationCustomWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationCustomWebhookArrayOutput)
}

// DestinationCustomWebhookMapInput is an input type that accepts DestinationCustomWebhookMap and DestinationCustomWebhookMapOutput values.
// You can construct a concrete instance of `DestinationCustomWebhookMapInput` via:
//
//	DestinationCustomWebhookMap{ "key": DestinationCustomWebhookArgs{...} }
type DestinationCustomWebhookMapInput interface {
	pulumi.Input

	ToDestinationCustomWebhookMapOutput() DestinationCustomWebhookMapOutput
	ToDestinationCustomWebhookMapOutputWithContext(context.Context) DestinationCustomWebhookMapOutput
}

type DestinationCustomWebhookMap map[string]DestinationCustomWebhookInput

func (DestinationCustomWebhookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DestinationCustomWebhook)(nil)).Elem()
}

func (i DestinationCustomWebhookMap) ToDestinationCustomWebhookMapOutput() DestinationCustomWebhookMapOutput {
	return i.ToDestinationCustomWebhookMapOutputWithContext(context.Background())
}

func (i DestinationCustomWebhookMap) ToDestinationCustomWebhookMapOutputWithContext(ctx context.Context) DestinationCustomWebhookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationCustomWebhookMapOutput)
}

type DestinationCustomWebhookOutput struct{ *pulumi.OutputState }

func (DestinationCustomWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationCustomWebhook)(nil)).Elem()
}

func (o DestinationCustomWebhookOutput) ToDestinationCustomWebhookOutput() DestinationCustomWebhookOutput {
	return o
}

func (o DestinationCustomWebhookOutput) ToDestinationCustomWebhookOutputWithContext(ctx context.Context) DestinationCustomWebhookOutput {
	return o
}

// Specifies where the webhook will be applied on which repositories.
func (o DestinationCustomWebhookOutput) Criteria() DestinationCustomWebhookCriteriaPtrOutput {
	return o.ApplyT(func(v *DestinationCustomWebhook) DestinationCustomWebhookCriteriaPtrOutput { return v.Criteria }).(DestinationCustomWebhookCriteriaPtrOutput)
}

// Webhook description. Max length 1000 characters.
func (o DestinationCustomWebhookOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationCustomWebhook) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Status of webhook. Default to `true`
func (o DestinationCustomWebhookOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DestinationCustomWebhook) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: `received`, `deleteStarted`, `deleteCompleted`, `deleteFailed`
func (o DestinationCustomWebhookOutput) EventTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationCustomWebhook) pulumi.StringArrayOutput { return v.EventTypes }).(pulumi.StringArrayOutput)
}

// At least one is required.
func (o DestinationCustomWebhookOutput) Handlers() DestinationCustomWebhookHandlerArrayOutput {
	return o.ApplyT(func(v *DestinationCustomWebhook) DestinationCustomWebhookHandlerArrayOutput { return v.Handlers }).(DestinationCustomWebhookHandlerArrayOutput)
}

// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
func (o DestinationCustomWebhookOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationCustomWebhook) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

type DestinationCustomWebhookArrayOutput struct{ *pulumi.OutputState }

func (DestinationCustomWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DestinationCustomWebhook)(nil)).Elem()
}

func (o DestinationCustomWebhookArrayOutput) ToDestinationCustomWebhookArrayOutput() DestinationCustomWebhookArrayOutput {
	return o
}

func (o DestinationCustomWebhookArrayOutput) ToDestinationCustomWebhookArrayOutputWithContext(ctx context.Context) DestinationCustomWebhookArrayOutput {
	return o
}

func (o DestinationCustomWebhookArrayOutput) Index(i pulumi.IntInput) DestinationCustomWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DestinationCustomWebhook {
		return vs[0].([]*DestinationCustomWebhook)[vs[1].(int)]
	}).(DestinationCustomWebhookOutput)
}

type DestinationCustomWebhookMapOutput struct{ *pulumi.OutputState }

func (DestinationCustomWebhookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DestinationCustomWebhook)(nil)).Elem()
}

func (o DestinationCustomWebhookMapOutput) ToDestinationCustomWebhookMapOutput() DestinationCustomWebhookMapOutput {
	return o
}

func (o DestinationCustomWebhookMapOutput) ToDestinationCustomWebhookMapOutputWithContext(ctx context.Context) DestinationCustomWebhookMapOutput {
	return o
}

func (o DestinationCustomWebhookMapOutput) MapIndex(k pulumi.StringInput) DestinationCustomWebhookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DestinationCustomWebhook {
		return vs[0].(map[string]*DestinationCustomWebhook)[vs[1].(string)]
	}).(DestinationCustomWebhookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationCustomWebhookInput)(nil)).Elem(), &DestinationCustomWebhook{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationCustomWebhookArrayInput)(nil)).Elem(), DestinationCustomWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationCustomWebhookMapInput)(nil)).Elem(), DestinationCustomWebhookMap{})
	pulumi.RegisterOutputType(DestinationCustomWebhookOutput{})
	pulumi.RegisterOutputType(DestinationCustomWebhookArrayOutput{})
	pulumi.RegisterOutputType(DestinationCustomWebhookMapOutput{})
}
