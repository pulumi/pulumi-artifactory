// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccessToken struct {
	pulumi.CustomResourceState

	AccessToken     pulumi.StringOutput            `pulumi:"accessToken"`
	AdminToken      AccessTokenAdminTokenPtrOutput `pulumi:"adminToken"`
	Audience        pulumi.StringPtrOutput         `pulumi:"audience"`
	EndDate         pulumi.StringOutput            `pulumi:"endDate"`
	EndDateRelative pulumi.StringPtrOutput         `pulumi:"endDateRelative"`
	Groups          pulumi.StringArrayOutput       `pulumi:"groups"`
	RefreshToken    pulumi.StringOutput            `pulumi:"refreshToken"`
	Refreshable     pulumi.BoolPtrOutput           `pulumi:"refreshable"`
	Username        pulumi.StringOutput            `pulumi:"username"`
}

// NewAccessToken registers a new resource with the given unique name, arguments, and options.
func NewAccessToken(ctx *pulumi.Context,
	name string, args *AccessTokenArgs, opts ...pulumi.ResourceOption) (*AccessToken, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"accessToken",
		"refreshToken",
	})
	opts = append(opts, secrets)
	var resource AccessToken
	err := ctx.RegisterResource("artifactory:index/accessToken:AccessToken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessToken gets an existing AccessToken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessTokenState, opts ...pulumi.ResourceOption) (*AccessToken, error) {
	var resource AccessToken
	err := ctx.ReadResource("artifactory:index/accessToken:AccessToken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessToken resources.
type accessTokenState struct {
	AccessToken     *string                `pulumi:"accessToken"`
	AdminToken      *AccessTokenAdminToken `pulumi:"adminToken"`
	Audience        *string                `pulumi:"audience"`
	EndDate         *string                `pulumi:"endDate"`
	EndDateRelative *string                `pulumi:"endDateRelative"`
	Groups          []string               `pulumi:"groups"`
	RefreshToken    *string                `pulumi:"refreshToken"`
	Refreshable     *bool                  `pulumi:"refreshable"`
	Username        *string                `pulumi:"username"`
}

type AccessTokenState struct {
	AccessToken     pulumi.StringPtrInput
	AdminToken      AccessTokenAdminTokenPtrInput
	Audience        pulumi.StringPtrInput
	EndDate         pulumi.StringPtrInput
	EndDateRelative pulumi.StringPtrInput
	Groups          pulumi.StringArrayInput
	RefreshToken    pulumi.StringPtrInput
	Refreshable     pulumi.BoolPtrInput
	Username        pulumi.StringPtrInput
}

func (AccessTokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessTokenState)(nil)).Elem()
}

type accessTokenArgs struct {
	AdminToken      *AccessTokenAdminToken `pulumi:"adminToken"`
	Audience        *string                `pulumi:"audience"`
	EndDate         *string                `pulumi:"endDate"`
	EndDateRelative *string                `pulumi:"endDateRelative"`
	Groups          []string               `pulumi:"groups"`
	Refreshable     *bool                  `pulumi:"refreshable"`
	Username        string                 `pulumi:"username"`
}

// The set of arguments for constructing a AccessToken resource.
type AccessTokenArgs struct {
	AdminToken      AccessTokenAdminTokenPtrInput
	Audience        pulumi.StringPtrInput
	EndDate         pulumi.StringPtrInput
	EndDateRelative pulumi.StringPtrInput
	Groups          pulumi.StringArrayInput
	Refreshable     pulumi.BoolPtrInput
	Username        pulumi.StringInput
}

func (AccessTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessTokenArgs)(nil)).Elem()
}

type AccessTokenInput interface {
	pulumi.Input

	ToAccessTokenOutput() AccessTokenOutput
	ToAccessTokenOutputWithContext(ctx context.Context) AccessTokenOutput
}

func (*AccessToken) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessToken)(nil)).Elem()
}

func (i *AccessToken) ToAccessTokenOutput() AccessTokenOutput {
	return i.ToAccessTokenOutputWithContext(context.Background())
}

func (i *AccessToken) ToAccessTokenOutputWithContext(ctx context.Context) AccessTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessTokenOutput)
}

// AccessTokenArrayInput is an input type that accepts AccessTokenArray and AccessTokenArrayOutput values.
// You can construct a concrete instance of `AccessTokenArrayInput` via:
//
//	AccessTokenArray{ AccessTokenArgs{...} }
type AccessTokenArrayInput interface {
	pulumi.Input

	ToAccessTokenArrayOutput() AccessTokenArrayOutput
	ToAccessTokenArrayOutputWithContext(context.Context) AccessTokenArrayOutput
}

type AccessTokenArray []AccessTokenInput

func (AccessTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessToken)(nil)).Elem()
}

func (i AccessTokenArray) ToAccessTokenArrayOutput() AccessTokenArrayOutput {
	return i.ToAccessTokenArrayOutputWithContext(context.Background())
}

func (i AccessTokenArray) ToAccessTokenArrayOutputWithContext(ctx context.Context) AccessTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessTokenArrayOutput)
}

// AccessTokenMapInput is an input type that accepts AccessTokenMap and AccessTokenMapOutput values.
// You can construct a concrete instance of `AccessTokenMapInput` via:
//
//	AccessTokenMap{ "key": AccessTokenArgs{...} }
type AccessTokenMapInput interface {
	pulumi.Input

	ToAccessTokenMapOutput() AccessTokenMapOutput
	ToAccessTokenMapOutputWithContext(context.Context) AccessTokenMapOutput
}

type AccessTokenMap map[string]AccessTokenInput

func (AccessTokenMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessToken)(nil)).Elem()
}

func (i AccessTokenMap) ToAccessTokenMapOutput() AccessTokenMapOutput {
	return i.ToAccessTokenMapOutputWithContext(context.Background())
}

func (i AccessTokenMap) ToAccessTokenMapOutputWithContext(ctx context.Context) AccessTokenMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessTokenMapOutput)
}

type AccessTokenOutput struct{ *pulumi.OutputState }

func (AccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessToken)(nil)).Elem()
}

func (o AccessTokenOutput) ToAccessTokenOutput() AccessTokenOutput {
	return o
}

func (o AccessTokenOutput) ToAccessTokenOutputWithContext(ctx context.Context) AccessTokenOutput {
	return o
}

func (o AccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessToken) pulumi.StringOutput { return v.AccessToken }).(pulumi.StringOutput)
}

func (o AccessTokenOutput) AdminToken() AccessTokenAdminTokenPtrOutput {
	return o.ApplyT(func(v *AccessToken) AccessTokenAdminTokenPtrOutput { return v.AdminToken }).(AccessTokenAdminTokenPtrOutput)
}

func (o AccessTokenOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessToken) pulumi.StringPtrOutput { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o AccessTokenOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessToken) pulumi.StringOutput { return v.EndDate }).(pulumi.StringOutput)
}

func (o AccessTokenOutput) EndDateRelative() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessToken) pulumi.StringPtrOutput { return v.EndDateRelative }).(pulumi.StringPtrOutput)
}

func (o AccessTokenOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessToken) pulumi.StringArrayOutput { return v.Groups }).(pulumi.StringArrayOutput)
}

func (o AccessTokenOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessToken) pulumi.StringOutput { return v.RefreshToken }).(pulumi.StringOutput)
}

func (o AccessTokenOutput) Refreshable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessToken) pulumi.BoolPtrOutput { return v.Refreshable }).(pulumi.BoolPtrOutput)
}

func (o AccessTokenOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessToken) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type AccessTokenArrayOutput struct{ *pulumi.OutputState }

func (AccessTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessToken)(nil)).Elem()
}

func (o AccessTokenArrayOutput) ToAccessTokenArrayOutput() AccessTokenArrayOutput {
	return o
}

func (o AccessTokenArrayOutput) ToAccessTokenArrayOutputWithContext(ctx context.Context) AccessTokenArrayOutput {
	return o
}

func (o AccessTokenArrayOutput) Index(i pulumi.IntInput) AccessTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccessToken {
		return vs[0].([]*AccessToken)[vs[1].(int)]
	}).(AccessTokenOutput)
}

type AccessTokenMapOutput struct{ *pulumi.OutputState }

func (AccessTokenMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessToken)(nil)).Elem()
}

func (o AccessTokenMapOutput) ToAccessTokenMapOutput() AccessTokenMapOutput {
	return o
}

func (o AccessTokenMapOutput) ToAccessTokenMapOutputWithContext(ctx context.Context) AccessTokenMapOutput {
	return o
}

func (o AccessTokenMapOutput) MapIndex(k pulumi.StringInput) AccessTokenOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccessToken {
		return vs[0].(map[string]*AccessToken)[vs[1].(string)]
	}).(AccessTokenOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessTokenInput)(nil)).Elem(), &AccessToken{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessTokenArrayInput)(nil)).Elem(), AccessTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessTokenMapInput)(nil)).Elem(), AccessTokenMap{})
	pulumi.RegisterOutputType(AccessTokenOutput{})
	pulumi.RegisterOutputType(AccessTokenArrayOutput{})
	pulumi.RegisterOutputType(AccessTokenMapOutput{})
}
