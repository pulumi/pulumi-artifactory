// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a remote Gradle repository resource.
// Official documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Remote+Repositories#RemoteRepositories-Maven,Gradle,IvyandSBTRepositories).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-artifactory/sdk/v3/go/artifactory"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := artifactory.NewRemoteGradleRepository(ctx, "gradle-remote", &artifactory.RemoteGradleRepositoryArgs{
//				FetchJarsEagerly:             pulumi.Bool(true),
//				FetchSourcesEagerly:          pulumi.Bool(false),
//				Key:                          pulumi.String("gradle-remote-foo"),
//				RejectInvalidJars:            pulumi.Bool(true),
//				SuppressPomConsistencyChecks: pulumi.Bool(true),
//				Url:                          pulumi.String("https://repo1.maven.org/maven2/"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Remote repositories can be imported using their name, e.g.
//
// ```sh
//
//	$ pulumi import artifactory:index/remoteGradleRepository:RemoteGradleRepository gradle-remote gradle-remote
//
// ```
type RemoteGradleRepository struct {
	pulumi.CustomResourceState

	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth pulumi.BoolPtrOutput `pulumi:"allowAnyHostAuth"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs pulumi.IntPtrOutput `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolPtrOutput `pulumi:"blackedOut"`
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes pulumi.BoolPtrOutput `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests pulumi.BoolPtrOutput `pulumi:"bypassHeadRequests"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect pulumi.BoolPtrOutput `pulumi:"cdnRedirect"`
	// Client TLS certificate name.
	ClientTlsCertificate   pulumi.StringOutput                                `pulumi:"clientTlsCertificate"`
	ContentSynchronisation RemoteGradleRepositoryContentSynchronisationOutput `pulumi:"contentSynchronisation"`
	// Public description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect pulumi.BoolPtrOutput `pulumi:"downloadDirect"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrOutput `pulumi:"enableCookieManagement"`
	// List of comma-separated artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By
	// default no artifacts are excluded.
	ExcludesPattern pulumi.StringPtrOutput `pulumi:"excludesPattern"`
	// When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
	FetchJarsEagerly pulumi.BoolPtrOutput `pulumi:"fetchJarsEagerly"`
	// When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
	FetchSourcesEagerly pulumi.BoolPtrOutput `pulumi:"fetchSourcesEagerly"`
	// If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases pulumi.BoolPtrOutput `pulumi:"handleReleases"`
	// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots pulumi.BoolPtrOutput `pulumi:"handleSnapshots"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolPtrOutput `pulumi:"hardFail"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrOutput `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key pulumi.StringOutput `pulumi:"key"`
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'true'.
	ListRemoteFolderItems pulumi.BoolPtrOutput `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrOutput `pulumi:"localAddress"`
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs pulumi.IntPtrOutput `pulumi:"metadataRetrievalTimeoutSecs"`
	// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrOutput `pulumi:"mismatchingMimeTypesOverrideList"`
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrOutput `pulumi:"missedCachePeriodSeconds"`
	// Internal description.
	Notes pulumi.StringPtrOutput `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline     pulumi.BoolPtrOutput   `pulumi:"offline"`
	PackageType pulumi.StringOutput    `pulumi:"packageType"`
	Password    pulumi.StringPtrOutput `pulumi:"password"`
	// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
	// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
	// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
	PriorityResolution pulumi.BoolPtrOutput `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD". The attribute should only be used
	// if the repository is already assigned to the existing project. If not, the attribute will be ignored by Artifactory, but
	// will remain in the Terraform state, which will create state drift during the update.
	ProjectEnvironments pulumi.StringArrayOutput `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrOutput `pulumi:"projectKey"`
	// List of property set names
	PropertySets pulumi.StringArrayOutput `pulumi:"propertySets"`
	// Proxy key from Artifactory Proxies settings
	Proxy pulumi.StringPtrOutput `pulumi:"proxy"`
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams pulumi.StringPtrOutput `pulumi:"queryParams"`
	// Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
	RejectInvalidJars pulumi.BoolPtrOutput `pulumi:"rejectInvalidJars"`
	// Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are `generate-if-absent`, `fail`, `ignore-and-generate`, and `pass-thru`.
	RemoteRepoChecksumPolicyType pulumi.StringPtrOutput `pulumi:"remoteRepoChecksumPolicyType"`
	// Repository layout key for the remote layout mapping.
	RemoteRepoLayoutRef pulumi.StringPtrOutput `pulumi:"remoteRepoLayoutRef"`
	// Repository layout key for the local repository
	RepoLayoutRef pulumi.StringPtrOutput `pulumi:"repoLayoutRef"`
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds pulumi.IntPtrOutput `pulumi:"retrievalCachePeriodSeconds"`
	ShareConfiguration          pulumi.BoolOutput   `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrOutput `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolPtrOutput `pulumi:"storeArtifactsLocally"`
	// By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to `true`.
	SuppressPomConsistencyChecks pulumi.BoolPtrOutput `pulumi:"suppressPomConsistencyChecks"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties pulumi.BoolPtrOutput `pulumi:"synchronizeProperties"`
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrOutput `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// The remote repo URL.
	Url      pulumi.StringOutput    `pulumi:"url"`
	Username pulumi.StringPtrOutput `pulumi:"username"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrOutput `pulumi:"xrayIndex"`
}

// NewRemoteGradleRepository registers a new resource with the given unique name, arguments, and options.
func NewRemoteGradleRepository(ctx *pulumi.Context,
	name string, args *RemoteGradleRepositoryArgs, opts ...pulumi.ResourceOption) (*RemoteGradleRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	var resource RemoteGradleRepository
	err := ctx.RegisterResource("artifactory:index/remoteGradleRepository:RemoteGradleRepository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRemoteGradleRepository gets an existing RemoteGradleRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRemoteGradleRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RemoteGradleRepositoryState, opts ...pulumi.ResourceOption) (*RemoteGradleRepository, error) {
	var resource RemoteGradleRepository
	err := ctx.ReadResource("artifactory:index/remoteGradleRepository:RemoteGradleRepository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RemoteGradleRepository resources.
type remoteGradleRepositoryState struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth *bool `pulumi:"allowAnyHostAuth"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs *int `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut *bool `pulumi:"blackedOut"`
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes *bool `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests *bool `pulumi:"bypassHeadRequests"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect *bool `pulumi:"cdnRedirect"`
	// Client TLS certificate name.
	ClientTlsCertificate   *string                                       `pulumi:"clientTlsCertificate"`
	ContentSynchronisation *RemoteGradleRepositoryContentSynchronisation `pulumi:"contentSynchronisation"`
	// Public description.
	Description *string `pulumi:"description"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect *bool `pulumi:"downloadDirect"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement *bool `pulumi:"enableCookieManagement"`
	// List of comma-separated artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By
	// default no artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
	FetchJarsEagerly *bool `pulumi:"fetchJarsEagerly"`
	// When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
	FetchSourcesEagerly *bool `pulumi:"fetchSourcesEagerly"`
	// If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases *bool `pulumi:"handleReleases"`
	// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots *bool `pulumi:"handleSnapshots"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail *bool `pulumi:"hardFail"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern *string `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key *string `pulumi:"key"`
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'true'.
	ListRemoteFolderItems *bool `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress *string `pulumi:"localAddress"`
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs *int `pulumi:"metadataRetrievalTimeoutSecs"`
	// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList *string `pulumi:"mismatchingMimeTypesOverrideList"`
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds *int `pulumi:"missedCachePeriodSeconds"`
	// Internal description.
	Notes *string `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline     *bool   `pulumi:"offline"`
	PackageType *string `pulumi:"packageType"`
	Password    *string `pulumi:"password"`
	// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
	// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
	// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
	PriorityResolution *bool `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD". The attribute should only be used
	// if the repository is already assigned to the existing project. If not, the attribute will be ignored by Artifactory, but
	// will remain in the Terraform state, which will create state drift during the update.
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// List of property set names
	PropertySets []string `pulumi:"propertySets"`
	// Proxy key from Artifactory Proxies settings
	Proxy *string `pulumi:"proxy"`
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams *string `pulumi:"queryParams"`
	// Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
	RejectInvalidJars *bool `pulumi:"rejectInvalidJars"`
	// Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are `generate-if-absent`, `fail`, `ignore-and-generate`, and `pass-thru`.
	RemoteRepoChecksumPolicyType *string `pulumi:"remoteRepoChecksumPolicyType"`
	// Repository layout key for the remote layout mapping.
	RemoteRepoLayoutRef *string `pulumi:"remoteRepoLayoutRef"`
	// Repository layout key for the local repository
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds *int  `pulumi:"retrievalCachePeriodSeconds"`
	ShareConfiguration          *bool `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis *int `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally *bool `pulumi:"storeArtifactsLocally"`
	// By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to `true`.
	SuppressPomConsistencyChecks *bool `pulumi:"suppressPomConsistencyChecks"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties *bool `pulumi:"synchronizeProperties"`
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours *int `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// The remote repo URL.
	Url      *string `pulumi:"url"`
	Username *string `pulumi:"username"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

type RemoteGradleRepositoryState struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth pulumi.BoolPtrInput
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs pulumi.IntPtrInput
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolPtrInput
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect pulumi.BoolPtrInput
	// Client TLS certificate name.
	ClientTlsCertificate   pulumi.StringPtrInput
	ContentSynchronisation RemoteGradleRepositoryContentSynchronisationPtrInput
	// Public description.
	Description pulumi.StringPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect pulumi.BoolPtrInput
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrInput
	// List of comma-separated artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By
	// default no artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
	FetchJarsEagerly pulumi.BoolPtrInput
	// When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
	FetchSourcesEagerly pulumi.BoolPtrInput
	// If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases pulumi.BoolPtrInput
	// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots pulumi.BoolPtrInput
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolPtrInput
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrInput
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key pulumi.StringPtrInput
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'true'.
	ListRemoteFolderItems pulumi.BoolPtrInput
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrInput
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs pulumi.IntPtrInput
	// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrInput
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrInput
	// Internal description.
	Notes pulumi.StringPtrInput
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline     pulumi.BoolPtrInput
	PackageType pulumi.StringPtrInput
	Password    pulumi.StringPtrInput
	// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
	// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
	// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
	PriorityResolution pulumi.BoolPtrInput
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD". The attribute should only be used
	// if the repository is already assigned to the existing project. If not, the attribute will be ignored by Artifactory, but
	// will remain in the Terraform state, which will create state drift during the update.
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// List of property set names
	PropertySets pulumi.StringArrayInput
	// Proxy key from Artifactory Proxies settings
	Proxy pulumi.StringPtrInput
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams pulumi.StringPtrInput
	// Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
	RejectInvalidJars pulumi.BoolPtrInput
	// Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are `generate-if-absent`, `fail`, `ignore-and-generate`, and `pass-thru`.
	RemoteRepoChecksumPolicyType pulumi.StringPtrInput
	// Repository layout key for the remote layout mapping.
	RemoteRepoLayoutRef pulumi.StringPtrInput
	// Repository layout key for the local repository
	RepoLayoutRef pulumi.StringPtrInput
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds pulumi.IntPtrInput
	ShareConfiguration          pulumi.BoolPtrInput
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrInput
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolPtrInput
	// By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to `true`.
	SuppressPomConsistencyChecks pulumi.BoolPtrInput
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties pulumi.BoolPtrInput
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrInput
	// The remote repo URL.
	Url      pulumi.StringPtrInput
	Username pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (RemoteGradleRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*remoteGradleRepositoryState)(nil)).Elem()
}

type remoteGradleRepositoryArgs struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth *bool `pulumi:"allowAnyHostAuth"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs *int `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut *bool `pulumi:"blackedOut"`
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes *bool `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests *bool `pulumi:"bypassHeadRequests"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect *bool `pulumi:"cdnRedirect"`
	// Client TLS certificate name.
	ClientTlsCertificate   *string                                       `pulumi:"clientTlsCertificate"`
	ContentSynchronisation *RemoteGradleRepositoryContentSynchronisation `pulumi:"contentSynchronisation"`
	// Public description.
	Description *string `pulumi:"description"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect *bool `pulumi:"downloadDirect"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement *bool `pulumi:"enableCookieManagement"`
	// List of comma-separated artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By
	// default no artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
	FetchJarsEagerly *bool `pulumi:"fetchJarsEagerly"`
	// When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
	FetchSourcesEagerly *bool `pulumi:"fetchSourcesEagerly"`
	// If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases *bool `pulumi:"handleReleases"`
	// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots *bool `pulumi:"handleSnapshots"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail *bool `pulumi:"hardFail"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern *string `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key string `pulumi:"key"`
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'true'.
	ListRemoteFolderItems *bool `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress *string `pulumi:"localAddress"`
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs *int `pulumi:"metadataRetrievalTimeoutSecs"`
	// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList *string `pulumi:"mismatchingMimeTypesOverrideList"`
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds *int `pulumi:"missedCachePeriodSeconds"`
	// Internal description.
	Notes *string `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  *bool   `pulumi:"offline"`
	Password *string `pulumi:"password"`
	// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
	// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
	// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
	PriorityResolution *bool `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD". The attribute should only be used
	// if the repository is already assigned to the existing project. If not, the attribute will be ignored by Artifactory, but
	// will remain in the Terraform state, which will create state drift during the update.
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// List of property set names
	PropertySets []string `pulumi:"propertySets"`
	// Proxy key from Artifactory Proxies settings
	Proxy *string `pulumi:"proxy"`
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams *string `pulumi:"queryParams"`
	// Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
	RejectInvalidJars *bool `pulumi:"rejectInvalidJars"`
	// Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are `generate-if-absent`, `fail`, `ignore-and-generate`, and `pass-thru`.
	RemoteRepoChecksumPolicyType *string `pulumi:"remoteRepoChecksumPolicyType"`
	// Repository layout key for the remote layout mapping.
	RemoteRepoLayoutRef *string `pulumi:"remoteRepoLayoutRef"`
	// Repository layout key for the local repository
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds *int  `pulumi:"retrievalCachePeriodSeconds"`
	ShareConfiguration          *bool `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis *int `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally *bool `pulumi:"storeArtifactsLocally"`
	// By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to `true`.
	SuppressPomConsistencyChecks *bool `pulumi:"suppressPomConsistencyChecks"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties *bool `pulumi:"synchronizeProperties"`
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours *int `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// The remote repo URL.
	Url      string  `pulumi:"url"`
	Username *string `pulumi:"username"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

// The set of arguments for constructing a RemoteGradleRepository resource.
type RemoteGradleRepositoryArgs struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth pulumi.BoolPtrInput
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs pulumi.IntPtrInput
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolPtrInput
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect pulumi.BoolPtrInput
	// Client TLS certificate name.
	ClientTlsCertificate   pulumi.StringPtrInput
	ContentSynchronisation RemoteGradleRepositoryContentSynchronisationPtrInput
	// Public description.
	Description pulumi.StringPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect pulumi.BoolPtrInput
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrInput
	// List of comma-separated artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By
	// default no artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
	FetchJarsEagerly pulumi.BoolPtrInput
	// When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
	FetchSourcesEagerly pulumi.BoolPtrInput
	// If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases pulumi.BoolPtrInput
	// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots pulumi.BoolPtrInput
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolPtrInput
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrInput
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key pulumi.StringInput
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'true'.
	ListRemoteFolderItems pulumi.BoolPtrInput
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrInput
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs pulumi.IntPtrInput
	// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrInput
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrInput
	// Internal description.
	Notes pulumi.StringPtrInput
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  pulumi.BoolPtrInput
	Password pulumi.StringPtrInput
	// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
	// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
	// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
	PriorityResolution pulumi.BoolPtrInput
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD". The attribute should only be used
	// if the repository is already assigned to the existing project. If not, the attribute will be ignored by Artifactory, but
	// will remain in the Terraform state, which will create state drift during the update.
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// List of property set names
	PropertySets pulumi.StringArrayInput
	// Proxy key from Artifactory Proxies settings
	Proxy pulumi.StringPtrInput
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams pulumi.StringPtrInput
	// Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
	RejectInvalidJars pulumi.BoolPtrInput
	// Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are `generate-if-absent`, `fail`, `ignore-and-generate`, and `pass-thru`.
	RemoteRepoChecksumPolicyType pulumi.StringPtrInput
	// Repository layout key for the remote layout mapping.
	RemoteRepoLayoutRef pulumi.StringPtrInput
	// Repository layout key for the local repository
	RepoLayoutRef pulumi.StringPtrInput
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds pulumi.IntPtrInput
	ShareConfiguration          pulumi.BoolPtrInput
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrInput
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolPtrInput
	// By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to `true`.
	SuppressPomConsistencyChecks pulumi.BoolPtrInput
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties pulumi.BoolPtrInput
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrInput
	// The remote repo URL.
	Url      pulumi.StringInput
	Username pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (RemoteGradleRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*remoteGradleRepositoryArgs)(nil)).Elem()
}

type RemoteGradleRepositoryInput interface {
	pulumi.Input

	ToRemoteGradleRepositoryOutput() RemoteGradleRepositoryOutput
	ToRemoteGradleRepositoryOutputWithContext(ctx context.Context) RemoteGradleRepositoryOutput
}

func (*RemoteGradleRepository) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteGradleRepository)(nil)).Elem()
}

func (i *RemoteGradleRepository) ToRemoteGradleRepositoryOutput() RemoteGradleRepositoryOutput {
	return i.ToRemoteGradleRepositoryOutputWithContext(context.Background())
}

func (i *RemoteGradleRepository) ToRemoteGradleRepositoryOutputWithContext(ctx context.Context) RemoteGradleRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteGradleRepositoryOutput)
}

// RemoteGradleRepositoryArrayInput is an input type that accepts RemoteGradleRepositoryArray and RemoteGradleRepositoryArrayOutput values.
// You can construct a concrete instance of `RemoteGradleRepositoryArrayInput` via:
//
//	RemoteGradleRepositoryArray{ RemoteGradleRepositoryArgs{...} }
type RemoteGradleRepositoryArrayInput interface {
	pulumi.Input

	ToRemoteGradleRepositoryArrayOutput() RemoteGradleRepositoryArrayOutput
	ToRemoteGradleRepositoryArrayOutputWithContext(context.Context) RemoteGradleRepositoryArrayOutput
}

type RemoteGradleRepositoryArray []RemoteGradleRepositoryInput

func (RemoteGradleRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemoteGradleRepository)(nil)).Elem()
}

func (i RemoteGradleRepositoryArray) ToRemoteGradleRepositoryArrayOutput() RemoteGradleRepositoryArrayOutput {
	return i.ToRemoteGradleRepositoryArrayOutputWithContext(context.Background())
}

func (i RemoteGradleRepositoryArray) ToRemoteGradleRepositoryArrayOutputWithContext(ctx context.Context) RemoteGradleRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteGradleRepositoryArrayOutput)
}

// RemoteGradleRepositoryMapInput is an input type that accepts RemoteGradleRepositoryMap and RemoteGradleRepositoryMapOutput values.
// You can construct a concrete instance of `RemoteGradleRepositoryMapInput` via:
//
//	RemoteGradleRepositoryMap{ "key": RemoteGradleRepositoryArgs{...} }
type RemoteGradleRepositoryMapInput interface {
	pulumi.Input

	ToRemoteGradleRepositoryMapOutput() RemoteGradleRepositoryMapOutput
	ToRemoteGradleRepositoryMapOutputWithContext(context.Context) RemoteGradleRepositoryMapOutput
}

type RemoteGradleRepositoryMap map[string]RemoteGradleRepositoryInput

func (RemoteGradleRepositoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemoteGradleRepository)(nil)).Elem()
}

func (i RemoteGradleRepositoryMap) ToRemoteGradleRepositoryMapOutput() RemoteGradleRepositoryMapOutput {
	return i.ToRemoteGradleRepositoryMapOutputWithContext(context.Background())
}

func (i RemoteGradleRepositoryMap) ToRemoteGradleRepositoryMapOutputWithContext(ctx context.Context) RemoteGradleRepositoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteGradleRepositoryMapOutput)
}

type RemoteGradleRepositoryOutput struct{ *pulumi.OutputState }

func (RemoteGradleRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteGradleRepository)(nil)).Elem()
}

func (o RemoteGradleRepositoryOutput) ToRemoteGradleRepositoryOutput() RemoteGradleRepositoryOutput {
	return o
}

func (o RemoteGradleRepositoryOutput) ToRemoteGradleRepositoryOutputWithContext(ctx context.Context) RemoteGradleRepositoryOutput {
	return o
}

// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
// other host.
func (o RemoteGradleRepositoryOutput) AllowAnyHostAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.AllowAnyHostAuth }).(pulumi.BoolPtrOutput)
}

// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
// offline.
func (o RemoteGradleRepositoryOutput) AssumedOfflinePeriodSecs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.IntPtrOutput { return v.AssumedOfflinePeriodSecs }).(pulumi.IntPtrOutput)
}

// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
// resolution.
func (o RemoteGradleRepositoryOutput) BlackedOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.BlackedOut }).(pulumi.BoolPtrOutput)
}

// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
// to the override list 'mismatching_mime_types_override_list'.
func (o RemoteGradleRepositoryOutput) BlockMismatchingMimeTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.BlockMismatchingMimeTypes }).(pulumi.BoolPtrOutput)
}

// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
func (o RemoteGradleRepositoryOutput) BypassHeadRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.BypassHeadRequests }).(pulumi.BoolPtrOutput)
}

// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
func (o RemoteGradleRepositoryOutput) CdnRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.CdnRedirect }).(pulumi.BoolPtrOutput)
}

// Client TLS certificate name.
func (o RemoteGradleRepositoryOutput) ClientTlsCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringOutput { return v.ClientTlsCertificate }).(pulumi.StringOutput)
}

func (o RemoteGradleRepositoryOutput) ContentSynchronisation() RemoteGradleRepositoryContentSynchronisationOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) RemoteGradleRepositoryContentSynchronisationOutput {
		return v.ContentSynchronisation
	}).(RemoteGradleRepositoryContentSynchronisationOutput)
}

// Public description.
func (o RemoteGradleRepositoryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
func (o RemoteGradleRepositoryOutput) DownloadDirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.DownloadDirect }).(pulumi.BoolPtrOutput)
}

// Enables cookie management if the remote repository uses cookies to manage client state.
func (o RemoteGradleRepositoryOutput) EnableCookieManagement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.EnableCookieManagement }).(pulumi.BoolPtrOutput)
}

// List of comma-separated artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By
// default no artifacts are excluded.
func (o RemoteGradleRepositoryOutput) ExcludesPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringPtrOutput { return v.ExcludesPattern }).(pulumi.StringPtrOutput)
}

// When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
func (o RemoteGradleRepositoryOutput) FetchJarsEagerly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.FetchJarsEagerly }).(pulumi.BoolPtrOutput)
}

// When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
func (o RemoteGradleRepositoryOutput) FetchSourcesEagerly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.FetchSourcesEagerly }).(pulumi.BoolPtrOutput)
}

// If set, Artifactory allows you to deploy release artifacts into this repository.
func (o RemoteGradleRepositoryOutput) HandleReleases() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.HandleReleases }).(pulumi.BoolPtrOutput)
}

// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
func (o RemoteGradleRepositoryOutput) HandleSnapshots() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.HandleSnapshots }).(pulumi.BoolPtrOutput)
}

// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
// communicate with this repository.
func (o RemoteGradleRepositoryOutput) HardFail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.HardFail }).(pulumi.BoolPtrOutput)
}

// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
func (o RemoteGradleRepositoryOutput) IncludesPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringPtrOutput { return v.IncludesPattern }).(pulumi.StringPtrOutput)
}

// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
// contain spaces or special characters.
func (o RemoteGradleRepositoryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
// the 'Retrieval Cache Period'. Default value is 'true'.
func (o RemoteGradleRepositoryOutput) ListRemoteFolderItems() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.ListRemoteFolderItems }).(pulumi.BoolPtrOutput)
}

// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
// multiple network interfaces.
func (o RemoteGradleRepositoryOutput) LocalAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringPtrOutput { return v.LocalAddress }).(pulumi.StringPtrOutput)
}

// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
// the remote before serving locally cached artifact or fail the request.
func (o RemoteGradleRepositoryOutput) MetadataRetrievalTimeoutSecs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.IntPtrOutput { return v.MetadataRetrievalTimeoutSecs }).(pulumi.IntPtrOutput)
}

// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
// 'application/json,application/xml'. Default value is empty.
func (o RemoteGradleRepositoryOutput) MismatchingMimeTypesOverrideList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringPtrOutput { return v.MismatchingMimeTypesOverrideList }).(pulumi.StringPtrOutput)
}

// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
// found). A value of 0 indicates no caching.
func (o RemoteGradleRepositoryOutput) MissedCachePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.IntPtrOutput { return v.MissedCachePeriodSeconds }).(pulumi.IntPtrOutput)
}

// Internal description.
func (o RemoteGradleRepositoryOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringPtrOutput { return v.Notes }).(pulumi.StringPtrOutput)
}

// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
func (o RemoteGradleRepositoryOutput) Offline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.Offline }).(pulumi.BoolPtrOutput)
}

func (o RemoteGradleRepositoryOutput) PackageType() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringOutput { return v.PackageType }).(pulumi.StringOutput)
}

func (o RemoteGradleRepositoryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
func (o RemoteGradleRepositoryOutput) PriorityResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.PriorityResolution }).(pulumi.BoolPtrOutput)
}

// Project environment for assigning this repository to. Allow values: "DEV" or "PROD". The attribute should only be used
// if the repository is already assigned to the existing project. If not, the attribute will be ignored by Artifactory, but
// will remain in the Terraform state, which will create state drift during the update.
func (o RemoteGradleRepositoryOutput) ProjectEnvironments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringArrayOutput { return v.ProjectEnvironments }).(pulumi.StringArrayOutput)
}

// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
func (o RemoteGradleRepositoryOutput) ProjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringPtrOutput { return v.ProjectKey }).(pulumi.StringPtrOutput)
}

// List of property set names
func (o RemoteGradleRepositoryOutput) PropertySets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringArrayOutput { return v.PropertySets }).(pulumi.StringArrayOutput)
}

// Proxy key from Artifactory Proxies settings
func (o RemoteGradleRepositoryOutput) Proxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringPtrOutput { return v.Proxy }).(pulumi.StringPtrOutput)
}

// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
// `param1=val1&param2=val2&param3=val3`
func (o RemoteGradleRepositoryOutput) QueryParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringPtrOutput { return v.QueryParams }).(pulumi.StringPtrOutput)
}

// Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
func (o RemoteGradleRepositoryOutput) RejectInvalidJars() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.RejectInvalidJars }).(pulumi.BoolPtrOutput)
}

// Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are `generate-if-absent`, `fail`, `ignore-and-generate`, and `pass-thru`.
func (o RemoteGradleRepositoryOutput) RemoteRepoChecksumPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringPtrOutput { return v.RemoteRepoChecksumPolicyType }).(pulumi.StringPtrOutput)
}

// Repository layout key for the remote layout mapping.
func (o RemoteGradleRepositoryOutput) RemoteRepoLayoutRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringPtrOutput { return v.RemoteRepoLayoutRef }).(pulumi.StringPtrOutput)
}

// Repository layout key for the local repository
func (o RemoteGradleRepositoryOutput) RepoLayoutRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringPtrOutput { return v.RepoLayoutRef }).(pulumi.StringPtrOutput)
}

// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
// before checking for newer versions on remote server. A value of 0 indicates no caching.
func (o RemoteGradleRepositoryOutput) RetrievalCachePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.IntPtrOutput { return v.RetrievalCachePeriodSeconds }).(pulumi.IntPtrOutput)
}

func (o RemoteGradleRepositoryOutput) ShareConfiguration() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolOutput { return v.ShareConfiguration }).(pulumi.BoolOutput)
}

// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
// operation is considered a retrieval failure.
func (o RemoteGradleRepositoryOutput) SocketTimeoutMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.IntPtrOutput { return v.SocketTimeoutMillis }).(pulumi.IntPtrOutput)
}

// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
// servers.
func (o RemoteGradleRepositoryOutput) StoreArtifactsLocally() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.StoreArtifactsLocally }).(pulumi.BoolPtrOutput)
}

// By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to `true`.
func (o RemoteGradleRepositoryOutput) SuppressPomConsistencyChecks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.SuppressPomConsistencyChecks }).(pulumi.BoolPtrOutput)
}

// When set, remote artifacts are fetched along with their properties.
func (o RemoteGradleRepositoryOutput) SynchronizeProperties() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.SynchronizeProperties }).(pulumi.BoolPtrOutput)
}

// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
func (o RemoteGradleRepositoryOutput) UnusedArtifactsCleanupPeriodHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.IntPtrOutput { return v.UnusedArtifactsCleanupPeriodHours }).(pulumi.IntPtrOutput)
}

// The remote repo URL.
func (o RemoteGradleRepositoryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

func (o RemoteGradleRepositoryOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
// Xray settings.
func (o RemoteGradleRepositoryOutput) XrayIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteGradleRepository) pulumi.BoolPtrOutput { return v.XrayIndex }).(pulumi.BoolPtrOutput)
}

type RemoteGradleRepositoryArrayOutput struct{ *pulumi.OutputState }

func (RemoteGradleRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemoteGradleRepository)(nil)).Elem()
}

func (o RemoteGradleRepositoryArrayOutput) ToRemoteGradleRepositoryArrayOutput() RemoteGradleRepositoryArrayOutput {
	return o
}

func (o RemoteGradleRepositoryArrayOutput) ToRemoteGradleRepositoryArrayOutputWithContext(ctx context.Context) RemoteGradleRepositoryArrayOutput {
	return o
}

func (o RemoteGradleRepositoryArrayOutput) Index(i pulumi.IntInput) RemoteGradleRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RemoteGradleRepository {
		return vs[0].([]*RemoteGradleRepository)[vs[1].(int)]
	}).(RemoteGradleRepositoryOutput)
}

type RemoteGradleRepositoryMapOutput struct{ *pulumi.OutputState }

func (RemoteGradleRepositoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemoteGradleRepository)(nil)).Elem()
}

func (o RemoteGradleRepositoryMapOutput) ToRemoteGradleRepositoryMapOutput() RemoteGradleRepositoryMapOutput {
	return o
}

func (o RemoteGradleRepositoryMapOutput) ToRemoteGradleRepositoryMapOutputWithContext(ctx context.Context) RemoteGradleRepositoryMapOutput {
	return o
}

func (o RemoteGradleRepositoryMapOutput) MapIndex(k pulumi.StringInput) RemoteGradleRepositoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RemoteGradleRepository {
		return vs[0].(map[string]*RemoteGradleRepository)[vs[1].(string)]
	}).(RemoteGradleRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteGradleRepositoryInput)(nil)).Elem(), &RemoteGradleRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteGradleRepositoryArrayInput)(nil)).Elem(), RemoteGradleRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteGradleRepositoryMapInput)(nil)).Elem(), RemoteGradleRepositoryMap{})
	pulumi.RegisterOutputType(RemoteGradleRepositoryOutput{})
	pulumi.RegisterOutputType(RemoteGradleRepositoryArrayOutput{})
	pulumi.RegisterOutputType(RemoteGradleRepositoryMapOutput{})
}
