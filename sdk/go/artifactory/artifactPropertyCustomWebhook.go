// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-artifactory/sdk/v4/go/artifactory/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Artifactory custom webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-artifactory/sdk/v4/go/artifactory"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := artifactory.NewLocalGenericRepository(ctx, "my-generic-local", &artifactory.LocalGenericRepositoryArgs{
//				Key: pulumi.String("my-generic-local"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = artifactory.NewArtifactPropertyCustomWebhook(ctx, "artifact-custom-webhook", &artifactory.ArtifactPropertyCustomWebhookArgs{
//				Key: pulumi.String("artifact-property-custom-webhook"),
//				EventTypes: pulumi.StringArray{
//					pulumi.String("added"),
//					pulumi.String("deleted"),
//				},
//				Criteria: &artifactory.ArtifactPropertyCustomWebhookCriteriaArgs{
//					AnyLocal:  pulumi.Bool(true),
//					AnyRemote: pulumi.Bool(false),
//					RepoKeys: pulumi.StringArray{
//						my_generic_local.Key,
//					},
//					IncludePatterns: pulumi.StringArray{
//						pulumi.String("foo/**"),
//					},
//					ExcludePatterns: pulumi.StringArray{
//						pulumi.String("bar/**"),
//					},
//				},
//				Handlers: artifactory.ArtifactPropertyCustomWebhookHandlerArray{
//					&artifactory.ArtifactPropertyCustomWebhookHandlerArgs{
//						Url: pulumi.String("https://tempurl.org"),
//						Secrets: pulumi.StringMap{
//							"secretName1": pulumi.String("value1"),
//							"secretName2": pulumi.String("value2"),
//						},
//						HttpHeaders: pulumi.StringMap{
//							"headerName1": pulumi.String("value1"),
//							"headerName2": pulumi.String("value2"),
//						},
//						Payload: pulumi.String("{ \"ref\": \"main\" , \"inputs\": { \"artifact_path\": \"test-repo/repo-path\" } }"),
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				my_generic_local,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ArtifactPropertyCustomWebhook struct {
	pulumi.CustomResourceState

	// Specifies where the webhook will be applied on which repositories.
	Criteria ArtifactPropertyCustomWebhookCriteriaOutput `pulumi:"criteria"`
	// Webhook description. Max length 1000 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Status of webhook. Default to `true`.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: `added`, `deleted`.
	EventTypes pulumi.StringArrayOutput `pulumi:"eventTypes"`
	// At least one is required.
	Handlers ArtifactPropertyCustomWebhookHandlerArrayOutput `pulumi:"handlers"`
	// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
	Key pulumi.StringOutput `pulumi:"key"`
}

// NewArtifactPropertyCustomWebhook registers a new resource with the given unique name, arguments, and options.
func NewArtifactPropertyCustomWebhook(ctx *pulumi.Context,
	name string, args *ArtifactPropertyCustomWebhookArgs, opts ...pulumi.ResourceOption) (*ArtifactPropertyCustomWebhook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Criteria == nil {
		return nil, errors.New("invalid value for required argument 'Criteria'")
	}
	if args.EventTypes == nil {
		return nil, errors.New("invalid value for required argument 'EventTypes'")
	}
	if args.Handlers == nil {
		return nil, errors.New("invalid value for required argument 'Handlers'")
	}
	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ArtifactPropertyCustomWebhook
	err := ctx.RegisterResource("artifactory:index/artifactPropertyCustomWebhook:ArtifactPropertyCustomWebhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetArtifactPropertyCustomWebhook gets an existing ArtifactPropertyCustomWebhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetArtifactPropertyCustomWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ArtifactPropertyCustomWebhookState, opts ...pulumi.ResourceOption) (*ArtifactPropertyCustomWebhook, error) {
	var resource ArtifactPropertyCustomWebhook
	err := ctx.ReadResource("artifactory:index/artifactPropertyCustomWebhook:ArtifactPropertyCustomWebhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ArtifactPropertyCustomWebhook resources.
type artifactPropertyCustomWebhookState struct {
	// Specifies where the webhook will be applied on which repositories.
	Criteria *ArtifactPropertyCustomWebhookCriteria `pulumi:"criteria"`
	// Webhook description. Max length 1000 characters.
	Description *string `pulumi:"description"`
	// Status of webhook. Default to `true`.
	Enabled *bool `pulumi:"enabled"`
	// List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: `added`, `deleted`.
	EventTypes []string `pulumi:"eventTypes"`
	// At least one is required.
	Handlers []ArtifactPropertyCustomWebhookHandler `pulumi:"handlers"`
	// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
	Key *string `pulumi:"key"`
}

type ArtifactPropertyCustomWebhookState struct {
	// Specifies where the webhook will be applied on which repositories.
	Criteria ArtifactPropertyCustomWebhookCriteriaPtrInput
	// Webhook description. Max length 1000 characters.
	Description pulumi.StringPtrInput
	// Status of webhook. Default to `true`.
	Enabled pulumi.BoolPtrInput
	// List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: `added`, `deleted`.
	EventTypes pulumi.StringArrayInput
	// At least one is required.
	Handlers ArtifactPropertyCustomWebhookHandlerArrayInput
	// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
	Key pulumi.StringPtrInput
}

func (ArtifactPropertyCustomWebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*artifactPropertyCustomWebhookState)(nil)).Elem()
}

type artifactPropertyCustomWebhookArgs struct {
	// Specifies where the webhook will be applied on which repositories.
	Criteria ArtifactPropertyCustomWebhookCriteria `pulumi:"criteria"`
	// Webhook description. Max length 1000 characters.
	Description *string `pulumi:"description"`
	// Status of webhook. Default to `true`.
	Enabled *bool `pulumi:"enabled"`
	// List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: `added`, `deleted`.
	EventTypes []string `pulumi:"eventTypes"`
	// At least one is required.
	Handlers []ArtifactPropertyCustomWebhookHandler `pulumi:"handlers"`
	// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
	Key string `pulumi:"key"`
}

// The set of arguments for constructing a ArtifactPropertyCustomWebhook resource.
type ArtifactPropertyCustomWebhookArgs struct {
	// Specifies where the webhook will be applied on which repositories.
	Criteria ArtifactPropertyCustomWebhookCriteriaInput
	// Webhook description. Max length 1000 characters.
	Description pulumi.StringPtrInput
	// Status of webhook. Default to `true`.
	Enabled pulumi.BoolPtrInput
	// List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: `added`, `deleted`.
	EventTypes pulumi.StringArrayInput
	// At least one is required.
	Handlers ArtifactPropertyCustomWebhookHandlerArrayInput
	// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
	Key pulumi.StringInput
}

func (ArtifactPropertyCustomWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*artifactPropertyCustomWebhookArgs)(nil)).Elem()
}

type ArtifactPropertyCustomWebhookInput interface {
	pulumi.Input

	ToArtifactPropertyCustomWebhookOutput() ArtifactPropertyCustomWebhookOutput
	ToArtifactPropertyCustomWebhookOutputWithContext(ctx context.Context) ArtifactPropertyCustomWebhookOutput
}

func (*ArtifactPropertyCustomWebhook) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactPropertyCustomWebhook)(nil)).Elem()
}

func (i *ArtifactPropertyCustomWebhook) ToArtifactPropertyCustomWebhookOutput() ArtifactPropertyCustomWebhookOutput {
	return i.ToArtifactPropertyCustomWebhookOutputWithContext(context.Background())
}

func (i *ArtifactPropertyCustomWebhook) ToArtifactPropertyCustomWebhookOutputWithContext(ctx context.Context) ArtifactPropertyCustomWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactPropertyCustomWebhookOutput)
}

func (i *ArtifactPropertyCustomWebhook) ToOutput(ctx context.Context) pulumix.Output[*ArtifactPropertyCustomWebhook] {
	return pulumix.Output[*ArtifactPropertyCustomWebhook]{
		OutputState: i.ToArtifactPropertyCustomWebhookOutputWithContext(ctx).OutputState,
	}
}

// ArtifactPropertyCustomWebhookArrayInput is an input type that accepts ArtifactPropertyCustomWebhookArray and ArtifactPropertyCustomWebhookArrayOutput values.
// You can construct a concrete instance of `ArtifactPropertyCustomWebhookArrayInput` via:
//
//	ArtifactPropertyCustomWebhookArray{ ArtifactPropertyCustomWebhookArgs{...} }
type ArtifactPropertyCustomWebhookArrayInput interface {
	pulumi.Input

	ToArtifactPropertyCustomWebhookArrayOutput() ArtifactPropertyCustomWebhookArrayOutput
	ToArtifactPropertyCustomWebhookArrayOutputWithContext(context.Context) ArtifactPropertyCustomWebhookArrayOutput
}

type ArtifactPropertyCustomWebhookArray []ArtifactPropertyCustomWebhookInput

func (ArtifactPropertyCustomWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ArtifactPropertyCustomWebhook)(nil)).Elem()
}

func (i ArtifactPropertyCustomWebhookArray) ToArtifactPropertyCustomWebhookArrayOutput() ArtifactPropertyCustomWebhookArrayOutput {
	return i.ToArtifactPropertyCustomWebhookArrayOutputWithContext(context.Background())
}

func (i ArtifactPropertyCustomWebhookArray) ToArtifactPropertyCustomWebhookArrayOutputWithContext(ctx context.Context) ArtifactPropertyCustomWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactPropertyCustomWebhookArrayOutput)
}

func (i ArtifactPropertyCustomWebhookArray) ToOutput(ctx context.Context) pulumix.Output[[]*ArtifactPropertyCustomWebhook] {
	return pulumix.Output[[]*ArtifactPropertyCustomWebhook]{
		OutputState: i.ToArtifactPropertyCustomWebhookArrayOutputWithContext(ctx).OutputState,
	}
}

// ArtifactPropertyCustomWebhookMapInput is an input type that accepts ArtifactPropertyCustomWebhookMap and ArtifactPropertyCustomWebhookMapOutput values.
// You can construct a concrete instance of `ArtifactPropertyCustomWebhookMapInput` via:
//
//	ArtifactPropertyCustomWebhookMap{ "key": ArtifactPropertyCustomWebhookArgs{...} }
type ArtifactPropertyCustomWebhookMapInput interface {
	pulumi.Input

	ToArtifactPropertyCustomWebhookMapOutput() ArtifactPropertyCustomWebhookMapOutput
	ToArtifactPropertyCustomWebhookMapOutputWithContext(context.Context) ArtifactPropertyCustomWebhookMapOutput
}

type ArtifactPropertyCustomWebhookMap map[string]ArtifactPropertyCustomWebhookInput

func (ArtifactPropertyCustomWebhookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ArtifactPropertyCustomWebhook)(nil)).Elem()
}

func (i ArtifactPropertyCustomWebhookMap) ToArtifactPropertyCustomWebhookMapOutput() ArtifactPropertyCustomWebhookMapOutput {
	return i.ToArtifactPropertyCustomWebhookMapOutputWithContext(context.Background())
}

func (i ArtifactPropertyCustomWebhookMap) ToArtifactPropertyCustomWebhookMapOutputWithContext(ctx context.Context) ArtifactPropertyCustomWebhookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactPropertyCustomWebhookMapOutput)
}

func (i ArtifactPropertyCustomWebhookMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*ArtifactPropertyCustomWebhook] {
	return pulumix.Output[map[string]*ArtifactPropertyCustomWebhook]{
		OutputState: i.ToArtifactPropertyCustomWebhookMapOutputWithContext(ctx).OutputState,
	}
}

type ArtifactPropertyCustomWebhookOutput struct{ *pulumi.OutputState }

func (ArtifactPropertyCustomWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactPropertyCustomWebhook)(nil)).Elem()
}

func (o ArtifactPropertyCustomWebhookOutput) ToArtifactPropertyCustomWebhookOutput() ArtifactPropertyCustomWebhookOutput {
	return o
}

func (o ArtifactPropertyCustomWebhookOutput) ToArtifactPropertyCustomWebhookOutputWithContext(ctx context.Context) ArtifactPropertyCustomWebhookOutput {
	return o
}

func (o ArtifactPropertyCustomWebhookOutput) ToOutput(ctx context.Context) pulumix.Output[*ArtifactPropertyCustomWebhook] {
	return pulumix.Output[*ArtifactPropertyCustomWebhook]{
		OutputState: o.OutputState,
	}
}

// Specifies where the webhook will be applied on which repositories.
func (o ArtifactPropertyCustomWebhookOutput) Criteria() ArtifactPropertyCustomWebhookCriteriaOutput {
	return o.ApplyT(func(v *ArtifactPropertyCustomWebhook) ArtifactPropertyCustomWebhookCriteriaOutput { return v.Criteria }).(ArtifactPropertyCustomWebhookCriteriaOutput)
}

// Webhook description. Max length 1000 characters.
func (o ArtifactPropertyCustomWebhookOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactPropertyCustomWebhook) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Status of webhook. Default to `true`.
func (o ArtifactPropertyCustomWebhookOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ArtifactPropertyCustomWebhook) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: `added`, `deleted`.
func (o ArtifactPropertyCustomWebhookOutput) EventTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ArtifactPropertyCustomWebhook) pulumi.StringArrayOutput { return v.EventTypes }).(pulumi.StringArrayOutput)
}

// At least one is required.
func (o ArtifactPropertyCustomWebhookOutput) Handlers() ArtifactPropertyCustomWebhookHandlerArrayOutput {
	return o.ApplyT(func(v *ArtifactPropertyCustomWebhook) ArtifactPropertyCustomWebhookHandlerArrayOutput {
		return v.Handlers
	}).(ArtifactPropertyCustomWebhookHandlerArrayOutput)
}

// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
func (o ArtifactPropertyCustomWebhookOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactPropertyCustomWebhook) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

type ArtifactPropertyCustomWebhookArrayOutput struct{ *pulumi.OutputState }

func (ArtifactPropertyCustomWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ArtifactPropertyCustomWebhook)(nil)).Elem()
}

func (o ArtifactPropertyCustomWebhookArrayOutput) ToArtifactPropertyCustomWebhookArrayOutput() ArtifactPropertyCustomWebhookArrayOutput {
	return o
}

func (o ArtifactPropertyCustomWebhookArrayOutput) ToArtifactPropertyCustomWebhookArrayOutputWithContext(ctx context.Context) ArtifactPropertyCustomWebhookArrayOutput {
	return o
}

func (o ArtifactPropertyCustomWebhookArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*ArtifactPropertyCustomWebhook] {
	return pulumix.Output[[]*ArtifactPropertyCustomWebhook]{
		OutputState: o.OutputState,
	}
}

func (o ArtifactPropertyCustomWebhookArrayOutput) Index(i pulumi.IntInput) ArtifactPropertyCustomWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ArtifactPropertyCustomWebhook {
		return vs[0].([]*ArtifactPropertyCustomWebhook)[vs[1].(int)]
	}).(ArtifactPropertyCustomWebhookOutput)
}

type ArtifactPropertyCustomWebhookMapOutput struct{ *pulumi.OutputState }

func (ArtifactPropertyCustomWebhookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ArtifactPropertyCustomWebhook)(nil)).Elem()
}

func (o ArtifactPropertyCustomWebhookMapOutput) ToArtifactPropertyCustomWebhookMapOutput() ArtifactPropertyCustomWebhookMapOutput {
	return o
}

func (o ArtifactPropertyCustomWebhookMapOutput) ToArtifactPropertyCustomWebhookMapOutputWithContext(ctx context.Context) ArtifactPropertyCustomWebhookMapOutput {
	return o
}

func (o ArtifactPropertyCustomWebhookMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*ArtifactPropertyCustomWebhook] {
	return pulumix.Output[map[string]*ArtifactPropertyCustomWebhook]{
		OutputState: o.OutputState,
	}
}

func (o ArtifactPropertyCustomWebhookMapOutput) MapIndex(k pulumi.StringInput) ArtifactPropertyCustomWebhookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ArtifactPropertyCustomWebhook {
		return vs[0].(map[string]*ArtifactPropertyCustomWebhook)[vs[1].(string)]
	}).(ArtifactPropertyCustomWebhookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ArtifactPropertyCustomWebhookInput)(nil)).Elem(), &ArtifactPropertyCustomWebhook{})
	pulumi.RegisterInputType(reflect.TypeOf((*ArtifactPropertyCustomWebhookArrayInput)(nil)).Elem(), ArtifactPropertyCustomWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ArtifactPropertyCustomWebhookMapInput)(nil)).Elem(), ArtifactPropertyCustomWebhookMap{})
	pulumi.RegisterOutputType(ArtifactPropertyCustomWebhookOutput{})
	pulumi.RegisterOutputType(ArtifactPropertyCustomWebhookArrayOutput{})
	pulumi.RegisterOutputType(ArtifactPropertyCustomWebhookMapOutput{})
}
