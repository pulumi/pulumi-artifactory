// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Artifactory Local Repository Resource
//
// Provides an Artifactory local repository resource. This can be used to create and manage Artifactory local repositories.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := artifactory.NewLocalRepository(ctx, "my-local", &artifactory.LocalRepositoryArgs{
// 			Key:         pulumi.String("my-local"),
// 			PackageType: pulumi.String("npm"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Local repositories can be imported using their name, e.g.
//
// ```sh
//  $ pulumi import artifactory:index/localRepository:LocalRepository my-local my-local
// ```
type LocalRepository struct {
	pulumi.CustomResourceState

	ArchiveBrowsingEnabled       pulumi.BoolPtrOutput     `pulumi:"archiveBrowsingEnabled"`
	BlackedOut                   pulumi.BoolOutput        `pulumi:"blackedOut"`
	CalculateYumMetadata         pulumi.BoolPtrOutput     `pulumi:"calculateYumMetadata"`
	ChecksumPolicyType           pulumi.StringOutput      `pulumi:"checksumPolicyType"`
	DebianTrivialLayout          pulumi.BoolPtrOutput     `pulumi:"debianTrivialLayout"`
	Description                  pulumi.StringPtrOutput   `pulumi:"description"`
	DockerApiVersion             pulumi.StringOutput      `pulumi:"dockerApiVersion"`
	EnableFileListsIndexing      pulumi.BoolOutput        `pulumi:"enableFileListsIndexing"`
	ExcludesPattern              pulumi.StringOutput      `pulumi:"excludesPattern"`
	ForceNugetAuthentication     pulumi.BoolOutput        `pulumi:"forceNugetAuthentication"`
	HandleReleases               pulumi.BoolOutput        `pulumi:"handleReleases"`
	HandleSnapshots              pulumi.BoolOutput        `pulumi:"handleSnapshots"`
	IncludesPattern              pulumi.StringOutput      `pulumi:"includesPattern"`
	IndexCompressionFormats      pulumi.StringArrayOutput `pulumi:"indexCompressionFormats"`
	Key                          pulumi.StringOutput      `pulumi:"key"`
	MaxUniqueSnapshots           pulumi.IntOutput         `pulumi:"maxUniqueSnapshots"`
	MaxUniqueTags                pulumi.IntOutput         `pulumi:"maxUniqueTags"`
	Notes                        pulumi.StringPtrOutput   `pulumi:"notes"`
	PackageType                  pulumi.StringOutput      `pulumi:"packageType"`
	PropertySets                 pulumi.StringArrayOutput `pulumi:"propertySets"`
	RepoLayoutRef                pulumi.StringOutput      `pulumi:"repoLayoutRef"`
	SnapshotVersionBehavior      pulumi.StringOutput      `pulumi:"snapshotVersionBehavior"`
	SuppressPomConsistencyChecks pulumi.BoolOutput        `pulumi:"suppressPomConsistencyChecks"`
	XrayIndex                    pulumi.BoolOutput        `pulumi:"xrayIndex"`
	YumRootDepth                 pulumi.IntPtrOutput      `pulumi:"yumRootDepth"`
}

// NewLocalRepository registers a new resource with the given unique name, arguments, and options.
func NewLocalRepository(ctx *pulumi.Context,
	name string, args *LocalRepositoryArgs, opts ...pulumi.ResourceOption) (*LocalRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	var resource LocalRepository
	err := ctx.RegisterResource("artifactory:index/localRepository:LocalRepository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocalRepository gets an existing LocalRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocalRepositoryState, opts ...pulumi.ResourceOption) (*LocalRepository, error) {
	var resource LocalRepository
	err := ctx.ReadResource("artifactory:index/localRepository:LocalRepository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocalRepository resources.
type localRepositoryState struct {
	ArchiveBrowsingEnabled       *bool    `pulumi:"archiveBrowsingEnabled"`
	BlackedOut                   *bool    `pulumi:"blackedOut"`
	CalculateYumMetadata         *bool    `pulumi:"calculateYumMetadata"`
	ChecksumPolicyType           *string  `pulumi:"checksumPolicyType"`
	DebianTrivialLayout          *bool    `pulumi:"debianTrivialLayout"`
	Description                  *string  `pulumi:"description"`
	DockerApiVersion             *string  `pulumi:"dockerApiVersion"`
	EnableFileListsIndexing      *bool    `pulumi:"enableFileListsIndexing"`
	ExcludesPattern              *string  `pulumi:"excludesPattern"`
	ForceNugetAuthentication     *bool    `pulumi:"forceNugetAuthentication"`
	HandleReleases               *bool    `pulumi:"handleReleases"`
	HandleSnapshots              *bool    `pulumi:"handleSnapshots"`
	IncludesPattern              *string  `pulumi:"includesPattern"`
	IndexCompressionFormats      []string `pulumi:"indexCompressionFormats"`
	Key                          *string  `pulumi:"key"`
	MaxUniqueSnapshots           *int     `pulumi:"maxUniqueSnapshots"`
	MaxUniqueTags                *int     `pulumi:"maxUniqueTags"`
	Notes                        *string  `pulumi:"notes"`
	PackageType                  *string  `pulumi:"packageType"`
	PropertySets                 []string `pulumi:"propertySets"`
	RepoLayoutRef                *string  `pulumi:"repoLayoutRef"`
	SnapshotVersionBehavior      *string  `pulumi:"snapshotVersionBehavior"`
	SuppressPomConsistencyChecks *bool    `pulumi:"suppressPomConsistencyChecks"`
	XrayIndex                    *bool    `pulumi:"xrayIndex"`
	YumRootDepth                 *int     `pulumi:"yumRootDepth"`
}

type LocalRepositoryState struct {
	ArchiveBrowsingEnabled       pulumi.BoolPtrInput
	BlackedOut                   pulumi.BoolPtrInput
	CalculateYumMetadata         pulumi.BoolPtrInput
	ChecksumPolicyType           pulumi.StringPtrInput
	DebianTrivialLayout          pulumi.BoolPtrInput
	Description                  pulumi.StringPtrInput
	DockerApiVersion             pulumi.StringPtrInput
	EnableFileListsIndexing      pulumi.BoolPtrInput
	ExcludesPattern              pulumi.StringPtrInput
	ForceNugetAuthentication     pulumi.BoolPtrInput
	HandleReleases               pulumi.BoolPtrInput
	HandleSnapshots              pulumi.BoolPtrInput
	IncludesPattern              pulumi.StringPtrInput
	IndexCompressionFormats      pulumi.StringArrayInput
	Key                          pulumi.StringPtrInput
	MaxUniqueSnapshots           pulumi.IntPtrInput
	MaxUniqueTags                pulumi.IntPtrInput
	Notes                        pulumi.StringPtrInput
	PackageType                  pulumi.StringPtrInput
	PropertySets                 pulumi.StringArrayInput
	RepoLayoutRef                pulumi.StringPtrInput
	SnapshotVersionBehavior      pulumi.StringPtrInput
	SuppressPomConsistencyChecks pulumi.BoolPtrInput
	XrayIndex                    pulumi.BoolPtrInput
	YumRootDepth                 pulumi.IntPtrInput
}

func (LocalRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*localRepositoryState)(nil)).Elem()
}

type localRepositoryArgs struct {
	ArchiveBrowsingEnabled       *bool    `pulumi:"archiveBrowsingEnabled"`
	BlackedOut                   *bool    `pulumi:"blackedOut"`
	CalculateYumMetadata         *bool    `pulumi:"calculateYumMetadata"`
	ChecksumPolicyType           *string  `pulumi:"checksumPolicyType"`
	DebianTrivialLayout          *bool    `pulumi:"debianTrivialLayout"`
	Description                  *string  `pulumi:"description"`
	DockerApiVersion             *string  `pulumi:"dockerApiVersion"`
	EnableFileListsIndexing      *bool    `pulumi:"enableFileListsIndexing"`
	ExcludesPattern              *string  `pulumi:"excludesPattern"`
	ForceNugetAuthentication     *bool    `pulumi:"forceNugetAuthentication"`
	HandleReleases               *bool    `pulumi:"handleReleases"`
	HandleSnapshots              *bool    `pulumi:"handleSnapshots"`
	IncludesPattern              *string  `pulumi:"includesPattern"`
	IndexCompressionFormats      []string `pulumi:"indexCompressionFormats"`
	Key                          string   `pulumi:"key"`
	MaxUniqueSnapshots           *int     `pulumi:"maxUniqueSnapshots"`
	MaxUniqueTags                *int     `pulumi:"maxUniqueTags"`
	Notes                        *string  `pulumi:"notes"`
	PackageType                  *string  `pulumi:"packageType"`
	PropertySets                 []string `pulumi:"propertySets"`
	RepoLayoutRef                *string  `pulumi:"repoLayoutRef"`
	SnapshotVersionBehavior      *string  `pulumi:"snapshotVersionBehavior"`
	SuppressPomConsistencyChecks *bool    `pulumi:"suppressPomConsistencyChecks"`
	XrayIndex                    *bool    `pulumi:"xrayIndex"`
	YumRootDepth                 *int     `pulumi:"yumRootDepth"`
}

// The set of arguments for constructing a LocalRepository resource.
type LocalRepositoryArgs struct {
	ArchiveBrowsingEnabled       pulumi.BoolPtrInput
	BlackedOut                   pulumi.BoolPtrInput
	CalculateYumMetadata         pulumi.BoolPtrInput
	ChecksumPolicyType           pulumi.StringPtrInput
	DebianTrivialLayout          pulumi.BoolPtrInput
	Description                  pulumi.StringPtrInput
	DockerApiVersion             pulumi.StringPtrInput
	EnableFileListsIndexing      pulumi.BoolPtrInput
	ExcludesPattern              pulumi.StringPtrInput
	ForceNugetAuthentication     pulumi.BoolPtrInput
	HandleReleases               pulumi.BoolPtrInput
	HandleSnapshots              pulumi.BoolPtrInput
	IncludesPattern              pulumi.StringPtrInput
	IndexCompressionFormats      pulumi.StringArrayInput
	Key                          pulumi.StringInput
	MaxUniqueSnapshots           pulumi.IntPtrInput
	MaxUniqueTags                pulumi.IntPtrInput
	Notes                        pulumi.StringPtrInput
	PackageType                  pulumi.StringPtrInput
	PropertySets                 pulumi.StringArrayInput
	RepoLayoutRef                pulumi.StringPtrInput
	SnapshotVersionBehavior      pulumi.StringPtrInput
	SuppressPomConsistencyChecks pulumi.BoolPtrInput
	XrayIndex                    pulumi.BoolPtrInput
	YumRootDepth                 pulumi.IntPtrInput
}

func (LocalRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*localRepositoryArgs)(nil)).Elem()
}

type LocalRepositoryInput interface {
	pulumi.Input

	ToLocalRepositoryOutput() LocalRepositoryOutput
	ToLocalRepositoryOutputWithContext(ctx context.Context) LocalRepositoryOutput
}

func (*LocalRepository) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalRepository)(nil)).Elem()
}

func (i *LocalRepository) ToLocalRepositoryOutput() LocalRepositoryOutput {
	return i.ToLocalRepositoryOutputWithContext(context.Background())
}

func (i *LocalRepository) ToLocalRepositoryOutputWithContext(ctx context.Context) LocalRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRepositoryOutput)
}

// LocalRepositoryArrayInput is an input type that accepts LocalRepositoryArray and LocalRepositoryArrayOutput values.
// You can construct a concrete instance of `LocalRepositoryArrayInput` via:
//
//          LocalRepositoryArray{ LocalRepositoryArgs{...} }
type LocalRepositoryArrayInput interface {
	pulumi.Input

	ToLocalRepositoryArrayOutput() LocalRepositoryArrayOutput
	ToLocalRepositoryArrayOutputWithContext(context.Context) LocalRepositoryArrayOutput
}

type LocalRepositoryArray []LocalRepositoryInput

func (LocalRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalRepository)(nil)).Elem()
}

func (i LocalRepositoryArray) ToLocalRepositoryArrayOutput() LocalRepositoryArrayOutput {
	return i.ToLocalRepositoryArrayOutputWithContext(context.Background())
}

func (i LocalRepositoryArray) ToLocalRepositoryArrayOutputWithContext(ctx context.Context) LocalRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRepositoryArrayOutput)
}

// LocalRepositoryMapInput is an input type that accepts LocalRepositoryMap and LocalRepositoryMapOutput values.
// You can construct a concrete instance of `LocalRepositoryMapInput` via:
//
//          LocalRepositoryMap{ "key": LocalRepositoryArgs{...} }
type LocalRepositoryMapInput interface {
	pulumi.Input

	ToLocalRepositoryMapOutput() LocalRepositoryMapOutput
	ToLocalRepositoryMapOutputWithContext(context.Context) LocalRepositoryMapOutput
}

type LocalRepositoryMap map[string]LocalRepositoryInput

func (LocalRepositoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalRepository)(nil)).Elem()
}

func (i LocalRepositoryMap) ToLocalRepositoryMapOutput() LocalRepositoryMapOutput {
	return i.ToLocalRepositoryMapOutputWithContext(context.Background())
}

func (i LocalRepositoryMap) ToLocalRepositoryMapOutputWithContext(ctx context.Context) LocalRepositoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRepositoryMapOutput)
}

type LocalRepositoryOutput struct{ *pulumi.OutputState }

func (LocalRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalRepository)(nil)).Elem()
}

func (o LocalRepositoryOutput) ToLocalRepositoryOutput() LocalRepositoryOutput {
	return o
}

func (o LocalRepositoryOutput) ToLocalRepositoryOutputWithContext(ctx context.Context) LocalRepositoryOutput {
	return o
}

type LocalRepositoryArrayOutput struct{ *pulumi.OutputState }

func (LocalRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalRepository)(nil)).Elem()
}

func (o LocalRepositoryArrayOutput) ToLocalRepositoryArrayOutput() LocalRepositoryArrayOutput {
	return o
}

func (o LocalRepositoryArrayOutput) ToLocalRepositoryArrayOutputWithContext(ctx context.Context) LocalRepositoryArrayOutput {
	return o
}

func (o LocalRepositoryArrayOutput) Index(i pulumi.IntInput) LocalRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LocalRepository {
		return vs[0].([]*LocalRepository)[vs[1].(int)]
	}).(LocalRepositoryOutput)
}

type LocalRepositoryMapOutput struct{ *pulumi.OutputState }

func (LocalRepositoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalRepository)(nil)).Elem()
}

func (o LocalRepositoryMapOutput) ToLocalRepositoryMapOutput() LocalRepositoryMapOutput {
	return o
}

func (o LocalRepositoryMapOutput) ToLocalRepositoryMapOutputWithContext(ctx context.Context) LocalRepositoryMapOutput {
	return o
}

func (o LocalRepositoryMapOutput) MapIndex(k pulumi.StringInput) LocalRepositoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LocalRepository {
		return vs[0].(map[string]*LocalRepository)[vs[1].(string)]
	}).(LocalRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocalRepositoryInput)(nil)).Elem(), &LocalRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalRepositoryArrayInput)(nil)).Elem(), LocalRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalRepositoryMapInput)(nil)).Elem(), LocalRepositoryMap{})
	pulumi.RegisterOutputType(LocalRepositoryOutput{})
	pulumi.RegisterOutputType(LocalRepositoryArrayOutput{})
	pulumi.RegisterOutputType(LocalRepositoryMapOutput{})
}
