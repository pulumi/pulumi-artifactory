// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Artifactory Remote CocoaPods Repository Resource
//
// Creates a remote CocoaPods repository.
// Official documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/CocoaPods+Repositories)
//
// ## Example Usage
//
// To create a new Artifactory remote CocoaPods repository called my-remote-cocoapods.
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := artifactory.NewRemoteCocoapodsRepository(ctx, "my-remote-cocoapods", &artifactory.RemoteCocoapodsRepositoryArgs{
// 			Key:            pulumi.String("my-remote-cocoapods"),
// 			Url:            pulumi.String("https://github.com/"),
// 			VcsGitProvider: pulumi.String("GITHUB"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type RemoteCocoapodsRepository struct {
	pulumi.CustomResourceState

	// Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to
	// any other host.
	AllowAnyHostAuth pulumi.BoolOutput `pulumi:"allowAnyHostAuth"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline. Default to 300.
	AssumedOfflinePeriodSecs pulumi.IntPtrOutput `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolOutput `pulumi:"blackedOut"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BlockMismatchingMimeTypes pulumi.BoolOutput `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests     pulumi.BoolOutput                                     `pulumi:"bypassHeadRequests"`
	ClientTlsCertificate   pulumi.StringOutput                                   `pulumi:"clientTlsCertificate"`
	ContentSynchronisation RemoteCocoapodsRepositoryContentSynchronisationOutput `pulumi:"contentSynchronisation"`
	Description            pulumi.StringOutput                                   `pulumi:"description"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolOutput `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringOutput `pulumi:"excludesPattern"`
	// Deprecated: This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function
	FailedRetrievalCachePeriodSecs pulumi.IntOutput `pulumi:"failedRetrievalCachePeriodSecs"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolOutput `pulumi:"hardFail"`
	// List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only
	// artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringOutput `pulumi:"includesPattern"`
	// The repository identifier. Must be unique system-wide
	Key pulumi.StringOutput `pulumi:"key"`
	// (Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the
	// value of the 'Retrieval Cache Period'. Default value is 'false'.
	ListRemoteFolderItems pulumi.BoolPtrOutput `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrOutput `pulumi:"localAddress"`
	// (Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// "application/json,application/xml". Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrOutput `pulumi:"mismatchingMimeTypesOverrideList"`
	// The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntOutput       `pulumi:"missedCachePeriodSeconds"`
	Notes                    pulumi.StringPtrOutput `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline     pulumi.BoolOutput      `pulumi:"offline"`
	PackageType pulumi.StringOutput    `pulumi:"packageType"`
	Password    pulumi.StringPtrOutput `pulumi:"password"`
	// Proxy remote CocoaPods Specs repositories. Default value is "https://github.com/CocoaPods/Specs".
	PodsSpecsRepoUrl pulumi.StringPtrOutput `pulumi:"podsSpecsRepoUrl"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution pulumi.BoolOutput `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD"
	ProjectEnvironments pulumi.StringArrayOutput `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning
	// repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrOutput `pulumi:"projectKey"`
	// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
	PropagateQueryParams pulumi.BoolPtrOutput `pulumi:"propagateQueryParams"`
	// List of property set name
	PropertySets pulumi.StringArrayOutput `pulumi:"propertySets"`
	Proxy        pulumi.StringOutput      `pulumi:"proxy"`
	// Repository layout key for the remote layout mapping
	RemoteRepoLayoutRef pulumi.StringOutput `pulumi:"remoteRepoLayoutRef"`
	// Repository layout key for the local repository
	RepoLayoutRef pulumi.StringPtrOutput `pulumi:"repoLayoutRef"`
	// The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.
	RetrievalCachePeriodSeconds pulumi.IntOutput  `pulumi:"retrievalCachePeriodSeconds"`
	ShareConfiguration          pulumi.BoolOutput `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntOutput `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolOutput `pulumi:"storeArtifactsLocally"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties               pulumi.BoolOutput `pulumi:"synchronizeProperties"`
	UnusedArtifactsCleanupPeriodEnabled pulumi.BoolOutput `pulumi:"unusedArtifactsCleanupPeriodEnabled"`
	// The number of hours to wait before an artifact is deemed "unused" and eligible for cleanup from the repository. A value
	// of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntOutput `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// - the remote repo URL. You kinda don't have a remote repo without it
	Url      pulumi.StringOutput    `pulumi:"url"`
	Username pulumi.StringPtrOutput `pulumi:"username"`
	// This attribute is used when vcsGitProvider is set to 'CUSTOM'. Provided URL will be used as proxy.
	VcsGitDownloadUrl pulumi.StringPtrOutput `pulumi:"vcsGitDownloadUrl"`
	// Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is "ARTIFACTORY".
	VcsGitProvider pulumi.StringPtrOutput `pulumi:"vcsGitProvider"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrOutput `pulumi:"xrayIndex"`
}

// NewRemoteCocoapodsRepository registers a new resource with the given unique name, arguments, and options.
func NewRemoteCocoapodsRepository(ctx *pulumi.Context,
	name string, args *RemoteCocoapodsRepositoryArgs, opts ...pulumi.ResourceOption) (*RemoteCocoapodsRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	var resource RemoteCocoapodsRepository
	err := ctx.RegisterResource("artifactory:index/remoteCocoapodsRepository:RemoteCocoapodsRepository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRemoteCocoapodsRepository gets an existing RemoteCocoapodsRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRemoteCocoapodsRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RemoteCocoapodsRepositoryState, opts ...pulumi.ResourceOption) (*RemoteCocoapodsRepository, error) {
	var resource RemoteCocoapodsRepository
	err := ctx.ReadResource("artifactory:index/remoteCocoapodsRepository:RemoteCocoapodsRepository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RemoteCocoapodsRepository resources.
type remoteCocoapodsRepositoryState struct {
	// Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to
	// any other host.
	AllowAnyHostAuth *bool `pulumi:"allowAnyHostAuth"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline. Default to 300.
	AssumedOfflinePeriodSecs *int `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut *bool `pulumi:"blackedOut"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BlockMismatchingMimeTypes *bool `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests     *bool                                            `pulumi:"bypassHeadRequests"`
	ClientTlsCertificate   *string                                          `pulumi:"clientTlsCertificate"`
	ContentSynchronisation *RemoteCocoapodsRepositoryContentSynchronisation `pulumi:"contentSynchronisation"`
	Description            *string                                          `pulumi:"description"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement *bool `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no
	// artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// Deprecated: This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function
	FailedRetrievalCachePeriodSecs *int `pulumi:"failedRetrievalCachePeriodSecs"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail *bool `pulumi:"hardFail"`
	// List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only
	// artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern *string `pulumi:"includesPattern"`
	// The repository identifier. Must be unique system-wide
	Key *string `pulumi:"key"`
	// (Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the
	// value of the 'Retrieval Cache Period'. Default value is 'false'.
	ListRemoteFolderItems *bool `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress *string `pulumi:"localAddress"`
	// (Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// "application/json,application/xml". Default value is empty.
	MismatchingMimeTypesOverrideList *string `pulumi:"mismatchingMimeTypesOverrideList"`
	// The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds *int    `pulumi:"missedCachePeriodSeconds"`
	Notes                    *string `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline     *bool   `pulumi:"offline"`
	PackageType *string `pulumi:"packageType"`
	Password    *string `pulumi:"password"`
	// Proxy remote CocoaPods Specs repositories. Default value is "https://github.com/CocoaPods/Specs".
	PodsSpecsRepoUrl *string `pulumi:"podsSpecsRepoUrl"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution *bool `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD"
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning
	// repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
	PropagateQueryParams *bool `pulumi:"propagateQueryParams"`
	// List of property set name
	PropertySets []string `pulumi:"propertySets"`
	Proxy        *string  `pulumi:"proxy"`
	// Repository layout key for the remote layout mapping
	RemoteRepoLayoutRef *string `pulumi:"remoteRepoLayoutRef"`
	// Repository layout key for the local repository
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.
	RetrievalCachePeriodSeconds *int  `pulumi:"retrievalCachePeriodSeconds"`
	ShareConfiguration          *bool `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis *int `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally *bool `pulumi:"storeArtifactsLocally"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties               *bool `pulumi:"synchronizeProperties"`
	UnusedArtifactsCleanupPeriodEnabled *bool `pulumi:"unusedArtifactsCleanupPeriodEnabled"`
	// The number of hours to wait before an artifact is deemed "unused" and eligible for cleanup from the repository. A value
	// of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours *int `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// - the remote repo URL. You kinda don't have a remote repo without it
	Url      *string `pulumi:"url"`
	Username *string `pulumi:"username"`
	// This attribute is used when vcsGitProvider is set to 'CUSTOM'. Provided URL will be used as proxy.
	VcsGitDownloadUrl *string `pulumi:"vcsGitDownloadUrl"`
	// Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is "ARTIFACTORY".
	VcsGitProvider *string `pulumi:"vcsGitProvider"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

type RemoteCocoapodsRepositoryState struct {
	// Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to
	// any other host.
	AllowAnyHostAuth pulumi.BoolPtrInput
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline. Default to 300.
	AssumedOfflinePeriodSecs pulumi.IntPtrInput
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BlockMismatchingMimeTypes pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests     pulumi.BoolPtrInput
	ClientTlsCertificate   pulumi.StringPtrInput
	ContentSynchronisation RemoteCocoapodsRepositoryContentSynchronisationPtrInput
	Description            pulumi.StringPtrInput
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// Deprecated: This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function
	FailedRetrievalCachePeriodSecs pulumi.IntPtrInput
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolPtrInput
	// List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only
	// artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrInput
	// The repository identifier. Must be unique system-wide
	Key pulumi.StringPtrInput
	// (Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the
	// value of the 'Retrieval Cache Period'. Default value is 'false'.
	ListRemoteFolderItems pulumi.BoolPtrInput
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrInput
	// (Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// "application/json,application/xml". Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrInput
	// The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrInput
	Notes                    pulumi.StringPtrInput
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline     pulumi.BoolPtrInput
	PackageType pulumi.StringPtrInput
	Password    pulumi.StringPtrInput
	// Proxy remote CocoaPods Specs repositories. Default value is "https://github.com/CocoaPods/Specs".
	PodsSpecsRepoUrl pulumi.StringPtrInput
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution pulumi.BoolPtrInput
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD"
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning
	// repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
	PropagateQueryParams pulumi.BoolPtrInput
	// List of property set name
	PropertySets pulumi.StringArrayInput
	Proxy        pulumi.StringPtrInput
	// Repository layout key for the remote layout mapping
	RemoteRepoLayoutRef pulumi.StringPtrInput
	// Repository layout key for the local repository
	RepoLayoutRef pulumi.StringPtrInput
	// The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.
	RetrievalCachePeriodSeconds pulumi.IntPtrInput
	ShareConfiguration          pulumi.BoolPtrInput
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrInput
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolPtrInput
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties               pulumi.BoolPtrInput
	UnusedArtifactsCleanupPeriodEnabled pulumi.BoolPtrInput
	// The number of hours to wait before an artifact is deemed "unused" and eligible for cleanup from the repository. A value
	// of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrInput
	// - the remote repo URL. You kinda don't have a remote repo without it
	Url      pulumi.StringPtrInput
	Username pulumi.StringPtrInput
	// This attribute is used when vcsGitProvider is set to 'CUSTOM'. Provided URL will be used as proxy.
	VcsGitDownloadUrl pulumi.StringPtrInput
	// Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is "ARTIFACTORY".
	VcsGitProvider pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (RemoteCocoapodsRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*remoteCocoapodsRepositoryState)(nil)).Elem()
}

type remoteCocoapodsRepositoryArgs struct {
	// Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to
	// any other host.
	AllowAnyHostAuth *bool `pulumi:"allowAnyHostAuth"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline. Default to 300.
	AssumedOfflinePeriodSecs *int `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut *bool `pulumi:"blackedOut"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BlockMismatchingMimeTypes *bool `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests     *bool                                            `pulumi:"bypassHeadRequests"`
	ClientTlsCertificate   *string                                          `pulumi:"clientTlsCertificate"`
	ContentSynchronisation *RemoteCocoapodsRepositoryContentSynchronisation `pulumi:"contentSynchronisation"`
	Description            *string                                          `pulumi:"description"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement *bool `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no
	// artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail *bool `pulumi:"hardFail"`
	// List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only
	// artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern *string `pulumi:"includesPattern"`
	// The repository identifier. Must be unique system-wide
	Key string `pulumi:"key"`
	// (Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the
	// value of the 'Retrieval Cache Period'. Default value is 'false'.
	ListRemoteFolderItems *bool `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress *string `pulumi:"localAddress"`
	// (Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// "application/json,application/xml". Default value is empty.
	MismatchingMimeTypesOverrideList *string `pulumi:"mismatchingMimeTypesOverrideList"`
	// The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds *int    `pulumi:"missedCachePeriodSeconds"`
	Notes                    *string `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  *bool   `pulumi:"offline"`
	Password *string `pulumi:"password"`
	// Proxy remote CocoaPods Specs repositories. Default value is "https://github.com/CocoaPods/Specs".
	PodsSpecsRepoUrl *string `pulumi:"podsSpecsRepoUrl"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution *bool `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD"
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning
	// repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
	PropagateQueryParams *bool `pulumi:"propagateQueryParams"`
	// List of property set name
	PropertySets []string `pulumi:"propertySets"`
	Proxy        *string  `pulumi:"proxy"`
	// Repository layout key for the remote layout mapping
	RemoteRepoLayoutRef *string `pulumi:"remoteRepoLayoutRef"`
	// Repository layout key for the local repository
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.
	RetrievalCachePeriodSeconds *int  `pulumi:"retrievalCachePeriodSeconds"`
	ShareConfiguration          *bool `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis *int `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally *bool `pulumi:"storeArtifactsLocally"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties               *bool `pulumi:"synchronizeProperties"`
	UnusedArtifactsCleanupPeriodEnabled *bool `pulumi:"unusedArtifactsCleanupPeriodEnabled"`
	// The number of hours to wait before an artifact is deemed "unused" and eligible for cleanup from the repository. A value
	// of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours *int `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// - the remote repo URL. You kinda don't have a remote repo without it
	Url      string  `pulumi:"url"`
	Username *string `pulumi:"username"`
	// This attribute is used when vcsGitProvider is set to 'CUSTOM'. Provided URL will be used as proxy.
	VcsGitDownloadUrl *string `pulumi:"vcsGitDownloadUrl"`
	// Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is "ARTIFACTORY".
	VcsGitProvider *string `pulumi:"vcsGitProvider"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

// The set of arguments for constructing a RemoteCocoapodsRepository resource.
type RemoteCocoapodsRepositoryArgs struct {
	// Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to
	// any other host.
	AllowAnyHostAuth pulumi.BoolPtrInput
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline. Default to 300.
	AssumedOfflinePeriodSecs pulumi.IntPtrInput
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BlockMismatchingMimeTypes pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests     pulumi.BoolPtrInput
	ClientTlsCertificate   pulumi.StringPtrInput
	ContentSynchronisation RemoteCocoapodsRepositoryContentSynchronisationPtrInput
	Description            pulumi.StringPtrInput
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolPtrInput
	// List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only
	// artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrInput
	// The repository identifier. Must be unique system-wide
	Key pulumi.StringInput
	// (Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the
	// value of the 'Retrieval Cache Period'. Default value is 'false'.
	ListRemoteFolderItems pulumi.BoolPtrInput
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrInput
	// (Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// "application/json,application/xml". Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrInput
	// The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrInput
	Notes                    pulumi.StringPtrInput
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  pulumi.BoolPtrInput
	Password pulumi.StringPtrInput
	// Proxy remote CocoaPods Specs repositories. Default value is "https://github.com/CocoaPods/Specs".
	PodsSpecsRepoUrl pulumi.StringPtrInput
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution pulumi.BoolPtrInput
	// Project environment for assigning this repository to. Allow values: "DEV" or "PROD"
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning
	// repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.
	PropagateQueryParams pulumi.BoolPtrInput
	// List of property set name
	PropertySets pulumi.StringArrayInput
	Proxy        pulumi.StringPtrInput
	// Repository layout key for the remote layout mapping
	RemoteRepoLayoutRef pulumi.StringPtrInput
	// Repository layout key for the local repository
	RepoLayoutRef pulumi.StringPtrInput
	// The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.
	RetrievalCachePeriodSeconds pulumi.IntPtrInput
	ShareConfiguration          pulumi.BoolPtrInput
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrInput
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolPtrInput
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties               pulumi.BoolPtrInput
	UnusedArtifactsCleanupPeriodEnabled pulumi.BoolPtrInput
	// The number of hours to wait before an artifact is deemed "unused" and eligible for cleanup from the repository. A value
	// of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrInput
	// - the remote repo URL. You kinda don't have a remote repo without it
	Url      pulumi.StringInput
	Username pulumi.StringPtrInput
	// This attribute is used when vcsGitProvider is set to 'CUSTOM'. Provided URL will be used as proxy.
	VcsGitDownloadUrl pulumi.StringPtrInput
	// Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is "ARTIFACTORY".
	VcsGitProvider pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (RemoteCocoapodsRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*remoteCocoapodsRepositoryArgs)(nil)).Elem()
}

type RemoteCocoapodsRepositoryInput interface {
	pulumi.Input

	ToRemoteCocoapodsRepositoryOutput() RemoteCocoapodsRepositoryOutput
	ToRemoteCocoapodsRepositoryOutputWithContext(ctx context.Context) RemoteCocoapodsRepositoryOutput
}

func (*RemoteCocoapodsRepository) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteCocoapodsRepository)(nil)).Elem()
}

func (i *RemoteCocoapodsRepository) ToRemoteCocoapodsRepositoryOutput() RemoteCocoapodsRepositoryOutput {
	return i.ToRemoteCocoapodsRepositoryOutputWithContext(context.Background())
}

func (i *RemoteCocoapodsRepository) ToRemoteCocoapodsRepositoryOutputWithContext(ctx context.Context) RemoteCocoapodsRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteCocoapodsRepositoryOutput)
}

// RemoteCocoapodsRepositoryArrayInput is an input type that accepts RemoteCocoapodsRepositoryArray and RemoteCocoapodsRepositoryArrayOutput values.
// You can construct a concrete instance of `RemoteCocoapodsRepositoryArrayInput` via:
//
//          RemoteCocoapodsRepositoryArray{ RemoteCocoapodsRepositoryArgs{...} }
type RemoteCocoapodsRepositoryArrayInput interface {
	pulumi.Input

	ToRemoteCocoapodsRepositoryArrayOutput() RemoteCocoapodsRepositoryArrayOutput
	ToRemoteCocoapodsRepositoryArrayOutputWithContext(context.Context) RemoteCocoapodsRepositoryArrayOutput
}

type RemoteCocoapodsRepositoryArray []RemoteCocoapodsRepositoryInput

func (RemoteCocoapodsRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemoteCocoapodsRepository)(nil)).Elem()
}

func (i RemoteCocoapodsRepositoryArray) ToRemoteCocoapodsRepositoryArrayOutput() RemoteCocoapodsRepositoryArrayOutput {
	return i.ToRemoteCocoapodsRepositoryArrayOutputWithContext(context.Background())
}

func (i RemoteCocoapodsRepositoryArray) ToRemoteCocoapodsRepositoryArrayOutputWithContext(ctx context.Context) RemoteCocoapodsRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteCocoapodsRepositoryArrayOutput)
}

// RemoteCocoapodsRepositoryMapInput is an input type that accepts RemoteCocoapodsRepositoryMap and RemoteCocoapodsRepositoryMapOutput values.
// You can construct a concrete instance of `RemoteCocoapodsRepositoryMapInput` via:
//
//          RemoteCocoapodsRepositoryMap{ "key": RemoteCocoapodsRepositoryArgs{...} }
type RemoteCocoapodsRepositoryMapInput interface {
	pulumi.Input

	ToRemoteCocoapodsRepositoryMapOutput() RemoteCocoapodsRepositoryMapOutput
	ToRemoteCocoapodsRepositoryMapOutputWithContext(context.Context) RemoteCocoapodsRepositoryMapOutput
}

type RemoteCocoapodsRepositoryMap map[string]RemoteCocoapodsRepositoryInput

func (RemoteCocoapodsRepositoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemoteCocoapodsRepository)(nil)).Elem()
}

func (i RemoteCocoapodsRepositoryMap) ToRemoteCocoapodsRepositoryMapOutput() RemoteCocoapodsRepositoryMapOutput {
	return i.ToRemoteCocoapodsRepositoryMapOutputWithContext(context.Background())
}

func (i RemoteCocoapodsRepositoryMap) ToRemoteCocoapodsRepositoryMapOutputWithContext(ctx context.Context) RemoteCocoapodsRepositoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteCocoapodsRepositoryMapOutput)
}

type RemoteCocoapodsRepositoryOutput struct{ *pulumi.OutputState }

func (RemoteCocoapodsRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteCocoapodsRepository)(nil)).Elem()
}

func (o RemoteCocoapodsRepositoryOutput) ToRemoteCocoapodsRepositoryOutput() RemoteCocoapodsRepositoryOutput {
	return o
}

func (o RemoteCocoapodsRepositoryOutput) ToRemoteCocoapodsRepositoryOutputWithContext(ctx context.Context) RemoteCocoapodsRepositoryOutput {
	return o
}

type RemoteCocoapodsRepositoryArrayOutput struct{ *pulumi.OutputState }

func (RemoteCocoapodsRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemoteCocoapodsRepository)(nil)).Elem()
}

func (o RemoteCocoapodsRepositoryArrayOutput) ToRemoteCocoapodsRepositoryArrayOutput() RemoteCocoapodsRepositoryArrayOutput {
	return o
}

func (o RemoteCocoapodsRepositoryArrayOutput) ToRemoteCocoapodsRepositoryArrayOutputWithContext(ctx context.Context) RemoteCocoapodsRepositoryArrayOutput {
	return o
}

func (o RemoteCocoapodsRepositoryArrayOutput) Index(i pulumi.IntInput) RemoteCocoapodsRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RemoteCocoapodsRepository {
		return vs[0].([]*RemoteCocoapodsRepository)[vs[1].(int)]
	}).(RemoteCocoapodsRepositoryOutput)
}

type RemoteCocoapodsRepositoryMapOutput struct{ *pulumi.OutputState }

func (RemoteCocoapodsRepositoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemoteCocoapodsRepository)(nil)).Elem()
}

func (o RemoteCocoapodsRepositoryMapOutput) ToRemoteCocoapodsRepositoryMapOutput() RemoteCocoapodsRepositoryMapOutput {
	return o
}

func (o RemoteCocoapodsRepositoryMapOutput) ToRemoteCocoapodsRepositoryMapOutputWithContext(ctx context.Context) RemoteCocoapodsRepositoryMapOutput {
	return o
}

func (o RemoteCocoapodsRepositoryMapOutput) MapIndex(k pulumi.StringInput) RemoteCocoapodsRepositoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RemoteCocoapodsRepository {
		return vs[0].(map[string]*RemoteCocoapodsRepository)[vs[1].(string)]
	}).(RemoteCocoapodsRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteCocoapodsRepositoryInput)(nil)).Elem(), &RemoteCocoapodsRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteCocoapodsRepositoryArrayInput)(nil)).Elem(), RemoteCocoapodsRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteCocoapodsRepositoryMapInput)(nil)).Elem(), RemoteCocoapodsRepositoryMap{})
	pulumi.RegisterOutputType(RemoteCocoapodsRepositoryOutput{})
	pulumi.RegisterOutputType(RemoteCocoapodsRepositoryArrayOutput{})
	pulumi.RegisterOutputType(RemoteCocoapodsRepositoryMapOutput{})
}
