// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-artifactory/sdk/v6/go/artifactory/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a local cargo repository.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-artifactory/sdk/v6/go/artifactory"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := artifactory.LookupLocalCargoRepository(ctx, &artifactory.LookupLocalCargoRepositoryArgs{
//				Key: "local-test-cargo-repo-basic",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupLocalCargoRepository(ctx *pulumi.Context, args *LookupLocalCargoRepositoryArgs, opts ...pulumi.InvokeOption) (*LookupLocalCargoRepositoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLocalCargoRepositoryResult
	err := ctx.Invoke("artifactory:index/getLocalCargoRepository:getLocalCargoRepository", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLocalCargoRepository.
type LookupLocalCargoRepositoryArgs struct {
	// Cargo client does not send credentials when performing download and search for crates.
	// Enable this to allow anonymous access to these resources (only), note that this will override the security anonymous
	// access option. Default value is `false`.
	AnonymousAccess        *bool   `pulumi:"anonymousAccess"`
	ArchiveBrowsingEnabled *bool   `pulumi:"archiveBrowsingEnabled"`
	BlackedOut             *bool   `pulumi:"blackedOut"`
	CdnRedirect            *bool   `pulumi:"cdnRedirect"`
	Description            *string `pulumi:"description"`
	DownloadDirect         *bool   `pulumi:"downloadDirect"`
	// Enable internal index support based on Cargo sparse index specifications, instead
	// of the default git index. Default value is `false`.
	EnableSparseIndex       *bool    `pulumi:"enableSparseIndex"`
	ExcludesPattern         *string  `pulumi:"excludesPattern"`
	IncludesPattern         *string  `pulumi:"includesPattern"`
	IndexCompressionFormats []string `pulumi:"indexCompressionFormats"`
	// the identity key of the repo.
	Key                 string   `pulumi:"key"`
	Notes               *string  `pulumi:"notes"`
	PriorityResolution  *bool    `pulumi:"priorityResolution"`
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	ProjectKey          *string  `pulumi:"projectKey"`
	PropertySets        []string `pulumi:"propertySets"`
	RepoLayoutRef       *string  `pulumi:"repoLayoutRef"`
	XrayIndex           *bool    `pulumi:"xrayIndex"`
}

// A collection of values returned by getLocalCargoRepository.
type LookupLocalCargoRepositoryResult struct {
	// Cargo client does not send credentials when performing download and search for crates.
	// Enable this to allow anonymous access to these resources (only), note that this will override the security anonymous
	// access option. Default value is `false`.
	AnonymousAccess        *bool   `pulumi:"anonymousAccess"`
	ArchiveBrowsingEnabled *bool   `pulumi:"archiveBrowsingEnabled"`
	BlackedOut             *bool   `pulumi:"blackedOut"`
	CdnRedirect            *bool   `pulumi:"cdnRedirect"`
	Description            *string `pulumi:"description"`
	DownloadDirect         *bool   `pulumi:"downloadDirect"`
	// Enable internal index support based on Cargo sparse index specifications, instead
	// of the default git index. Default value is `false`.
	EnableSparseIndex *bool   `pulumi:"enableSparseIndex"`
	ExcludesPattern   *string `pulumi:"excludesPattern"`
	// The provider-assigned unique ID for this managed resource.
	Id                      string   `pulumi:"id"`
	IncludesPattern         *string  `pulumi:"includesPattern"`
	IndexCompressionFormats []string `pulumi:"indexCompressionFormats"`
	Key                     string   `pulumi:"key"`
	Notes                   *string  `pulumi:"notes"`
	PackageType             string   `pulumi:"packageType"`
	PriorityResolution      *bool    `pulumi:"priorityResolution"`
	ProjectEnvironments     []string `pulumi:"projectEnvironments"`
	ProjectKey              *string  `pulumi:"projectKey"`
	PropertySets            []string `pulumi:"propertySets"`
	RepoLayoutRef           *string  `pulumi:"repoLayoutRef"`
	XrayIndex               *bool    `pulumi:"xrayIndex"`
}

func LookupLocalCargoRepositoryOutput(ctx *pulumi.Context, args LookupLocalCargoRepositoryOutputArgs, opts ...pulumi.InvokeOption) LookupLocalCargoRepositoryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLocalCargoRepositoryResult, error) {
			args := v.(LookupLocalCargoRepositoryArgs)
			r, err := LookupLocalCargoRepository(ctx, &args, opts...)
			var s LookupLocalCargoRepositoryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLocalCargoRepositoryResultOutput)
}

// A collection of arguments for invoking getLocalCargoRepository.
type LookupLocalCargoRepositoryOutputArgs struct {
	// Cargo client does not send credentials when performing download and search for crates.
	// Enable this to allow anonymous access to these resources (only), note that this will override the security anonymous
	// access option. Default value is `false`.
	AnonymousAccess        pulumi.BoolPtrInput   `pulumi:"anonymousAccess"`
	ArchiveBrowsingEnabled pulumi.BoolPtrInput   `pulumi:"archiveBrowsingEnabled"`
	BlackedOut             pulumi.BoolPtrInput   `pulumi:"blackedOut"`
	CdnRedirect            pulumi.BoolPtrInput   `pulumi:"cdnRedirect"`
	Description            pulumi.StringPtrInput `pulumi:"description"`
	DownloadDirect         pulumi.BoolPtrInput   `pulumi:"downloadDirect"`
	// Enable internal index support based on Cargo sparse index specifications, instead
	// of the default git index. Default value is `false`.
	EnableSparseIndex       pulumi.BoolPtrInput     `pulumi:"enableSparseIndex"`
	ExcludesPattern         pulumi.StringPtrInput   `pulumi:"excludesPattern"`
	IncludesPattern         pulumi.StringPtrInput   `pulumi:"includesPattern"`
	IndexCompressionFormats pulumi.StringArrayInput `pulumi:"indexCompressionFormats"`
	// the identity key of the repo.
	Key                 pulumi.StringInput      `pulumi:"key"`
	Notes               pulumi.StringPtrInput   `pulumi:"notes"`
	PriorityResolution  pulumi.BoolPtrInput     `pulumi:"priorityResolution"`
	ProjectEnvironments pulumi.StringArrayInput `pulumi:"projectEnvironments"`
	ProjectKey          pulumi.StringPtrInput   `pulumi:"projectKey"`
	PropertySets        pulumi.StringArrayInput `pulumi:"propertySets"`
	RepoLayoutRef       pulumi.StringPtrInput   `pulumi:"repoLayoutRef"`
	XrayIndex           pulumi.BoolPtrInput     `pulumi:"xrayIndex"`
}

func (LookupLocalCargoRepositoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLocalCargoRepositoryArgs)(nil)).Elem()
}

// A collection of values returned by getLocalCargoRepository.
type LookupLocalCargoRepositoryResultOutput struct{ *pulumi.OutputState }

func (LookupLocalCargoRepositoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLocalCargoRepositoryResult)(nil)).Elem()
}

func (o LookupLocalCargoRepositoryResultOutput) ToLookupLocalCargoRepositoryResultOutput() LookupLocalCargoRepositoryResultOutput {
	return o
}

func (o LookupLocalCargoRepositoryResultOutput) ToLookupLocalCargoRepositoryResultOutputWithContext(ctx context.Context) LookupLocalCargoRepositoryResultOutput {
	return o
}

// Cargo client does not send credentials when performing download and search for crates.
// Enable this to allow anonymous access to these resources (only), note that this will override the security anonymous
// access option. Default value is `false`.
func (o LookupLocalCargoRepositoryResultOutput) AnonymousAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) *bool { return v.AnonymousAccess }).(pulumi.BoolPtrOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) ArchiveBrowsingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) *bool { return v.ArchiveBrowsingEnabled }).(pulumi.BoolPtrOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) BlackedOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) *bool { return v.BlackedOut }).(pulumi.BoolPtrOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) CdnRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) *bool { return v.CdnRedirect }).(pulumi.BoolPtrOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) DownloadDirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) *bool { return v.DownloadDirect }).(pulumi.BoolPtrOutput)
}

// Enable internal index support based on Cargo sparse index specifications, instead
// of the default git index. Default value is `false`.
func (o LookupLocalCargoRepositoryResultOutput) EnableSparseIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) *bool { return v.EnableSparseIndex }).(pulumi.BoolPtrOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) ExcludesPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) *string { return v.ExcludesPattern }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLocalCargoRepositoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) IncludesPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) *string { return v.IncludesPattern }).(pulumi.StringPtrOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) IndexCompressionFormats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) []string { return v.IndexCompressionFormats }).(pulumi.StringArrayOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) string { return v.Key }).(pulumi.StringOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) PackageType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) string { return v.PackageType }).(pulumi.StringOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) PriorityResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) *bool { return v.PriorityResolution }).(pulumi.BoolPtrOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) ProjectEnvironments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) []string { return v.ProjectEnvironments }).(pulumi.StringArrayOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) ProjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) *string { return v.ProjectKey }).(pulumi.StringPtrOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) PropertySets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) []string { return v.PropertySets }).(pulumi.StringArrayOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) RepoLayoutRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) *string { return v.RepoLayoutRef }).(pulumi.StringPtrOutput)
}

func (o LookupLocalCargoRepositoryResultOutput) XrayIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLocalCargoRepositoryResult) *bool { return v.XrayIndex }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLocalCargoRepositoryResultOutput{})
}
