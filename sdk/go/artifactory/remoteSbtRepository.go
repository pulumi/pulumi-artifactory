// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-artifactory/sdk/v8/go/artifactory/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a remote Sbt repository.
// Official documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/SBT+Repositories).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-artifactory/sdk/v8/go/artifactory"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := artifactory.NewRemoteSbtRepository(ctx, "sbt-remote", &artifactory.RemoteSbtRepositoryArgs{
//				Key:                          pulumi.String("sbt-remote-foo"),
//				Url:                          pulumi.String("https://repo1.maven.org/maven2/"),
//				FetchJarsEagerly:             pulumi.Bool(true),
//				FetchSourcesEagerly:          pulumi.Bool(false),
//				SuppressPomConsistencyChecks: pulumi.Bool(true),
//				RejectInvalidJars:            pulumi.Bool(true),
//				MaxUniqueSnapshots:           pulumi.Int(10),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Remote repositories can be imported using their name, e.g.
//
// ```sh
// $ pulumi import artifactory:index/remoteSbtRepository:RemoteSbtRepository sbt-remote sbt-remote
// ```
type RemoteSbtRepository struct {
	pulumi.CustomResourceState

	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth pulumi.BoolOutput `pulumi:"allowAnyHostAuth"`
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled pulumi.BoolOutput `pulumi:"archiveBrowsingEnabled"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs pulumi.IntOutput `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolOutput `pulumi:"blackedOut"`
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes pulumi.BoolOutput `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests pulumi.BoolOutput `pulumi:"bypassHeadRequests"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect pulumi.BoolOutput `pulumi:"cdnRedirect"`
	// Client TLS certificate name.
	ClientTlsCertificate   pulumi.StringOutput                                `pulumi:"clientTlsCertificate"`
	ContentSynchronisation RemoteSbtRepositoryContentSynchronisationPtrOutput `pulumi:"contentSynchronisation"`
	// Public description.
	Description pulumi.StringOutput `pulumi:"description"`
	// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
	// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
	DisableProxy pulumi.BoolOutput `pulumi:"disableProxy"`
	// Whether to disable URL normalization. Default is `false`.
	DisableUrlNormalization pulumi.BoolOutput `pulumi:"disableUrlNormalization"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect pulumi.BoolOutput `pulumi:"downloadDirect"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolOutput `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringOutput `pulumi:"excludesPattern"`
	// When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
	FetchJarsEagerly pulumi.BoolOutput `pulumi:"fetchJarsEagerly"`
	// When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
	FetchSourcesEagerly pulumi.BoolOutput `pulumi:"fetchSourcesEagerly"`
	// If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases pulumi.BoolOutput `pulumi:"handleReleases"`
	// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots pulumi.BoolOutput `pulumi:"handleSnapshots"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolOutput `pulumi:"hardFail"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern pulumi.StringOutput `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key pulumi.StringOutput `pulumi:"key"`
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'false'. This field exists in the API but not in the UI.
	ListRemoteFolderItems pulumi.BoolOutput `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringOutput `pulumi:"localAddress"`
	// The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting, older versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.
	MaxUniqueSnapshots pulumi.IntOutput `pulumi:"maxUniqueSnapshots"`
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs pulumi.IntOutput `pulumi:"metadataRetrievalTimeoutSecs"`
	// The set of mime types that should override the blockMismatchingMimeTypes setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringOutput `pulumi:"mismatchingMimeTypesOverrideList"`
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntOutput `pulumi:"missedCachePeriodSeconds"`
	// Internal description.
	Notes pulumi.StringOutput `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  pulumi.BoolOutput      `pulumi:"offline"`
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution  pulumi.BoolOutput        `pulumi:"priorityResolution"`
	ProjectEnvironments pulumi.StringArrayOutput `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringOutput `pulumi:"projectKey"`
	// List of property set name
	PropertySets pulumi.StringArrayOutput `pulumi:"propertySets"`
	// Proxy key from Artifactory Proxies settings. Can't be set if `disableProxy = true`.
	Proxy pulumi.StringOutput `pulumi:"proxy"`
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams pulumi.StringOutput `pulumi:"queryParams"`
	// Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
	RejectInvalidJars pulumi.BoolOutput `pulumi:"rejectInvalidJars"`
	// Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are `generate-if-absent`, `fail`, `ignore-and-generate`, and `pass-thru`.
	RemoteRepoChecksumPolicyType pulumi.StringOutput `pulumi:"remoteRepoChecksumPolicyType"`
	// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
	// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
	// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
	RemoteRepoLayoutRef pulumi.StringOutput `pulumi:"remoteRepoLayoutRef"`
	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
	// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef pulumi.StringOutput `pulumi:"repoLayoutRef"`
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds pulumi.IntOutput `pulumi:"retrievalCachePeriodSeconds"`
	// Deprecated: No longer supported
	ShareConfiguration pulumi.BoolOutput `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntOutput `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolOutput `pulumi:"storeArtifactsLocally"`
	// By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to `true`.
	SuppressPomConsistencyChecks pulumi.BoolOutput `pulumi:"suppressPomConsistencyChecks"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties pulumi.BoolOutput `pulumi:"synchronizeProperties"`
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntOutput `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// The remote repo URL.
	Url      pulumi.StringOutput `pulumi:"url"`
	Username pulumi.StringOutput `pulumi:"username"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolOutput `pulumi:"xrayIndex"`
}

// NewRemoteSbtRepository registers a new resource with the given unique name, arguments, and options.
func NewRemoteSbtRepository(ctx *pulumi.Context,
	name string, args *RemoteSbtRepositoryArgs, opts ...pulumi.ResourceOption) (*RemoteSbtRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RemoteSbtRepository
	err := ctx.RegisterResource("artifactory:index/remoteSbtRepository:RemoteSbtRepository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRemoteSbtRepository gets an existing RemoteSbtRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRemoteSbtRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RemoteSbtRepositoryState, opts ...pulumi.ResourceOption) (*RemoteSbtRepository, error) {
	var resource RemoteSbtRepository
	err := ctx.ReadResource("artifactory:index/remoteSbtRepository:RemoteSbtRepository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RemoteSbtRepository resources.
type remoteSbtRepositoryState struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth *bool `pulumi:"allowAnyHostAuth"`
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled *bool `pulumi:"archiveBrowsingEnabled"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs *int `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut *bool `pulumi:"blackedOut"`
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes *bool `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests *bool `pulumi:"bypassHeadRequests"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect *bool `pulumi:"cdnRedirect"`
	// Client TLS certificate name.
	ClientTlsCertificate   *string                                    `pulumi:"clientTlsCertificate"`
	ContentSynchronisation *RemoteSbtRepositoryContentSynchronisation `pulumi:"contentSynchronisation"`
	// Public description.
	Description *string `pulumi:"description"`
	// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
	// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
	DisableProxy *bool `pulumi:"disableProxy"`
	// Whether to disable URL normalization. Default is `false`.
	DisableUrlNormalization *bool `pulumi:"disableUrlNormalization"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect *bool `pulumi:"downloadDirect"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement *bool `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no
	// artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
	FetchJarsEagerly *bool `pulumi:"fetchJarsEagerly"`
	// When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
	FetchSourcesEagerly *bool `pulumi:"fetchSourcesEagerly"`
	// If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases *bool `pulumi:"handleReleases"`
	// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots *bool `pulumi:"handleSnapshots"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail *bool `pulumi:"hardFail"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern *string `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key *string `pulumi:"key"`
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'false'. This field exists in the API but not in the UI.
	ListRemoteFolderItems *bool `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress *string `pulumi:"localAddress"`
	// The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting, older versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.
	MaxUniqueSnapshots *int `pulumi:"maxUniqueSnapshots"`
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs *int `pulumi:"metadataRetrievalTimeoutSecs"`
	// The set of mime types that should override the blockMismatchingMimeTypes setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList *string `pulumi:"mismatchingMimeTypesOverrideList"`
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds *int `pulumi:"missedCachePeriodSeconds"`
	// Internal description.
	Notes *string `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  *bool   `pulumi:"offline"`
	Password *string `pulumi:"password"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution  *bool    `pulumi:"priorityResolution"`
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// List of property set name
	PropertySets []string `pulumi:"propertySets"`
	// Proxy key from Artifactory Proxies settings. Can't be set if `disableProxy = true`.
	Proxy *string `pulumi:"proxy"`
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams *string `pulumi:"queryParams"`
	// Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
	RejectInvalidJars *bool `pulumi:"rejectInvalidJars"`
	// Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are `generate-if-absent`, `fail`, `ignore-and-generate`, and `pass-thru`.
	RemoteRepoChecksumPolicyType *string `pulumi:"remoteRepoChecksumPolicyType"`
	// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
	// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
	// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
	RemoteRepoLayoutRef *string `pulumi:"remoteRepoLayoutRef"`
	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
	// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds *int `pulumi:"retrievalCachePeriodSeconds"`
	// Deprecated: No longer supported
	ShareConfiguration *bool `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis *int `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally *bool `pulumi:"storeArtifactsLocally"`
	// By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to `true`.
	SuppressPomConsistencyChecks *bool `pulumi:"suppressPomConsistencyChecks"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties *bool `pulumi:"synchronizeProperties"`
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours *int `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// The remote repo URL.
	Url      *string `pulumi:"url"`
	Username *string `pulumi:"username"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

type RemoteSbtRepositoryState struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth pulumi.BoolPtrInput
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled pulumi.BoolPtrInput
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs pulumi.IntPtrInput
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolPtrInput
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect pulumi.BoolPtrInput
	// Client TLS certificate name.
	ClientTlsCertificate   pulumi.StringPtrInput
	ContentSynchronisation RemoteSbtRepositoryContentSynchronisationPtrInput
	// Public description.
	Description pulumi.StringPtrInput
	// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
	// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
	DisableProxy pulumi.BoolPtrInput
	// Whether to disable URL normalization. Default is `false`.
	DisableUrlNormalization pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect pulumi.BoolPtrInput
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
	FetchJarsEagerly pulumi.BoolPtrInput
	// When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
	FetchSourcesEagerly pulumi.BoolPtrInput
	// If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases pulumi.BoolPtrInput
	// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots pulumi.BoolPtrInput
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolPtrInput
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern pulumi.StringPtrInput
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key pulumi.StringPtrInput
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'false'. This field exists in the API but not in the UI.
	ListRemoteFolderItems pulumi.BoolPtrInput
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrInput
	// The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting, older versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.
	MaxUniqueSnapshots pulumi.IntPtrInput
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs pulumi.IntPtrInput
	// The set of mime types that should override the blockMismatchingMimeTypes setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrInput
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrInput
	// Internal description.
	Notes pulumi.StringPtrInput
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  pulumi.BoolPtrInput
	Password pulumi.StringPtrInput
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution  pulumi.BoolPtrInput
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// List of property set name
	PropertySets pulumi.StringArrayInput
	// Proxy key from Artifactory Proxies settings. Can't be set if `disableProxy = true`.
	Proxy pulumi.StringPtrInput
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams pulumi.StringPtrInput
	// Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
	RejectInvalidJars pulumi.BoolPtrInput
	// Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are `generate-if-absent`, `fail`, `ignore-and-generate`, and `pass-thru`.
	RemoteRepoChecksumPolicyType pulumi.StringPtrInput
	// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
	// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
	// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
	RemoteRepoLayoutRef pulumi.StringPtrInput
	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
	// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef pulumi.StringPtrInput
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds pulumi.IntPtrInput
	// Deprecated: No longer supported
	ShareConfiguration pulumi.BoolPtrInput
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrInput
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolPtrInput
	// By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to `true`.
	SuppressPomConsistencyChecks pulumi.BoolPtrInput
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties pulumi.BoolPtrInput
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrInput
	// The remote repo URL.
	Url      pulumi.StringPtrInput
	Username pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (RemoteSbtRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*remoteSbtRepositoryState)(nil)).Elem()
}

type remoteSbtRepositoryArgs struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth *bool `pulumi:"allowAnyHostAuth"`
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled *bool `pulumi:"archiveBrowsingEnabled"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs *int `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut *bool `pulumi:"blackedOut"`
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes *bool `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests *bool `pulumi:"bypassHeadRequests"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect *bool `pulumi:"cdnRedirect"`
	// Client TLS certificate name.
	ClientTlsCertificate   *string                                    `pulumi:"clientTlsCertificate"`
	ContentSynchronisation *RemoteSbtRepositoryContentSynchronisation `pulumi:"contentSynchronisation"`
	// Public description.
	Description *string `pulumi:"description"`
	// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
	// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
	DisableProxy *bool `pulumi:"disableProxy"`
	// Whether to disable URL normalization. Default is `false`.
	DisableUrlNormalization *bool `pulumi:"disableUrlNormalization"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect *bool `pulumi:"downloadDirect"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement *bool `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no
	// artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
	FetchJarsEagerly *bool `pulumi:"fetchJarsEagerly"`
	// When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
	FetchSourcesEagerly *bool `pulumi:"fetchSourcesEagerly"`
	// If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases *bool `pulumi:"handleReleases"`
	// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots *bool `pulumi:"handleSnapshots"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail *bool `pulumi:"hardFail"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern *string `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key string `pulumi:"key"`
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'false'. This field exists in the API but not in the UI.
	ListRemoteFolderItems *bool `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress *string `pulumi:"localAddress"`
	// The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting, older versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.
	MaxUniqueSnapshots *int `pulumi:"maxUniqueSnapshots"`
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs *int `pulumi:"metadataRetrievalTimeoutSecs"`
	// The set of mime types that should override the blockMismatchingMimeTypes setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList *string `pulumi:"mismatchingMimeTypesOverrideList"`
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds *int `pulumi:"missedCachePeriodSeconds"`
	// Internal description.
	Notes *string `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  *bool   `pulumi:"offline"`
	Password *string `pulumi:"password"`
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution  *bool    `pulumi:"priorityResolution"`
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// List of property set name
	PropertySets []string `pulumi:"propertySets"`
	// Proxy key from Artifactory Proxies settings. Can't be set if `disableProxy = true`.
	Proxy *string `pulumi:"proxy"`
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams *string `pulumi:"queryParams"`
	// Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
	RejectInvalidJars *bool `pulumi:"rejectInvalidJars"`
	// Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are `generate-if-absent`, `fail`, `ignore-and-generate`, and `pass-thru`.
	RemoteRepoChecksumPolicyType *string `pulumi:"remoteRepoChecksumPolicyType"`
	// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
	// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
	// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
	RemoteRepoLayoutRef *string `pulumi:"remoteRepoLayoutRef"`
	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
	// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds *int `pulumi:"retrievalCachePeriodSeconds"`
	// Deprecated: No longer supported
	ShareConfiguration *bool `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis *int `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally *bool `pulumi:"storeArtifactsLocally"`
	// By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to `true`.
	SuppressPomConsistencyChecks *bool `pulumi:"suppressPomConsistencyChecks"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties *bool `pulumi:"synchronizeProperties"`
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours *int `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// The remote repo URL.
	Url      string  `pulumi:"url"`
	Username *string `pulumi:"username"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

// The set of arguments for constructing a RemoteSbtRepository resource.
type RemoteSbtRepositoryArgs struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth pulumi.BoolPtrInput
	// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
	// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
	// security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled pulumi.BoolPtrInput
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs pulumi.IntPtrInput
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolPtrInput
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect pulumi.BoolPtrInput
	// Client TLS certificate name.
	ClientTlsCertificate   pulumi.StringPtrInput
	ContentSynchronisation RemoteSbtRepositoryContentSynchronisationPtrInput
	// Public description.
	Description pulumi.StringPtrInput
	// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
	// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
	DisableProxy pulumi.BoolPtrInput
	// Whether to disable URL normalization. Default is `false`.
	DisableUrlNormalization pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect pulumi.BoolPtrInput
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
	FetchJarsEagerly pulumi.BoolPtrInput
	// When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
	FetchSourcesEagerly pulumi.BoolPtrInput
	// If set, Artifactory allows you to deploy release artifacts into this repository.
	HandleReleases pulumi.BoolPtrInput
	// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
	HandleSnapshots pulumi.BoolPtrInput
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolPtrInput
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern pulumi.StringPtrInput
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key pulumi.StringInput
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'false'. This field exists in the API but not in the UI.
	ListRemoteFolderItems pulumi.BoolPtrInput
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrInput
	// The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting, older versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.
	MaxUniqueSnapshots pulumi.IntPtrInput
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs pulumi.IntPtrInput
	// The set of mime types that should override the blockMismatchingMimeTypes setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrInput
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrInput
	// Internal description.
	Notes pulumi.StringPtrInput
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  pulumi.BoolPtrInput
	Password pulumi.StringPtrInput
	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution  pulumi.BoolPtrInput
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// List of property set name
	PropertySets pulumi.StringArrayInput
	// Proxy key from Artifactory Proxies settings. Can't be set if `disableProxy = true`.
	Proxy pulumi.StringPtrInput
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams pulumi.StringPtrInput
	// Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
	RejectInvalidJars pulumi.BoolPtrInput
	// Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are `generate-if-absent`, `fail`, `ignore-and-generate`, and `pass-thru`.
	RemoteRepoChecksumPolicyType pulumi.StringPtrInput
	// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
	// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
	// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
	RemoteRepoLayoutRef pulumi.StringPtrInput
	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
	// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef pulumi.StringPtrInput
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds pulumi.IntPtrInput
	// Deprecated: No longer supported
	ShareConfiguration pulumi.BoolPtrInput
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrInput
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolPtrInput
	// By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to `true`.
	SuppressPomConsistencyChecks pulumi.BoolPtrInput
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties pulumi.BoolPtrInput
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrInput
	// The remote repo URL.
	Url      pulumi.StringInput
	Username pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (RemoteSbtRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*remoteSbtRepositoryArgs)(nil)).Elem()
}

type RemoteSbtRepositoryInput interface {
	pulumi.Input

	ToRemoteSbtRepositoryOutput() RemoteSbtRepositoryOutput
	ToRemoteSbtRepositoryOutputWithContext(ctx context.Context) RemoteSbtRepositoryOutput
}

func (*RemoteSbtRepository) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteSbtRepository)(nil)).Elem()
}

func (i *RemoteSbtRepository) ToRemoteSbtRepositoryOutput() RemoteSbtRepositoryOutput {
	return i.ToRemoteSbtRepositoryOutputWithContext(context.Background())
}

func (i *RemoteSbtRepository) ToRemoteSbtRepositoryOutputWithContext(ctx context.Context) RemoteSbtRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteSbtRepositoryOutput)
}

// RemoteSbtRepositoryArrayInput is an input type that accepts RemoteSbtRepositoryArray and RemoteSbtRepositoryArrayOutput values.
// You can construct a concrete instance of `RemoteSbtRepositoryArrayInput` via:
//
//	RemoteSbtRepositoryArray{ RemoteSbtRepositoryArgs{...} }
type RemoteSbtRepositoryArrayInput interface {
	pulumi.Input

	ToRemoteSbtRepositoryArrayOutput() RemoteSbtRepositoryArrayOutput
	ToRemoteSbtRepositoryArrayOutputWithContext(context.Context) RemoteSbtRepositoryArrayOutput
}

type RemoteSbtRepositoryArray []RemoteSbtRepositoryInput

func (RemoteSbtRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemoteSbtRepository)(nil)).Elem()
}

func (i RemoteSbtRepositoryArray) ToRemoteSbtRepositoryArrayOutput() RemoteSbtRepositoryArrayOutput {
	return i.ToRemoteSbtRepositoryArrayOutputWithContext(context.Background())
}

func (i RemoteSbtRepositoryArray) ToRemoteSbtRepositoryArrayOutputWithContext(ctx context.Context) RemoteSbtRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteSbtRepositoryArrayOutput)
}

// RemoteSbtRepositoryMapInput is an input type that accepts RemoteSbtRepositoryMap and RemoteSbtRepositoryMapOutput values.
// You can construct a concrete instance of `RemoteSbtRepositoryMapInput` via:
//
//	RemoteSbtRepositoryMap{ "key": RemoteSbtRepositoryArgs{...} }
type RemoteSbtRepositoryMapInput interface {
	pulumi.Input

	ToRemoteSbtRepositoryMapOutput() RemoteSbtRepositoryMapOutput
	ToRemoteSbtRepositoryMapOutputWithContext(context.Context) RemoteSbtRepositoryMapOutput
}

type RemoteSbtRepositoryMap map[string]RemoteSbtRepositoryInput

func (RemoteSbtRepositoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemoteSbtRepository)(nil)).Elem()
}

func (i RemoteSbtRepositoryMap) ToRemoteSbtRepositoryMapOutput() RemoteSbtRepositoryMapOutput {
	return i.ToRemoteSbtRepositoryMapOutputWithContext(context.Background())
}

func (i RemoteSbtRepositoryMap) ToRemoteSbtRepositoryMapOutputWithContext(ctx context.Context) RemoteSbtRepositoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteSbtRepositoryMapOutput)
}

type RemoteSbtRepositoryOutput struct{ *pulumi.OutputState }

func (RemoteSbtRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteSbtRepository)(nil)).Elem()
}

func (o RemoteSbtRepositoryOutput) ToRemoteSbtRepositoryOutput() RemoteSbtRepositoryOutput {
	return o
}

func (o RemoteSbtRepositoryOutput) ToRemoteSbtRepositoryOutputWithContext(ctx context.Context) RemoteSbtRepositoryOutput {
	return o
}

// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
// other host.
func (o RemoteSbtRepositoryOutput) AllowAnyHostAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.AllowAnyHostAuth }).(pulumi.BoolOutput)
}

// When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
// therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
// security (e.g., cross-site scripting attacks).
func (o RemoteSbtRepositoryOutput) ArchiveBrowsingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.ArchiveBrowsingEnabled }).(pulumi.BoolOutput)
}

// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
// offline.
func (o RemoteSbtRepositoryOutput) AssumedOfflinePeriodSecs() pulumi.IntOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.IntOutput { return v.AssumedOfflinePeriodSecs }).(pulumi.IntOutput)
}

// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
// resolution.
func (o RemoteSbtRepositoryOutput) BlackedOut() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.BlackedOut }).(pulumi.BoolOutput)
}

// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
// to the override list 'mismatching_mime_types_override_list'.
func (o RemoteSbtRepositoryOutput) BlockMismatchingMimeTypes() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.BlockMismatchingMimeTypes }).(pulumi.BoolOutput)
}

// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
func (o RemoteSbtRepositoryOutput) BypassHeadRequests() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.BypassHeadRequests }).(pulumi.BoolOutput)
}

// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
func (o RemoteSbtRepositoryOutput) CdnRedirect() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.CdnRedirect }).(pulumi.BoolOutput)
}

// Client TLS certificate name.
func (o RemoteSbtRepositoryOutput) ClientTlsCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.ClientTlsCertificate }).(pulumi.StringOutput)
}

func (o RemoteSbtRepositoryOutput) ContentSynchronisation() RemoteSbtRepositoryContentSynchronisationPtrOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) RemoteSbtRepositoryContentSynchronisationPtrOutput {
		return v.ContentSynchronisation
	}).(RemoteSbtRepositoryContentSynchronisationPtrOutput)
}

// Public description.
func (o RemoteSbtRepositoryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set
// for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
func (o RemoteSbtRepositoryOutput) DisableProxy() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.DisableProxy }).(pulumi.BoolOutput)
}

// Whether to disable URL normalization. Default is `false`.
func (o RemoteSbtRepositoryOutput) DisableUrlNormalization() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.DisableUrlNormalization }).(pulumi.BoolOutput)
}

// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
func (o RemoteSbtRepositoryOutput) DownloadDirect() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.DownloadDirect }).(pulumi.BoolOutput)
}

// Enables cookie management if the remote repository uses cookies to manage client state.
func (o RemoteSbtRepositoryOutput) EnableCookieManagement() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.EnableCookieManagement }).(pulumi.BoolOutput)
}

// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no
// artifacts are excluded.
func (o RemoteSbtRepositoryOutput) ExcludesPattern() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.ExcludesPattern }).(pulumi.StringOutput)
}

// When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.
func (o RemoteSbtRepositoryOutput) FetchJarsEagerly() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.FetchJarsEagerly }).(pulumi.BoolOutput)
}

// When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.
func (o RemoteSbtRepositoryOutput) FetchSourcesEagerly() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.FetchSourcesEagerly }).(pulumi.BoolOutput)
}

// If set, Artifactory allows you to deploy release artifacts into this repository.
func (o RemoteSbtRepositoryOutput) HandleReleases() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.HandleReleases }).(pulumi.BoolOutput)
}

// If set, Artifactory allows you to deploy snapshot artifacts into this repository.
func (o RemoteSbtRepositoryOutput) HandleSnapshots() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.HandleSnapshots }).(pulumi.BoolOutput)
}

// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
// communicate with this repository.
func (o RemoteSbtRepositoryOutput) HardFail() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.HardFail }).(pulumi.BoolOutput)
}

// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When
// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
func (o RemoteSbtRepositoryOutput) IncludesPattern() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.IncludesPattern }).(pulumi.StringOutput)
}

// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
// contain spaces or special characters.
func (o RemoteSbtRepositoryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
// the 'Retrieval Cache Period'. Default value is 'false'. This field exists in the API but not in the UI.
func (o RemoteSbtRepositoryOutput) ListRemoteFolderItems() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.ListRemoteFolderItems }).(pulumi.BoolOutput)
}

// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
// multiple network interfaces.
func (o RemoteSbtRepositoryOutput) LocalAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.LocalAddress }).(pulumi.StringOutput)
}

// The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting, older versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.
func (o RemoteSbtRepositoryOutput) MaxUniqueSnapshots() pulumi.IntOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.IntOutput { return v.MaxUniqueSnapshots }).(pulumi.IntOutput)
}

// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
// the remote before serving locally cached artifact or fail the request.
func (o RemoteSbtRepositoryOutput) MetadataRetrievalTimeoutSecs() pulumi.IntOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.IntOutput { return v.MetadataRetrievalTimeoutSecs }).(pulumi.IntOutput)
}

// The set of mime types that should override the blockMismatchingMimeTypes setting. Eg:
// 'application/json,application/xml'. Default value is empty.
func (o RemoteSbtRepositoryOutput) MismatchingMimeTypesOverrideList() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.MismatchingMimeTypesOverrideList }).(pulumi.StringOutput)
}

// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
// found). A value of 0 indicates no caching.
func (o RemoteSbtRepositoryOutput) MissedCachePeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.IntOutput { return v.MissedCachePeriodSeconds }).(pulumi.IntOutput)
}

// Internal description.
func (o RemoteSbtRepositoryOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.Notes }).(pulumi.StringOutput)
}

// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
func (o RemoteSbtRepositoryOutput) Offline() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.Offline }).(pulumi.BoolOutput)
}

func (o RemoteSbtRepositoryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
func (o RemoteSbtRepositoryOutput) PriorityResolution() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.PriorityResolution }).(pulumi.BoolOutput)
}

func (o RemoteSbtRepositoryOutput) ProjectEnvironments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringArrayOutput { return v.ProjectEnvironments }).(pulumi.StringArrayOutput)
}

// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When
// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
func (o RemoteSbtRepositoryOutput) ProjectKey() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.ProjectKey }).(pulumi.StringOutput)
}

// List of property set name
func (o RemoteSbtRepositoryOutput) PropertySets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringArrayOutput { return v.PropertySets }).(pulumi.StringArrayOutput)
}

// Proxy key from Artifactory Proxies settings. Can't be set if `disableProxy = true`.
func (o RemoteSbtRepositoryOutput) Proxy() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.Proxy }).(pulumi.StringOutput)
}

// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
// `param1=val1&param2=val2&param3=val3`
func (o RemoteSbtRepositoryOutput) QueryParams() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.QueryParams }).(pulumi.StringOutput)
}

// Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a "captive portal".
func (o RemoteSbtRepositoryOutput) RejectInvalidJars() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.RejectInvalidJars }).(pulumi.BoolOutput)
}

// Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are `generate-if-absent`, `fail`, `ignore-and-generate`, and `pass-thru`.
func (o RemoteSbtRepositoryOutput) RemoteRepoChecksumPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.RemoteRepoChecksumPolicyType }).(pulumi.StringOutput)
}

// Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an
// empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be
// ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
func (o RemoteSbtRepositoryOutput) RemoteRepoLayoutRef() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.RemoteRepoLayoutRef }).(pulumi.StringOutput)
}

// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that
// corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
func (o RemoteSbtRepositoryOutput) RepoLayoutRef() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.RepoLayoutRef }).(pulumi.StringOutput)
}

// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
// before checking for newer versions on remote server. A value of 0 indicates no caching.
func (o RemoteSbtRepositoryOutput) RetrievalCachePeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.IntOutput { return v.RetrievalCachePeriodSeconds }).(pulumi.IntOutput)
}

// Deprecated: No longer supported
func (o RemoteSbtRepositoryOutput) ShareConfiguration() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.ShareConfiguration }).(pulumi.BoolOutput)
}

// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
// operation is considered a retrieval failure.
func (o RemoteSbtRepositoryOutput) SocketTimeoutMillis() pulumi.IntOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.IntOutput { return v.SocketTimeoutMillis }).(pulumi.IntOutput)
}

// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
// servers.
func (o RemoteSbtRepositoryOutput) StoreArtifactsLocally() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.StoreArtifactsLocally }).(pulumi.BoolOutput)
}

// By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a "409 Conflict" error. You can disable this behavior by setting this attribute to `true`.
func (o RemoteSbtRepositoryOutput) SuppressPomConsistencyChecks() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.SuppressPomConsistencyChecks }).(pulumi.BoolOutput)
}

// When set, remote artifacts are fetched along with their properties.
func (o RemoteSbtRepositoryOutput) SynchronizeProperties() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.SynchronizeProperties }).(pulumi.BoolOutput)
}

// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
func (o RemoteSbtRepositoryOutput) UnusedArtifactsCleanupPeriodHours() pulumi.IntOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.IntOutput { return v.UnusedArtifactsCleanupPeriodHours }).(pulumi.IntOutput)
}

// The remote repo URL.
func (o RemoteSbtRepositoryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

func (o RemoteSbtRepositoryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
// Xray settings.
func (o RemoteSbtRepositoryOutput) XrayIndex() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteSbtRepository) pulumi.BoolOutput { return v.XrayIndex }).(pulumi.BoolOutput)
}

type RemoteSbtRepositoryArrayOutput struct{ *pulumi.OutputState }

func (RemoteSbtRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemoteSbtRepository)(nil)).Elem()
}

func (o RemoteSbtRepositoryArrayOutput) ToRemoteSbtRepositoryArrayOutput() RemoteSbtRepositoryArrayOutput {
	return o
}

func (o RemoteSbtRepositoryArrayOutput) ToRemoteSbtRepositoryArrayOutputWithContext(ctx context.Context) RemoteSbtRepositoryArrayOutput {
	return o
}

func (o RemoteSbtRepositoryArrayOutput) Index(i pulumi.IntInput) RemoteSbtRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RemoteSbtRepository {
		return vs[0].([]*RemoteSbtRepository)[vs[1].(int)]
	}).(RemoteSbtRepositoryOutput)
}

type RemoteSbtRepositoryMapOutput struct{ *pulumi.OutputState }

func (RemoteSbtRepositoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemoteSbtRepository)(nil)).Elem()
}

func (o RemoteSbtRepositoryMapOutput) ToRemoteSbtRepositoryMapOutput() RemoteSbtRepositoryMapOutput {
	return o
}

func (o RemoteSbtRepositoryMapOutput) ToRemoteSbtRepositoryMapOutputWithContext(ctx context.Context) RemoteSbtRepositoryMapOutput {
	return o
}

func (o RemoteSbtRepositoryMapOutput) MapIndex(k pulumi.StringInput) RemoteSbtRepositoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RemoteSbtRepository {
		return vs[0].(map[string]*RemoteSbtRepository)[vs[1].(string)]
	}).(RemoteSbtRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteSbtRepositoryInput)(nil)).Elem(), &RemoteSbtRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteSbtRepositoryArrayInput)(nil)).Elem(), RemoteSbtRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteSbtRepositoryMapInput)(nil)).Elem(), RemoteSbtRepositoryMap{})
	pulumi.RegisterOutputType(RemoteSbtRepositoryOutput{})
	pulumi.RegisterOutputType(RemoteSbtRepositoryArrayOutput{})
	pulumi.RegisterOutputType(RemoteSbtRepositoryMapOutput{})
}
