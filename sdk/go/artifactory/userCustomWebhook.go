// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-artifactory/sdk/v8/go/artifactory/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an Artifactory custom webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.
//
// ## Example Usage
//
// .
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-artifactory/sdk/v8/go/artifactory"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := artifactory.NewUserCustomWebhook(ctx, "user-custom-webhook", &artifactory.UserCustomWebhookArgs{
//				Key: pulumi.String("user-custom-webhook"),
//				EventTypes: pulumi.StringArray{
//					pulumi.String("locked"),
//				},
//				Handlers: artifactory.UserCustomWebhookHandlerArray{
//					&artifactory.UserCustomWebhookHandlerArgs{
//						Url:    pulumi.String("https://tempurl.org"),
//						Method: pulumi.String("POST"),
//						Secrets: pulumi.StringMap{
//							"secretName1": pulumi.String("value1"),
//							"secretName2": pulumi.String("value2"),
//						},
//						HttpHeaders: pulumi.StringMap{
//							"headerName1": pulumi.String("value1"),
//							"headerName2": pulumi.String("value2"),
//						},
//						Payload: pulumi.String("{ \"ref\": \"main\" , \"inputs\": { \"artifact_path\": \"test-repo/repo-path\" } }"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type UserCustomWebhook struct {
	pulumi.CustomResourceState

	// Webhook description. Max length 1000 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Status of webhook. Default to `true`
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// List of event triggers for the Webhook. Allow values: `locked`
	EventTypes pulumi.StringArrayOutput `pulumi:"eventTypes"`
	// At least one is required.
	Handlers UserCustomWebhookHandlerArrayOutput `pulumi:"handlers"`
	// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
	Key pulumi.StringOutput `pulumi:"key"`
}

// NewUserCustomWebhook registers a new resource with the given unique name, arguments, and options.
func NewUserCustomWebhook(ctx *pulumi.Context,
	name string, args *UserCustomWebhookArgs, opts ...pulumi.ResourceOption) (*UserCustomWebhook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EventTypes == nil {
		return nil, errors.New("invalid value for required argument 'EventTypes'")
	}
	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserCustomWebhook
	err := ctx.RegisterResource("artifactory:index/userCustomWebhook:UserCustomWebhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserCustomWebhook gets an existing UserCustomWebhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserCustomWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserCustomWebhookState, opts ...pulumi.ResourceOption) (*UserCustomWebhook, error) {
	var resource UserCustomWebhook
	err := ctx.ReadResource("artifactory:index/userCustomWebhook:UserCustomWebhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserCustomWebhook resources.
type userCustomWebhookState struct {
	// Webhook description. Max length 1000 characters.
	Description *string `pulumi:"description"`
	// Status of webhook. Default to `true`
	Enabled *bool `pulumi:"enabled"`
	// List of event triggers for the Webhook. Allow values: `locked`
	EventTypes []string `pulumi:"eventTypes"`
	// At least one is required.
	Handlers []UserCustomWebhookHandler `pulumi:"handlers"`
	// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
	Key *string `pulumi:"key"`
}

type UserCustomWebhookState struct {
	// Webhook description. Max length 1000 characters.
	Description pulumi.StringPtrInput
	// Status of webhook. Default to `true`
	Enabled pulumi.BoolPtrInput
	// List of event triggers for the Webhook. Allow values: `locked`
	EventTypes pulumi.StringArrayInput
	// At least one is required.
	Handlers UserCustomWebhookHandlerArrayInput
	// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
	Key pulumi.StringPtrInput
}

func (UserCustomWebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*userCustomWebhookState)(nil)).Elem()
}

type userCustomWebhookArgs struct {
	// Webhook description. Max length 1000 characters.
	Description *string `pulumi:"description"`
	// Status of webhook. Default to `true`
	Enabled *bool `pulumi:"enabled"`
	// List of event triggers for the Webhook. Allow values: `locked`
	EventTypes []string `pulumi:"eventTypes"`
	// At least one is required.
	Handlers []UserCustomWebhookHandler `pulumi:"handlers"`
	// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
	Key string `pulumi:"key"`
}

// The set of arguments for constructing a UserCustomWebhook resource.
type UserCustomWebhookArgs struct {
	// Webhook description. Max length 1000 characters.
	Description pulumi.StringPtrInput
	// Status of webhook. Default to `true`
	Enabled pulumi.BoolPtrInput
	// List of event triggers for the Webhook. Allow values: `locked`
	EventTypes pulumi.StringArrayInput
	// At least one is required.
	Handlers UserCustomWebhookHandlerArrayInput
	// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
	Key pulumi.StringInput
}

func (UserCustomWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userCustomWebhookArgs)(nil)).Elem()
}

type UserCustomWebhookInput interface {
	pulumi.Input

	ToUserCustomWebhookOutput() UserCustomWebhookOutput
	ToUserCustomWebhookOutputWithContext(ctx context.Context) UserCustomWebhookOutput
}

func (*UserCustomWebhook) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCustomWebhook)(nil)).Elem()
}

func (i *UserCustomWebhook) ToUserCustomWebhookOutput() UserCustomWebhookOutput {
	return i.ToUserCustomWebhookOutputWithContext(context.Background())
}

func (i *UserCustomWebhook) ToUserCustomWebhookOutputWithContext(ctx context.Context) UserCustomWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCustomWebhookOutput)
}

// UserCustomWebhookArrayInput is an input type that accepts UserCustomWebhookArray and UserCustomWebhookArrayOutput values.
// You can construct a concrete instance of `UserCustomWebhookArrayInput` via:
//
//	UserCustomWebhookArray{ UserCustomWebhookArgs{...} }
type UserCustomWebhookArrayInput interface {
	pulumi.Input

	ToUserCustomWebhookArrayOutput() UserCustomWebhookArrayOutput
	ToUserCustomWebhookArrayOutputWithContext(context.Context) UserCustomWebhookArrayOutput
}

type UserCustomWebhookArray []UserCustomWebhookInput

func (UserCustomWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserCustomWebhook)(nil)).Elem()
}

func (i UserCustomWebhookArray) ToUserCustomWebhookArrayOutput() UserCustomWebhookArrayOutput {
	return i.ToUserCustomWebhookArrayOutputWithContext(context.Background())
}

func (i UserCustomWebhookArray) ToUserCustomWebhookArrayOutputWithContext(ctx context.Context) UserCustomWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCustomWebhookArrayOutput)
}

// UserCustomWebhookMapInput is an input type that accepts UserCustomWebhookMap and UserCustomWebhookMapOutput values.
// You can construct a concrete instance of `UserCustomWebhookMapInput` via:
//
//	UserCustomWebhookMap{ "key": UserCustomWebhookArgs{...} }
type UserCustomWebhookMapInput interface {
	pulumi.Input

	ToUserCustomWebhookMapOutput() UserCustomWebhookMapOutput
	ToUserCustomWebhookMapOutputWithContext(context.Context) UserCustomWebhookMapOutput
}

type UserCustomWebhookMap map[string]UserCustomWebhookInput

func (UserCustomWebhookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserCustomWebhook)(nil)).Elem()
}

func (i UserCustomWebhookMap) ToUserCustomWebhookMapOutput() UserCustomWebhookMapOutput {
	return i.ToUserCustomWebhookMapOutputWithContext(context.Background())
}

func (i UserCustomWebhookMap) ToUserCustomWebhookMapOutputWithContext(ctx context.Context) UserCustomWebhookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCustomWebhookMapOutput)
}

type UserCustomWebhookOutput struct{ *pulumi.OutputState }

func (UserCustomWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCustomWebhook)(nil)).Elem()
}

func (o UserCustomWebhookOutput) ToUserCustomWebhookOutput() UserCustomWebhookOutput {
	return o
}

func (o UserCustomWebhookOutput) ToUserCustomWebhookOutputWithContext(ctx context.Context) UserCustomWebhookOutput {
	return o
}

// Webhook description. Max length 1000 characters.
func (o UserCustomWebhookOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserCustomWebhook) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Status of webhook. Default to `true`
func (o UserCustomWebhookOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *UserCustomWebhook) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// List of event triggers for the Webhook. Allow values: `locked`
func (o UserCustomWebhookOutput) EventTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UserCustomWebhook) pulumi.StringArrayOutput { return v.EventTypes }).(pulumi.StringArrayOutput)
}

// At least one is required.
func (o UserCustomWebhookOutput) Handlers() UserCustomWebhookHandlerArrayOutput {
	return o.ApplyT(func(v *UserCustomWebhook) UserCustomWebhookHandlerArrayOutput { return v.Handlers }).(UserCustomWebhookHandlerArrayOutput)
}

// The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
func (o UserCustomWebhookOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *UserCustomWebhook) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

type UserCustomWebhookArrayOutput struct{ *pulumi.OutputState }

func (UserCustomWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserCustomWebhook)(nil)).Elem()
}

func (o UserCustomWebhookArrayOutput) ToUserCustomWebhookArrayOutput() UserCustomWebhookArrayOutput {
	return o
}

func (o UserCustomWebhookArrayOutput) ToUserCustomWebhookArrayOutputWithContext(ctx context.Context) UserCustomWebhookArrayOutput {
	return o
}

func (o UserCustomWebhookArrayOutput) Index(i pulumi.IntInput) UserCustomWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserCustomWebhook {
		return vs[0].([]*UserCustomWebhook)[vs[1].(int)]
	}).(UserCustomWebhookOutput)
}

type UserCustomWebhookMapOutput struct{ *pulumi.OutputState }

func (UserCustomWebhookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserCustomWebhook)(nil)).Elem()
}

func (o UserCustomWebhookMapOutput) ToUserCustomWebhookMapOutput() UserCustomWebhookMapOutput {
	return o
}

func (o UserCustomWebhookMapOutput) ToUserCustomWebhookMapOutputWithContext(ctx context.Context) UserCustomWebhookMapOutput {
	return o
}

func (o UserCustomWebhookMapOutput) MapIndex(k pulumi.StringInput) UserCustomWebhookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserCustomWebhook {
		return vs[0].(map[string]*UserCustomWebhook)[vs[1].(string)]
	}).(UserCustomWebhookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserCustomWebhookInput)(nil)).Elem(), &UserCustomWebhook{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserCustomWebhookArrayInput)(nil)).Elem(), UserCustomWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserCustomWebhookMapInput)(nil)).Elem(), UserCustomWebhookMap{})
	pulumi.RegisterOutputType(UserCustomWebhookOutput{})
	pulumi.RegisterOutputType(UserCustomWebhookArrayOutput{})
	pulumi.RegisterOutputType(UserCustomWebhookMapOutput{})
}
