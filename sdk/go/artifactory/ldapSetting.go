// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LdapSetting struct {
	pulumi.CustomResourceState

	// (Optional) Auto created users will have access to their profile page and will be able to perform actions such as
	// generating an API key. Default value is "false".
	AllowUserToAccessProfile pulumi.BoolPtrOutput `pulumi:"allowUserToAccessProfile"`
	// (Optional) When set, users are automatically created when using LDAP. Otherwise, users are transient and associated with
	// auto-join groups defined in Artifactory. Default value is "true".
	AutoCreateUser pulumi.BoolPtrOutput `pulumi:"autoCreateUser"`
	// (Optional) An attribute that can be used to map a user's email address to a user created automatically in Artifactory.
	// Default value is "mail".
	EmailAttribute pulumi.StringPtrOutput `pulumi:"emailAttribute"`
	// (Optional) Flag to enable or disable the ldap setting. Default value is "true".
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// (Required) Ldap setting name.
	Key pulumi.StringOutput `pulumi:"key"`
	// (Optional) Protects against LDAP poisoning by filtering out users exposed to vulnerabilities. Default value is "true".
	LdapPoisoningProtection pulumi.BoolPtrOutput `pulumi:"ldapPoisoningProtection"`
	// (Required) Location of the LDAP server in the following format: ldap://myldapserver/dc=sampledomain,dc=com
	LdapUrl pulumi.StringOutput `pulumi:"ldapUrl"`
	// (Optional) The full DN of the user that binds to the LDAP server to perform user searches. Only used with "search"
	// authentication.
	ManagerDn pulumi.StringPtrOutput `pulumi:"managerDn"`
	// (Optional) The password of the user that binds to the LDAP server to perform the search. Only used with "search"
	// authentication.
	ManagerPassword pulumi.StringOutput `pulumi:"managerPassword"`
	// (Optional) When set, supports paging results for the LDAP server. This feature requires that the LDAP server supports a
	// PagedResultsControl configuration. Default value is "true".
	PagingSupportEnabled pulumi.BoolPtrOutput `pulumi:"pagingSupportEnabled"`
	// (Optional) A context name to search in relative to the base DN of the LDAP URL. For example, 'ou=users' With the LDAP
	// Group Add-on enabled, it is possible to enter multiple search base entries separated by a pipe ('|') character.
	SearchBase pulumi.StringPtrOutput `pulumi:"searchBase"`
	// (Optional) A filter expression used to search for the user DN used in LDAP authentication. This is an LDAP search filter
	// (as defined in 'RFC 2254') with optional arguments. In this case, the username is the only argument, and is denoted by
	// '{0}'. Possible examples are: (uid={0}) - This searches for a username match on the attribute. Authentication to LDAP is
	// performed from the DN found if successful.
	SearchFilter pulumi.StringPtrOutput `pulumi:"searchFilter"`
	// (Optional) When set, enables deep search through the sub tree of the LDAP URL + search base. Default value is "true".
	SearchSubTree pulumi.BoolPtrOutput `pulumi:"searchSubTree"`
	// (Optional) A DN pattern that can be used to log users directly in to LDAP. This pattern is used to create a DN string
	// for 'direct' user authentication where the pattern is relative to the base DN in the LDAP URL. The pattern argument {0}
	// is replaced with the username. This only works if anonymous binding is allowed and a direct user DN can be used, which
	// is not the default case for Active Directory (use User DN search filter instead). Example: uid={0},ou=People. Default
	// value is blank/empty.
	UserDnPattern pulumi.StringPtrOutput `pulumi:"userDnPattern"`
}

// NewLdapSetting registers a new resource with the given unique name, arguments, and options.
func NewLdapSetting(ctx *pulumi.Context,
	name string, args *LdapSettingArgs, opts ...pulumi.ResourceOption) (*LdapSetting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.LdapUrl == nil {
		return nil, errors.New("invalid value for required argument 'LdapUrl'")
	}
	var resource LdapSetting
	err := ctx.RegisterResource("artifactory:index/ldapSetting:LdapSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLdapSetting gets an existing LdapSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLdapSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LdapSettingState, opts ...pulumi.ResourceOption) (*LdapSetting, error) {
	var resource LdapSetting
	err := ctx.ReadResource("artifactory:index/ldapSetting:LdapSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LdapSetting resources.
type ldapSettingState struct {
	// (Optional) Auto created users will have access to their profile page and will be able to perform actions such as
	// generating an API key. Default value is "false".
	AllowUserToAccessProfile *bool `pulumi:"allowUserToAccessProfile"`
	// (Optional) When set, users are automatically created when using LDAP. Otherwise, users are transient and associated with
	// auto-join groups defined in Artifactory. Default value is "true".
	AutoCreateUser *bool `pulumi:"autoCreateUser"`
	// (Optional) An attribute that can be used to map a user's email address to a user created automatically in Artifactory.
	// Default value is "mail".
	EmailAttribute *string `pulumi:"emailAttribute"`
	// (Optional) Flag to enable or disable the ldap setting. Default value is "true".
	Enabled *bool `pulumi:"enabled"`
	// (Required) Ldap setting name.
	Key *string `pulumi:"key"`
	// (Optional) Protects against LDAP poisoning by filtering out users exposed to vulnerabilities. Default value is "true".
	LdapPoisoningProtection *bool `pulumi:"ldapPoisoningProtection"`
	// (Required) Location of the LDAP server in the following format: ldap://myldapserver/dc=sampledomain,dc=com
	LdapUrl *string `pulumi:"ldapUrl"`
	// (Optional) The full DN of the user that binds to the LDAP server to perform user searches. Only used with "search"
	// authentication.
	ManagerDn *string `pulumi:"managerDn"`
	// (Optional) The password of the user that binds to the LDAP server to perform the search. Only used with "search"
	// authentication.
	ManagerPassword *string `pulumi:"managerPassword"`
	// (Optional) When set, supports paging results for the LDAP server. This feature requires that the LDAP server supports a
	// PagedResultsControl configuration. Default value is "true".
	PagingSupportEnabled *bool `pulumi:"pagingSupportEnabled"`
	// (Optional) A context name to search in relative to the base DN of the LDAP URL. For example, 'ou=users' With the LDAP
	// Group Add-on enabled, it is possible to enter multiple search base entries separated by a pipe ('|') character.
	SearchBase *string `pulumi:"searchBase"`
	// (Optional) A filter expression used to search for the user DN used in LDAP authentication. This is an LDAP search filter
	// (as defined in 'RFC 2254') with optional arguments. In this case, the username is the only argument, and is denoted by
	// '{0}'. Possible examples are: (uid={0}) - This searches for a username match on the attribute. Authentication to LDAP is
	// performed from the DN found if successful.
	SearchFilter *string `pulumi:"searchFilter"`
	// (Optional) When set, enables deep search through the sub tree of the LDAP URL + search base. Default value is "true".
	SearchSubTree *bool `pulumi:"searchSubTree"`
	// (Optional) A DN pattern that can be used to log users directly in to LDAP. This pattern is used to create a DN string
	// for 'direct' user authentication where the pattern is relative to the base DN in the LDAP URL. The pattern argument {0}
	// is replaced with the username. This only works if anonymous binding is allowed and a direct user DN can be used, which
	// is not the default case for Active Directory (use User DN search filter instead). Example: uid={0},ou=People. Default
	// value is blank/empty.
	UserDnPattern *string `pulumi:"userDnPattern"`
}

type LdapSettingState struct {
	// (Optional) Auto created users will have access to their profile page and will be able to perform actions such as
	// generating an API key. Default value is "false".
	AllowUserToAccessProfile pulumi.BoolPtrInput
	// (Optional) When set, users are automatically created when using LDAP. Otherwise, users are transient and associated with
	// auto-join groups defined in Artifactory. Default value is "true".
	AutoCreateUser pulumi.BoolPtrInput
	// (Optional) An attribute that can be used to map a user's email address to a user created automatically in Artifactory.
	// Default value is "mail".
	EmailAttribute pulumi.StringPtrInput
	// (Optional) Flag to enable or disable the ldap setting. Default value is "true".
	Enabled pulumi.BoolPtrInput
	// (Required) Ldap setting name.
	Key pulumi.StringPtrInput
	// (Optional) Protects against LDAP poisoning by filtering out users exposed to vulnerabilities. Default value is "true".
	LdapPoisoningProtection pulumi.BoolPtrInput
	// (Required) Location of the LDAP server in the following format: ldap://myldapserver/dc=sampledomain,dc=com
	LdapUrl pulumi.StringPtrInput
	// (Optional) The full DN of the user that binds to the LDAP server to perform user searches. Only used with "search"
	// authentication.
	ManagerDn pulumi.StringPtrInput
	// (Optional) The password of the user that binds to the LDAP server to perform the search. Only used with "search"
	// authentication.
	ManagerPassword pulumi.StringPtrInput
	// (Optional) When set, supports paging results for the LDAP server. This feature requires that the LDAP server supports a
	// PagedResultsControl configuration. Default value is "true".
	PagingSupportEnabled pulumi.BoolPtrInput
	// (Optional) A context name to search in relative to the base DN of the LDAP URL. For example, 'ou=users' With the LDAP
	// Group Add-on enabled, it is possible to enter multiple search base entries separated by a pipe ('|') character.
	SearchBase pulumi.StringPtrInput
	// (Optional) A filter expression used to search for the user DN used in LDAP authentication. This is an LDAP search filter
	// (as defined in 'RFC 2254') with optional arguments. In this case, the username is the only argument, and is denoted by
	// '{0}'. Possible examples are: (uid={0}) - This searches for a username match on the attribute. Authentication to LDAP is
	// performed from the DN found if successful.
	SearchFilter pulumi.StringPtrInput
	// (Optional) When set, enables deep search through the sub tree of the LDAP URL + search base. Default value is "true".
	SearchSubTree pulumi.BoolPtrInput
	// (Optional) A DN pattern that can be used to log users directly in to LDAP. This pattern is used to create a DN string
	// for 'direct' user authentication where the pattern is relative to the base DN in the LDAP URL. The pattern argument {0}
	// is replaced with the username. This only works if anonymous binding is allowed and a direct user DN can be used, which
	// is not the default case for Active Directory (use User DN search filter instead). Example: uid={0},ou=People. Default
	// value is blank/empty.
	UserDnPattern pulumi.StringPtrInput
}

func (LdapSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*ldapSettingState)(nil)).Elem()
}

type ldapSettingArgs struct {
	// (Optional) Auto created users will have access to their profile page and will be able to perform actions such as
	// generating an API key. Default value is "false".
	AllowUserToAccessProfile *bool `pulumi:"allowUserToAccessProfile"`
	// (Optional) When set, users are automatically created when using LDAP. Otherwise, users are transient and associated with
	// auto-join groups defined in Artifactory. Default value is "true".
	AutoCreateUser *bool `pulumi:"autoCreateUser"`
	// (Optional) An attribute that can be used to map a user's email address to a user created automatically in Artifactory.
	// Default value is "mail".
	EmailAttribute *string `pulumi:"emailAttribute"`
	// (Optional) Flag to enable or disable the ldap setting. Default value is "true".
	Enabled *bool `pulumi:"enabled"`
	// (Required) Ldap setting name.
	Key string `pulumi:"key"`
	// (Optional) Protects against LDAP poisoning by filtering out users exposed to vulnerabilities. Default value is "true".
	LdapPoisoningProtection *bool `pulumi:"ldapPoisoningProtection"`
	// (Required) Location of the LDAP server in the following format: ldap://myldapserver/dc=sampledomain,dc=com
	LdapUrl string `pulumi:"ldapUrl"`
	// (Optional) The full DN of the user that binds to the LDAP server to perform user searches. Only used with "search"
	// authentication.
	ManagerDn *string `pulumi:"managerDn"`
	// (Optional) The password of the user that binds to the LDAP server to perform the search. Only used with "search"
	// authentication.
	ManagerPassword *string `pulumi:"managerPassword"`
	// (Optional) When set, supports paging results for the LDAP server. This feature requires that the LDAP server supports a
	// PagedResultsControl configuration. Default value is "true".
	PagingSupportEnabled *bool `pulumi:"pagingSupportEnabled"`
	// (Optional) A context name to search in relative to the base DN of the LDAP URL. For example, 'ou=users' With the LDAP
	// Group Add-on enabled, it is possible to enter multiple search base entries separated by a pipe ('|') character.
	SearchBase *string `pulumi:"searchBase"`
	// (Optional) A filter expression used to search for the user DN used in LDAP authentication. This is an LDAP search filter
	// (as defined in 'RFC 2254') with optional arguments. In this case, the username is the only argument, and is denoted by
	// '{0}'. Possible examples are: (uid={0}) - This searches for a username match on the attribute. Authentication to LDAP is
	// performed from the DN found if successful.
	SearchFilter *string `pulumi:"searchFilter"`
	// (Optional) When set, enables deep search through the sub tree of the LDAP URL + search base. Default value is "true".
	SearchSubTree *bool `pulumi:"searchSubTree"`
	// (Optional) A DN pattern that can be used to log users directly in to LDAP. This pattern is used to create a DN string
	// for 'direct' user authentication where the pattern is relative to the base DN in the LDAP URL. The pattern argument {0}
	// is replaced with the username. This only works if anonymous binding is allowed and a direct user DN can be used, which
	// is not the default case for Active Directory (use User DN search filter instead). Example: uid={0},ou=People. Default
	// value is blank/empty.
	UserDnPattern *string `pulumi:"userDnPattern"`
}

// The set of arguments for constructing a LdapSetting resource.
type LdapSettingArgs struct {
	// (Optional) Auto created users will have access to their profile page and will be able to perform actions such as
	// generating an API key. Default value is "false".
	AllowUserToAccessProfile pulumi.BoolPtrInput
	// (Optional) When set, users are automatically created when using LDAP. Otherwise, users are transient and associated with
	// auto-join groups defined in Artifactory. Default value is "true".
	AutoCreateUser pulumi.BoolPtrInput
	// (Optional) An attribute that can be used to map a user's email address to a user created automatically in Artifactory.
	// Default value is "mail".
	EmailAttribute pulumi.StringPtrInput
	// (Optional) Flag to enable or disable the ldap setting. Default value is "true".
	Enabled pulumi.BoolPtrInput
	// (Required) Ldap setting name.
	Key pulumi.StringInput
	// (Optional) Protects against LDAP poisoning by filtering out users exposed to vulnerabilities. Default value is "true".
	LdapPoisoningProtection pulumi.BoolPtrInput
	// (Required) Location of the LDAP server in the following format: ldap://myldapserver/dc=sampledomain,dc=com
	LdapUrl pulumi.StringInput
	// (Optional) The full DN of the user that binds to the LDAP server to perform user searches. Only used with "search"
	// authentication.
	ManagerDn pulumi.StringPtrInput
	// (Optional) The password of the user that binds to the LDAP server to perform the search. Only used with "search"
	// authentication.
	ManagerPassword pulumi.StringPtrInput
	// (Optional) When set, supports paging results for the LDAP server. This feature requires that the LDAP server supports a
	// PagedResultsControl configuration. Default value is "true".
	PagingSupportEnabled pulumi.BoolPtrInput
	// (Optional) A context name to search in relative to the base DN of the LDAP URL. For example, 'ou=users' With the LDAP
	// Group Add-on enabled, it is possible to enter multiple search base entries separated by a pipe ('|') character.
	SearchBase pulumi.StringPtrInput
	// (Optional) A filter expression used to search for the user DN used in LDAP authentication. This is an LDAP search filter
	// (as defined in 'RFC 2254') with optional arguments. In this case, the username is the only argument, and is denoted by
	// '{0}'. Possible examples are: (uid={0}) - This searches for a username match on the attribute. Authentication to LDAP is
	// performed from the DN found if successful.
	SearchFilter pulumi.StringPtrInput
	// (Optional) When set, enables deep search through the sub tree of the LDAP URL + search base. Default value is "true".
	SearchSubTree pulumi.BoolPtrInput
	// (Optional) A DN pattern that can be used to log users directly in to LDAP. This pattern is used to create a DN string
	// for 'direct' user authentication where the pattern is relative to the base DN in the LDAP URL. The pattern argument {0}
	// is replaced with the username. This only works if anonymous binding is allowed and a direct user DN can be used, which
	// is not the default case for Active Directory (use User DN search filter instead). Example: uid={0},ou=People. Default
	// value is blank/empty.
	UserDnPattern pulumi.StringPtrInput
}

func (LdapSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ldapSettingArgs)(nil)).Elem()
}

type LdapSettingInput interface {
	pulumi.Input

	ToLdapSettingOutput() LdapSettingOutput
	ToLdapSettingOutputWithContext(ctx context.Context) LdapSettingOutput
}

func (*LdapSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**LdapSetting)(nil)).Elem()
}

func (i *LdapSetting) ToLdapSettingOutput() LdapSettingOutput {
	return i.ToLdapSettingOutputWithContext(context.Background())
}

func (i *LdapSetting) ToLdapSettingOutputWithContext(ctx context.Context) LdapSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapSettingOutput)
}

// LdapSettingArrayInput is an input type that accepts LdapSettingArray and LdapSettingArrayOutput values.
// You can construct a concrete instance of `LdapSettingArrayInput` via:
//
//          LdapSettingArray{ LdapSettingArgs{...} }
type LdapSettingArrayInput interface {
	pulumi.Input

	ToLdapSettingArrayOutput() LdapSettingArrayOutput
	ToLdapSettingArrayOutputWithContext(context.Context) LdapSettingArrayOutput
}

type LdapSettingArray []LdapSettingInput

func (LdapSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LdapSetting)(nil)).Elem()
}

func (i LdapSettingArray) ToLdapSettingArrayOutput() LdapSettingArrayOutput {
	return i.ToLdapSettingArrayOutputWithContext(context.Background())
}

func (i LdapSettingArray) ToLdapSettingArrayOutputWithContext(ctx context.Context) LdapSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapSettingArrayOutput)
}

// LdapSettingMapInput is an input type that accepts LdapSettingMap and LdapSettingMapOutput values.
// You can construct a concrete instance of `LdapSettingMapInput` via:
//
//          LdapSettingMap{ "key": LdapSettingArgs{...} }
type LdapSettingMapInput interface {
	pulumi.Input

	ToLdapSettingMapOutput() LdapSettingMapOutput
	ToLdapSettingMapOutputWithContext(context.Context) LdapSettingMapOutput
}

type LdapSettingMap map[string]LdapSettingInput

func (LdapSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LdapSetting)(nil)).Elem()
}

func (i LdapSettingMap) ToLdapSettingMapOutput() LdapSettingMapOutput {
	return i.ToLdapSettingMapOutputWithContext(context.Background())
}

func (i LdapSettingMap) ToLdapSettingMapOutputWithContext(ctx context.Context) LdapSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapSettingMapOutput)
}

type LdapSettingOutput struct{ *pulumi.OutputState }

func (LdapSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LdapSetting)(nil)).Elem()
}

func (o LdapSettingOutput) ToLdapSettingOutput() LdapSettingOutput {
	return o
}

func (o LdapSettingOutput) ToLdapSettingOutputWithContext(ctx context.Context) LdapSettingOutput {
	return o
}

type LdapSettingArrayOutput struct{ *pulumi.OutputState }

func (LdapSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LdapSetting)(nil)).Elem()
}

func (o LdapSettingArrayOutput) ToLdapSettingArrayOutput() LdapSettingArrayOutput {
	return o
}

func (o LdapSettingArrayOutput) ToLdapSettingArrayOutputWithContext(ctx context.Context) LdapSettingArrayOutput {
	return o
}

func (o LdapSettingArrayOutput) Index(i pulumi.IntInput) LdapSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LdapSetting {
		return vs[0].([]*LdapSetting)[vs[1].(int)]
	}).(LdapSettingOutput)
}

type LdapSettingMapOutput struct{ *pulumi.OutputState }

func (LdapSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LdapSetting)(nil)).Elem()
}

func (o LdapSettingMapOutput) ToLdapSettingMapOutput() LdapSettingMapOutput {
	return o
}

func (o LdapSettingMapOutput) ToLdapSettingMapOutputWithContext(ctx context.Context) LdapSettingMapOutput {
	return o
}

func (o LdapSettingMapOutput) MapIndex(k pulumi.StringInput) LdapSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LdapSetting {
		return vs[0].(map[string]*LdapSetting)[vs[1].(string)]
	}).(LdapSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LdapSettingInput)(nil)).Elem(), &LdapSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapSettingArrayInput)(nil)).Elem(), LdapSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapSettingMapInput)(nil)).Elem(), LdapSettingMap{})
	pulumi.RegisterOutputType(LdapSettingOutput{})
	pulumi.RegisterOutputType(LdapSettingArrayOutput{})
	pulumi.RegisterOutputType(LdapSettingMapOutput{})
}
