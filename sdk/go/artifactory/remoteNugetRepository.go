// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactory

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a remote Nuget repository.
// Official documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/NuGet+Repositories).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-artifactory/sdk/v3/go/artifactory"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := artifactory.NewRemoteNugetRepository(ctx, "my-remote-nuget", &artifactory.RemoteNugetRepositoryArgs{
//				DownloadContextPath:      pulumi.String("api/v2/package"),
//				ForceNugetAuthentication: pulumi.Bool(true),
//				Key:                      pulumi.String("my-remote-nuget"),
//				SymbolServerUrl:          pulumi.String("https://symbols.nuget.org/download/symbols"),
//				Url:                      pulumi.String("https://www.nuget.org/"),
//				V3FeedUrl:                pulumi.String("https://api.nuget.org/v3/index.json"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Remote repositories can be imported using their name, e.g.
//
// ```sh
//
//	$ pulumi import artifactory:index/remoteNugetRepository:RemoteNugetRepository my-remote-nuget my-remote-nuget
//
// ```
type RemoteNugetRepository struct {
	pulumi.CustomResourceState

	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth pulumi.BoolPtrOutput `pulumi:"allowAnyHostAuth"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs pulumi.IntPtrOutput `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolPtrOutput `pulumi:"blackedOut"`
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes pulumi.BoolPtrOutput `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests pulumi.BoolPtrOutput `pulumi:"bypassHeadRequests"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect pulumi.BoolPtrOutput `pulumi:"cdnRedirect"`
	// Client TLS certificate name.
	ClientTlsCertificate   pulumi.StringOutput                               `pulumi:"clientTlsCertificate"`
	ContentSynchronisation RemoteNugetRepositoryContentSynchronisationOutput `pulumi:"contentSynchronisation"`
	// Public description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The context path prefix through which NuGet downloads are served.
	// For example, the NuGet Gallery download URL is `https://nuget.org/api/v2/package`, so the repository
	// URL should be configured as `https://nuget.org` and the download context path should be configured as `api/v2/package`. Default value is `api/v2/package`.
	DownloadContextPath pulumi.StringPtrOutput `pulumi:"downloadContextPath"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect pulumi.BoolPtrOutput `pulumi:"downloadDirect"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrOutput `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringPtrOutput `pulumi:"excludesPattern"`
	// When proxying a remote NuGet repository, customize feed resource location using this attribute. Default value is `api/v2`.
	FeedContextPath pulumi.StringPtrOutput `pulumi:"feedContextPath"`
	// Force basic authentication credentials in order to use this repository. Default value is `false`.
	ForceNugetAuthentication pulumi.BoolPtrOutput `pulumi:"forceNugetAuthentication"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolPtrOutput `pulumi:"hardFail"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrOutput `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key pulumi.StringOutput `pulumi:"key"`
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'true'.
	ListRemoteFolderItems pulumi.BoolPtrOutput `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrOutput `pulumi:"localAddress"`
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs pulumi.IntPtrOutput `pulumi:"metadataRetrievalTimeoutSecs"`
	// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrOutput `pulumi:"mismatchingMimeTypesOverrideList"`
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrOutput `pulumi:"missedCachePeriodSeconds"`
	// Internal description.
	Notes pulumi.StringPtrOutput `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline     pulumi.BoolPtrOutput   `pulumi:"offline"`
	PackageType pulumi.StringOutput    `pulumi:"packageType"`
	Password    pulumi.StringPtrOutput `pulumi:"password"`
	// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
	// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
	// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
	PriorityResolution pulumi.BoolPtrOutput `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV", "PROD", or one of custom environment. Before
	// Artifactory 7.53.1, up to 2 values ("DEV" and "PROD") are allowed. From 7.53.1 onward, only one value is allowed. The
	// attribute should only be used if the repository is already assigned to the existing project. If not, the attribute will
	// be ignored by Artifactory, but will remain in the Terraform state, which will create state drift during the update.
	ProjectEnvironments pulumi.StringArrayOutput `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrOutput `pulumi:"projectKey"`
	// List of property set names
	PropertySets pulumi.StringArrayOutput `pulumi:"propertySets"`
	// Proxy key from Artifactory Proxies settings
	Proxy pulumi.StringPtrOutput `pulumi:"proxy"`
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams pulumi.StringPtrOutput `pulumi:"queryParams"`
	// Repository layout key for the remote layout mapping.
	RemoteRepoLayoutRef pulumi.StringPtrOutput `pulumi:"remoteRepoLayoutRef"`
	// Repository layout key for the local repository
	RepoLayoutRef pulumi.StringPtrOutput `pulumi:"repoLayoutRef"`
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds pulumi.IntPtrOutput `pulumi:"retrievalCachePeriodSeconds"`
	ShareConfiguration          pulumi.BoolOutput   `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrOutput `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolPtrOutput `pulumi:"storeArtifactsLocally"`
	// NuGet symbol server URL. Default value is `https://symbols.nuget.org/download/symbols`.
	SymbolServerUrl pulumi.StringPtrOutput `pulumi:"symbolServerUrl"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties pulumi.BoolPtrOutput `pulumi:"synchronizeProperties"`
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrOutput `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// The remote repo URL.
	Url      pulumi.StringOutput    `pulumi:"url"`
	Username pulumi.StringPtrOutput `pulumi:"username"`
	// The URL to the NuGet v3 feed. Default value is `https://api.nuget.org/v3/index.json`.
	V3FeedUrl pulumi.StringPtrOutput `pulumi:"v3FeedUrl"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrOutput `pulumi:"xrayIndex"`
}

// NewRemoteNugetRepository registers a new resource with the given unique name, arguments, and options.
func NewRemoteNugetRepository(ctx *pulumi.Context,
	name string, args *RemoteNugetRepositoryArgs, opts ...pulumi.ResourceOption) (*RemoteNugetRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	var resource RemoteNugetRepository
	err := ctx.RegisterResource("artifactory:index/remoteNugetRepository:RemoteNugetRepository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRemoteNugetRepository gets an existing RemoteNugetRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRemoteNugetRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RemoteNugetRepositoryState, opts ...pulumi.ResourceOption) (*RemoteNugetRepository, error) {
	var resource RemoteNugetRepository
	err := ctx.ReadResource("artifactory:index/remoteNugetRepository:RemoteNugetRepository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RemoteNugetRepository resources.
type remoteNugetRepositoryState struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth *bool `pulumi:"allowAnyHostAuth"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs *int `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut *bool `pulumi:"blackedOut"`
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes *bool `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests *bool `pulumi:"bypassHeadRequests"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect *bool `pulumi:"cdnRedirect"`
	// Client TLS certificate name.
	ClientTlsCertificate   *string                                      `pulumi:"clientTlsCertificate"`
	ContentSynchronisation *RemoteNugetRepositoryContentSynchronisation `pulumi:"contentSynchronisation"`
	// Public description.
	Description *string `pulumi:"description"`
	// The context path prefix through which NuGet downloads are served.
	// For example, the NuGet Gallery download URL is `https://nuget.org/api/v2/package`, so the repository
	// URL should be configured as `https://nuget.org` and the download context path should be configured as `api/v2/package`. Default value is `api/v2/package`.
	DownloadContextPath *string `pulumi:"downloadContextPath"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect *bool `pulumi:"downloadDirect"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement *bool `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
	// artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// When proxying a remote NuGet repository, customize feed resource location using this attribute. Default value is `api/v2`.
	FeedContextPath *string `pulumi:"feedContextPath"`
	// Force basic authentication credentials in order to use this repository. Default value is `false`.
	ForceNugetAuthentication *bool `pulumi:"forceNugetAuthentication"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail *bool `pulumi:"hardFail"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern *string `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key *string `pulumi:"key"`
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'true'.
	ListRemoteFolderItems *bool `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress *string `pulumi:"localAddress"`
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs *int `pulumi:"metadataRetrievalTimeoutSecs"`
	// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList *string `pulumi:"mismatchingMimeTypesOverrideList"`
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds *int `pulumi:"missedCachePeriodSeconds"`
	// Internal description.
	Notes *string `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline     *bool   `pulumi:"offline"`
	PackageType *string `pulumi:"packageType"`
	Password    *string `pulumi:"password"`
	// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
	// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
	// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
	PriorityResolution *bool `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV", "PROD", or one of custom environment. Before
	// Artifactory 7.53.1, up to 2 values ("DEV" and "PROD") are allowed. From 7.53.1 onward, only one value is allowed. The
	// attribute should only be used if the repository is already assigned to the existing project. If not, the attribute will
	// be ignored by Artifactory, but will remain in the Terraform state, which will create state drift during the update.
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// List of property set names
	PropertySets []string `pulumi:"propertySets"`
	// Proxy key from Artifactory Proxies settings
	Proxy *string `pulumi:"proxy"`
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams *string `pulumi:"queryParams"`
	// Repository layout key for the remote layout mapping.
	RemoteRepoLayoutRef *string `pulumi:"remoteRepoLayoutRef"`
	// Repository layout key for the local repository
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds *int  `pulumi:"retrievalCachePeriodSeconds"`
	ShareConfiguration          *bool `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis *int `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally *bool `pulumi:"storeArtifactsLocally"`
	// NuGet symbol server URL. Default value is `https://symbols.nuget.org/download/symbols`.
	SymbolServerUrl *string `pulumi:"symbolServerUrl"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties *bool `pulumi:"synchronizeProperties"`
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours *int `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// The remote repo URL.
	Url      *string `pulumi:"url"`
	Username *string `pulumi:"username"`
	// The URL to the NuGet v3 feed. Default value is `https://api.nuget.org/v3/index.json`.
	V3FeedUrl *string `pulumi:"v3FeedUrl"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

type RemoteNugetRepositoryState struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth pulumi.BoolPtrInput
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs pulumi.IntPtrInput
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolPtrInput
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect pulumi.BoolPtrInput
	// Client TLS certificate name.
	ClientTlsCertificate   pulumi.StringPtrInput
	ContentSynchronisation RemoteNugetRepositoryContentSynchronisationPtrInput
	// Public description.
	Description pulumi.StringPtrInput
	// The context path prefix through which NuGet downloads are served.
	// For example, the NuGet Gallery download URL is `https://nuget.org/api/v2/package`, so the repository
	// URL should be configured as `https://nuget.org` and the download context path should be configured as `api/v2/package`. Default value is `api/v2/package`.
	DownloadContextPath pulumi.StringPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect pulumi.BoolPtrInput
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// When proxying a remote NuGet repository, customize feed resource location using this attribute. Default value is `api/v2`.
	FeedContextPath pulumi.StringPtrInput
	// Force basic authentication credentials in order to use this repository. Default value is `false`.
	ForceNugetAuthentication pulumi.BoolPtrInput
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolPtrInput
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrInput
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key pulumi.StringPtrInput
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'true'.
	ListRemoteFolderItems pulumi.BoolPtrInput
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrInput
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs pulumi.IntPtrInput
	// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrInput
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrInput
	// Internal description.
	Notes pulumi.StringPtrInput
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline     pulumi.BoolPtrInput
	PackageType pulumi.StringPtrInput
	Password    pulumi.StringPtrInput
	// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
	// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
	// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
	PriorityResolution pulumi.BoolPtrInput
	// Project environment for assigning this repository to. Allow values: "DEV", "PROD", or one of custom environment. Before
	// Artifactory 7.53.1, up to 2 values ("DEV" and "PROD") are allowed. From 7.53.1 onward, only one value is allowed. The
	// attribute should only be used if the repository is already assigned to the existing project. If not, the attribute will
	// be ignored by Artifactory, but will remain in the Terraform state, which will create state drift during the update.
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// List of property set names
	PropertySets pulumi.StringArrayInput
	// Proxy key from Artifactory Proxies settings
	Proxy pulumi.StringPtrInput
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams pulumi.StringPtrInput
	// Repository layout key for the remote layout mapping.
	RemoteRepoLayoutRef pulumi.StringPtrInput
	// Repository layout key for the local repository
	RepoLayoutRef pulumi.StringPtrInput
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds pulumi.IntPtrInput
	ShareConfiguration          pulumi.BoolPtrInput
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrInput
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolPtrInput
	// NuGet symbol server URL. Default value is `https://symbols.nuget.org/download/symbols`.
	SymbolServerUrl pulumi.StringPtrInput
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties pulumi.BoolPtrInput
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrInput
	// The remote repo URL.
	Url      pulumi.StringPtrInput
	Username pulumi.StringPtrInput
	// The URL to the NuGet v3 feed. Default value is `https://api.nuget.org/v3/index.json`.
	V3FeedUrl pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (RemoteNugetRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*remoteNugetRepositoryState)(nil)).Elem()
}

type remoteNugetRepositoryArgs struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth *bool `pulumi:"allowAnyHostAuth"`
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs *int `pulumi:"assumedOfflinePeriodSecs"`
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut *bool `pulumi:"blackedOut"`
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes *bool `pulumi:"blockMismatchingMimeTypes"`
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests *bool `pulumi:"bypassHeadRequests"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect *bool `pulumi:"cdnRedirect"`
	// Client TLS certificate name.
	ClientTlsCertificate   *string                                      `pulumi:"clientTlsCertificate"`
	ContentSynchronisation *RemoteNugetRepositoryContentSynchronisation `pulumi:"contentSynchronisation"`
	// Public description.
	Description *string `pulumi:"description"`
	// The context path prefix through which NuGet downloads are served.
	// For example, the NuGet Gallery download URL is `https://nuget.org/api/v2/package`, so the repository
	// URL should be configured as `https://nuget.org` and the download context path should be configured as `api/v2/package`. Default value is `api/v2/package`.
	DownloadContextPath *string `pulumi:"downloadContextPath"`
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect *bool `pulumi:"downloadDirect"`
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement *bool `pulumi:"enableCookieManagement"`
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
	// artifacts are excluded.
	ExcludesPattern *string `pulumi:"excludesPattern"`
	// When proxying a remote NuGet repository, customize feed resource location using this attribute. Default value is `api/v2`.
	FeedContextPath *string `pulumi:"feedContextPath"`
	// Force basic authentication credentials in order to use this repository. Default value is `false`.
	ForceNugetAuthentication *bool `pulumi:"forceNugetAuthentication"`
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail *bool `pulumi:"hardFail"`
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern *string `pulumi:"includesPattern"`
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key string `pulumi:"key"`
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'true'.
	ListRemoteFolderItems *bool `pulumi:"listRemoteFolderItems"`
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress *string `pulumi:"localAddress"`
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs *int `pulumi:"metadataRetrievalTimeoutSecs"`
	// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList *string `pulumi:"mismatchingMimeTypesOverrideList"`
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds *int `pulumi:"missedCachePeriodSeconds"`
	// Internal description.
	Notes *string `pulumi:"notes"`
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  *bool   `pulumi:"offline"`
	Password *string `pulumi:"password"`
	// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
	// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
	// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
	PriorityResolution *bool `pulumi:"priorityResolution"`
	// Project environment for assigning this repository to. Allow values: "DEV", "PROD", or one of custom environment. Before
	// Artifactory 7.53.1, up to 2 values ("DEV" and "PROD") are allowed. From 7.53.1 onward, only one value is allowed. The
	// attribute should only be used if the repository is already assigned to the existing project. If not, the attribute will
	// be ignored by Artifactory, but will remain in the Terraform state, which will create state drift during the update.
	ProjectEnvironments []string `pulumi:"projectEnvironments"`
	// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `pulumi:"projectKey"`
	// List of property set names
	PropertySets []string `pulumi:"propertySets"`
	// Proxy key from Artifactory Proxies settings
	Proxy *string `pulumi:"proxy"`
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams *string `pulumi:"queryParams"`
	// Repository layout key for the remote layout mapping.
	RemoteRepoLayoutRef *string `pulumi:"remoteRepoLayoutRef"`
	// Repository layout key for the local repository
	RepoLayoutRef *string `pulumi:"repoLayoutRef"`
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds *int  `pulumi:"retrievalCachePeriodSeconds"`
	ShareConfiguration          *bool `pulumi:"shareConfiguration"`
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis *int `pulumi:"socketTimeoutMillis"`
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally *bool `pulumi:"storeArtifactsLocally"`
	// NuGet symbol server URL. Default value is `https://symbols.nuget.org/download/symbols`.
	SymbolServerUrl *string `pulumi:"symbolServerUrl"`
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties *bool `pulumi:"synchronizeProperties"`
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours *int `pulumi:"unusedArtifactsCleanupPeriodHours"`
	// The remote repo URL.
	Url      string  `pulumi:"url"`
	Username *string `pulumi:"username"`
	// The URL to the NuGet v3 feed. Default value is `https://api.nuget.org/v3/index.json`.
	V3FeedUrl *string `pulumi:"v3FeedUrl"`
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex *bool `pulumi:"xrayIndex"`
}

// The set of arguments for constructing a RemoteNugetRepository resource.
type RemoteNugetRepositoryArgs struct {
	// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
	// other host.
	AllowAnyHostAuth pulumi.BoolPtrInput
	// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
	// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
	// offline.
	AssumedOfflinePeriodSecs pulumi.IntPtrInput
	// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
	// resolution.
	BlackedOut pulumi.BoolPtrInput
	// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
	// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
	// to the override list 'mismatching_mime_types_override_list'.
	BlockMismatchingMimeTypes pulumi.BoolPtrInput
	// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
	// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
	// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
	BypassHeadRequests pulumi.BoolPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
	// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect pulumi.BoolPtrInput
	// Client TLS certificate name.
	ClientTlsCertificate   pulumi.StringPtrInput
	ContentSynchronisation RemoteNugetRepositoryContentSynchronisationPtrInput
	// Public description.
	Description pulumi.StringPtrInput
	// The context path prefix through which NuGet downloads are served.
	// For example, the NuGet Gallery download URL is `https://nuget.org/api/v2/package`, so the repository
	// URL should be configured as `https://nuget.org` and the download context path should be configured as `api/v2/package`. Default value is `api/v2/package`.
	DownloadContextPath pulumi.StringPtrInput
	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
	// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
	DownloadDirect pulumi.BoolPtrInput
	// Enables cookie management if the remote repository uses cookies to manage client state.
	EnableCookieManagement pulumi.BoolPtrInput
	// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
	// artifacts are excluded.
	ExcludesPattern pulumi.StringPtrInput
	// When proxying a remote NuGet repository, customize feed resource location using this attribute. Default value is `api/v2`.
	FeedContextPath pulumi.StringPtrInput
	// Force basic authentication credentials in order to use this repository. Default value is `false`.
	ForceNugetAuthentication pulumi.BoolPtrInput
	// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
	// communicate with this repository.
	HardFail pulumi.BoolPtrInput
	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
	// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
	IncludesPattern pulumi.StringPtrInput
	// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
	// contain spaces or special characters.
	Key pulumi.StringInput
	// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
	// the 'Retrieval Cache Period'. Default value is 'true'.
	ListRemoteFolderItems pulumi.BoolPtrInput
	// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
	// multiple network interfaces.
	LocalAddress pulumi.StringPtrInput
	// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
	// the remote before serving locally cached artifact or fail the request.
	MetadataRetrievalTimeoutSecs pulumi.IntPtrInput
	// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
	// 'application/json,application/xml'. Default value is empty.
	MismatchingMimeTypesOverrideList pulumi.StringPtrInput
	// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
	// found). A value of 0 indicates no caching.
	MissedCachePeriodSeconds pulumi.IntPtrInput
	// Internal description.
	Notes pulumi.StringPtrInput
	// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
	Offline  pulumi.BoolPtrInput
	Password pulumi.StringPtrInput
	// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
	// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
	// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
	PriorityResolution pulumi.BoolPtrInput
	// Project environment for assigning this repository to. Allow values: "DEV", "PROD", or one of custom environment. Before
	// Artifactory 7.53.1, up to 2 values ("DEV" and "PROD") are allowed. From 7.53.1 onward, only one value is allowed. The
	// attribute should only be used if the repository is already assigned to the existing project. If not, the attribute will
	// be ignored by Artifactory, but will remain in the Terraform state, which will create state drift during the update.
	ProjectEnvironments pulumi.StringArrayInput
	// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
	// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey pulumi.StringPtrInput
	// List of property set names
	PropertySets pulumi.StringArrayInput
	// Proxy key from Artifactory Proxies settings
	Proxy pulumi.StringPtrInput
	// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
	// `param1=val1&param2=val2&param3=val3`
	QueryParams pulumi.StringPtrInput
	// Repository layout key for the remote layout mapping.
	RemoteRepoLayoutRef pulumi.StringPtrInput
	// Repository layout key for the local repository
	RepoLayoutRef pulumi.StringPtrInput
	// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
	// before checking for newer versions on remote server. A value of 0 indicates no caching.
	RetrievalCachePeriodSeconds pulumi.IntPtrInput
	ShareConfiguration          pulumi.BoolPtrInput
	// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
	// operation is considered a retrieval failure.
	SocketTimeoutMillis pulumi.IntPtrInput
	// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
	// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
	// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
	// servers.
	StoreArtifactsLocally pulumi.BoolPtrInput
	// NuGet symbol server URL. Default value is `https://symbols.nuget.org/download/symbols`.
	SymbolServerUrl pulumi.StringPtrInput
	// When set, remote artifacts are fetched along with their properties.
	SynchronizeProperties pulumi.BoolPtrInput
	// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
	// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
	UnusedArtifactsCleanupPeriodHours pulumi.IntPtrInput
	// The remote repo URL.
	Url      pulumi.StringInput
	Username pulumi.StringPtrInput
	// The URL to the NuGet v3 feed. Default value is `https://api.nuget.org/v3/index.json`.
	V3FeedUrl pulumi.StringPtrInput
	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
	// Xray settings.
	XrayIndex pulumi.BoolPtrInput
}

func (RemoteNugetRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*remoteNugetRepositoryArgs)(nil)).Elem()
}

type RemoteNugetRepositoryInput interface {
	pulumi.Input

	ToRemoteNugetRepositoryOutput() RemoteNugetRepositoryOutput
	ToRemoteNugetRepositoryOutputWithContext(ctx context.Context) RemoteNugetRepositoryOutput
}

func (*RemoteNugetRepository) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteNugetRepository)(nil)).Elem()
}

func (i *RemoteNugetRepository) ToRemoteNugetRepositoryOutput() RemoteNugetRepositoryOutput {
	return i.ToRemoteNugetRepositoryOutputWithContext(context.Background())
}

func (i *RemoteNugetRepository) ToRemoteNugetRepositoryOutputWithContext(ctx context.Context) RemoteNugetRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteNugetRepositoryOutput)
}

// RemoteNugetRepositoryArrayInput is an input type that accepts RemoteNugetRepositoryArray and RemoteNugetRepositoryArrayOutput values.
// You can construct a concrete instance of `RemoteNugetRepositoryArrayInput` via:
//
//	RemoteNugetRepositoryArray{ RemoteNugetRepositoryArgs{...} }
type RemoteNugetRepositoryArrayInput interface {
	pulumi.Input

	ToRemoteNugetRepositoryArrayOutput() RemoteNugetRepositoryArrayOutput
	ToRemoteNugetRepositoryArrayOutputWithContext(context.Context) RemoteNugetRepositoryArrayOutput
}

type RemoteNugetRepositoryArray []RemoteNugetRepositoryInput

func (RemoteNugetRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemoteNugetRepository)(nil)).Elem()
}

func (i RemoteNugetRepositoryArray) ToRemoteNugetRepositoryArrayOutput() RemoteNugetRepositoryArrayOutput {
	return i.ToRemoteNugetRepositoryArrayOutputWithContext(context.Background())
}

func (i RemoteNugetRepositoryArray) ToRemoteNugetRepositoryArrayOutputWithContext(ctx context.Context) RemoteNugetRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteNugetRepositoryArrayOutput)
}

// RemoteNugetRepositoryMapInput is an input type that accepts RemoteNugetRepositoryMap and RemoteNugetRepositoryMapOutput values.
// You can construct a concrete instance of `RemoteNugetRepositoryMapInput` via:
//
//	RemoteNugetRepositoryMap{ "key": RemoteNugetRepositoryArgs{...} }
type RemoteNugetRepositoryMapInput interface {
	pulumi.Input

	ToRemoteNugetRepositoryMapOutput() RemoteNugetRepositoryMapOutput
	ToRemoteNugetRepositoryMapOutputWithContext(context.Context) RemoteNugetRepositoryMapOutput
}

type RemoteNugetRepositoryMap map[string]RemoteNugetRepositoryInput

func (RemoteNugetRepositoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemoteNugetRepository)(nil)).Elem()
}

func (i RemoteNugetRepositoryMap) ToRemoteNugetRepositoryMapOutput() RemoteNugetRepositoryMapOutput {
	return i.ToRemoteNugetRepositoryMapOutputWithContext(context.Background())
}

func (i RemoteNugetRepositoryMap) ToRemoteNugetRepositoryMapOutputWithContext(ctx context.Context) RemoteNugetRepositoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteNugetRepositoryMapOutput)
}

type RemoteNugetRepositoryOutput struct{ *pulumi.OutputState }

func (RemoteNugetRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteNugetRepository)(nil)).Elem()
}

func (o RemoteNugetRepositoryOutput) ToRemoteNugetRepositoryOutput() RemoteNugetRepositoryOutput {
	return o
}

func (o RemoteNugetRepositoryOutput) ToRemoteNugetRepositoryOutputWithContext(ctx context.Context) RemoteNugetRepositoryOutput {
	return o
}

// 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any
// other host.
func (o RemoteNugetRepositoryOutput) AllowAnyHostAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolPtrOutput { return v.AllowAnyHostAuth }).(pulumi.BoolPtrOutput)
}

// The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,
// an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed
// offline.
func (o RemoteNugetRepositoryOutput) AssumedOfflinePeriodSecs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.IntPtrOutput { return v.AssumedOfflinePeriodSecs }).(pulumi.IntPtrOutput)
}

// (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact
// resolution.
func (o RemoteNugetRepositoryOutput) BlackedOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolPtrOutput { return v.BlackedOut }).(pulumi.BoolPtrOutput)
}

// If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to
// the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes
// to the override list 'mismatching_mime_types_override_list'.
func (o RemoteNugetRepositoryOutput) BlockMismatchingMimeTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolPtrOutput { return v.BlockMismatchingMimeTypes }).(pulumi.BoolPtrOutput)
}

// Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,
// HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,
// Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
func (o RemoteNugetRepositoryOutput) BypassHeadRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolPtrOutput { return v.BypassHeadRequests }).(pulumi.BoolPtrOutput)
}

// When set, download requests to this repository will redirect the client to download the artifact directly from AWS
// CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
func (o RemoteNugetRepositoryOutput) CdnRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolPtrOutput { return v.CdnRedirect }).(pulumi.BoolPtrOutput)
}

// Client TLS certificate name.
func (o RemoteNugetRepositoryOutput) ClientTlsCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringOutput { return v.ClientTlsCertificate }).(pulumi.StringOutput)
}

func (o RemoteNugetRepositoryOutput) ContentSynchronisation() RemoteNugetRepositoryContentSynchronisationOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) RemoteNugetRepositoryContentSynchronisationOutput {
		return v.ContentSynchronisation
	}).(RemoteNugetRepositoryContentSynchronisationOutput)
}

// Public description.
func (o RemoteNugetRepositoryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The context path prefix through which NuGet downloads are served.
// For example, the NuGet Gallery download URL is `https://nuget.org/api/v2/package`, so the repository
// URL should be configured as `https://nuget.org` and the download context path should be configured as `api/v2/package`. Default value is `api/v2/package`.
func (o RemoteNugetRepositoryOutput) DownloadContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.DownloadContextPath }).(pulumi.StringPtrOutput)
}

// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud
// storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
func (o RemoteNugetRepositoryOutput) DownloadDirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolPtrOutput { return v.DownloadDirect }).(pulumi.BoolPtrOutput)
}

// Enables cookie management if the remote repository uses cookies to manage client state.
func (o RemoteNugetRepositoryOutput) EnableCookieManagement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolPtrOutput { return v.EnableCookieManagement }).(pulumi.BoolPtrOutput)
}

// List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no
// artifacts are excluded.
func (o RemoteNugetRepositoryOutput) ExcludesPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.ExcludesPattern }).(pulumi.StringPtrOutput)
}

// When proxying a remote NuGet repository, customize feed resource location using this attribute. Default value is `api/v2`.
func (o RemoteNugetRepositoryOutput) FeedContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.FeedContextPath }).(pulumi.StringPtrOutput)
}

// Force basic authentication credentials in order to use this repository. Default value is `false`.
func (o RemoteNugetRepositoryOutput) ForceNugetAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolPtrOutput { return v.ForceNugetAuthentication }).(pulumi.BoolPtrOutput)
}

// When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to
// communicate with this repository.
func (o RemoteNugetRepositoryOutput) HardFail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolPtrOutput { return v.HardFail }).(pulumi.BoolPtrOutput)
}

// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When
// used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).
func (o RemoteNugetRepositoryOutput) IncludesPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.IncludesPattern }).(pulumi.StringPtrOutput)
}

// A mandatory identifier for the repository that must be unique. It cannot begin with a number or
// contain spaces or special characters.
func (o RemoteNugetRepositoryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of
// the 'Retrieval Cache Period'. Default value is 'true'.
func (o RemoteNugetRepositoryOutput) ListRemoteFolderItems() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolPtrOutput { return v.ListRemoteFolderItems }).(pulumi.BoolPtrOutput)
}

// The local address to be used when creating connections. Useful for specifying the interface to use on systems with
// multiple network interfaces.
func (o RemoteNugetRepositoryOutput) LocalAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.LocalAddress }).(pulumi.StringPtrOutput)
}

// Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from
// the remote before serving locally cached artifact or fail the request.
func (o RemoteNugetRepositoryOutput) MetadataRetrievalTimeoutSecs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.IntPtrOutput { return v.MetadataRetrievalTimeoutSecs }).(pulumi.IntPtrOutput)
}

// The set of mime types that should override the block_mismatching_mime_types setting. Eg:
// 'application/json,application/xml'. Default value is empty.
func (o RemoteNugetRepositoryOutput) MismatchingMimeTypesOverrideList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.MismatchingMimeTypesOverrideList }).(pulumi.StringPtrOutput)
}

// Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not
// found). A value of 0 indicates no caching.
func (o RemoteNugetRepositoryOutput) MissedCachePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.IntPtrOutput { return v.MissedCachePeriodSeconds }).(pulumi.IntPtrOutput)
}

// Internal description.
func (o RemoteNugetRepositoryOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.Notes }).(pulumi.StringPtrOutput)
}

// If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
func (o RemoteNugetRepositoryOutput) Offline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolPtrOutput { return v.Offline }).(pulumi.BoolPtrOutput)
}

func (o RemoteNugetRepositoryOutput) PackageType() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringOutput { return v.PackageType }).(pulumi.StringOutput)
}

func (o RemoteNugetRepositoryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Setting Priority Resolution takes precedence over the resolution order when resolving virtual repositories. Setting
// repositories with priority will cause metadata to be merged only from repositories set with a priority. If a package is
// not found in those repositories, Artifactory will merge from repositories marked as non-priority.
func (o RemoteNugetRepositoryOutput) PriorityResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolPtrOutput { return v.PriorityResolution }).(pulumi.BoolPtrOutput)
}

// Project environment for assigning this repository to. Allow values: "DEV", "PROD", or one of custom environment. Before
// Artifactory 7.53.1, up to 2 values ("DEV" and "PROD") are allowed. From 7.53.1 onward, only one value is allowed. The
// attribute should only be used if the repository is already assigned to the existing project. If not, the attribute will
// be ignored by Artifactory, but will remain in the Terraform state, which will create state drift during the update.
func (o RemoteNugetRepositoryOutput) ProjectEnvironments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringArrayOutput { return v.ProjectEnvironments }).(pulumi.StringArrayOutput)
}

// Project key for assigning this repository to. Must be 2 - 20 lowercase alphanumeric and hyphen characters. When
// assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
func (o RemoteNugetRepositoryOutput) ProjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.ProjectKey }).(pulumi.StringPtrOutput)
}

// List of property set names
func (o RemoteNugetRepositoryOutput) PropertySets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringArrayOutput { return v.PropertySets }).(pulumi.StringArrayOutput)
}

// Proxy key from Artifactory Proxies settings
func (o RemoteNugetRepositoryOutput) Proxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.Proxy }).(pulumi.StringPtrOutput)
}

// Custom HTTP query parameters that will be automatically included in all remote resource requests. For example:
// `param1=val1&param2=val2&param3=val3`
func (o RemoteNugetRepositoryOutput) QueryParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.QueryParams }).(pulumi.StringPtrOutput)
}

// Repository layout key for the remote layout mapping.
func (o RemoteNugetRepositoryOutput) RemoteRepoLayoutRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.RemoteRepoLayoutRef }).(pulumi.StringPtrOutput)
}

// Repository layout key for the local repository
func (o RemoteNugetRepositoryOutput) RepoLayoutRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.RepoLayoutRef }).(pulumi.StringPtrOutput)
}

// Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files
// before checking for newer versions on remote server. A value of 0 indicates no caching.
func (o RemoteNugetRepositoryOutput) RetrievalCachePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.IntPtrOutput { return v.RetrievalCachePeriodSeconds }).(pulumi.IntPtrOutput)
}

func (o RemoteNugetRepositoryOutput) ShareConfiguration() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolOutput { return v.ShareConfiguration }).(pulumi.BoolOutput)
}

// Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network
// operation is considered a retrieval failure.
func (o RemoteNugetRepositoryOutput) SocketTimeoutMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.IntPtrOutput { return v.SocketTimeoutMillis }).(pulumi.IntPtrOutput)
}

// When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and
// direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with
// one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory
// servers.
func (o RemoteNugetRepositoryOutput) StoreArtifactsLocally() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolPtrOutput { return v.StoreArtifactsLocally }).(pulumi.BoolPtrOutput)
}

// NuGet symbol server URL. Default value is `https://symbols.nuget.org/download/symbols`.
func (o RemoteNugetRepositoryOutput) SymbolServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.SymbolServerUrl }).(pulumi.StringPtrOutput)
}

// When set, remote artifacts are fetched along with their properties.
func (o RemoteNugetRepositoryOutput) SynchronizeProperties() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolPtrOutput { return v.SynchronizeProperties }).(pulumi.BoolPtrOutput)
}

// Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and
// eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
func (o RemoteNugetRepositoryOutput) UnusedArtifactsCleanupPeriodHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.IntPtrOutput { return v.UnusedArtifactsCleanupPeriodHours }).(pulumi.IntPtrOutput)
}

// The remote repo URL.
func (o RemoteNugetRepositoryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

func (o RemoteNugetRepositoryOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

// The URL to the NuGet v3 feed. Default value is `https://api.nuget.org/v3/index.json`.
func (o RemoteNugetRepositoryOutput) V3FeedUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.StringPtrOutput { return v.V3FeedUrl }).(pulumi.StringPtrOutput)
}

// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via
// Xray settings.
func (o RemoteNugetRepositoryOutput) XrayIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemoteNugetRepository) pulumi.BoolPtrOutput { return v.XrayIndex }).(pulumi.BoolPtrOutput)
}

type RemoteNugetRepositoryArrayOutput struct{ *pulumi.OutputState }

func (RemoteNugetRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemoteNugetRepository)(nil)).Elem()
}

func (o RemoteNugetRepositoryArrayOutput) ToRemoteNugetRepositoryArrayOutput() RemoteNugetRepositoryArrayOutput {
	return o
}

func (o RemoteNugetRepositoryArrayOutput) ToRemoteNugetRepositoryArrayOutputWithContext(ctx context.Context) RemoteNugetRepositoryArrayOutput {
	return o
}

func (o RemoteNugetRepositoryArrayOutput) Index(i pulumi.IntInput) RemoteNugetRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RemoteNugetRepository {
		return vs[0].([]*RemoteNugetRepository)[vs[1].(int)]
	}).(RemoteNugetRepositoryOutput)
}

type RemoteNugetRepositoryMapOutput struct{ *pulumi.OutputState }

func (RemoteNugetRepositoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemoteNugetRepository)(nil)).Elem()
}

func (o RemoteNugetRepositoryMapOutput) ToRemoteNugetRepositoryMapOutput() RemoteNugetRepositoryMapOutput {
	return o
}

func (o RemoteNugetRepositoryMapOutput) ToRemoteNugetRepositoryMapOutputWithContext(ctx context.Context) RemoteNugetRepositoryMapOutput {
	return o
}

func (o RemoteNugetRepositoryMapOutput) MapIndex(k pulumi.StringInput) RemoteNugetRepositoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RemoteNugetRepository {
		return vs[0].(map[string]*RemoteNugetRepository)[vs[1].(string)]
	}).(RemoteNugetRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteNugetRepositoryInput)(nil)).Elem(), &RemoteNugetRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteNugetRepositoryArrayInput)(nil)).Elem(), RemoteNugetRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemoteNugetRepositoryMapInput)(nil)).Elem(), RemoteNugetRepositoryMap{})
	pulumi.RegisterOutputType(RemoteNugetRepositoryOutput{})
	pulumi.RegisterOutputType(RemoteNugetRepositoryArrayOutput{})
	pulumi.RegisterOutputType(RemoteNugetRepositoryMapOutput{})
}
