// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Artifactory.Outputs
{

    [OutputType]
    public sealed class ReleaseBundleV2CleanupPolicySearchCriteria
    {
        /// <summary>
        /// The cleanup policy will cleanup release bundles based on how long ago they were created. For example, if this parameter is 2 then release bundles created more than 2 months ago will be cleaned up as part of the policy.
        /// </summary>
        public readonly int? CreatedBeforeInMonths;
        /// <summary>
        /// A list of environments to exclude from the cleanup process. To exclude all, set to `**`. Example: `ExcludePromotedEnvironments = ["**"]`
        /// </summary>
        public readonly ImmutableArray<string> ExcludePromotedEnvironments;
        /// <summary>
        /// Set this value to `True` if you want the policy to run on all Artifactory projects. The default value is `False`.
        /// </summary>
        public readonly bool? IncludeAllProjects;
        /// <summary>
        /// List of projects on which you want this policy to run. To include repositories that are not assigned to any project, enter the project key `Default`.
        /// 
        /// ~&gt;This setting is relevant only on the global level, for Platform Admins.
        /// </summary>
        public readonly ImmutableArray<string> IncludedProjects;
        /// <summary>
        /// Specify the release bundles to include in the cleanup policy. The policy will only clean up the release bundles that match the specified criteria.
        /// </summary>
        public readonly ImmutableArray<Outputs.ReleaseBundleV2CleanupPolicySearchCriteriaReleaseBundle> ReleaseBundles;

        [OutputConstructor]
        private ReleaseBundleV2CleanupPolicySearchCriteria(
            int? createdBeforeInMonths,

            ImmutableArray<string> excludePromotedEnvironments,

            bool? includeAllProjects,

            ImmutableArray<string> includedProjects,

            ImmutableArray<Outputs.ReleaseBundleV2CleanupPolicySearchCriteriaReleaseBundle> releaseBundles)
        {
            CreatedBeforeInMonths = createdBeforeInMonths;
            ExcludePromotedEnvironments = excludePromotedEnvironments;
            IncludeAllProjects = includeAllProjects;
            IncludedProjects = includedProjects;
            ReleaseBundles = releaseBundles;
        }
    }
}
