// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Artifactory.Outputs
{

    [OutputType]
    public sealed class XrayPolicyRuleActions
    {
        /// <summary>
        /// (Optional) Nested block describing artifacts that should be blocked for download if a violation is triggered. Described below.
        /// </summary>
        public readonly Outputs.XrayPolicyRuleActionsBlockDownload BlockDownload;
        /// <summary>
        /// (Optional) The severity of violation to be triggered if the `criteria` are met.
        /// </summary>
        public readonly string? CustomSeverity;
        /// <summary>
        /// (Optional) Whether or not the related CI build should be marked as failed if a violation is triggered. This option is only available when the policy is applied to an `xray_watch` resource with a `type` of `builds`.
        /// </summary>
        public readonly bool? FailBuild;
        /// <summary>
        /// (Optional) A list of email addressed that will get emailed when a violation is triggered.
        /// </summary>
        public readonly ImmutableArray<string> Mails;
        /// <summary>
        /// (Optional) A list of Xray-configured webhook URLs to be invoked if a violation is triggered.
        /// </summary>
        public readonly ImmutableArray<string> Webhooks;

        [OutputConstructor]
        private XrayPolicyRuleActions(
            Outputs.XrayPolicyRuleActionsBlockDownload blockDownload,

            string? customSeverity,

            bool? failBuild,

            ImmutableArray<string> mails,

            ImmutableArray<string> webhooks)
        {
            BlockDownload = blockDownload;
            CustomSeverity = customSeverity;
            FailBuild = failBuild;
            Mails = mails;
            Webhooks = webhooks;
        }
    }
}
