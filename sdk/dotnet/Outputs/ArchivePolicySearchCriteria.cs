// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Artifactory.Outputs
{

    [OutputType]
    public sealed class ArchivePolicySearchCriteria
    {
        /// <summary>
        /// The archive policy will archive packages based on how long ago they were created. For example, if this parameter is 2 then packages created more than 2 months ago will be archived as part of the policy.
        /// </summary>
        public readonly int? CreatedBeforeInMonths;
        /// <summary>
        /// Specify explicit package names that you want excluded from the policy. Only Name explicit names (and not patterns) are accepted.
        /// </summary>
        public readonly ImmutableArray<string> ExcludedPackages;
        /// <summary>
        /// Specify patterns for repository names or explicit repository names that you want excluded from the archive policy.
        /// </summary>
        public readonly ImmutableArray<string> ExcludedRepos;
        /// <summary>
        /// Set this value to `true` if you want the policy to run on all Artifactory projects. The default value is `false`.
        /// </summary>
        public readonly bool? IncludeAllProjects;
        /// <summary>
        /// Specify a pattern for a package name or an explicit package name. It accept only single element which can be specific package or pattern, and for including all packages use `**`. Example: `included_packages = ["**"]`
        /// </summary>
        public readonly ImmutableArray<string> IncludedPackages;
        /// <summary>
        /// List of projects on which you want this policy to run. To include repositories that are not assigned to any project, enter the project key `default`.
        /// 
        /// ~&gt;This setting is relevant only on the global level, for Platform Admins.
        /// </summary>
        public readonly ImmutableArray<string> IncludedProjects;
        /// <summary>
        /// Set a value for the number of latest versions to keep. The archive policy will remove all versions before the number you select here. The latest version is always excluded.
        /// 
        /// ~&gt;Versions are determined by creation date.
        /// 
        /// ~&gt;Not all package types support this condition. If you include a package type in your policy that is not compatible with this condition, a validation error (400) is returned. For information on which package types support this condition, see here.
        /// </summary>
        public readonly int? KeepLastNVersions;
        /// <summary>
        /// The archive policy will archive packages based on how long ago they were downloaded. For example, if this parameter is 5 then packages downloaded more than 5 months ago will be archived as part of the policy.
        /// 
        /// ~&gt;JFrog recommends using the `last_downloaded_before_in_months` condition to ensure that packages currently in use are not archived.
        /// </summary>
        public readonly int? LastDownloadedBeforeInMonths;
        public readonly ImmutableArray<string> PackageTypes;
        /// <summary>
        /// Specify one or more patterns for the repository name(s) on which you want the archive policy to run. You can also specify explicit repository names. Specifying at least one pattern or explicit name is required. Only packages in repositories that match the pattern or explicit name will be archived. For including all repos use `**`. Example: `repos = ["**"]`
        /// </summary>
        public readonly ImmutableArray<string> Repos;

        [OutputConstructor]
        private ArchivePolicySearchCriteria(
            int? createdBeforeInMonths,

            ImmutableArray<string> excludedPackages,

            ImmutableArray<string> excludedRepos,

            bool? includeAllProjects,

            ImmutableArray<string> includedPackages,

            ImmutableArray<string> includedProjects,

            int? keepLastNVersions,

            int? lastDownloadedBeforeInMonths,

            ImmutableArray<string> packageTypes,

            ImmutableArray<string> repos)
        {
            CreatedBeforeInMonths = createdBeforeInMonths;
            ExcludedPackages = excludedPackages;
            ExcludedRepos = excludedRepos;
            IncludeAllProjects = includeAllProjects;
            IncludedPackages = includedPackages;
            IncludedProjects = includedProjects;
            KeepLastNVersions = keepLastNVersions;
            LastDownloadedBeforeInMonths = lastDownloadedBeforeInMonths;
            PackageTypes = packageTypes;
            Repos = repos;
        }
    }
}
