// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Artifactory
{
    /// <summary>
    /// Provides an Artifactory Distribution Public Key resource. This can be used to create and manage Artifactory Distribution Public Keys.
    /// 
    /// See [API description](https://jfrog.com/help/r/jfrog-rest-apis/set-distributionpublic-gpg-key) in the Artifactory documentation for more details. Also the [UI documentation](https://jfrog.com/help/r/jfrog-platform-administration-documentation/managing-webstart-and-jar-signing) has further details on where to find these keys in Artifactory.
    /// 
    /// ## Import
    /// 
    /// Distribution Public Key can be imported using the key id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import artifactory:index/distributionPublicKey:DistributionPublicKey my-key keyid
    /// ```
    /// </summary>
    [ArtifactoryResourceType("artifactory:index/distributionPublicKey:DistributionPublicKey")]
    public partial class DistributionPublicKey : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Will be used as an identifier when uploading/retrieving the public key via REST API.
        /// </summary>
        [Output("alias")]
        public Output<string> Alias { get; private set; } = null!;

        /// <summary>
        /// Returns the computed key fingerprint
        /// </summary>
        [Output("fingerprint")]
        public Output<string> Fingerprint { get; private set; } = null!;

        /// <summary>
        /// Returns the name and eMail address of issuer
        /// </summary>
        [Output("issuedBy")]
        public Output<string> IssuedBy { get; private set; } = null!;

        /// <summary>
        /// Returns the date/time when this GPG key was created
        /// </summary>
        [Output("issuedOn")]
        public Output<string> IssuedOn { get; private set; } = null!;

        /// <summary>
        /// Returns the key id by which this key is referenced in Artifactory
        /// </summary>
        [Output("keyId")]
        public Output<string> KeyId { get; private set; } = null!;

        /// <summary>
        /// The Public key to add as a trusted distribution GPG key.
        /// 
        /// The following additional attributes are exported:
        /// </summary>
        [Output("publicKey")]
        public Output<string> PublicKey { get; private set; } = null!;

        /// <summary>
        /// Returns the date/time when this GPG key expires.
        /// </summary>
        [Output("validUntil")]
        public Output<string> ValidUntil { get; private set; } = null!;


        /// <summary>
        /// Create a DistributionPublicKey resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DistributionPublicKey(string name, DistributionPublicKeyArgs args, CustomResourceOptions? options = null)
            : base("artifactory:index/distributionPublicKey:DistributionPublicKey", name, args ?? new DistributionPublicKeyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DistributionPublicKey(string name, Input<string> id, DistributionPublicKeyState? state = null, CustomResourceOptions? options = null)
            : base("artifactory:index/distributionPublicKey:DistributionPublicKey", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DistributionPublicKey resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DistributionPublicKey Get(string name, Input<string> id, DistributionPublicKeyState? state = null, CustomResourceOptions? options = null)
        {
            return new DistributionPublicKey(name, id, state, options);
        }
    }

    public sealed class DistributionPublicKeyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Will be used as an identifier when uploading/retrieving the public key via REST API.
        /// </summary>
        [Input("alias", required: true)]
        public Input<string> Alias { get; set; } = null!;

        /// <summary>
        /// The Public key to add as a trusted distribution GPG key.
        /// 
        /// The following additional attributes are exported:
        /// </summary>
        [Input("publicKey", required: true)]
        public Input<string> PublicKey { get; set; } = null!;

        public DistributionPublicKeyArgs()
        {
        }
        public static new DistributionPublicKeyArgs Empty => new DistributionPublicKeyArgs();
    }

    public sealed class DistributionPublicKeyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Will be used as an identifier when uploading/retrieving the public key via REST API.
        /// </summary>
        [Input("alias")]
        public Input<string>? Alias { get; set; }

        /// <summary>
        /// Returns the computed key fingerprint
        /// </summary>
        [Input("fingerprint")]
        public Input<string>? Fingerprint { get; set; }

        /// <summary>
        /// Returns the name and eMail address of issuer
        /// </summary>
        [Input("issuedBy")]
        public Input<string>? IssuedBy { get; set; }

        /// <summary>
        /// Returns the date/time when this GPG key was created
        /// </summary>
        [Input("issuedOn")]
        public Input<string>? IssuedOn { get; set; }

        /// <summary>
        /// Returns the key id by which this key is referenced in Artifactory
        /// </summary>
        [Input("keyId")]
        public Input<string>? KeyId { get; set; }

        /// <summary>
        /// The Public key to add as a trusted distribution GPG key.
        /// 
        /// The following additional attributes are exported:
        /// </summary>
        [Input("publicKey")]
        public Input<string>? PublicKey { get; set; }

        /// <summary>
        /// Returns the date/time when this GPG key expires.
        /// </summary>
        [Input("validUntil")]
        public Input<string>? ValidUntil { get; set; }

        public DistributionPublicKeyState()
        {
        }
        public static new DistributionPublicKeyState Empty => new DistributionPublicKeyState();
    }
}
