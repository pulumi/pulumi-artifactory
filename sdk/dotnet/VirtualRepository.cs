// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Artifactory
{
    /// <summary>
    /// ## # Artifactory Virtual Repository Resource
    /// 
    /// Provides an Artifactory virtual repository resource. This can be used to create and manage Artifactory virtual repositories.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Artifactory = Pulumi.Artifactory;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var bar = new Artifactory.LocalRepository("bar", new Artifactory.LocalRepositoryArgs
    ///         {
    ///             Key = "bar",
    ///             PackageType = "maven",
    ///         });
    ///         var baz = new Artifactory.LocalRepository("baz", new Artifactory.LocalRepositoryArgs
    ///         {
    ///             Key = "baz",
    ///             PackageType = "maven",
    ///         });
    ///         var foo = new Artifactory.VirtualRepository("foo", new Artifactory.VirtualRepositoryArgs
    ///         {
    ///             Key = "foo",
    ///             PackageType = "maven",
    ///             Repositories = 
    ///             {
    ///                 bar.Key,
    ///                 baz.Key,
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Virtual repositories can be imported using their name, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import artifactory:index/virtualRepository:VirtualRepository foo foo
    /// ```
    /// </summary>
    [ArtifactoryResourceType("artifactory:index/virtualRepository:VirtualRepository")]
    public partial class VirtualRepository : Pulumi.CustomResource
    {
        [Output("artifactoryRequestsCanRetrieveRemoteArtifacts")]
        public Output<bool?> ArtifactoryRequestsCanRetrieveRemoteArtifacts { get; private set; } = null!;

        [Output("debianTrivialLayout")]
        public Output<bool?> DebianTrivialLayout { get; private set; } = null!;

        [Output("defaultDeploymentRepo")]
        public Output<string?> DefaultDeploymentRepo { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("excludesPattern")]
        public Output<string?> ExcludesPattern { get; private set; } = null!;

        [Output("forceNugetAuthentication")]
        public Output<bool> ForceNugetAuthentication { get; private set; } = null!;

        [Output("includesPattern")]
        public Output<string?> IncludesPattern { get; private set; } = null!;

        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        [Output("keyPair")]
        public Output<string?> KeyPair { get; private set; } = null!;

        [Output("notes")]
        public Output<string?> Notes { get; private set; } = null!;

        [Output("packageType")]
        public Output<string> PackageType { get; private set; } = null!;

        [Output("pomRepositoryReferencesCleanupPolicy")]
        public Output<string> PomRepositoryReferencesCleanupPolicy { get; private set; } = null!;

        [Output("repoLayoutRef")]
        public Output<string> RepoLayoutRef { get; private set; } = null!;

        [Output("repositories")]
        public Output<ImmutableArray<string>> Repositories { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualRepository resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualRepository(string name, VirtualRepositoryArgs args, CustomResourceOptions? options = null)
            : base("artifactory:index/virtualRepository:VirtualRepository", name, args ?? new VirtualRepositoryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualRepository(string name, Input<string> id, VirtualRepositoryState? state = null, CustomResourceOptions? options = null)
            : base("artifactory:index/virtualRepository:VirtualRepository", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualRepository resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualRepository Get(string name, Input<string> id, VirtualRepositoryState? state = null, CustomResourceOptions? options = null)
        {
            return new VirtualRepository(name, id, state, options);
        }
    }

    public sealed class VirtualRepositoryArgs : Pulumi.ResourceArgs
    {
        [Input("artifactoryRequestsCanRetrieveRemoteArtifacts")]
        public Input<bool>? ArtifactoryRequestsCanRetrieveRemoteArtifacts { get; set; }

        [Input("debianTrivialLayout")]
        public Input<bool>? DebianTrivialLayout { get; set; }

        [Input("defaultDeploymentRepo")]
        public Input<string>? DefaultDeploymentRepo { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("excludesPattern")]
        public Input<string>? ExcludesPattern { get; set; }

        [Input("forceNugetAuthentication")]
        public Input<bool>? ForceNugetAuthentication { get; set; }

        [Input("includesPattern")]
        public Input<string>? IncludesPattern { get; set; }

        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("keyPair")]
        public Input<string>? KeyPair { get; set; }

        [Input("notes")]
        public Input<string>? Notes { get; set; }

        [Input("packageType", required: true)]
        public Input<string> PackageType { get; set; } = null!;

        [Input("pomRepositoryReferencesCleanupPolicy")]
        public Input<string>? PomRepositoryReferencesCleanupPolicy { get; set; }

        [Input("repoLayoutRef")]
        public Input<string>? RepoLayoutRef { get; set; }

        [Input("repositories", required: true)]
        private InputList<string>? _repositories;
        public InputList<string> Repositories
        {
            get => _repositories ?? (_repositories = new InputList<string>());
            set => _repositories = value;
        }

        public VirtualRepositoryArgs()
        {
        }
    }

    public sealed class VirtualRepositoryState : Pulumi.ResourceArgs
    {
        [Input("artifactoryRequestsCanRetrieveRemoteArtifacts")]
        public Input<bool>? ArtifactoryRequestsCanRetrieveRemoteArtifacts { get; set; }

        [Input("debianTrivialLayout")]
        public Input<bool>? DebianTrivialLayout { get; set; }

        [Input("defaultDeploymentRepo")]
        public Input<string>? DefaultDeploymentRepo { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("excludesPattern")]
        public Input<string>? ExcludesPattern { get; set; }

        [Input("forceNugetAuthentication")]
        public Input<bool>? ForceNugetAuthentication { get; set; }

        [Input("includesPattern")]
        public Input<string>? IncludesPattern { get; set; }

        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("keyPair")]
        public Input<string>? KeyPair { get; set; }

        [Input("notes")]
        public Input<string>? Notes { get; set; }

        [Input("packageType")]
        public Input<string>? PackageType { get; set; }

        [Input("pomRepositoryReferencesCleanupPolicy")]
        public Input<string>? PomRepositoryReferencesCleanupPolicy { get; set; }

        [Input("repoLayoutRef")]
        public Input<string>? RepoLayoutRef { get; set; }

        [Input("repositories")]
        private InputList<string>? _repositories;
        public InputList<string> Repositories
        {
            get => _repositories ?? (_repositories = new InputList<string>());
            set => _repositories = value;
        }

        public VirtualRepositoryState()
        {
        }
    }
}
