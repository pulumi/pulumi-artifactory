// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Artifactory.Inputs
{

    public sealed class ReleaseBundleV2CleanupPolicySearchCriteriaGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The cleanup policy will cleanup release bundles based on how long ago they were created. For example, if this parameter is 2 then release bundles created more than 2 months ago will be cleaned up as part of the policy.
        /// </summary>
        [Input("createdBeforeInMonths")]
        public Input<int>? CreatedBeforeInMonths { get; set; }

        [Input("excludePromotedEnvironments", required: true)]
        private InputList<string>? _excludePromotedEnvironments;

        /// <summary>
        /// A list of environments to exclude from the cleanup process. To exclude all, set to `**`. Example: `exclude_promoted_environments = ["**"]`
        /// </summary>
        public InputList<string> ExcludePromotedEnvironments
        {
            get => _excludePromotedEnvironments ?? (_excludePromotedEnvironments = new InputList<string>());
            set => _excludePromotedEnvironments = value;
        }

        /// <summary>
        /// Set this value to `true` if you want the policy to run on all Artifactory projects. The default value is `false`.
        /// </summary>
        [Input("includeAllProjects")]
        public Input<bool>? IncludeAllProjects { get; set; }

        [Input("includedProjects")]
        private InputList<string>? _includedProjects;

        /// <summary>
        /// List of projects on which you want this policy to run. To include repositories that are not assigned to any project, enter the project key `default`.
        /// 
        /// ~&gt;This setting is relevant only on the global level, for Platform Admins.
        /// </summary>
        public InputList<string> IncludedProjects
        {
            get => _includedProjects ?? (_includedProjects = new InputList<string>());
            set => _includedProjects = value;
        }

        [Input("releaseBundles")]
        private InputList<Inputs.ReleaseBundleV2CleanupPolicySearchCriteriaReleaseBundleGetArgs>? _releaseBundles;

        /// <summary>
        /// Specify the release bundles to include in the cleanup policy. The policy will only clean up the release bundles that match the specified criteria.
        /// </summary>
        public InputList<Inputs.ReleaseBundleV2CleanupPolicySearchCriteriaReleaseBundleGetArgs> ReleaseBundles
        {
            get => _releaseBundles ?? (_releaseBundles = new InputList<Inputs.ReleaseBundleV2CleanupPolicySearchCriteriaReleaseBundleGetArgs>());
            set => _releaseBundles = value;
        }

        public ReleaseBundleV2CleanupPolicySearchCriteriaGetArgs()
        {
        }
        public static new ReleaseBundleV2CleanupPolicySearchCriteriaGetArgs Empty => new ReleaseBundleV2CleanupPolicySearchCriteriaGetArgs();
    }
}
