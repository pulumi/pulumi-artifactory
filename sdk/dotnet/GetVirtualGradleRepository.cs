// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Artifactory
{
    public static class GetVirtualGradleRepository
    {
        /// <summary>
        /// Retrieves a virtual Gradle repository.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Artifactory = Pulumi.Artifactory;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var virtual_gradle = Artifactory.GetVirtualGradleRepository.Invoke(new()
        ///     {
        ///         Key = "virtual-gradle",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVirtualGradleRepositoryResult> InvokeAsync(GetVirtualGradleRepositoryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVirtualGradleRepositoryResult>("artifactory:index/getVirtualGradleRepository:getVirtualGradleRepository", args ?? new GetVirtualGradleRepositoryArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a virtual Gradle repository.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Artifactory = Pulumi.Artifactory;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var virtual_gradle = Artifactory.GetVirtualGradleRepository.Invoke(new()
        ///     {
        ///         Key = "virtual-gradle",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVirtualGradleRepositoryResult> Invoke(GetVirtualGradleRepositoryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVirtualGradleRepositoryResult>("artifactory:index/getVirtualGradleRepository:getVirtualGradleRepository", args ?? new GetVirtualGradleRepositoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVirtualGradleRepositoryArgs : global::Pulumi.InvokeArgs
    {
        [Input("artifactoryRequestsCanRetrieveRemoteArtifacts")]
        public bool? ArtifactoryRequestsCanRetrieveRemoteArtifacts { get; set; }

        [Input("defaultDeploymentRepo")]
        public string? DefaultDeploymentRepo { get; set; }

        [Input("description")]
        public string? Description { get; set; }

        [Input("excludesPattern")]
        public string? ExcludesPattern { get; set; }

        [Input("forceMavenAuthentication")]
        public bool? ForceMavenAuthentication { get; set; }

        [Input("includesPattern")]
        public string? IncludesPattern { get; set; }

        /// <summary>
        /// the identity key of the repo.
        /// </summary>
        [Input("key", required: true)]
        public string Key { get; set; } = null!;

        /// <summary>
        /// (Optional) The keypair used to sign artifacts.
        /// </summary>
        [Input("keyPair")]
        public string? KeyPair { get; set; }

        [Input("notes")]
        public string? Notes { get; set; }

        /// <summary>
        /// (Optional)
        /// - (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.
        /// - (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.
        /// - (3: nothing) Nothing - Does not remove any repository elements declared in the POM.
        /// </summary>
        [Input("pomRepositoryReferencesCleanupPolicy")]
        public string? PomRepositoryReferencesCleanupPolicy { get; set; }

        [Input("projectEnvironments")]
        private List<string>? _projectEnvironments;
        public List<string> ProjectEnvironments
        {
            get => _projectEnvironments ?? (_projectEnvironments = new List<string>());
            set => _projectEnvironments = value;
        }

        [Input("projectKey")]
        public string? ProjectKey { get; set; }

        [Input("repoLayoutRef")]
        public string? RepoLayoutRef { get; set; }

        [Input("repositories")]
        private List<string>? _repositories;
        public List<string> Repositories
        {
            get => _repositories ?? (_repositories = new List<string>());
            set => _repositories = value;
        }

        public GetVirtualGradleRepositoryArgs()
        {
        }
        public static new GetVirtualGradleRepositoryArgs Empty => new GetVirtualGradleRepositoryArgs();
    }

    public sealed class GetVirtualGradleRepositoryInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("artifactoryRequestsCanRetrieveRemoteArtifacts")]
        public Input<bool>? ArtifactoryRequestsCanRetrieveRemoteArtifacts { get; set; }

        [Input("defaultDeploymentRepo")]
        public Input<string>? DefaultDeploymentRepo { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("excludesPattern")]
        public Input<string>? ExcludesPattern { get; set; }

        [Input("forceMavenAuthentication")]
        public Input<bool>? ForceMavenAuthentication { get; set; }

        [Input("includesPattern")]
        public Input<string>? IncludesPattern { get; set; }

        /// <summary>
        /// the identity key of the repo.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// (Optional) The keypair used to sign artifacts.
        /// </summary>
        [Input("keyPair")]
        public Input<string>? KeyPair { get; set; }

        [Input("notes")]
        public Input<string>? Notes { get; set; }

        /// <summary>
        /// (Optional)
        /// - (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.
        /// - (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.
        /// - (3: nothing) Nothing - Does not remove any repository elements declared in the POM.
        /// </summary>
        [Input("pomRepositoryReferencesCleanupPolicy")]
        public Input<string>? PomRepositoryReferencesCleanupPolicy { get; set; }

        [Input("projectEnvironments")]
        private InputList<string>? _projectEnvironments;
        public InputList<string> ProjectEnvironments
        {
            get => _projectEnvironments ?? (_projectEnvironments = new InputList<string>());
            set => _projectEnvironments = value;
        }

        [Input("projectKey")]
        public Input<string>? ProjectKey { get; set; }

        [Input("repoLayoutRef")]
        public Input<string>? RepoLayoutRef { get; set; }

        [Input("repositories")]
        private InputList<string>? _repositories;
        public InputList<string> Repositories
        {
            get => _repositories ?? (_repositories = new InputList<string>());
            set => _repositories = value;
        }

        public GetVirtualGradleRepositoryInvokeArgs()
        {
        }
        public static new GetVirtualGradleRepositoryInvokeArgs Empty => new GetVirtualGradleRepositoryInvokeArgs();
    }


    [OutputType]
    public sealed class GetVirtualGradleRepositoryResult
    {
        public readonly bool? ArtifactoryRequestsCanRetrieveRemoteArtifacts;
        public readonly string? DefaultDeploymentRepo;
        public readonly string? Description;
        public readonly string? ExcludesPattern;
        public readonly bool ForceMavenAuthentication;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? IncludesPattern;
        public readonly string Key;
        /// <summary>
        /// (Optional) The keypair used to sign artifacts.
        /// </summary>
        public readonly string? KeyPair;
        public readonly string? Notes;
        public readonly string PackageType;
        /// <summary>
        /// (Optional)
        /// - (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.
        /// - (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.
        /// - (3: nothing) Nothing - Does not remove any repository elements declared in the POM.
        /// </summary>
        public readonly string PomRepositoryReferencesCleanupPolicy;
        public readonly ImmutableArray<string> ProjectEnvironments;
        public readonly string? ProjectKey;
        public readonly string? RepoLayoutRef;
        public readonly ImmutableArray<string> Repositories;

        [OutputConstructor]
        private GetVirtualGradleRepositoryResult(
            bool? artifactoryRequestsCanRetrieveRemoteArtifacts,

            string? defaultDeploymentRepo,

            string? description,

            string? excludesPattern,

            bool forceMavenAuthentication,

            string id,

            string? includesPattern,

            string key,

            string? keyPair,

            string? notes,

            string packageType,

            string pomRepositoryReferencesCleanupPolicy,

            ImmutableArray<string> projectEnvironments,

            string? projectKey,

            string? repoLayoutRef,

            ImmutableArray<string> repositories)
        {
            ArtifactoryRequestsCanRetrieveRemoteArtifacts = artifactoryRequestsCanRetrieveRemoteArtifacts;
            DefaultDeploymentRepo = defaultDeploymentRepo;
            Description = description;
            ExcludesPattern = excludesPattern;
            ForceMavenAuthentication = forceMavenAuthentication;
            Id = id;
            IncludesPattern = includesPattern;
            Key = key;
            KeyPair = keyPair;
            Notes = notes;
            PackageType = packageType;
            PomRepositoryReferencesCleanupPolicy = pomRepositoryReferencesCleanupPolicy;
            ProjectEnvironments = projectEnvironments;
            ProjectKey = projectKey;
            RepoLayoutRef = repoLayoutRef;
            Repositories = repositories;
        }
    }
}
