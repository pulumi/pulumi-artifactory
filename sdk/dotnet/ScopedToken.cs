// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Artifactory
{
    /// <summary>
    /// ## Import
    /// 
    /// Artifactory **does not** retain scoped tokens and cannot be imported into state.
    /// </summary>
    [ArtifactoryResourceType("artifactory:index/scopedToken:ScopedToken")]
    public partial class ScopedToken : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Returns the access token to authenticate to Artifactory
        /// </summary>
        [Output("accessToken")]
        public Output<string> AccessToken { get; private set; } = null!;

        /// <summary>
        /// (Optional) A list of the other instances or services that should accept this token identified by their Service-IDs. Limited to total 255 characters. Default to '*@*' if not set. Service ID must begin with 'jfrt@'. For instructions to retrieve the Artifactory Service ID see this [documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-GetServiceID).
        /// </summary>
        [Output("audiences")]
        public Output<ImmutableArray<string>> Audiences { get; private set; } = null!;

        /// <summary>
        /// (Optional) Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// (Optional) The amount of time, in seconds, it would take for the token to expire. An admin shall be able to set whether expiry is mandatory, what is the default expiry, and what is the maximum expiry allowed. Must be non-negative. Default value is based on configuration in `access.config.yaml`. See [API documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-RevokeTokenbyIDrevoketokenbyid) for details.
        /// </summary>
        [Output("expiresIn")]
        public Output<int> ExpiresIn { get; private set; } = null!;

        /// <summary>
        /// Returns the token expiry
        /// </summary>
        [Output("expiry")]
        public Output<int> Expiry { get; private set; } = null!;

        /// <summary>
        /// Returns the token issued at date/time
        /// </summary>
        [Output("issuedAt")]
        public Output<int> IssuedAt { get; private set; } = null!;

        /// <summary>
        /// Returns the token issuer
        /// </summary>
        [Output("issuer")]
        public Output<string> Issuer { get; private set; } = null!;

        [Output("refreshToken")]
        public Output<string> RefreshToken { get; private set; } = null!;

        /// <summary>
        /// (Optional) Is this token refreshable? Defaults to `false`
        /// </summary>
        [Output("refreshable")]
        public Output<bool?> Refreshable { get; private set; } = null!;

        /// <summary>
        /// (Optional) The scope of access that the token provides. Access to the REST API is always provided by default. Administrators can set any scope, while non-admin users can only set the scope to a subset of the groups to which they belong.
        /// </summary>
        [Output("scopes")]
        public Output<ImmutableArray<string>> Scopes { get; private set; } = null!;

        /// <summary>
        /// Returns the token type
        /// </summary>
        [Output("subject")]
        public Output<string> Subject { get; private set; } = null!;

        /// <summary>
        /// Returns the token type
        /// </summary>
        [Output("tokenType")]
        public Output<string> TokenType { get; private set; } = null!;

        /// <summary>
        /// (Optional) The user name for which this token is created. The username is based on the authenticated user - either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: `&lt;service-id&gt;/users/&lt;username&gt;`. Limited to 255 characters.
        /// </summary>
        [Output("username")]
        public Output<string?> Username { get; private set; } = null!;


        /// <summary>
        /// Create a ScopedToken resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScopedToken(string name, ScopedTokenArgs? args = null, CustomResourceOptions? options = null)
            : base("artifactory:index/scopedToken:ScopedToken", name, args ?? new ScopedTokenArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScopedToken(string name, Input<string> id, ScopedTokenState? state = null, CustomResourceOptions? options = null)
            : base("artifactory:index/scopedToken:ScopedToken", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScopedToken resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScopedToken Get(string name, Input<string> id, ScopedTokenState? state = null, CustomResourceOptions? options = null)
        {
            return new ScopedToken(name, id, state, options);
        }
    }

    public sealed class ScopedTokenArgs : global::Pulumi.ResourceArgs
    {
        [Input("audiences")]
        private InputList<string>? _audiences;

        /// <summary>
        /// (Optional) A list of the other instances or services that should accept this token identified by their Service-IDs. Limited to total 255 characters. Default to '*@*' if not set. Service ID must begin with 'jfrt@'. For instructions to retrieve the Artifactory Service ID see this [documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-GetServiceID).
        /// </summary>
        public InputList<string> Audiences
        {
            get => _audiences ?? (_audiences = new InputList<string>());
            set => _audiences = value;
        }

        /// <summary>
        /// (Optional) Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Optional) The amount of time, in seconds, it would take for the token to expire. An admin shall be able to set whether expiry is mandatory, what is the default expiry, and what is the maximum expiry allowed. Must be non-negative. Default value is based on configuration in `access.config.yaml`. See [API documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-RevokeTokenbyIDrevoketokenbyid) for details.
        /// </summary>
        [Input("expiresIn")]
        public Input<int>? ExpiresIn { get; set; }

        /// <summary>
        /// (Optional) Is this token refreshable? Defaults to `false`
        /// </summary>
        [Input("refreshable")]
        public Input<bool>? Refreshable { get; set; }

        [Input("scopes")]
        private InputList<string>? _scopes;

        /// <summary>
        /// (Optional) The scope of access that the token provides. Access to the REST API is always provided by default. Administrators can set any scope, while non-admin users can only set the scope to a subset of the groups to which they belong.
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        /// <summary>
        /// (Optional) The user name for which this token is created. The username is based on the authenticated user - either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: `&lt;service-id&gt;/users/&lt;username&gt;`. Limited to 255 characters.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public ScopedTokenArgs()
        {
        }
        public static new ScopedTokenArgs Empty => new ScopedTokenArgs();
    }

    public sealed class ScopedTokenState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Returns the access token to authenticate to Artifactory
        /// </summary>
        [Input("accessToken")]
        public Input<string>? AccessToken { get; set; }

        [Input("audiences")]
        private InputList<string>? _audiences;

        /// <summary>
        /// (Optional) A list of the other instances or services that should accept this token identified by their Service-IDs. Limited to total 255 characters. Default to '*@*' if not set. Service ID must begin with 'jfrt@'. For instructions to retrieve the Artifactory Service ID see this [documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-GetServiceID).
        /// </summary>
        public InputList<string> Audiences
        {
            get => _audiences ?? (_audiences = new InputList<string>());
            set => _audiences = value;
        }

        /// <summary>
        /// (Optional) Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Optional) The amount of time, in seconds, it would take for the token to expire. An admin shall be able to set whether expiry is mandatory, what is the default expiry, and what is the maximum expiry allowed. Must be non-negative. Default value is based on configuration in `access.config.yaml`. See [API documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-RevokeTokenbyIDrevoketokenbyid) for details.
        /// </summary>
        [Input("expiresIn")]
        public Input<int>? ExpiresIn { get; set; }

        /// <summary>
        /// Returns the token expiry
        /// </summary>
        [Input("expiry")]
        public Input<int>? Expiry { get; set; }

        /// <summary>
        /// Returns the token issued at date/time
        /// </summary>
        [Input("issuedAt")]
        public Input<int>? IssuedAt { get; set; }

        /// <summary>
        /// Returns the token issuer
        /// </summary>
        [Input("issuer")]
        public Input<string>? Issuer { get; set; }

        [Input("refreshToken")]
        public Input<string>? RefreshToken { get; set; }

        /// <summary>
        /// (Optional) Is this token refreshable? Defaults to `false`
        /// </summary>
        [Input("refreshable")]
        public Input<bool>? Refreshable { get; set; }

        [Input("scopes")]
        private InputList<string>? _scopes;

        /// <summary>
        /// (Optional) The scope of access that the token provides. Access to the REST API is always provided by default. Administrators can set any scope, while non-admin users can only set the scope to a subset of the groups to which they belong.
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        /// <summary>
        /// Returns the token type
        /// </summary>
        [Input("subject")]
        public Input<string>? Subject { get; set; }

        /// <summary>
        /// Returns the token type
        /// </summary>
        [Input("tokenType")]
        public Input<string>? TokenType { get; set; }

        /// <summary>
        /// (Optional) The user name for which this token is created. The username is based on the authenticated user - either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: `&lt;service-id&gt;/users/&lt;username&gt;`. Limited to 255 characters.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public ScopedTokenState()
        {
        }
        public static new ScopedTokenState Empty => new ScopedTokenState();
    }
}
