// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Artifactory
{
    [ArtifactoryResourceType("artifactory:index/permissionTarget:PermissionTarget")]
    public partial class PermissionTarget : global::Pulumi.CustomResource
    {
        /// <summary>
        /// As for repo but for artifactory-build-info permissions.
        /// </summary>
        [Output("build")]
        public Output<Outputs.PermissionTargetBuild?> Build { get; private set; } = null!;

        /// <summary>
        /// Name of permission.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// As for repo for for release-bundles permissions.
        /// </summary>
        [Output("releaseBundle")]
        public Output<Outputs.PermissionTargetReleaseBundle?> ReleaseBundle { get; private set; } = null!;

        /// <summary>
        /// Repository permission configuration.
        /// </summary>
        [Output("repo")]
        public Output<Outputs.PermissionTargetRepo?> Repo { get; private set; } = null!;


        /// <summary>
        /// Create a PermissionTarget resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PermissionTarget(string name, PermissionTargetArgs? args = null, CustomResourceOptions? options = null)
            : base("artifactory:index/permissionTarget:PermissionTarget", name, args ?? new PermissionTargetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PermissionTarget(string name, Input<string> id, PermissionTargetState? state = null, CustomResourceOptions? options = null)
            : base("artifactory:index/permissionTarget:PermissionTarget", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PermissionTarget resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PermissionTarget Get(string name, Input<string> id, PermissionTargetState? state = null, CustomResourceOptions? options = null)
        {
            return new PermissionTarget(name, id, state, options);
        }
    }

    public sealed class PermissionTargetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// As for repo but for artifactory-build-info permissions.
        /// </summary>
        [Input("build")]
        public Input<Inputs.PermissionTargetBuildArgs>? Build { get; set; }

        /// <summary>
        /// Name of permission.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// As for repo for for release-bundles permissions.
        /// </summary>
        [Input("releaseBundle")]
        public Input<Inputs.PermissionTargetReleaseBundleArgs>? ReleaseBundle { get; set; }

        /// <summary>
        /// Repository permission configuration.
        /// </summary>
        [Input("repo")]
        public Input<Inputs.PermissionTargetRepoArgs>? Repo { get; set; }

        public PermissionTargetArgs()
        {
        }
        public static new PermissionTargetArgs Empty => new PermissionTargetArgs();
    }

    public sealed class PermissionTargetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// As for repo but for artifactory-build-info permissions.
        /// </summary>
        [Input("build")]
        public Input<Inputs.PermissionTargetBuildGetArgs>? Build { get; set; }

        /// <summary>
        /// Name of permission.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// As for repo for for release-bundles permissions.
        /// </summary>
        [Input("releaseBundle")]
        public Input<Inputs.PermissionTargetReleaseBundleGetArgs>? ReleaseBundle { get; set; }

        /// <summary>
        /// Repository permission configuration.
        /// </summary>
        [Input("repo")]
        public Input<Inputs.PermissionTargetRepoGetArgs>? Repo { get; set; }

        public PermissionTargetState()
        {
        }
        public static new PermissionTargetState Empty => new PermissionTargetState();
    }
}
