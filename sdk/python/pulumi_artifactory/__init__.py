# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .access_token import *
from .alpine_repository import *
from .api_key import *
from .certificate import *
from .debian_repository import *
from .docker_v1_repository import *
from .docker_v2_repository import *
from .general_security import *
from .get_file import *
from .get_fileinfo import *
from .go_repository import *
from .group import *
from .keypair import *
from .local_repository import *
from .maven_repository import *
from .oauth_settings import *
from .permission_target import *
from .permission_targets import *
from .provider import *
from .remote_cargo_repository import *
from .remote_docker_repository import *
from .remote_helm_repository import *
from .remote_repository import *
from .replication_config import *
from .saml_settings import *
from .single_replication_config import *
from .user import *
from .virtual_repository import *
from .xray_policy import *
from .xray_watch import *
from ._inputs import *
from . import outputs

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumi_artifactory.config as __config
    config = __config
else:
    config = _utilities.lazy_import('pulumi_artifactory.config')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "artifactory",
  "mod": "index/accessToken",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/accessToken:AccessToken": "AccessToken"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/alpineRepository",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/alpineRepository:AlpineRepository": "AlpineRepository"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/apiKey",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/apiKey:ApiKey": "ApiKey"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/certificate",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/certificate:Certificate": "Certificate"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/debianRepository",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/debianRepository:DebianRepository": "DebianRepository"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/dockerV1Repository",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/dockerV1Repository:DockerV1Repository": "DockerV1Repository"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/dockerV2Repository",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/dockerV2Repository:DockerV2Repository": "DockerV2Repository"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/generalSecurity",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/generalSecurity:GeneralSecurity": "GeneralSecurity"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/goRepository",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/goRepository:GoRepository": "GoRepository"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/group",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/group:Group": "Group"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/keypair",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/keypair:Keypair": "Keypair"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/localRepository",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/localRepository:LocalRepository": "LocalRepository"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/mavenRepository",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/mavenRepository:MavenRepository": "MavenRepository"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/oauthSettings",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/oauthSettings:OauthSettings": "OauthSettings"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/permissionTarget",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/permissionTarget:PermissionTarget": "PermissionTarget"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/permissionTargets",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/permissionTargets:PermissionTargets": "PermissionTargets"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/remoteCargoRepository",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/remoteCargoRepository:RemoteCargoRepository": "RemoteCargoRepository"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/remoteDockerRepository",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/remoteDockerRepository:RemoteDockerRepository": "RemoteDockerRepository"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/remoteHelmRepository",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/remoteHelmRepository:RemoteHelmRepository": "RemoteHelmRepository"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/remoteRepository",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/remoteRepository:RemoteRepository": "RemoteRepository"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/replicationConfig",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/replicationConfig:ReplicationConfig": "ReplicationConfig"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/samlSettings",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/samlSettings:SamlSettings": "SamlSettings"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/singleReplicationConfig",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/singleReplicationConfig:SingleReplicationConfig": "SingleReplicationConfig"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/user",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/user:User": "User"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/virtualRepository",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/virtualRepository:VirtualRepository": "VirtualRepository"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/xrayPolicy",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/xrayPolicy:XrayPolicy": "XrayPolicy"
  }
 },
 {
  "pkg": "artifactory",
  "mod": "index/xrayWatch",
  "fqn": "pulumi_artifactory",
  "classes": {
   "artifactory:index/xrayWatch:XrayWatch": "XrayWatch"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "artifactory",
  "token": "pulumi:providers:artifactory",
  "fqn": "pulumi_artifactory",
  "class": "Provider"
 }
]
"""
)
