// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReleaseBundleV2CustomWebhookCriteriaArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReleaseBundleV2CustomWebhookCriteriaArgs Empty = new ReleaseBundleV2CustomWebhookCriteriaArgs();

    /**
     * Trigger on any release bundle.
     * 
     */
    @Import(name="anyReleaseBundle", required=true)
    private Output<Boolean> anyReleaseBundle;

    /**
     * @return Trigger on any release bundle.
     * 
     */
    public Output<Boolean> anyReleaseBundle() {
        return this.anyReleaseBundle;
    }

    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash). Ant-style path expressions are supported (*, *\*, ?). For example: &#34;org/apache/**&#34;.
     * 
     */
    @Import(name="excludePatterns")
    private @Nullable Output<List<String>> excludePatterns;

    /**
     * @return Simple comma separated wildcard patterns for repository artifact paths (with no leading slash). Ant-style path expressions are supported (*, *\*, ?). For example: &#34;org/apache/**&#34;.
     * 
     */
    public Optional<Output<List<String>>> excludePatterns() {
        return Optional.ofNullable(this.excludePatterns);
    }

    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash). Ant-style path expressions are supported (*, *\*, ?). For example: &#34;org/apache/**&#34;.
     * 
     */
    @Import(name="includePatterns")
    private @Nullable Output<List<String>> includePatterns;

    /**
     * @return Simple comma separated wildcard patterns for repository artifact paths (with no leading slash). Ant-style path expressions are supported (*, *\*, ?). For example: &#34;org/apache/**&#34;.
     * 
     */
    public Optional<Output<List<String>>> includePatterns() {
        return Optional.ofNullable(this.includePatterns);
    }

    /**
     * Trigger on this list of release bundle names.
     * 
     */
    @Import(name="selectedReleaseBundles", required=true)
    private Output<List<String>> selectedReleaseBundles;

    /**
     * @return Trigger on this list of release bundle names.
     * 
     */
    public Output<List<String>> selectedReleaseBundles() {
        return this.selectedReleaseBundles;
    }

    private ReleaseBundleV2CustomWebhookCriteriaArgs() {}

    private ReleaseBundleV2CustomWebhookCriteriaArgs(ReleaseBundleV2CustomWebhookCriteriaArgs $) {
        this.anyReleaseBundle = $.anyReleaseBundle;
        this.excludePatterns = $.excludePatterns;
        this.includePatterns = $.includePatterns;
        this.selectedReleaseBundles = $.selectedReleaseBundles;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReleaseBundleV2CustomWebhookCriteriaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReleaseBundleV2CustomWebhookCriteriaArgs $;

        public Builder() {
            $ = new ReleaseBundleV2CustomWebhookCriteriaArgs();
        }

        public Builder(ReleaseBundleV2CustomWebhookCriteriaArgs defaults) {
            $ = new ReleaseBundleV2CustomWebhookCriteriaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param anyReleaseBundle Trigger on any release bundle.
         * 
         * @return builder
         * 
         */
        public Builder anyReleaseBundle(Output<Boolean> anyReleaseBundle) {
            $.anyReleaseBundle = anyReleaseBundle;
            return this;
        }

        /**
         * @param anyReleaseBundle Trigger on any release bundle.
         * 
         * @return builder
         * 
         */
        public Builder anyReleaseBundle(Boolean anyReleaseBundle) {
            return anyReleaseBundle(Output.of(anyReleaseBundle));
        }

        /**
         * @param excludePatterns Simple comma separated wildcard patterns for repository artifact paths (with no leading slash). Ant-style path expressions are supported (*, *\*, ?). For example: &#34;org/apache/**&#34;.
         * 
         * @return builder
         * 
         */
        public Builder excludePatterns(@Nullable Output<List<String>> excludePatterns) {
            $.excludePatterns = excludePatterns;
            return this;
        }

        /**
         * @param excludePatterns Simple comma separated wildcard patterns for repository artifact paths (with no leading slash). Ant-style path expressions are supported (*, *\*, ?). For example: &#34;org/apache/**&#34;.
         * 
         * @return builder
         * 
         */
        public Builder excludePatterns(List<String> excludePatterns) {
            return excludePatterns(Output.of(excludePatterns));
        }

        /**
         * @param excludePatterns Simple comma separated wildcard patterns for repository artifact paths (with no leading slash). Ant-style path expressions are supported (*, *\*, ?). For example: &#34;org/apache/**&#34;.
         * 
         * @return builder
         * 
         */
        public Builder excludePatterns(String... excludePatterns) {
            return excludePatterns(List.of(excludePatterns));
        }

        /**
         * @param includePatterns Simple comma separated wildcard patterns for repository artifact paths (with no leading slash). Ant-style path expressions are supported (*, *\*, ?). For example: &#34;org/apache/**&#34;.
         * 
         * @return builder
         * 
         */
        public Builder includePatterns(@Nullable Output<List<String>> includePatterns) {
            $.includePatterns = includePatterns;
            return this;
        }

        /**
         * @param includePatterns Simple comma separated wildcard patterns for repository artifact paths (with no leading slash). Ant-style path expressions are supported (*, *\*, ?). For example: &#34;org/apache/**&#34;.
         * 
         * @return builder
         * 
         */
        public Builder includePatterns(List<String> includePatterns) {
            return includePatterns(Output.of(includePatterns));
        }

        /**
         * @param includePatterns Simple comma separated wildcard patterns for repository artifact paths (with no leading slash). Ant-style path expressions are supported (*, *\*, ?). For example: &#34;org/apache/**&#34;.
         * 
         * @return builder
         * 
         */
        public Builder includePatterns(String... includePatterns) {
            return includePatterns(List.of(includePatterns));
        }

        /**
         * @param selectedReleaseBundles Trigger on this list of release bundle names.
         * 
         * @return builder
         * 
         */
        public Builder selectedReleaseBundles(Output<List<String>> selectedReleaseBundles) {
            $.selectedReleaseBundles = selectedReleaseBundles;
            return this;
        }

        /**
         * @param selectedReleaseBundles Trigger on this list of release bundle names.
         * 
         * @return builder
         * 
         */
        public Builder selectedReleaseBundles(List<String> selectedReleaseBundles) {
            return selectedReleaseBundles(Output.of(selectedReleaseBundles));
        }

        /**
         * @param selectedReleaseBundles Trigger on this list of release bundle names.
         * 
         * @return builder
         * 
         */
        public Builder selectedReleaseBundles(String... selectedReleaseBundles) {
            return selectedReleaseBundles(List.of(selectedReleaseBundles));
        }

        public ReleaseBundleV2CustomWebhookCriteriaArgs build() {
            if ($.anyReleaseBundle == null) {
                throw new MissingRequiredPropertyException("ReleaseBundleV2CustomWebhookCriteriaArgs", "anyReleaseBundle");
            }
            if ($.selectedReleaseBundles == null) {
                throw new MissingRequiredPropertyException("ReleaseBundleV2CustomWebhookCriteriaArgs", "selectedReleaseBundles");
            }
            return $;
        }
    }

}
