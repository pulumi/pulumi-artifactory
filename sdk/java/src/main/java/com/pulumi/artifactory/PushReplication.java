// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory;

import com.pulumi.artifactory.PushReplicationArgs;
import com.pulumi.artifactory.Utilities;
import com.pulumi.artifactory.inputs.PushReplicationState;
import com.pulumi.artifactory.outputs.PushReplicationReplication;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an Artifactory push replication resource. This can be used to create and manage Artifactory push replications.
 * Push replication is used to synchronize Local Repositories, and is implemented by the Artifactory server on the near
 * end invoking a synchronization of artifacts to the far end.
 * See the [Official Documentation](https://www.jfrog.com/confluence/display/JFROG/Repository+Replication#RepositoryReplication-PushReplication).
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.artifactory.LocalMavenRepository;
 * import com.pulumi.artifactory.LocalMavenRepositoryArgs;
 * import com.pulumi.artifactory.PushReplication;
 * import com.pulumi.artifactory.PushReplicationArgs;
 * import com.pulumi.artifactory.inputs.PushReplicationReplicationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var artifactoryUrl = config.get(&#34;artifactoryUrl&#34;);
 *         final var artifactoryUsername = config.get(&#34;artifactoryUsername&#34;);
 *         final var artifactoryPassword = config.get(&#34;artifactoryPassword&#34;);
 *         var providerTestSource = new LocalMavenRepository(&#34;providerTestSource&#34;, LocalMavenRepositoryArgs.builder()        
 *             .key(&#34;provider_test_source&#34;)
 *             .build());
 * 
 *         var providerTestDest = new LocalMavenRepository(&#34;providerTestDest&#34;, LocalMavenRepositoryArgs.builder()        
 *             .key(&#34;provider_test_dest&#34;)
 *             .build());
 * 
 *         var foo_rep = new PushReplication(&#34;foo-rep&#34;, PushReplicationArgs.builder()        
 *             .repoKey(providerTestSource.key())
 *             .cronExp(&#34;0 0 * * * ?&#34;)
 *             .enableEventReplication(true)
 *             .replications(PushReplicationReplicationArgs.builder()
 *                 .url(providerTestDest.key().applyValue(key -&gt; String.format(&#34;%s/%s&#34;, artifactoryUrl,key)))
 *                 .username(&#34;$var.artifactory_username&#34;)
 *                 .password(&#34;$var.artifactory_password&#34;)
 *                 .enabled(true)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Push replication configs can be imported using their repo key, e.g.
 * 
 * ```sh
 *  $ pulumi import artifactory:index/pushReplication:PushReplication foo-rep provider_test_source
 * ```
 * 
 */
@ResourceType(type="artifactory:index/pushReplication:PushReplication")
public class PushReplication extends com.pulumi.resources.CustomResource {
    @Export(name="cronExp", type=String.class, parameters={})
    private Output<String> cronExp;

    public Output<String> cronExp() {
        return this.cronExp;
    }
    /**
     * When set, each event will trigger replication of the artifacts changed in this event. This can be any type of event on artifact, e.g. added, deleted or property change.
     * 
     */
    @Export(name="enableEventReplication", type=Boolean.class, parameters={})
    private Output<Boolean> enableEventReplication;

    /**
     * @return When set, each event will trigger replication of the artifacts changed in this event. This can be any type of event on artifact, e.g. added, deleted or property change.
     * 
     */
    public Output<Boolean> enableEventReplication() {
        return this.enableEventReplication;
    }
    @Export(name="replications", type=List.class, parameters={PushReplicationReplication.class})
    private Output</* @Nullable */ List<PushReplicationReplication>> replications;

    public Output<Optional<List<PushReplicationReplication>>> replications() {
        return Codegen.optional(this.replications);
    }
    @Export(name="repoKey", type=String.class, parameters={})
    private Output<String> repoKey;

    public Output<String> repoKey() {
        return this.repoKey;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PushReplication(String name) {
        this(name, PushReplicationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PushReplication(String name, PushReplicationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PushReplication(String name, PushReplicationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("artifactory:index/pushReplication:PushReplication", name, args == null ? PushReplicationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PushReplication(String name, Output<String> id, @Nullable PushReplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("artifactory:index/pushReplication:PushReplication", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PushReplication get(String name, Output<String> id, @Nullable PushReplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PushReplication(name, id, state, options);
    }
}
