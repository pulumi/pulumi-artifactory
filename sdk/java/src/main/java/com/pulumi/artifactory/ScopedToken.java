// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory;

import com.pulumi.artifactory.ScopedTokenArgs;
import com.pulumi.artifactory.Utilities;
import com.pulumi.artifactory.inputs.ScopedTokenState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * Artifactory **does not** retain scoped tokens and cannot be imported into state.
 * 
 */
@ResourceType(type="artifactory:index/scopedToken:ScopedToken")
public class ScopedToken extends com.pulumi.resources.CustomResource {
    /**
     * Returns the access token to authenticate to Artifactory
     * 
     */
    @Export(name="accessToken", type=String.class, parameters={})
    private Output<String> accessToken;

    /**
     * @return Returns the access token to authenticate to Artifactory
     * 
     */
    public Output<String> accessToken() {
        return this.accessToken;
    }
    /**
     * (Optional) A list of the other instances or services that should accept this token identified by their Service-IDs. Limited to total 255 characters. Default to &#39;*@*&#39; if not set. Service ID must begin with &#39;jfrt@&#39;. For instructions to retrieve the Artifactory Service ID see this [documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-GetServiceID).
     * 
     */
    @Export(name="audiences", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> audiences;

    /**
     * @return (Optional) A list of the other instances or services that should accept this token identified by their Service-IDs. Limited to total 255 characters. Default to &#39;*@*&#39; if not set. Service ID must begin with &#39;jfrt@&#39;. For instructions to retrieve the Artifactory Service ID see this [documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-GetServiceID).
     * 
     */
    public Output<Optional<List<String>>> audiences() {
        return Codegen.optional(this.audiences);
    }
    /**
     * (Optional) Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return (Optional) Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * (Optional) The amount of time, in seconds, it would take for the token to expire. An admin shall be able to set whether expiry is mandatory, what is the default expiry, and what is the maximum expiry allowed. Must be non-negative. Default value is based on configuration in `access.config.yaml`. See [API documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-RevokeTokenbyIDrevoketokenbyid) for details.
     * 
     */
    @Export(name="expiresIn", type=Integer.class, parameters={})
    private Output<Integer> expiresIn;

    /**
     * @return (Optional) The amount of time, in seconds, it would take for the token to expire. An admin shall be able to set whether expiry is mandatory, what is the default expiry, and what is the maximum expiry allowed. Must be non-negative. Default value is based on configuration in `access.config.yaml`. See [API documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-RevokeTokenbyIDrevoketokenbyid) for details.
     * 
     */
    public Output<Integer> expiresIn() {
        return this.expiresIn;
    }
    /**
     * Returns the token expiry
     * 
     */
    @Export(name="expiry", type=Integer.class, parameters={})
    private Output<Integer> expiry;

    /**
     * @return Returns the token expiry
     * 
     */
    public Output<Integer> expiry() {
        return this.expiry;
    }
    /**
     * Returns the token issued at date/time
     * 
     */
    @Export(name="issuedAt", type=Integer.class, parameters={})
    private Output<Integer> issuedAt;

    /**
     * @return Returns the token issued at date/time
     * 
     */
    public Output<Integer> issuedAt() {
        return this.issuedAt;
    }
    /**
     * Returns the token issuer
     * 
     */
    @Export(name="issuer", type=String.class, parameters={})
    private Output<String> issuer;

    /**
     * @return Returns the token issuer
     * 
     */
    public Output<String> issuer() {
        return this.issuer;
    }
    /**
     * (Optional) Is this token refreshable? Defaults to `false`
     * 
     */
    @Export(name="refreshable", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> refreshable;

    /**
     * @return (Optional) Is this token refreshable? Defaults to `false`
     * 
     */
    public Output<Optional<Boolean>> refreshable() {
        return Codegen.optional(this.refreshable);
    }
    /**
     * (Optional) The scope of access that the token provides. Access to the REST API is always provided by default. Administrators can set any scope, while non-admin users can only set the scope to a subset of the groups to which they belong.
     * 
     */
    @Export(name="scopes", type=List.class, parameters={String.class})
    private Output<List<String>> scopes;

    /**
     * @return (Optional) The scope of access that the token provides. Access to the REST API is always provided by default. Administrators can set any scope, while non-admin users can only set the scope to a subset of the groups to which they belong.
     * 
     */
    public Output<List<String>> scopes() {
        return this.scopes;
    }
    /**
     * Returns the token type
     * 
     */
    @Export(name="subject", type=String.class, parameters={})
    private Output<String> subject;

    /**
     * @return Returns the token type
     * 
     */
    public Output<String> subject() {
        return this.subject;
    }
    /**
     * Returns the token type
     * 
     */
    @Export(name="tokenType", type=String.class, parameters={})
    private Output<String> tokenType;

    /**
     * @return Returns the token type
     * 
     */
    public Output<String> tokenType() {
        return this.tokenType;
    }
    /**
     * (Optional) The user name for which this token is created. The username is based on the authenticated user - either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: `&lt;service-id&gt;/users/&lt;username&gt;`. Limited to 255 characters.
     * 
     */
    @Export(name="username", type=String.class, parameters={})
    private Output</* @Nullable */ String> username;

    /**
     * @return (Optional) The user name for which this token is created. The username is based on the authenticated user - either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: `&lt;service-id&gt;/users/&lt;username&gt;`. Limited to 255 characters.
     * 
     */
    public Output<Optional<String>> username() {
        return Codegen.optional(this.username);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ScopedToken(String name) {
        this(name, ScopedTokenArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ScopedToken(String name, @Nullable ScopedTokenArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ScopedToken(String name, @Nullable ScopedTokenArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("artifactory:index/scopedToken:ScopedToken", name, args == null ? ScopedTokenArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ScopedToken(String name, Output<String> id, @Nullable ScopedTokenState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("artifactory:index/scopedToken:ScopedToken", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ScopedToken get(String name, Output<String> id, @Nullable ScopedTokenState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ScopedToken(name, id, state, options);
    }
}
