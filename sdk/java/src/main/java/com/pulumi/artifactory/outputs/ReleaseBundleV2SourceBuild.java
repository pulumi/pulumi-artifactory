// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ReleaseBundleV2SourceBuild {
    /**
     * @return Determines whether to include build dependencies in the Release Bundle. The default value is `false`.
     * 
     */
    private @Nullable Boolean includeDependencies;
    /**
     * @return Name of the build.
     * 
     */
    private String name;
    /**
     * @return Number (run) of the build.
     * 
     */
    private String number;
    /**
     * @return The repository key of the build. If omitted, the system uses the default built-in repository, `artifactory-build-info`.
     * 
     */
    private @Nullable String repository;
    /**
     * @return Timestamp when the build was created. If omitted, the system uses the latest build run, as identified by the `name` and `number` combination. The timestamp is provided according to the ISO 8601 standard.
     * 
     */
    private @Nullable String started;

    private ReleaseBundleV2SourceBuild() {}
    /**
     * @return Determines whether to include build dependencies in the Release Bundle. The default value is `false`.
     * 
     */
    public Optional<Boolean> includeDependencies() {
        return Optional.ofNullable(this.includeDependencies);
    }
    /**
     * @return Name of the build.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Number (run) of the build.
     * 
     */
    public String number() {
        return this.number;
    }
    /**
     * @return The repository key of the build. If omitted, the system uses the default built-in repository, `artifactory-build-info`.
     * 
     */
    public Optional<String> repository() {
        return Optional.ofNullable(this.repository);
    }
    /**
     * @return Timestamp when the build was created. If omitted, the system uses the latest build run, as identified by the `name` and `number` combination. The timestamp is provided according to the ISO 8601 standard.
     * 
     */
    public Optional<String> started() {
        return Optional.ofNullable(this.started);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReleaseBundleV2SourceBuild defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean includeDependencies;
        private String name;
        private String number;
        private @Nullable String repository;
        private @Nullable String started;
        public Builder() {}
        public Builder(ReleaseBundleV2SourceBuild defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.includeDependencies = defaults.includeDependencies;
    	      this.name = defaults.name;
    	      this.number = defaults.number;
    	      this.repository = defaults.repository;
    	      this.started = defaults.started;
        }

        @CustomType.Setter
        public Builder includeDependencies(@Nullable Boolean includeDependencies) {

            this.includeDependencies = includeDependencies;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ReleaseBundleV2SourceBuild", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder number(String number) {
            if (number == null) {
              throw new MissingRequiredPropertyException("ReleaseBundleV2SourceBuild", "number");
            }
            this.number = number;
            return this;
        }
        @CustomType.Setter
        public Builder repository(@Nullable String repository) {

            this.repository = repository;
            return this;
        }
        @CustomType.Setter
        public Builder started(@Nullable String started) {

            this.started = started;
            return this;
        }
        public ReleaseBundleV2SourceBuild build() {
            final var _resultValue = new ReleaseBundleV2SourceBuild();
            _resultValue.includeDependencies = includeDependencies;
            _resultValue.name = name;
            _resultValue.number = number;
            _resultValue.repository = repository;
            _resultValue.started = started;
            return _resultValue;
        }
    }
}
