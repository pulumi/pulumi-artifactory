// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory;

import com.pulumi.artifactory.ManagedUserArgs;
import com.pulumi.artifactory.Utilities;
import com.pulumi.artifactory.inputs.ManagedUserState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an Artifactory managed user resource. This can be used to create and maintain Artifactory users. For example, service account where password is known and managed externally.
 * 
 * Unlike `artifactory.UnmanagedUser` and `artifactory.User`, the `password` attribute is required and cannot be empty.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.artifactory.ManagedUser;
 * import com.pulumi.artifactory.ManagedUserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test_user = new ManagedUser(&#34;test-user&#34;, ManagedUserArgs.builder()        
 *             .email(&#34;test-user@artifactory-terraform.com&#34;)
 *             .groups(            
 *                 &#34;logged-in-users&#34;,
 *                 &#34;readers&#34;)
 *             .password(&#34;my super secret password&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Users can be imported using their name, e.g.
 * 
 * ```sh
 *  $ pulumi import artifactory:index/managedUser:ManagedUser test-user myusername
 * ```
 * 
 */
@ResourceType(type="artifactory:index/managedUser:ManagedUser")
public class ManagedUser extends com.pulumi.resources.CustomResource {
    /**
     * When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.
     * 
     */
    @Export(name="admin", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> admin;

    /**
     * @return When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.
     * 
     */
    public Output<Optional<Boolean>> admin() {
        return Codegen.optional(this.admin);
    }
    /**
     * When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.
     * 
     */
    @Export(name="disableUiAccess", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> disableUiAccess;

    /**
     * @return When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.
     * 
     */
    public Output<Optional<Boolean>> disableUiAccess() {
        return Codegen.optional(this.disableUiAccess);
    }
    /**
     * Email for user.
     * 
     */
    @Export(name="email", type=String.class, parameters={})
    private Output<String> email;

    /**
     * @return Email for user.
     * 
     */
    public Output<String> email() {
        return this.email;
    }
    /**
     * List of groups this user is a part of.
     * 
     */
    @Export(name="groups", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> groups;

    /**
     * @return List of groups this user is a part of.
     * 
     */
    public Output<Optional<List<String>>> groups() {
        return Codegen.optional(this.groups);
    }
    /**
     * When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.
     * 
     */
    @Export(name="internalPasswordDisabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> internalPasswordDisabled;

    /**
     * @return When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.
     * 
     */
    public Output<Optional<Boolean>> internalPasswordDisabled() {
        return Codegen.optional(this.internalPasswordDisabled);
    }
    /**
     * Username for user.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Username for user.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Password for the user.
     * 
     */
    @Export(name="password", type=String.class, parameters={})
    private Output<String> password;

    /**
     * @return Password for the user.
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.
     * 
     */
    @Export(name="profileUpdatable", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> profileUpdatable;

    /**
     * @return When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.
     * 
     */
    public Output<Optional<Boolean>> profileUpdatable() {
        return Codegen.optional(this.profileUpdatable);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ManagedUser(String name) {
        this(name, ManagedUserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ManagedUser(String name, ManagedUserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagedUser(String name, ManagedUserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("artifactory:index/managedUser:ManagedUser", name, args == null ? ManagedUserArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ManagedUser(String name, Output<String> id, @Nullable ManagedUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("artifactory:index/managedUser:ManagedUser", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagedUser get(String name, Output<String> id, @Nullable ManagedUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ManagedUser(name, id, state, options);
    }
}
