// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.outputs;

import com.pulumi.artifactory.outputs.VaultConfigurationConfigAuth;
import com.pulumi.artifactory.outputs.VaultConfigurationConfigMount;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class VaultConfigurationConfig {
    private VaultConfigurationConfigAuth auth;
    private List<VaultConfigurationConfigMount> mounts;
    /**
     * @return The base URL of the Vault server.
     * 
     */
    private String url;

    private VaultConfigurationConfig() {}
    public VaultConfigurationConfigAuth auth() {
        return this.auth;
    }
    public List<VaultConfigurationConfigMount> mounts() {
        return this.mounts;
    }
    /**
     * @return The base URL of the Vault server.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VaultConfigurationConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private VaultConfigurationConfigAuth auth;
        private List<VaultConfigurationConfigMount> mounts;
        private String url;
        public Builder() {}
        public Builder(VaultConfigurationConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auth = defaults.auth;
    	      this.mounts = defaults.mounts;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder auth(VaultConfigurationConfigAuth auth) {
            if (auth == null) {
              throw new MissingRequiredPropertyException("VaultConfigurationConfig", "auth");
            }
            this.auth = auth;
            return this;
        }
        @CustomType.Setter
        public Builder mounts(List<VaultConfigurationConfigMount> mounts) {
            if (mounts == null) {
              throw new MissingRequiredPropertyException("VaultConfigurationConfig", "mounts");
            }
            this.mounts = mounts;
            return this;
        }
        public Builder mounts(VaultConfigurationConfigMount... mounts) {
            return mounts(List.of(mounts));
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("VaultConfigurationConfig", "url");
            }
            this.url = url;
            return this;
        }
        public VaultConfigurationConfig build() {
            final var _resultValue = new VaultConfigurationConfig();
            _resultValue.auth = auth;
            _resultValue.mounts = mounts;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
