// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.outputs;

import com.pulumi.artifactory.outputs.ReleaseBundleV2SourceArtifact;
import com.pulumi.artifactory.outputs.ReleaseBundleV2SourceBuild;
import com.pulumi.artifactory.outputs.ReleaseBundleV2SourceReleaseBundle;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ReleaseBundleV2Source {
    /**
     * @return The contents of the AQL query.
     * 
     */
    private @Nullable String aql;
    /**
     * @return Source type to create a Release Bundle v2 version by collecting source artifacts from a list of path/checksum pairs.
     * 
     */
    private @Nullable List<ReleaseBundleV2SourceArtifact> artifacts;
    /**
     * @return Source type to create a Release Bundle v2 version by collecting source artifacts from one or multiple builds (also known as build-info).
     * 
     */
    private @Nullable List<ReleaseBundleV2SourceBuild> builds;
    /**
     * @return Source type to create a Release Bundle v2 version by collecting source artifacts from existing Release Bundle versions. Must match `source_type` attribute value.
     * 
     */
    private @Nullable List<ReleaseBundleV2SourceReleaseBundle> releaseBundles;

    private ReleaseBundleV2Source() {}
    /**
     * @return The contents of the AQL query.
     * 
     */
    public Optional<String> aql() {
        return Optional.ofNullable(this.aql);
    }
    /**
     * @return Source type to create a Release Bundle v2 version by collecting source artifacts from a list of path/checksum pairs.
     * 
     */
    public List<ReleaseBundleV2SourceArtifact> artifacts() {
        return this.artifacts == null ? List.of() : this.artifacts;
    }
    /**
     * @return Source type to create a Release Bundle v2 version by collecting source artifacts from one or multiple builds (also known as build-info).
     * 
     */
    public List<ReleaseBundleV2SourceBuild> builds() {
        return this.builds == null ? List.of() : this.builds;
    }
    /**
     * @return Source type to create a Release Bundle v2 version by collecting source artifacts from existing Release Bundle versions. Must match `source_type` attribute value.
     * 
     */
    public List<ReleaseBundleV2SourceReleaseBundle> releaseBundles() {
        return this.releaseBundles == null ? List.of() : this.releaseBundles;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReleaseBundleV2Source defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String aql;
        private @Nullable List<ReleaseBundleV2SourceArtifact> artifacts;
        private @Nullable List<ReleaseBundleV2SourceBuild> builds;
        private @Nullable List<ReleaseBundleV2SourceReleaseBundle> releaseBundles;
        public Builder() {}
        public Builder(ReleaseBundleV2Source defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aql = defaults.aql;
    	      this.artifacts = defaults.artifacts;
    	      this.builds = defaults.builds;
    	      this.releaseBundles = defaults.releaseBundles;
        }

        @CustomType.Setter
        public Builder aql(@Nullable String aql) {

            this.aql = aql;
            return this;
        }
        @CustomType.Setter
        public Builder artifacts(@Nullable List<ReleaseBundleV2SourceArtifact> artifacts) {

            this.artifacts = artifacts;
            return this;
        }
        public Builder artifacts(ReleaseBundleV2SourceArtifact... artifacts) {
            return artifacts(List.of(artifacts));
        }
        @CustomType.Setter
        public Builder builds(@Nullable List<ReleaseBundleV2SourceBuild> builds) {

            this.builds = builds;
            return this;
        }
        public Builder builds(ReleaseBundleV2SourceBuild... builds) {
            return builds(List.of(builds));
        }
        @CustomType.Setter
        public Builder releaseBundles(@Nullable List<ReleaseBundleV2SourceReleaseBundle> releaseBundles) {

            this.releaseBundles = releaseBundles;
            return this;
        }
        public Builder releaseBundles(ReleaseBundleV2SourceReleaseBundle... releaseBundles) {
            return releaseBundles(List.of(releaseBundles));
        }
        public ReleaseBundleV2Source build() {
            final var _resultValue = new ReleaseBundleV2Source();
            _resultValue.aql = aql;
            _resultValue.artifacts = artifacts;
            _resultValue.builds = builds;
            _resultValue.releaseBundles = releaseBundles;
            return _resultValue;
        }
    }
}
