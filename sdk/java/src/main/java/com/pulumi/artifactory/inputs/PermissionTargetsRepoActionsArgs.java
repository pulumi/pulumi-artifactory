// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.inputs;

import com.pulumi.artifactory.inputs.PermissionTargetsRepoActionsGroupArgs;
import com.pulumi.artifactory.inputs.PermissionTargetsRepoActionsUserArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PermissionTargetsRepoActionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PermissionTargetsRepoActionsArgs Empty = new PermissionTargetsRepoActionsArgs();

    /**
     * Groups this permission applies for.
     * 
     */
    @Import(name="groups")
    private @Nullable Output<List<PermissionTargetsRepoActionsGroupArgs>> groups;

    /**
     * @return Groups this permission applies for.
     * 
     */
    public Optional<Output<List<PermissionTargetsRepoActionsGroupArgs>>> groups() {
        return Optional.ofNullable(this.groups);
    }

    /**
     * Users this permission target applies for.
     * 
     */
    @Import(name="users")
    private @Nullable Output<List<PermissionTargetsRepoActionsUserArgs>> users;

    /**
     * @return Users this permission target applies for.
     * 
     */
    public Optional<Output<List<PermissionTargetsRepoActionsUserArgs>>> users() {
        return Optional.ofNullable(this.users);
    }

    private PermissionTargetsRepoActionsArgs() {}

    private PermissionTargetsRepoActionsArgs(PermissionTargetsRepoActionsArgs $) {
        this.groups = $.groups;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PermissionTargetsRepoActionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PermissionTargetsRepoActionsArgs $;

        public Builder() {
            $ = new PermissionTargetsRepoActionsArgs();
        }

        public Builder(PermissionTargetsRepoActionsArgs defaults) {
            $ = new PermissionTargetsRepoActionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groups Groups this permission applies for.
         * 
         * @return builder
         * 
         */
        public Builder groups(@Nullable Output<List<PermissionTargetsRepoActionsGroupArgs>> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups Groups this permission applies for.
         * 
         * @return builder
         * 
         */
        public Builder groups(List<PermissionTargetsRepoActionsGroupArgs> groups) {
            return groups(Output.of(groups));
        }

        /**
         * @param groups Groups this permission applies for.
         * 
         * @return builder
         * 
         */
        public Builder groups(PermissionTargetsRepoActionsGroupArgs... groups) {
            return groups(List.of(groups));
        }

        /**
         * @param users Users this permission target applies for.
         * 
         * @return builder
         * 
         */
        public Builder users(@Nullable Output<List<PermissionTargetsRepoActionsUserArgs>> users) {
            $.users = users;
            return this;
        }

        /**
         * @param users Users this permission target applies for.
         * 
         * @return builder
         * 
         */
        public Builder users(List<PermissionTargetsRepoActionsUserArgs> users) {
            return users(Output.of(users));
        }

        /**
         * @param users Users this permission target applies for.
         * 
         * @return builder
         * 
         */
        public Builder users(PermissionTargetsRepoActionsUserArgs... users) {
            return users(List.of(users));
        }

        public PermissionTargetsRepoActionsArgs build() {
            return $;
        }
    }

}
