// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.inputs;

import com.pulumi.artifactory.inputs.GetPermissionTargetRepoActionsGroup;
import com.pulumi.artifactory.inputs.GetPermissionTargetRepoActionsUser;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPermissionTargetRepoActions extends com.pulumi.resources.InvokeArgs {

    public static final GetPermissionTargetRepoActions Empty = new GetPermissionTargetRepoActions();

    /**
     * Groups this permission applies for.
     * 
     */
    @Import(name="groups")
    private @Nullable List<GetPermissionTargetRepoActionsGroup> groups;

    /**
     * @return Groups this permission applies for.
     * 
     */
    public Optional<List<GetPermissionTargetRepoActionsGroup>> groups() {
        return Optional.ofNullable(this.groups);
    }

    /**
     * Users this permission target applies for.
     * 
     */
    @Import(name="users")
    private @Nullable List<GetPermissionTargetRepoActionsUser> users;

    /**
     * @return Users this permission target applies for.
     * 
     */
    public Optional<List<GetPermissionTargetRepoActionsUser>> users() {
        return Optional.ofNullable(this.users);
    }

    private GetPermissionTargetRepoActions() {}

    private GetPermissionTargetRepoActions(GetPermissionTargetRepoActions $) {
        this.groups = $.groups;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPermissionTargetRepoActions defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPermissionTargetRepoActions $;

        public Builder() {
            $ = new GetPermissionTargetRepoActions();
        }

        public Builder(GetPermissionTargetRepoActions defaults) {
            $ = new GetPermissionTargetRepoActions(Objects.requireNonNull(defaults));
        }

        /**
         * @param groups Groups this permission applies for.
         * 
         * @return builder
         * 
         */
        public Builder groups(@Nullable List<GetPermissionTargetRepoActionsGroup> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups Groups this permission applies for.
         * 
         * @return builder
         * 
         */
        public Builder groups(GetPermissionTargetRepoActionsGroup... groups) {
            return groups(List.of(groups));
        }

        /**
         * @param users Users this permission target applies for.
         * 
         * @return builder
         * 
         */
        public Builder users(@Nullable List<GetPermissionTargetRepoActionsUser> users) {
            $.users = users;
            return this;
        }

        /**
         * @param users Users this permission target applies for.
         * 
         * @return builder
         * 
         */
        public Builder users(GetPermissionTargetRepoActionsUser... users) {
            return users(List.of(users));
        }

        public GetPermissionTargetRepoActions build() {
            return $;
        }
    }

}
