// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ReleaseBundleV2CleanupPolicySearchCriteriaReleaseBundle {
    /**
     * @return The name of the release bundle. Set `**` to include all bundles. Example: `name = &#34;**&#34;`
     * 
     */
    private String name;
    /**
     * @return The project identifier associated with the release bundle. This key is obtained from the Project Settings screen. Leave the field blank to apply at a global level.
     * 
     */
    private String projectKey;

    private ReleaseBundleV2CleanupPolicySearchCriteriaReleaseBundle() {}
    /**
     * @return The name of the release bundle. Set `**` to include all bundles. Example: `name = &#34;**&#34;`
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The project identifier associated with the release bundle. This key is obtained from the Project Settings screen. Leave the field blank to apply at a global level.
     * 
     */
    public String projectKey() {
        return this.projectKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReleaseBundleV2CleanupPolicySearchCriteriaReleaseBundle defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private String projectKey;
        public Builder() {}
        public Builder(ReleaseBundleV2CleanupPolicySearchCriteriaReleaseBundle defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.projectKey = defaults.projectKey;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ReleaseBundleV2CleanupPolicySearchCriteriaReleaseBundle", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder projectKey(String projectKey) {
            if (projectKey == null) {
              throw new MissingRequiredPropertyException("ReleaseBundleV2CleanupPolicySearchCriteriaReleaseBundle", "projectKey");
            }
            this.projectKey = projectKey;
            return this;
        }
        public ReleaseBundleV2CleanupPolicySearchCriteriaReleaseBundle build() {
            final var _resultValue = new ReleaseBundleV2CleanupPolicySearchCriteriaReleaseBundle();
            _resultValue.name = name;
            _resultValue.projectKey = projectKey;
            return _resultValue;
        }
    }
}
