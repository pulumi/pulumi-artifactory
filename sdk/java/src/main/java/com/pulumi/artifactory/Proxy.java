// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory;

import com.pulumi.artifactory.ProxyArgs;
import com.pulumi.artifactory.Utilities;
import com.pulumi.artifactory.inputs.ProxyState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an Artifactory Proxy resource.
 * 
 * This resource configuration corresponds to &#39;proxies&#39; config block in system configuration XML
 * (REST endpoint: [artifactory/api/system/configuration](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-GeneralConfiguration)).
 * 
 * ~&gt;The `artifactory.Proxy` resource utilizes endpoints which are blocked/removed in SaaS environments (i.e. in Artifactory online), rendering this resource incompatible with Artifactory SaaS environments.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.artifactory.Proxy;
 * import com.pulumi.artifactory.ProxyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var my_proxy = new Proxy(&#34;my-proxy&#34;, ProxyArgs.builder()        
 *             .host(&#34;my-proxy.mycompany.com&#34;)
 *             .key(&#34;my-proxy&#34;)
 *             .ntDomain(&#34;MYCOMPANY&#34;)
 *             .ntHost(&#34;MYCOMPANY.COM&#34;)
 *             .password(&#34;password&#34;)
 *             .platformDefault(false)
 *             .port(8888)
 *             .redirectToHosts(&#34;redirec-host.mycompany.com&#34;)
 *             .services(            
 *                 &#34;jfrt&#34;,
 *                 &#34;jfxr&#34;)
 *             .username(&#34;user1&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Current Proxy can be imported using `proxy-key` from Artifactory as the `ID`, e.g.
 * 
 * ```sh
 *  $ pulumi import artifactory:index/proxy:Proxy my-proxy proxy-key
 * ```
 * 
 */
@ResourceType(type="artifactory:index/proxy:Proxy")
public class Proxy extends com.pulumi.resources.CustomResource {
    /**
     * The name of the proxy host.
     * 
     */
    @Export(name="host", type=String.class, parameters={})
    private Output<String> host;

    /**
     * @return The name of the proxy host.
     * 
     */
    public Output<String> host() {
        return this.host;
    }
    /**
     * The unique ID of the proxy.
     * 
     */
    @Export(name="key", type=String.class, parameters={})
    private Output<String> key;

    /**
     * @return The unique ID of the proxy.
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * The proxy domain/realm name.
     * 
     */
    @Export(name="ntDomain", type=String.class, parameters={})
    private Output</* @Nullable */ String> ntDomain;

    /**
     * @return The proxy domain/realm name.
     * 
     */
    public Output<Optional<String>> ntDomain() {
        return Codegen.optional(this.ntDomain);
    }
    /**
     * The computer name of the machine (the machine connecting to the NTLM proxy).
     * 
     */
    @Export(name="ntHost", type=String.class, parameters={})
    private Output</* @Nullable */ String> ntHost;

    /**
     * @return The computer name of the machine (the machine connecting to the NTLM proxy).
     * 
     */
    public Output<Optional<String>> ntHost() {
        return Codegen.optional(this.ntHost);
    }
    /**
     * The proxy password when authentication credentials are required.
     * 
     */
    @Export(name="password", type=String.class, parameters={})
    private Output</* @Nullable */ String> password;

    /**
     * @return The proxy password when authentication credentials are required.
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * When set, this proxy will be the default proxy for new remote repositories and for internal HTTP requests issued by Artifactory. Will also be used as proxy for all other services in the platform (for example: Xray, Distribution, etc).
     * 
     */
    @Export(name="platformDefault", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> platformDefault;

    /**
     * @return When set, this proxy will be the default proxy for new remote repositories and for internal HTTP requests issued by Artifactory. Will also be used as proxy for all other services in the platform (for example: Xray, Distribution, etc).
     * 
     */
    public Output<Optional<Boolean>> platformDefault() {
        return Codegen.optional(this.platformDefault);
    }
    /**
     * The proxy port number.
     * 
     */
    @Export(name="port", type=Integer.class, parameters={})
    private Output<Integer> port;

    /**
     * @return The proxy port number.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }
    /**
     * An optional list of host names to which this proxy may redirect requests. The credentials defined for the proxy are reused by requests redirected to all of these hosts.
     * 
     */
    @Export(name="redirectToHosts", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> redirectToHosts;

    /**
     * @return An optional list of host names to which this proxy may redirect requests. The credentials defined for the proxy are reused by requests redirected to all of these hosts.
     * 
     */
    public Output<Optional<List<String>>> redirectToHosts() {
        return Codegen.optional(this.redirectToHosts);
    }
    /**
     * An optional list of services names to which this proxy be the default of. The options are `jfrt`, `jfmc`, `jfxr`, `jfds`.
     * 
     */
    @Export(name="services", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> services;

    /**
     * @return An optional list of services names to which this proxy be the default of. The options are `jfrt`, `jfmc`, `jfxr`, `jfds`.
     * 
     */
    public Output<Optional<List<String>>> services() {
        return Codegen.optional(this.services);
    }
    /**
     * The proxy username when authentication credentials are required.
     * 
     */
    @Export(name="username", type=String.class, parameters={})
    private Output</* @Nullable */ String> username;

    /**
     * @return The proxy username when authentication credentials are required.
     * 
     */
    public Output<Optional<String>> username() {
        return Codegen.optional(this.username);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Proxy(String name) {
        this(name, ProxyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Proxy(String name, ProxyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Proxy(String name, ProxyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("artifactory:index/proxy:Proxy", name, args == null ? ProxyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Proxy(String name, Output<String> id, @Nullable ProxyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("artifactory:index/proxy:Proxy", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Proxy get(String name, Output<String> id, @Nullable ProxyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Proxy(name, id, state, options);
    }
}
