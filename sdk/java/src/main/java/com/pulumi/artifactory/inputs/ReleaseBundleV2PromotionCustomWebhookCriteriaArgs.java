// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReleaseBundleV2PromotionCustomWebhookCriteriaArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReleaseBundleV2PromotionCustomWebhookCriteriaArgs Empty = new ReleaseBundleV2PromotionCustomWebhookCriteriaArgs();

    @Import(name="excludePatterns")
    private @Nullable Output<List<String>> excludePatterns;

    public Optional<Output<List<String>>> excludePatterns() {
        return Optional.ofNullable(this.excludePatterns);
    }

    @Import(name="includePatterns")
    private @Nullable Output<List<String>> includePatterns;

    public Optional<Output<List<String>>> includePatterns() {
        return Optional.ofNullable(this.includePatterns);
    }

    /**
     * Trigger on this list of environment names.
     * 
     */
    @Import(name="selectedEnvironments", required=true)
    private Output<List<String>> selectedEnvironments;

    /**
     * @return Trigger on this list of environment names.
     * 
     */
    public Output<List<String>> selectedEnvironments() {
        return this.selectedEnvironments;
    }

    private ReleaseBundleV2PromotionCustomWebhookCriteriaArgs() {}

    private ReleaseBundleV2PromotionCustomWebhookCriteriaArgs(ReleaseBundleV2PromotionCustomWebhookCriteriaArgs $) {
        this.excludePatterns = $.excludePatterns;
        this.includePatterns = $.includePatterns;
        this.selectedEnvironments = $.selectedEnvironments;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReleaseBundleV2PromotionCustomWebhookCriteriaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReleaseBundleV2PromotionCustomWebhookCriteriaArgs $;

        public Builder() {
            $ = new ReleaseBundleV2PromotionCustomWebhookCriteriaArgs();
        }

        public Builder(ReleaseBundleV2PromotionCustomWebhookCriteriaArgs defaults) {
            $ = new ReleaseBundleV2PromotionCustomWebhookCriteriaArgs(Objects.requireNonNull(defaults));
        }

        public Builder excludePatterns(@Nullable Output<List<String>> excludePatterns) {
            $.excludePatterns = excludePatterns;
            return this;
        }

        public Builder excludePatterns(List<String> excludePatterns) {
            return excludePatterns(Output.of(excludePatterns));
        }

        public Builder excludePatterns(String... excludePatterns) {
            return excludePatterns(List.of(excludePatterns));
        }

        public Builder includePatterns(@Nullable Output<List<String>> includePatterns) {
            $.includePatterns = includePatterns;
            return this;
        }

        public Builder includePatterns(List<String> includePatterns) {
            return includePatterns(Output.of(includePatterns));
        }

        public Builder includePatterns(String... includePatterns) {
            return includePatterns(List.of(includePatterns));
        }

        /**
         * @param selectedEnvironments Trigger on this list of environment names.
         * 
         * @return builder
         * 
         */
        public Builder selectedEnvironments(Output<List<String>> selectedEnvironments) {
            $.selectedEnvironments = selectedEnvironments;
            return this;
        }

        /**
         * @param selectedEnvironments Trigger on this list of environment names.
         * 
         * @return builder
         * 
         */
        public Builder selectedEnvironments(List<String> selectedEnvironments) {
            return selectedEnvironments(Output.of(selectedEnvironments));
        }

        /**
         * @param selectedEnvironments Trigger on this list of environment names.
         * 
         * @return builder
         * 
         */
        public Builder selectedEnvironments(String... selectedEnvironments) {
            return selectedEnvironments(List.of(selectedEnvironments));
        }

        public ReleaseBundleV2PromotionCustomWebhookCriteriaArgs build() {
            if ($.selectedEnvironments == null) {
                throw new MissingRequiredPropertyException("ReleaseBundleV2PromotionCustomWebhookCriteriaArgs", "selectedEnvironments");
            }
            return $;
        }
    }

}
