// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.outputs;

import com.pulumi.artifactory.outputs.PropertySetPropertyPredefinedValue;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PropertySetProperty {
    /**
     * @return Disables `multiple_choice` if set to `false` at the same time with multiple_choice set to `true`. Default value is `false`
     * 
     */
    private @Nullable Boolean closedPredefinedValues;
    /**
     * @return Defines if user can select multiple values. `closed_predefined_values` should be set to `true`. Default value is `false`.
     * 
     */
    private @Nullable Boolean multipleChoice;
    /**
     * @return Predefined property name.
     * 
     */
    private String name;
    /**
     * @return Properties in the property set.
     * 
     */
    private List<PropertySetPropertyPredefinedValue> predefinedValues;

    private PropertySetProperty() {}
    /**
     * @return Disables `multiple_choice` if set to `false` at the same time with multiple_choice set to `true`. Default value is `false`
     * 
     */
    public Optional<Boolean> closedPredefinedValues() {
        return Optional.ofNullable(this.closedPredefinedValues);
    }
    /**
     * @return Defines if user can select multiple values. `closed_predefined_values` should be set to `true`. Default value is `false`.
     * 
     */
    public Optional<Boolean> multipleChoice() {
        return Optional.ofNullable(this.multipleChoice);
    }
    /**
     * @return Predefined property name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Properties in the property set.
     * 
     */
    public List<PropertySetPropertyPredefinedValue> predefinedValues() {
        return this.predefinedValues;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PropertySetProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean closedPredefinedValues;
        private @Nullable Boolean multipleChoice;
        private String name;
        private List<PropertySetPropertyPredefinedValue> predefinedValues;
        public Builder() {}
        public Builder(PropertySetProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.closedPredefinedValues = defaults.closedPredefinedValues;
    	      this.multipleChoice = defaults.multipleChoice;
    	      this.name = defaults.name;
    	      this.predefinedValues = defaults.predefinedValues;
        }

        @CustomType.Setter
        public Builder closedPredefinedValues(@Nullable Boolean closedPredefinedValues) {
            this.closedPredefinedValues = closedPredefinedValues;
            return this;
        }
        @CustomType.Setter
        public Builder multipleChoice(@Nullable Boolean multipleChoice) {
            this.multipleChoice = multipleChoice;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder predefinedValues(List<PropertySetPropertyPredefinedValue> predefinedValues) {
            this.predefinedValues = Objects.requireNonNull(predefinedValues);
            return this;
        }
        public Builder predefinedValues(PropertySetPropertyPredefinedValue... predefinedValues) {
            return predefinedValues(List.of(predefinedValues));
        }
        public PropertySetProperty build() {
            final var o = new PropertySetProperty();
            o.closedPredefinedValues = closedPredefinedValues;
            o.multipleChoice = multipleChoice;
            o.name = name;
            o.predefinedValues = predefinedValues;
            return o;
        }
    }
}
