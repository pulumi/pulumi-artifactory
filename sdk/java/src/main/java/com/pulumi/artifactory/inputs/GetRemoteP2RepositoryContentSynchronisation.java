// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRemoteP2RepositoryContentSynchronisation extends com.pulumi.resources.InvokeArgs {

    public static final GetRemoteP2RepositoryContentSynchronisation Empty = new GetRemoteP2RepositoryContentSynchronisation();

    @Import(name="enabled")
    private @Nullable Boolean enabled;

    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="propertiesEnabled")
    private @Nullable Boolean propertiesEnabled;

    public Optional<Boolean> propertiesEnabled() {
        return Optional.ofNullable(this.propertiesEnabled);
    }

    @Import(name="sourceOriginAbsenceDetection")
    private @Nullable Boolean sourceOriginAbsenceDetection;

    public Optional<Boolean> sourceOriginAbsenceDetection() {
        return Optional.ofNullable(this.sourceOriginAbsenceDetection);
    }

    @Import(name="statisticsEnabled")
    private @Nullable Boolean statisticsEnabled;

    public Optional<Boolean> statisticsEnabled() {
        return Optional.ofNullable(this.statisticsEnabled);
    }

    private GetRemoteP2RepositoryContentSynchronisation() {}

    private GetRemoteP2RepositoryContentSynchronisation(GetRemoteP2RepositoryContentSynchronisation $) {
        this.enabled = $.enabled;
        this.propertiesEnabled = $.propertiesEnabled;
        this.sourceOriginAbsenceDetection = $.sourceOriginAbsenceDetection;
        this.statisticsEnabled = $.statisticsEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRemoteP2RepositoryContentSynchronisation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRemoteP2RepositoryContentSynchronisation $;

        public Builder() {
            $ = new GetRemoteP2RepositoryContentSynchronisation();
        }

        public Builder(GetRemoteP2RepositoryContentSynchronisation defaults) {
            $ = new GetRemoteP2RepositoryContentSynchronisation(Objects.requireNonNull(defaults));
        }

        public Builder enabled(@Nullable Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder propertiesEnabled(@Nullable Boolean propertiesEnabled) {
            $.propertiesEnabled = propertiesEnabled;
            return this;
        }

        public Builder sourceOriginAbsenceDetection(@Nullable Boolean sourceOriginAbsenceDetection) {
            $.sourceOriginAbsenceDetection = sourceOriginAbsenceDetection;
            return this;
        }

        public Builder statisticsEnabled(@Nullable Boolean statisticsEnabled) {
            $.statisticsEnabled = statisticsEnabled;
            return this;
        }

        public GetRemoteP2RepositoryContentSynchronisation build() {
            return $;
        }
    }

}
