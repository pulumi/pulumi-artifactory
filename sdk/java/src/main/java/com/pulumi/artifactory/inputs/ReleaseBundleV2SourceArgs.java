// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.inputs;

import com.pulumi.artifactory.inputs.ReleaseBundleV2SourceArtifactArgs;
import com.pulumi.artifactory.inputs.ReleaseBundleV2SourceBuildArgs;
import com.pulumi.artifactory.inputs.ReleaseBundleV2SourceReleaseBundleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReleaseBundleV2SourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReleaseBundleV2SourceArgs Empty = new ReleaseBundleV2SourceArgs();

    /**
     * The contents of the AQL query.
     * 
     */
    @Import(name="aql")
    private @Nullable Output<String> aql;

    /**
     * @return The contents of the AQL query.
     * 
     */
    public Optional<Output<String>> aql() {
        return Optional.ofNullable(this.aql);
    }

    /**
     * Source type to create a Release Bundle v2 version by collecting source artifacts from a list of path/checksum pairs.
     * 
     */
    @Import(name="artifacts")
    private @Nullable Output<List<ReleaseBundleV2SourceArtifactArgs>> artifacts;

    /**
     * @return Source type to create a Release Bundle v2 version by collecting source artifacts from a list of path/checksum pairs.
     * 
     */
    public Optional<Output<List<ReleaseBundleV2SourceArtifactArgs>>> artifacts() {
        return Optional.ofNullable(this.artifacts);
    }

    /**
     * Source type to create a Release Bundle v2 version by collecting source artifacts from one or multiple builds (also known as build-info).
     * 
     */
    @Import(name="builds")
    private @Nullable Output<List<ReleaseBundleV2SourceBuildArgs>> builds;

    /**
     * @return Source type to create a Release Bundle v2 version by collecting source artifacts from one or multiple builds (also known as build-info).
     * 
     */
    public Optional<Output<List<ReleaseBundleV2SourceBuildArgs>>> builds() {
        return Optional.ofNullable(this.builds);
    }

    /**
     * Source type to create a Release Bundle v2 version by collecting source artifacts from existing Release Bundle versions. Must match `source_type` attribute value.
     * 
     */
    @Import(name="releaseBundles")
    private @Nullable Output<List<ReleaseBundleV2SourceReleaseBundleArgs>> releaseBundles;

    /**
     * @return Source type to create a Release Bundle v2 version by collecting source artifacts from existing Release Bundle versions. Must match `source_type` attribute value.
     * 
     */
    public Optional<Output<List<ReleaseBundleV2SourceReleaseBundleArgs>>> releaseBundles() {
        return Optional.ofNullable(this.releaseBundles);
    }

    private ReleaseBundleV2SourceArgs() {}

    private ReleaseBundleV2SourceArgs(ReleaseBundleV2SourceArgs $) {
        this.aql = $.aql;
        this.artifacts = $.artifacts;
        this.builds = $.builds;
        this.releaseBundles = $.releaseBundles;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReleaseBundleV2SourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReleaseBundleV2SourceArgs $;

        public Builder() {
            $ = new ReleaseBundleV2SourceArgs();
        }

        public Builder(ReleaseBundleV2SourceArgs defaults) {
            $ = new ReleaseBundleV2SourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aql The contents of the AQL query.
         * 
         * @return builder
         * 
         */
        public Builder aql(@Nullable Output<String> aql) {
            $.aql = aql;
            return this;
        }

        /**
         * @param aql The contents of the AQL query.
         * 
         * @return builder
         * 
         */
        public Builder aql(String aql) {
            return aql(Output.of(aql));
        }

        /**
         * @param artifacts Source type to create a Release Bundle v2 version by collecting source artifacts from a list of path/checksum pairs.
         * 
         * @return builder
         * 
         */
        public Builder artifacts(@Nullable Output<List<ReleaseBundleV2SourceArtifactArgs>> artifacts) {
            $.artifacts = artifacts;
            return this;
        }

        /**
         * @param artifacts Source type to create a Release Bundle v2 version by collecting source artifacts from a list of path/checksum pairs.
         * 
         * @return builder
         * 
         */
        public Builder artifacts(List<ReleaseBundleV2SourceArtifactArgs> artifacts) {
            return artifacts(Output.of(artifacts));
        }

        /**
         * @param artifacts Source type to create a Release Bundle v2 version by collecting source artifacts from a list of path/checksum pairs.
         * 
         * @return builder
         * 
         */
        public Builder artifacts(ReleaseBundleV2SourceArtifactArgs... artifacts) {
            return artifacts(List.of(artifacts));
        }

        /**
         * @param builds Source type to create a Release Bundle v2 version by collecting source artifacts from one or multiple builds (also known as build-info).
         * 
         * @return builder
         * 
         */
        public Builder builds(@Nullable Output<List<ReleaseBundleV2SourceBuildArgs>> builds) {
            $.builds = builds;
            return this;
        }

        /**
         * @param builds Source type to create a Release Bundle v2 version by collecting source artifacts from one or multiple builds (also known as build-info).
         * 
         * @return builder
         * 
         */
        public Builder builds(List<ReleaseBundleV2SourceBuildArgs> builds) {
            return builds(Output.of(builds));
        }

        /**
         * @param builds Source type to create a Release Bundle v2 version by collecting source artifacts from one or multiple builds (also known as build-info).
         * 
         * @return builder
         * 
         */
        public Builder builds(ReleaseBundleV2SourceBuildArgs... builds) {
            return builds(List.of(builds));
        }

        /**
         * @param releaseBundles Source type to create a Release Bundle v2 version by collecting source artifacts from existing Release Bundle versions. Must match `source_type` attribute value.
         * 
         * @return builder
         * 
         */
        public Builder releaseBundles(@Nullable Output<List<ReleaseBundleV2SourceReleaseBundleArgs>> releaseBundles) {
            $.releaseBundles = releaseBundles;
            return this;
        }

        /**
         * @param releaseBundles Source type to create a Release Bundle v2 version by collecting source artifacts from existing Release Bundle versions. Must match `source_type` attribute value.
         * 
         * @return builder
         * 
         */
        public Builder releaseBundles(List<ReleaseBundleV2SourceReleaseBundleArgs> releaseBundles) {
            return releaseBundles(Output.of(releaseBundles));
        }

        /**
         * @param releaseBundles Source type to create a Release Bundle v2 version by collecting source artifacts from existing Release Bundle versions. Must match `source_type` attribute value.
         * 
         * @return builder
         * 
         */
        public Builder releaseBundles(ReleaseBundleV2SourceReleaseBundleArgs... releaseBundles) {
            return releaseBundles(List.of(releaseBundles));
        }

        public ReleaseBundleV2SourceArgs build() {
            return $;
        }
    }

}
