// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.inputs;

import com.pulumi.artifactory.inputs.OauthSettingsOauthProviderArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OauthSettingsState extends com.pulumi.resources.ResourceArgs {

    public static final OauthSettingsState Empty = new OauthSettingsState();

    @Import(name="allowUserToAccessProfile")
    private @Nullable Output<Boolean> allowUserToAccessProfile;

    public Optional<Output<Boolean>> allowUserToAccessProfile() {
        return Optional.ofNullable(this.allowUserToAccessProfile);
    }

    @Import(name="enable")
    private @Nullable Output<Boolean> enable;

    public Optional<Output<Boolean>> enable() {
        return Optional.ofNullable(this.enable);
    }

    @Import(name="oauthProviders")
    private @Nullable Output<List<OauthSettingsOauthProviderArgs>> oauthProviders;

    public Optional<Output<List<OauthSettingsOauthProviderArgs>>> oauthProviders() {
        return Optional.ofNullable(this.oauthProviders);
    }

    @Import(name="persistUsers")
    private @Nullable Output<Boolean> persistUsers;

    public Optional<Output<Boolean>> persistUsers() {
        return Optional.ofNullable(this.persistUsers);
    }

    private OauthSettingsState() {}

    private OauthSettingsState(OauthSettingsState $) {
        this.allowUserToAccessProfile = $.allowUserToAccessProfile;
        this.enable = $.enable;
        this.oauthProviders = $.oauthProviders;
        this.persistUsers = $.persistUsers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OauthSettingsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OauthSettingsState $;

        public Builder() {
            $ = new OauthSettingsState();
        }

        public Builder(OauthSettingsState defaults) {
            $ = new OauthSettingsState(Objects.requireNonNull(defaults));
        }

        public Builder allowUserToAccessProfile(@Nullable Output<Boolean> allowUserToAccessProfile) {
            $.allowUserToAccessProfile = allowUserToAccessProfile;
            return this;
        }

        public Builder allowUserToAccessProfile(Boolean allowUserToAccessProfile) {
            return allowUserToAccessProfile(Output.of(allowUserToAccessProfile));
        }

        public Builder enable(@Nullable Output<Boolean> enable) {
            $.enable = enable;
            return this;
        }

        public Builder enable(Boolean enable) {
            return enable(Output.of(enable));
        }

        public Builder oauthProviders(@Nullable Output<List<OauthSettingsOauthProviderArgs>> oauthProviders) {
            $.oauthProviders = oauthProviders;
            return this;
        }

        public Builder oauthProviders(List<OauthSettingsOauthProviderArgs> oauthProviders) {
            return oauthProviders(Output.of(oauthProviders));
        }

        public Builder oauthProviders(OauthSettingsOauthProviderArgs... oauthProviders) {
            return oauthProviders(List.of(oauthProviders));
        }

        public Builder persistUsers(@Nullable Output<Boolean> persistUsers) {
            $.persistUsers = persistUsers;
            return this;
        }

        public Builder persistUsers(Boolean persistUsers) {
            return persistUsers(Output.of(persistUsers));
        }

        public OauthSettingsState build() {
            return $;
        }
    }

}
