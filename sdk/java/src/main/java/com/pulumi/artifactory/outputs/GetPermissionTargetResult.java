// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.outputs;

import com.pulumi.artifactory.outputs.GetPermissionTargetBuild;
import com.pulumi.artifactory.outputs.GetPermissionTargetReleaseBundle;
import com.pulumi.artifactory.outputs.GetPermissionTargetRepo;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPermissionTargetResult {
    /**
     * @return Same as repo but for artifactory-build-info permissions.
     * 
     */
    private @Nullable GetPermissionTargetBuild build;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    /**
     * @return Same as repo but for release-bundles permissions.
     * 
     */
    private @Nullable GetPermissionTargetReleaseBundle releaseBundle;
    /**
     * @return Repository permission configuration.
     * 
     */
    private @Nullable GetPermissionTargetRepo repo;

    private GetPermissionTargetResult() {}
    /**
     * @return Same as repo but for artifactory-build-info permissions.
     * 
     */
    public Optional<GetPermissionTargetBuild> build() {
        return Optional.ofNullable(this.build);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Same as repo but for release-bundles permissions.
     * 
     */
    public Optional<GetPermissionTargetReleaseBundle> releaseBundle() {
        return Optional.ofNullable(this.releaseBundle);
    }
    /**
     * @return Repository permission configuration.
     * 
     */
    public Optional<GetPermissionTargetRepo> repo() {
        return Optional.ofNullable(this.repo);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPermissionTargetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetPermissionTargetBuild build;
        private String id;
        private String name;
        private @Nullable GetPermissionTargetReleaseBundle releaseBundle;
        private @Nullable GetPermissionTargetRepo repo;
        public Builder() {}
        public Builder(GetPermissionTargetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.build = defaults.build;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.releaseBundle = defaults.releaseBundle;
    	      this.repo = defaults.repo;
        }

        @CustomType.Setter
        public Builder build(@Nullable GetPermissionTargetBuild build) {
            this.build = build;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder releaseBundle(@Nullable GetPermissionTargetReleaseBundle releaseBundle) {
            this.releaseBundle = releaseBundle;
            return this;
        }
        @CustomType.Setter
        public Builder repo(@Nullable GetPermissionTargetRepo repo) {
            this.repo = repo;
            return this;
        }
        public GetPermissionTargetResult build() {
            final var o = new GetPermissionTargetResult();
            o.build = build;
            o.id = id;
            o.name = name;
            o.releaseBundle = releaseBundle;
            o.repo = repo;
            return o;
        }
    }
}
