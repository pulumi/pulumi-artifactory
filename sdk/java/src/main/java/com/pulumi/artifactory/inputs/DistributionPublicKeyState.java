// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DistributionPublicKeyState extends com.pulumi.resources.ResourceArgs {

    public static final DistributionPublicKeyState Empty = new DistributionPublicKeyState();

    /**
     * Will be used as an identifier when uploading/retrieving the public key via REST API.
     * 
     */
    @Import(name="alias")
    private @Nullable Output<String> alias;

    /**
     * @return Will be used as an identifier when uploading/retrieving the public key via REST API.
     * 
     */
    public Optional<Output<String>> alias() {
        return Optional.ofNullable(this.alias);
    }

    /**
     * Returns the computed key fingerprint
     * 
     */
    @Import(name="fingerprint")
    private @Nullable Output<String> fingerprint;

    /**
     * @return Returns the computed key fingerprint
     * 
     */
    public Optional<Output<String>> fingerprint() {
        return Optional.ofNullable(this.fingerprint);
    }

    /**
     * Returns the name and eMail address of issuer.
     * 
     */
    @Import(name="issuedBy")
    private @Nullable Output<String> issuedBy;

    /**
     * @return Returns the name and eMail address of issuer.
     * 
     */
    public Optional<Output<String>> issuedBy() {
        return Optional.ofNullable(this.issuedBy);
    }

    /**
     * Returns the date/time when this GPG key was created.
     * 
     */
    @Import(name="issuedOn")
    private @Nullable Output<String> issuedOn;

    /**
     * @return Returns the date/time when this GPG key was created.
     * 
     */
    public Optional<Output<String>> issuedOn() {
        return Optional.ofNullable(this.issuedOn);
    }

    /**
     * Returns the key id by which this key is referenced in Artifactory.
     * 
     */
    @Import(name="keyId")
    private @Nullable Output<String> keyId;

    /**
     * @return Returns the key id by which this key is referenced in Artifactory.
     * 
     */
    public Optional<Output<String>> keyId() {
        return Optional.ofNullable(this.keyId);
    }

    /**
     * The Public key to add as a trusted distribution GPG key.
     * 
     */
    @Import(name="publicKey")
    private @Nullable Output<String> publicKey;

    /**
     * @return The Public key to add as a trusted distribution GPG key.
     * 
     */
    public Optional<Output<String>> publicKey() {
        return Optional.ofNullable(this.publicKey);
    }

    /**
     * Returns the date/time when this GPG key expires.
     * 
     */
    @Import(name="validUntil")
    private @Nullable Output<String> validUntil;

    /**
     * @return Returns the date/time when this GPG key expires.
     * 
     */
    public Optional<Output<String>> validUntil() {
        return Optional.ofNullable(this.validUntil);
    }

    private DistributionPublicKeyState() {}

    private DistributionPublicKeyState(DistributionPublicKeyState $) {
        this.alias = $.alias;
        this.fingerprint = $.fingerprint;
        this.issuedBy = $.issuedBy;
        this.issuedOn = $.issuedOn;
        this.keyId = $.keyId;
        this.publicKey = $.publicKey;
        this.validUntil = $.validUntil;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributionPublicKeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributionPublicKeyState $;

        public Builder() {
            $ = new DistributionPublicKeyState();
        }

        public Builder(DistributionPublicKeyState defaults) {
            $ = new DistributionPublicKeyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param alias Will be used as an identifier when uploading/retrieving the public key via REST API.
         * 
         * @return builder
         * 
         */
        public Builder alias(@Nullable Output<String> alias) {
            $.alias = alias;
            return this;
        }

        /**
         * @param alias Will be used as an identifier when uploading/retrieving the public key via REST API.
         * 
         * @return builder
         * 
         */
        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        /**
         * @param fingerprint Returns the computed key fingerprint
         * 
         * @return builder
         * 
         */
        public Builder fingerprint(@Nullable Output<String> fingerprint) {
            $.fingerprint = fingerprint;
            return this;
        }

        /**
         * @param fingerprint Returns the computed key fingerprint
         * 
         * @return builder
         * 
         */
        public Builder fingerprint(String fingerprint) {
            return fingerprint(Output.of(fingerprint));
        }

        /**
         * @param issuedBy Returns the name and eMail address of issuer.
         * 
         * @return builder
         * 
         */
        public Builder issuedBy(@Nullable Output<String> issuedBy) {
            $.issuedBy = issuedBy;
            return this;
        }

        /**
         * @param issuedBy Returns the name and eMail address of issuer.
         * 
         * @return builder
         * 
         */
        public Builder issuedBy(String issuedBy) {
            return issuedBy(Output.of(issuedBy));
        }

        /**
         * @param issuedOn Returns the date/time when this GPG key was created.
         * 
         * @return builder
         * 
         */
        public Builder issuedOn(@Nullable Output<String> issuedOn) {
            $.issuedOn = issuedOn;
            return this;
        }

        /**
         * @param issuedOn Returns the date/time when this GPG key was created.
         * 
         * @return builder
         * 
         */
        public Builder issuedOn(String issuedOn) {
            return issuedOn(Output.of(issuedOn));
        }

        /**
         * @param keyId Returns the key id by which this key is referenced in Artifactory.
         * 
         * @return builder
         * 
         */
        public Builder keyId(@Nullable Output<String> keyId) {
            $.keyId = keyId;
            return this;
        }

        /**
         * @param keyId Returns the key id by which this key is referenced in Artifactory.
         * 
         * @return builder
         * 
         */
        public Builder keyId(String keyId) {
            return keyId(Output.of(keyId));
        }

        /**
         * @param publicKey The Public key to add as a trusted distribution GPG key.
         * 
         * @return builder
         * 
         */
        public Builder publicKey(@Nullable Output<String> publicKey) {
            $.publicKey = publicKey;
            return this;
        }

        /**
         * @param publicKey The Public key to add as a trusted distribution GPG key.
         * 
         * @return builder
         * 
         */
        public Builder publicKey(String publicKey) {
            return publicKey(Output.of(publicKey));
        }

        /**
         * @param validUntil Returns the date/time when this GPG key expires.
         * 
         * @return builder
         * 
         */
        public Builder validUntil(@Nullable Output<String> validUntil) {
            $.validUntil = validUntil;
            return this;
        }

        /**
         * @param validUntil Returns the date/time when this GPG key expires.
         * 
         * @return builder
         * 
         */
        public Builder validUntil(String validUntil) {
            return validUntil(Output.of(validUntil));
        }

        public DistributionPublicKeyState build() {
            return $;
        }
    }

}
