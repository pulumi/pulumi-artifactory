// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFilePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFilePlainArgs Empty = new GetFilePlainArgs();

    @Import(name="forceOverwrite")
    private @Nullable Boolean forceOverwrite;

    public Optional<Boolean> forceOverwrite() {
        return Optional.ofNullable(this.forceOverwrite);
    }

    @Import(name="outputPath", required=true)
    private String outputPath;

    public String outputPath() {
        return this.outputPath;
    }

    @Import(name="path", required=true)
    private String path;

    public String path() {
        return this.path;
    }

    @Import(name="pathIsAliased")
    private @Nullable Boolean pathIsAliased;

    public Optional<Boolean> pathIsAliased() {
        return Optional.ofNullable(this.pathIsAliased);
    }

    @Import(name="repository", required=true)
    private String repository;

    public String repository() {
        return this.repository;
    }

    private GetFilePlainArgs() {}

    private GetFilePlainArgs(GetFilePlainArgs $) {
        this.forceOverwrite = $.forceOverwrite;
        this.outputPath = $.outputPath;
        this.path = $.path;
        this.pathIsAliased = $.pathIsAliased;
        this.repository = $.repository;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFilePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFilePlainArgs $;

        public Builder() {
            $ = new GetFilePlainArgs();
        }

        public Builder(GetFilePlainArgs defaults) {
            $ = new GetFilePlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder forceOverwrite(@Nullable Boolean forceOverwrite) {
            $.forceOverwrite = forceOverwrite;
            return this;
        }

        public Builder outputPath(String outputPath) {
            $.outputPath = outputPath;
            return this;
        }

        public Builder path(String path) {
            $.path = path;
            return this;
        }

        public Builder pathIsAliased(@Nullable Boolean pathIsAliased) {
            $.pathIsAliased = pathIsAliased;
            return this;
        }

        public Builder repository(String repository) {
            $.repository = repository;
            return this;
        }

        public GetFilePlainArgs build() {
            $.outputPath = Objects.requireNonNull($.outputPath, "expected parameter 'outputPath' to be non-null");
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            $.repository = Objects.requireNonNull($.repository, "expected parameter 'repository' to be non-null");
            return $;
        }
    }

}
