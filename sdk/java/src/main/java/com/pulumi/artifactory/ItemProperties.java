// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory;

import com.pulumi.artifactory.ItemPropertiesArgs;
import com.pulumi.artifactory.Utilities;
import com.pulumi.artifactory.inputs.ItemPropertiesState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a resource for managaing item (file, folder, or repository) properties. When a folder is used property attachment is recursive by default. See [JFrog documentation](https://jfrog.com/help/r/jfrog-artifactory-documentation/working-with-jfrog-properties) for more details.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.artifactory.ItemProperties;
 * import com.pulumi.artifactory.ItemPropertiesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var my_repo_properties = new ItemProperties("my-repo-properties", ItemPropertiesArgs.builder()
 *             .repoKey("my-generic-local")
 *             .properties(Map.ofEntries(
 *                 Map.entry("key1", "value1"),
 *                 Map.entry("key2",                 
 *                     "value2",
 *                     "value3")
 *             ))
 *             .isRecursive(true)
 *             .build());
 * 
 *         var my_folder_properties = new ItemProperties("my-folder-properties", ItemPropertiesArgs.builder()
 *             .repoKey("my-generic-local")
 *             .itemPath("folder/subfolder")
 *             .properties(Map.ofEntries(
 *                 Map.entry("key1", "value1"),
 *                 Map.entry("key2",                 
 *                     "value2",
 *                     "value3")
 *             ))
 *             .isRecursive(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import artifactory:index/itemProperties:ItemProperties my-repo-properties repo_key
 * ```
 * 
 * ```sh
 * $ pulumi import artifactory:index/itemProperties:ItemProperties my-folder-properties repo_key:folder/subfolder
 * ```
 * 
 */
@ResourceType(type="artifactory:index/itemProperties:ItemProperties")
public class ItemProperties extends com.pulumi.resources.CustomResource {
    /**
     * Add this property to the selected folder and to all of artifacts and folders under this folder. Default to `false`
     * 
     */
    @Export(name="isRecursive", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isRecursive;

    /**
     * @return Add this property to the selected folder and to all of artifacts and folders under this folder. Default to `false`
     * 
     */
    public Output<Boolean> isRecursive() {
        return this.isRecursive;
    }
    /**
     * The relative path of the item (file/folder/repository). Leave unset for repository.
     * 
     */
    @Export(name="itemPath", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> itemPath;

    /**
     * @return The relative path of the item (file/folder/repository). Leave unset for repository.
     * 
     */
    public Output<Optional<String>> itemPath() {
        return Codegen.optional(this.itemPath);
    }
    /**
     * Map of key and list of values.
     * 
     */
    @Export(name="properties", refs={Map.class,String.class,List.class}, tree="[0,1,[2,1]]")
    private Output<Map<String,List<String>>> properties;

    /**
     * @return Map of key and list of values.
     * 
     */
    public Output<Map<String,List<String>>> properties() {
        return this.properties;
    }
    /**
     * Respository key.
     * 
     */
    @Export(name="repoKey", refs={String.class}, tree="[0]")
    private Output<String> repoKey;

    /**
     * @return Respository key.
     * 
     */
    public Output<String> repoKey() {
        return this.repoKey;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ItemProperties(java.lang.String name) {
        this(name, ItemPropertiesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ItemProperties(java.lang.String name, ItemPropertiesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ItemProperties(java.lang.String name, ItemPropertiesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("artifactory:index/itemProperties:ItemProperties", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ItemProperties(java.lang.String name, Output<java.lang.String> id, @Nullable ItemPropertiesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("artifactory:index/itemProperties:ItemProperties", name, state, makeResourceOptions(options, id), false);
    }

    private static ItemPropertiesArgs makeArgs(ItemPropertiesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ItemPropertiesArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ItemProperties get(java.lang.String name, Output<java.lang.String> id, @Nullable ItemPropertiesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ItemProperties(name, id, state, options);
    }
}
