// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGroupPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGroupPlainArgs Empty = new GetGroupPlainArgs();

    @Import(name="adminPrivileges")
    private @Nullable Boolean adminPrivileges;

    public Optional<Boolean> adminPrivileges() {
        return Optional.ofNullable(this.adminPrivileges);
    }

    @Import(name="autoJoin")
    private @Nullable Boolean autoJoin;

    public Optional<Boolean> autoJoin() {
        return Optional.ofNullable(this.autoJoin);
    }

    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="externalId")
    private @Nullable String externalId;

    public Optional<String> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    @Import(name="includeUsers")
    private @Nullable String includeUsers;

    public Optional<String> includeUsers() {
        return Optional.ofNullable(this.includeUsers);
    }

    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    @Import(name="policyManager")
    private @Nullable Boolean policyManager;

    public Optional<Boolean> policyManager() {
        return Optional.ofNullable(this.policyManager);
    }

    @Import(name="realm")
    private @Nullable String realm;

    public Optional<String> realm() {
        return Optional.ofNullable(this.realm);
    }

    @Import(name="realmAttributes")
    private @Nullable String realmAttributes;

    public Optional<String> realmAttributes() {
        return Optional.ofNullable(this.realmAttributes);
    }

    @Import(name="reportsManager")
    private @Nullable Boolean reportsManager;

    public Optional<Boolean> reportsManager() {
        return Optional.ofNullable(this.reportsManager);
    }

    @Import(name="usersNames")
    private @Nullable List<String> usersNames;

    public Optional<List<String>> usersNames() {
        return Optional.ofNullable(this.usersNames);
    }

    @Import(name="watchManager")
    private @Nullable Boolean watchManager;

    public Optional<Boolean> watchManager() {
        return Optional.ofNullable(this.watchManager);
    }

    private GetGroupPlainArgs() {}

    private GetGroupPlainArgs(GetGroupPlainArgs $) {
        this.adminPrivileges = $.adminPrivileges;
        this.autoJoin = $.autoJoin;
        this.description = $.description;
        this.externalId = $.externalId;
        this.includeUsers = $.includeUsers;
        this.name = $.name;
        this.policyManager = $.policyManager;
        this.realm = $.realm;
        this.realmAttributes = $.realmAttributes;
        this.reportsManager = $.reportsManager;
        this.usersNames = $.usersNames;
        this.watchManager = $.watchManager;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGroupPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGroupPlainArgs $;

        public Builder() {
            $ = new GetGroupPlainArgs();
        }

        public Builder(GetGroupPlainArgs defaults) {
            $ = new GetGroupPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder adminPrivileges(@Nullable Boolean adminPrivileges) {
            $.adminPrivileges = adminPrivileges;
            return this;
        }

        public Builder autoJoin(@Nullable Boolean autoJoin) {
            $.autoJoin = autoJoin;
            return this;
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder externalId(@Nullable String externalId) {
            $.externalId = externalId;
            return this;
        }

        public Builder includeUsers(@Nullable String includeUsers) {
            $.includeUsers = includeUsers;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder policyManager(@Nullable Boolean policyManager) {
            $.policyManager = policyManager;
            return this;
        }

        public Builder realm(@Nullable String realm) {
            $.realm = realm;
            return this;
        }

        public Builder realmAttributes(@Nullable String realmAttributes) {
            $.realmAttributes = realmAttributes;
            return this;
        }

        public Builder reportsManager(@Nullable Boolean reportsManager) {
            $.reportsManager = reportsManager;
            return this;
        }

        public Builder usersNames(@Nullable List<String> usersNames) {
            $.usersNames = usersNames;
            return this;
        }

        public Builder usersNames(String... usersNames) {
            return usersNames(List.of(usersNames));
        }

        public Builder watchManager(@Nullable Boolean watchManager) {
            $.watchManager = watchManager;
            return this;
        }

        public GetGroupPlainArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
