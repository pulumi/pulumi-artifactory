// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.artifactory;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderArgs Empty = new ProviderArgs();

    /**
     * This is a access token that can be given to you by your admin under `Identity and Access`. If not set, the &#39;api_key&#39;
     * attribute value will be used.
     * 
     */
    @Import(name="accessToken")
    private @Nullable Output<String> accessToken;

    /**
     * @return This is a access token that can be given to you by your admin under `Identity and Access`. If not set, the &#39;api_key&#39;
     * attribute value will be used.
     * 
     */
    public Optional<Output<String>> accessToken() {
        return Optional.ofNullable(this.accessToken);
    }

    /**
     * API token. Projects functionality will not work with any auth method other than access tokens
     * 
     * @deprecated
     * An upcoming version will support the option to block the usage/creation of API Keys (for admins to set on their platform).
     * In September 2022, the option to block the usage/creation of API Keys will be enabled by default, with the option for admins to change it back to enable API Keys.
     * In January 2023, API Keys will be deprecated all together and the option to use them will no longer be available.
     * 
     */
    @Deprecated /* An upcoming version will support the option to block the usage/creation of API Keys (for admins to set on their platform).
In September 2022, the option to block the usage/creation of API Keys will be enabled by default, with the option for admins to change it back to enable API Keys.
In January 2023, API Keys will be deprecated all together and the option to use them will no longer be available. */
    @Import(name="apiKey")
    private @Nullable Output<String> apiKey;

    /**
     * @return API token. Projects functionality will not work with any auth method other than access tokens
     * 
     * @deprecated
     * An upcoming version will support the option to block the usage/creation of API Keys (for admins to set on their platform).
     * In September 2022, the option to block the usage/creation of API Keys will be enabled by default, with the option for admins to change it back to enable API Keys.
     * In January 2023, API Keys will be deprecated all together and the option to use them will no longer be available.
     * 
     */
    @Deprecated /* An upcoming version will support the option to block the usage/creation of API Keys (for admins to set on their platform).
In September 2022, the option to block the usage/creation of API Keys will be enabled by default, with the option for admins to change it back to enable API Keys.
In January 2023, API Keys will be deprecated all together and the option to use them will no longer be available. */
    public Optional<Output<String>> apiKey() {
        return Optional.ofNullable(this.apiKey);
    }

    /**
     * Toggle for pre-flight checking of Artifactory Pro and Enterprise license. Default to `true`.
     * 
     */
    @Import(name="checkLicense", json=true)
    private @Nullable Output<Boolean> checkLicense;

    /**
     * @return Toggle for pre-flight checking of Artifactory Pro and Enterprise license. Default to `true`.
     * 
     */
    public Optional<Output<Boolean>> checkLicense() {
        return Optional.ofNullable(this.checkLicense);
    }

    @Import(name="url")
    private @Nullable Output<String> url;

    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private ProviderArgs() {}

    private ProviderArgs(ProviderArgs $) {
        this.accessToken = $.accessToken;
        this.apiKey = $.apiKey;
        this.checkLicense = $.checkLicense;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderArgs $;

        public Builder() {
            $ = new ProviderArgs();
        }

        public Builder(ProviderArgs defaults) {
            $ = new ProviderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessToken This is a access token that can be given to you by your admin under `Identity and Access`. If not set, the &#39;api_key&#39;
         * attribute value will be used.
         * 
         * @return builder
         * 
         */
        public Builder accessToken(@Nullable Output<String> accessToken) {
            $.accessToken = accessToken;
            return this;
        }

        /**
         * @param accessToken This is a access token that can be given to you by your admin under `Identity and Access`. If not set, the &#39;api_key&#39;
         * attribute value will be used.
         * 
         * @return builder
         * 
         */
        public Builder accessToken(String accessToken) {
            return accessToken(Output.of(accessToken));
        }

        /**
         * @param apiKey API token. Projects functionality will not work with any auth method other than access tokens
         * 
         * @return builder
         * 
         * @deprecated
         * An upcoming version will support the option to block the usage/creation of API Keys (for admins to set on their platform).
         * In September 2022, the option to block the usage/creation of API Keys will be enabled by default, with the option for admins to change it back to enable API Keys.
         * In January 2023, API Keys will be deprecated all together and the option to use them will no longer be available.
         * 
         */
        @Deprecated /* An upcoming version will support the option to block the usage/creation of API Keys (for admins to set on their platform).
In September 2022, the option to block the usage/creation of API Keys will be enabled by default, with the option for admins to change it back to enable API Keys.
In January 2023, API Keys will be deprecated all together and the option to use them will no longer be available. */
        public Builder apiKey(@Nullable Output<String> apiKey) {
            $.apiKey = apiKey;
            return this;
        }

        /**
         * @param apiKey API token. Projects functionality will not work with any auth method other than access tokens
         * 
         * @return builder
         * 
         * @deprecated
         * An upcoming version will support the option to block the usage/creation of API Keys (for admins to set on their platform).
         * In September 2022, the option to block the usage/creation of API Keys will be enabled by default, with the option for admins to change it back to enable API Keys.
         * In January 2023, API Keys will be deprecated all together and the option to use them will no longer be available.
         * 
         */
        @Deprecated /* An upcoming version will support the option to block the usage/creation of API Keys (for admins to set on their platform).
In September 2022, the option to block the usage/creation of API Keys will be enabled by default, with the option for admins to change it back to enable API Keys.
In January 2023, API Keys will be deprecated all together and the option to use them will no longer be available. */
        public Builder apiKey(String apiKey) {
            return apiKey(Output.of(apiKey));
        }

        /**
         * @param checkLicense Toggle for pre-flight checking of Artifactory Pro and Enterprise license. Default to `true`.
         * 
         * @return builder
         * 
         */
        public Builder checkLicense(@Nullable Output<Boolean> checkLicense) {
            $.checkLicense = checkLicense;
            return this;
        }

        /**
         * @param checkLicense Toggle for pre-flight checking of Artifactory Pro and Enterprise license. Default to `true`.
         * 
         * @return builder
         * 
         */
        public Builder checkLicense(Boolean checkLicense) {
            return checkLicense(Output.of(checkLicense));
        }

        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public ProviderArgs build() {
            $.checkLicense = Codegen.booleanProp("checkLicense").output().arg($.checkLicense).def(false).getNullable();
            return $;
        }
    }

}
