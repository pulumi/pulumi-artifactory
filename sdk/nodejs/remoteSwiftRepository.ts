// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Creates a remote Swift repository.
 * Official documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Conan+Repositories).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as artifactory from "@pulumi/artifactory";
 *
 * const my_remote_swift = new artifactory.RemoteSwiftRepository("my-remote-swift", {
 *     key: "my-remote-swift",
 *     url: "https://swift.org/",
 * });
 * ```
 *
 * ## Import
 *
 * Remote repositories can be imported using their name, e.g.
 *
 * ```sh
 * $ pulumi import artifactory:index/remoteSwiftRepository:RemoteSwiftRepository my-remote-swift my-remote-swift
 * ```
 */
export class RemoteSwiftRepository extends pulumi.CustomResource {
    /**
     * Get an existing RemoteSwiftRepository resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RemoteSwiftRepositoryState, opts?: pulumi.CustomResourceOptions): RemoteSwiftRepository {
        return new RemoteSwiftRepository(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'artifactory:index/remoteSwiftRepository:RemoteSwiftRepository';

    /**
     * Returns true if the given object is an instance of RemoteSwiftRepository.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RemoteSwiftRepository {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RemoteSwiftRepository.__pulumiType;
    }

    /**
     * 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any other host.
     */
    declare public readonly allowAnyHostAuth: pulumi.Output<boolean>;
    /**
     * When set, you may view content such as HTML or Javadoc files directly from Artifactory.
     * This may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).
     */
    declare public readonly archiveBrowsingEnabled: pulumi.Output<boolean>;
    /**
     * The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline.
     */
    declare public readonly assumedOfflinePeriodSecs: pulumi.Output<number>;
    /**
     * (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.
     */
    declare public readonly blackedOut: pulumi.Output<boolean>;
    /**
     * If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes to the override list 'mismatching_mime_types_override_list'.
     */
    declare public readonly blockMismatchingMimeTypes: pulumi.Output<boolean>;
    /**
     * Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
     */
    declare public readonly bypassHeadRequests: pulumi.Output<boolean>;
    /**
     * When set, download requests to this repository will redirect the client to download the artifact directly from AWS CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
     */
    declare public readonly cdnRedirect: pulumi.Output<boolean>;
    /**
     * Client TLS certificate name.
     */
    declare public readonly clientTlsCertificate: pulumi.Output<string>;
    declare public readonly contentSynchronisation: pulumi.Output<outputs.RemoteSwiftRepositoryContentSynchronisation | undefined>;
    /**
     * Public description.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
     */
    declare public readonly disableProxy: pulumi.Output<boolean>;
    /**
     * Whether to disable URL normalization. Default is `false`.
     */
    declare public readonly disableUrlNormalization: pulumi.Output<boolean>;
    /**
     * When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
     */
    declare public readonly downloadDirect: pulumi.Output<boolean>;
    /**
     * Enables cookie management if the remote repository uses cookies to manage client state.
     */
    declare public readonly enableCookieManagement: pulumi.Output<boolean>;
    /**
     * List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**&#47;z/*`.By default no artifacts are excluded.
     */
    declare public readonly excludesPattern: pulumi.Output<string>;
    /**
     * When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.
     */
    declare public readonly hardFail: pulumi.Output<boolean>;
    /**
     * List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**&#47;z/*`. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**&#47;*`).
     */
    declare public readonly includesPattern: pulumi.Output<string>;
    /**
     * A mandatory identifier for the repository that must be unique. It cannot begin with a number or
     * contain spaces or special characters.
     */
    declare public readonly key: pulumi.Output<string>;
    /**
     * Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. Default value is 'false'. This field exists in the API but not in the UI.
     */
    declare public readonly listRemoteFolderItems: pulumi.Output<boolean>;
    /**
     * The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.
     */
    declare public readonly localAddress: pulumi.Output<string>;
    /**
     * Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from the remote before serving locally cached artifact or fail the request.
     */
    declare public readonly metadataRetrievalTimeoutSecs: pulumi.Output<number>;
    /**
     * The set of mime types that should override the blockMismatchingMimeTypes setting. Eg: 'application/json,application/xml'. Default value is empty.
     */
    declare public readonly mismatchingMimeTypesOverrideList: pulumi.Output<string>;
    /**
     * Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.
     */
    declare public readonly missedCachePeriodSeconds: pulumi.Output<number>;
    /**
     * Internal description.
     */
    declare public readonly notes: pulumi.Output<string>;
    /**
     * If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
     */
    declare public readonly offline: pulumi.Output<boolean>;
    declare public readonly password: pulumi.Output<string | undefined>;
    /**
     * Setting repositories with priority will cause metadata to be merged only from repositories set with this field
     */
    declare public readonly priorityResolution: pulumi.Output<boolean>;
    declare public readonly projectEnvironments: pulumi.Output<string[]>;
    /**
     * Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
     */
    declare public readonly projectKey: pulumi.Output<string>;
    /**
     * List of property set name
     */
    declare public readonly propertySets: pulumi.Output<string[] | undefined>;
    /**
     * Proxy key from Artifactory Proxies settings. Can't be set if `disableProxy = true`.
     */
    declare public readonly proxy: pulumi.Output<string>;
    /**
     * Custom HTTP query parameters that will be automatically included in all remote resource requests. For example: `param1=val1&param2=val2&param3=val3`
     */
    declare public readonly queryParams: pulumi.Output<string>;
    /**
     * Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
     */
    declare public readonly remoteRepoLayoutRef: pulumi.Output<string>;
    /**
     * Sets the layout that the repository should use for storing and identifying modules. A recommended layout that corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
     */
    declare public readonly repoLayoutRef: pulumi.Output<string>;
    /**
     * Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files before checking for newer versions on remote server. A value of 0 indicates no caching.
     */
    declare public readonly retrievalCachePeriodSeconds: pulumi.Output<number>;
    /**
     * @deprecated No longer supported
     */
    declare public readonly shareConfiguration: pulumi.Output<boolean>;
    /**
     * Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.
     */
    declare public readonly socketTimeoutMillis: pulumi.Output<number>;
    /**
     * When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.
     */
    declare public readonly storeArtifactsLocally: pulumi.Output<boolean>;
    /**
     * When set, remote artifacts are fetched along with their properties.
     */
    declare public readonly synchronizeProperties: pulumi.Output<boolean>;
    /**
     * Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
     */
    declare public readonly unusedArtifactsCleanupPeriodHours: pulumi.Output<number>;
    /**
     * The remote repo URL.
     */
    declare public readonly url: pulumi.Output<string>;
    declare public readonly username: pulumi.Output<string>;
    /**
     * Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
     */
    declare public readonly xrayIndex: pulumi.Output<boolean>;

    /**
     * Create a RemoteSwiftRepository resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RemoteSwiftRepositoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RemoteSwiftRepositoryArgs | RemoteSwiftRepositoryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RemoteSwiftRepositoryState | undefined;
            resourceInputs["allowAnyHostAuth"] = state?.allowAnyHostAuth;
            resourceInputs["archiveBrowsingEnabled"] = state?.archiveBrowsingEnabled;
            resourceInputs["assumedOfflinePeriodSecs"] = state?.assumedOfflinePeriodSecs;
            resourceInputs["blackedOut"] = state?.blackedOut;
            resourceInputs["blockMismatchingMimeTypes"] = state?.blockMismatchingMimeTypes;
            resourceInputs["bypassHeadRequests"] = state?.bypassHeadRequests;
            resourceInputs["cdnRedirect"] = state?.cdnRedirect;
            resourceInputs["clientTlsCertificate"] = state?.clientTlsCertificate;
            resourceInputs["contentSynchronisation"] = state?.contentSynchronisation;
            resourceInputs["description"] = state?.description;
            resourceInputs["disableProxy"] = state?.disableProxy;
            resourceInputs["disableUrlNormalization"] = state?.disableUrlNormalization;
            resourceInputs["downloadDirect"] = state?.downloadDirect;
            resourceInputs["enableCookieManagement"] = state?.enableCookieManagement;
            resourceInputs["excludesPattern"] = state?.excludesPattern;
            resourceInputs["hardFail"] = state?.hardFail;
            resourceInputs["includesPattern"] = state?.includesPattern;
            resourceInputs["key"] = state?.key;
            resourceInputs["listRemoteFolderItems"] = state?.listRemoteFolderItems;
            resourceInputs["localAddress"] = state?.localAddress;
            resourceInputs["metadataRetrievalTimeoutSecs"] = state?.metadataRetrievalTimeoutSecs;
            resourceInputs["mismatchingMimeTypesOverrideList"] = state?.mismatchingMimeTypesOverrideList;
            resourceInputs["missedCachePeriodSeconds"] = state?.missedCachePeriodSeconds;
            resourceInputs["notes"] = state?.notes;
            resourceInputs["offline"] = state?.offline;
            resourceInputs["password"] = state?.password;
            resourceInputs["priorityResolution"] = state?.priorityResolution;
            resourceInputs["projectEnvironments"] = state?.projectEnvironments;
            resourceInputs["projectKey"] = state?.projectKey;
            resourceInputs["propertySets"] = state?.propertySets;
            resourceInputs["proxy"] = state?.proxy;
            resourceInputs["queryParams"] = state?.queryParams;
            resourceInputs["remoteRepoLayoutRef"] = state?.remoteRepoLayoutRef;
            resourceInputs["repoLayoutRef"] = state?.repoLayoutRef;
            resourceInputs["retrievalCachePeriodSeconds"] = state?.retrievalCachePeriodSeconds;
            resourceInputs["shareConfiguration"] = state?.shareConfiguration;
            resourceInputs["socketTimeoutMillis"] = state?.socketTimeoutMillis;
            resourceInputs["storeArtifactsLocally"] = state?.storeArtifactsLocally;
            resourceInputs["synchronizeProperties"] = state?.synchronizeProperties;
            resourceInputs["unusedArtifactsCleanupPeriodHours"] = state?.unusedArtifactsCleanupPeriodHours;
            resourceInputs["url"] = state?.url;
            resourceInputs["username"] = state?.username;
            resourceInputs["xrayIndex"] = state?.xrayIndex;
        } else {
            const args = argsOrState as RemoteSwiftRepositoryArgs | undefined;
            if (args?.key === undefined && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if (args?.url === undefined && !opts.urn) {
                throw new Error("Missing required property 'url'");
            }
            resourceInputs["allowAnyHostAuth"] = args?.allowAnyHostAuth;
            resourceInputs["archiveBrowsingEnabled"] = args?.archiveBrowsingEnabled;
            resourceInputs["assumedOfflinePeriodSecs"] = args?.assumedOfflinePeriodSecs;
            resourceInputs["blackedOut"] = args?.blackedOut;
            resourceInputs["blockMismatchingMimeTypes"] = args?.blockMismatchingMimeTypes;
            resourceInputs["bypassHeadRequests"] = args?.bypassHeadRequests;
            resourceInputs["cdnRedirect"] = args?.cdnRedirect;
            resourceInputs["clientTlsCertificate"] = args?.clientTlsCertificate;
            resourceInputs["contentSynchronisation"] = args?.contentSynchronisation;
            resourceInputs["description"] = args?.description;
            resourceInputs["disableProxy"] = args?.disableProxy;
            resourceInputs["disableUrlNormalization"] = args?.disableUrlNormalization;
            resourceInputs["downloadDirect"] = args?.downloadDirect;
            resourceInputs["enableCookieManagement"] = args?.enableCookieManagement;
            resourceInputs["excludesPattern"] = args?.excludesPattern;
            resourceInputs["hardFail"] = args?.hardFail;
            resourceInputs["includesPattern"] = args?.includesPattern;
            resourceInputs["key"] = args?.key;
            resourceInputs["listRemoteFolderItems"] = args?.listRemoteFolderItems;
            resourceInputs["localAddress"] = args?.localAddress;
            resourceInputs["metadataRetrievalTimeoutSecs"] = args?.metadataRetrievalTimeoutSecs;
            resourceInputs["mismatchingMimeTypesOverrideList"] = args?.mismatchingMimeTypesOverrideList;
            resourceInputs["missedCachePeriodSeconds"] = args?.missedCachePeriodSeconds;
            resourceInputs["notes"] = args?.notes;
            resourceInputs["offline"] = args?.offline;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["priorityResolution"] = args?.priorityResolution;
            resourceInputs["projectEnvironments"] = args?.projectEnvironments;
            resourceInputs["projectKey"] = args?.projectKey;
            resourceInputs["propertySets"] = args?.propertySets;
            resourceInputs["proxy"] = args?.proxy;
            resourceInputs["queryParams"] = args?.queryParams;
            resourceInputs["remoteRepoLayoutRef"] = args?.remoteRepoLayoutRef;
            resourceInputs["repoLayoutRef"] = args?.repoLayoutRef;
            resourceInputs["retrievalCachePeriodSeconds"] = args?.retrievalCachePeriodSeconds;
            resourceInputs["shareConfiguration"] = args?.shareConfiguration;
            resourceInputs["socketTimeoutMillis"] = args?.socketTimeoutMillis;
            resourceInputs["storeArtifactsLocally"] = args?.storeArtifactsLocally;
            resourceInputs["synchronizeProperties"] = args?.synchronizeProperties;
            resourceInputs["unusedArtifactsCleanupPeriodHours"] = args?.unusedArtifactsCleanupPeriodHours;
            resourceInputs["url"] = args?.url;
            resourceInputs["username"] = args?.username;
            resourceInputs["xrayIndex"] = args?.xrayIndex;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(RemoteSwiftRepository.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RemoteSwiftRepository resources.
 */
export interface RemoteSwiftRepositoryState {
    /**
     * 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any other host.
     */
    allowAnyHostAuth?: pulumi.Input<boolean>;
    /**
     * When set, you may view content such as HTML or Javadoc files directly from Artifactory.
     * This may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).
     */
    archiveBrowsingEnabled?: pulumi.Input<boolean>;
    /**
     * The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline.
     */
    assumedOfflinePeriodSecs?: pulumi.Input<number>;
    /**
     * (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.
     */
    blackedOut?: pulumi.Input<boolean>;
    /**
     * If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes to the override list 'mismatching_mime_types_override_list'.
     */
    blockMismatchingMimeTypes?: pulumi.Input<boolean>;
    /**
     * Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
     */
    bypassHeadRequests?: pulumi.Input<boolean>;
    /**
     * When set, download requests to this repository will redirect the client to download the artifact directly from AWS CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
     */
    cdnRedirect?: pulumi.Input<boolean>;
    /**
     * Client TLS certificate name.
     */
    clientTlsCertificate?: pulumi.Input<string>;
    contentSynchronisation?: pulumi.Input<inputs.RemoteSwiftRepositoryContentSynchronisation>;
    /**
     * Public description.
     */
    description?: pulumi.Input<string>;
    /**
     * When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
     */
    disableProxy?: pulumi.Input<boolean>;
    /**
     * Whether to disable URL normalization. Default is `false`.
     */
    disableUrlNormalization?: pulumi.Input<boolean>;
    /**
     * When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
     */
    downloadDirect?: pulumi.Input<boolean>;
    /**
     * Enables cookie management if the remote repository uses cookies to manage client state.
     */
    enableCookieManagement?: pulumi.Input<boolean>;
    /**
     * List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**&#47;z/*`.By default no artifacts are excluded.
     */
    excludesPattern?: pulumi.Input<string>;
    /**
     * When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.
     */
    hardFail?: pulumi.Input<boolean>;
    /**
     * List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**&#47;z/*`. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**&#47;*`).
     */
    includesPattern?: pulumi.Input<string>;
    /**
     * A mandatory identifier for the repository that must be unique. It cannot begin with a number or
     * contain spaces or special characters.
     */
    key?: pulumi.Input<string>;
    /**
     * Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. Default value is 'false'. This field exists in the API but not in the UI.
     */
    listRemoteFolderItems?: pulumi.Input<boolean>;
    /**
     * The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.
     */
    localAddress?: pulumi.Input<string>;
    /**
     * Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from the remote before serving locally cached artifact or fail the request.
     */
    metadataRetrievalTimeoutSecs?: pulumi.Input<number>;
    /**
     * The set of mime types that should override the blockMismatchingMimeTypes setting. Eg: 'application/json,application/xml'. Default value is empty.
     */
    mismatchingMimeTypesOverrideList?: pulumi.Input<string>;
    /**
     * Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.
     */
    missedCachePeriodSeconds?: pulumi.Input<number>;
    /**
     * Internal description.
     */
    notes?: pulumi.Input<string>;
    /**
     * If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
     */
    offline?: pulumi.Input<boolean>;
    password?: pulumi.Input<string>;
    /**
     * Setting repositories with priority will cause metadata to be merged only from repositories set with this field
     */
    priorityResolution?: pulumi.Input<boolean>;
    projectEnvironments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
     */
    projectKey?: pulumi.Input<string>;
    /**
     * List of property set name
     */
    propertySets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Proxy key from Artifactory Proxies settings. Can't be set if `disableProxy = true`.
     */
    proxy?: pulumi.Input<string>;
    /**
     * Custom HTTP query parameters that will be automatically included in all remote resource requests. For example: `param1=val1&param2=val2&param3=val3`
     */
    queryParams?: pulumi.Input<string>;
    /**
     * Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
     */
    remoteRepoLayoutRef?: pulumi.Input<string>;
    /**
     * Sets the layout that the repository should use for storing and identifying modules. A recommended layout that corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
     */
    repoLayoutRef?: pulumi.Input<string>;
    /**
     * Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files before checking for newer versions on remote server. A value of 0 indicates no caching.
     */
    retrievalCachePeriodSeconds?: pulumi.Input<number>;
    /**
     * @deprecated No longer supported
     */
    shareConfiguration?: pulumi.Input<boolean>;
    /**
     * Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.
     */
    socketTimeoutMillis?: pulumi.Input<number>;
    /**
     * When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.
     */
    storeArtifactsLocally?: pulumi.Input<boolean>;
    /**
     * When set, remote artifacts are fetched along with their properties.
     */
    synchronizeProperties?: pulumi.Input<boolean>;
    /**
     * Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
     */
    unusedArtifactsCleanupPeriodHours?: pulumi.Input<number>;
    /**
     * The remote repo URL.
     */
    url?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    /**
     * Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
     */
    xrayIndex?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a RemoteSwiftRepository resource.
 */
export interface RemoteSwiftRepositoryArgs {
    /**
     * 'Lenient Host Authentication' in the UI. Allow credentials of this repository to be used on requests redirected to any other host.
     */
    allowAnyHostAuth?: pulumi.Input<boolean>;
    /**
     * When set, you may view content such as HTML or Javadoc files directly from Artifactory.
     * This may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).
     */
    archiveBrowsingEnabled?: pulumi.Input<boolean>;
    /**
     * The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline.
     */
    assumedOfflinePeriodSecs?: pulumi.Input<number>;
    /**
     * (A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.
     */
    blackedOut?: pulumi.Input<boolean>;
    /**
     * If set, artifacts will fail to download if a mismatch is detected between requested and received mimetype, according to the list specified in the system properties file under blockedMismatchingMimeTypes. You can override by adding mimetypes to the override list 'mismatching_mime_types_override_list'.
     */
    blockMismatchingMimeTypes?: pulumi.Input<boolean>;
    /**
     * Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.
     */
    bypassHeadRequests?: pulumi.Input<boolean>;
    /**
     * When set, download requests to this repository will redirect the client to download the artifact directly from AWS CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
     */
    cdnRedirect?: pulumi.Input<boolean>;
    /**
     * Client TLS certificate name.
     */
    clientTlsCertificate?: pulumi.Input<string>;
    contentSynchronisation?: pulumi.Input<inputs.RemoteSwiftRepositoryContentSynchronisation>;
    /**
     * Public description.
     */
    description?: pulumi.Input<string>;
    /**
     * When set to `true`, the proxy is disabled, and not returned in the API response body. If there is a default proxy set for the Artifactory instance, it will be ignored, too. Introduced since Artifactory 7.41.7.
     */
    disableProxy?: pulumi.Input<boolean>;
    /**
     * Whether to disable URL normalization. Default is `false`.
     */
    disableUrlNormalization?: pulumi.Input<boolean>;
    /**
     * When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider. Available in Enterprise+ and Edge licenses only. Default value is 'false'.
     */
    downloadDirect?: pulumi.Input<boolean>;
    /**
     * Enables cookie management if the remote repository uses cookies to manage client state.
     */
    enableCookieManagement?: pulumi.Input<boolean>;
    /**
     * List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**&#47;z/*`.By default no artifacts are excluded.
     */
    excludesPattern?: pulumi.Input<string>;
    /**
     * When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.
     */
    hardFail?: pulumi.Input<boolean>;
    /**
     * List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**&#47;z/*`. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**&#47;*`).
     */
    includesPattern?: pulumi.Input<string>;
    /**
     * A mandatory identifier for the repository that must be unique. It cannot begin with a number or
     * contain spaces or special characters.
     */
    key: pulumi.Input<string>;
    /**
     * Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. Default value is 'false'. This field exists in the API but not in the UI.
     */
    listRemoteFolderItems?: pulumi.Input<boolean>;
    /**
     * The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.
     */
    localAddress?: pulumi.Input<string>;
    /**
     * Metadata Retrieval Cache Timeout (Sec) in the UI.This value refers to the number of seconds to wait for retrieval from the remote before serving locally cached artifact or fail the request.
     */
    metadataRetrievalTimeoutSecs?: pulumi.Input<number>;
    /**
     * The set of mime types that should override the blockMismatchingMimeTypes setting. Eg: 'application/json,application/xml'. Default value is empty.
     */
    mismatchingMimeTypesOverrideList?: pulumi.Input<string>;
    /**
     * Missed Retrieval Cache Period (Sec) in the UI. The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.
     */
    missedCachePeriodSeconds?: pulumi.Input<number>;
    /**
     * Internal description.
     */
    notes?: pulumi.Input<string>;
    /**
     * If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.
     */
    offline?: pulumi.Input<boolean>;
    password?: pulumi.Input<string>;
    /**
     * Setting repositories with priority will cause metadata to be merged only from repositories set with this field
     */
    priorityResolution?: pulumi.Input<boolean>;
    projectEnvironments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
     */
    projectKey?: pulumi.Input<string>;
    /**
     * List of property set name
     */
    propertySets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Proxy key from Artifactory Proxies settings. Can't be set if `disableProxy = true`.
     */
    proxy?: pulumi.Input<string>;
    /**
     * Custom HTTP query parameters that will be automatically included in all remote resource requests. For example: `param1=val1&param2=val2&param3=val3`
     */
    queryParams?: pulumi.Input<string>;
    /**
     * Repository layout key for the remote layout mapping. Repository can be created without this attribute (or set to an empty string). Once it's set, it can't be removed by passing an empty string or removing the attribute, that will be ignored by the Artifactory API. UI shows an error message, if the user tries to remove the value.
     */
    remoteRepoLayoutRef?: pulumi.Input<string>;
    /**
     * Sets the layout that the repository should use for storing and identifying modules. A recommended layout that corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
     */
    repoLayoutRef?: pulumi.Input<string>;
    /**
     * Metadata Retrieval Cache Period (Sec) in the UI. This value refers to the number of seconds to cache metadata files before checking for newer versions on remote server. A value of 0 indicates no caching.
     */
    retrievalCachePeriodSeconds?: pulumi.Input<number>;
    /**
     * @deprecated No longer supported
     */
    shareConfiguration?: pulumi.Input<boolean>;
    /**
     * Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.
     */
    socketTimeoutMillis?: pulumi.Input<number>;
    /**
     * When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.
     */
    storeArtifactsLocally?: pulumi.Input<boolean>;
    /**
     * When set, remote artifacts are fetched along with their properties.
     */
    synchronizeProperties?: pulumi.Input<boolean>;
    /**
     * Unused Artifacts Cleanup Period (Hr) in the UI. The number of hours to wait before an artifact is deemed 'unused' and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.
     */
    unusedArtifactsCleanupPeriodHours?: pulumi.Input<number>;
    /**
     * The remote repo URL.
     */
    url: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    /**
     * Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
     */
    xrayIndex?: pulumi.Input<boolean>;
}
