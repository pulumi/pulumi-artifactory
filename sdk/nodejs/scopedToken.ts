// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * Artifactory **does not** retain scoped tokens and cannot be imported into state.
 */
export class ScopedToken extends pulumi.CustomResource {
    /**
     * Get an existing ScopedToken resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScopedTokenState, opts?: pulumi.CustomResourceOptions): ScopedToken {
        return new ScopedToken(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'artifactory:index/scopedToken:ScopedToken';

    /**
     * Returns true if the given object is an instance of ScopedToken.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScopedToken {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScopedToken.__pulumiType;
    }

    /**
     * Returns the access token to authenticate to Artifactory
     */
    public /*out*/ readonly accessToken!: pulumi.Output<string>;
    /**
     * (Optional) A list of the other instances or services that should accept this token identified by their Service-IDs. Limited to total 255 characters. Default to `*@*` if not set. Service ID must begin with `jfrt@`. For instructions to retrieve the Artifactory Service ID see this [documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-GetServiceID).
     */
    public readonly audiences!: pulumi.Output<string[] | undefined>;
    /**
     * (Optional) Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * (Optional) The amount of time, in seconds, it would take for the token to expire. An admin shall be able to set whether expiry is mandatory, what is the default expiry, and what is the maximum expiry allowed. Must be non-negative. Default value is based on configuration in `access.config.yaml`. See [API documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-RevokeTokenbyIDrevoketokenbyid) for details.
     */
    public readonly expiresIn!: pulumi.Output<number>;
    /**
     * Returns the token expiry
     */
    public /*out*/ readonly expiry!: pulumi.Output<number>;
    /**
     * Returns the token issued at date/time
     */
    public /*out*/ readonly issuedAt!: pulumi.Output<number>;
    /**
     * Returns the token issuer
     */
    public /*out*/ readonly issuer!: pulumi.Output<string>;
    public /*out*/ readonly refreshToken!: pulumi.Output<string>;
    /**
     * (Optional) Is this token refreshable? Defaults to `false`
     */
    public readonly refreshable!: pulumi.Output<boolean | undefined>;
    /**
     * (Optional) The scope of access that the token provides. Access to the REST API is always provided by default. Administrators can set any scope, while non-admin users can only set the scope to a subset of the groups to which they belong.
     */
    public readonly scopes!: pulumi.Output<string[]>;
    /**
     * Returns the token type
     */
    public /*out*/ readonly subject!: pulumi.Output<string>;
    /**
     * Returns the token type
     */
    public /*out*/ readonly tokenType!: pulumi.Output<string>;
    /**
     * (Optional) The user name for which this token is created. The username is based on the authenticated user - either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: `<service-id>/users/<username>`. Limited to 255 characters.
     */
    public readonly username!: pulumi.Output<string | undefined>;

    /**
     * Create a ScopedToken resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ScopedTokenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScopedTokenArgs | ScopedTokenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScopedTokenState | undefined;
            resourceInputs["accessToken"] = state ? state.accessToken : undefined;
            resourceInputs["audiences"] = state ? state.audiences : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["expiresIn"] = state ? state.expiresIn : undefined;
            resourceInputs["expiry"] = state ? state.expiry : undefined;
            resourceInputs["issuedAt"] = state ? state.issuedAt : undefined;
            resourceInputs["issuer"] = state ? state.issuer : undefined;
            resourceInputs["refreshToken"] = state ? state.refreshToken : undefined;
            resourceInputs["refreshable"] = state ? state.refreshable : undefined;
            resourceInputs["scopes"] = state ? state.scopes : undefined;
            resourceInputs["subject"] = state ? state.subject : undefined;
            resourceInputs["tokenType"] = state ? state.tokenType : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as ScopedTokenArgs | undefined;
            resourceInputs["audiences"] = args ? args.audiences : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["expiresIn"] = args ? args.expiresIn : undefined;
            resourceInputs["refreshable"] = args ? args.refreshable : undefined;
            resourceInputs["scopes"] = args ? args.scopes : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["accessToken"] = undefined /*out*/;
            resourceInputs["expiry"] = undefined /*out*/;
            resourceInputs["issuedAt"] = undefined /*out*/;
            resourceInputs["issuer"] = undefined /*out*/;
            resourceInputs["refreshToken"] = undefined /*out*/;
            resourceInputs["subject"] = undefined /*out*/;
            resourceInputs["tokenType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accessToken", "refreshToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ScopedToken.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ScopedToken resources.
 */
export interface ScopedTokenState {
    /**
     * Returns the access token to authenticate to Artifactory
     */
    accessToken?: pulumi.Input<string>;
    /**
     * (Optional) A list of the other instances or services that should accept this token identified by their Service-IDs. Limited to total 255 characters. Default to `*@*` if not set. Service ID must begin with `jfrt@`. For instructions to retrieve the Artifactory Service ID see this [documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-GetServiceID).
     */
    audiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Optional) Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * (Optional) The amount of time, in seconds, it would take for the token to expire. An admin shall be able to set whether expiry is mandatory, what is the default expiry, and what is the maximum expiry allowed. Must be non-negative. Default value is based on configuration in `access.config.yaml`. See [API documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-RevokeTokenbyIDrevoketokenbyid) for details.
     */
    expiresIn?: pulumi.Input<number>;
    /**
     * Returns the token expiry
     */
    expiry?: pulumi.Input<number>;
    /**
     * Returns the token issued at date/time
     */
    issuedAt?: pulumi.Input<number>;
    /**
     * Returns the token issuer
     */
    issuer?: pulumi.Input<string>;
    refreshToken?: pulumi.Input<string>;
    /**
     * (Optional) Is this token refreshable? Defaults to `false`
     */
    refreshable?: pulumi.Input<boolean>;
    /**
     * (Optional) The scope of access that the token provides. Access to the REST API is always provided by default. Administrators can set any scope, while non-admin users can only set the scope to a subset of the groups to which they belong.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Returns the token type
     */
    subject?: pulumi.Input<string>;
    /**
     * Returns the token type
     */
    tokenType?: pulumi.Input<string>;
    /**
     * (Optional) The user name for which this token is created. The username is based on the authenticated user - either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: `<service-id>/users/<username>`. Limited to 255 characters.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ScopedToken resource.
 */
export interface ScopedTokenArgs {
    /**
     * (Optional) A list of the other instances or services that should accept this token identified by their Service-IDs. Limited to total 255 characters. Default to `*@*` if not set. Service ID must begin with `jfrt@`. For instructions to retrieve the Artifactory Service ID see this [documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-GetServiceID).
     */
    audiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Optional) Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * (Optional) The amount of time, in seconds, it would take for the token to expire. An admin shall be able to set whether expiry is mandatory, what is the default expiry, and what is the maximum expiry allowed. Must be non-negative. Default value is based on configuration in `access.config.yaml`. See [API documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-RevokeTokenbyIDrevoketokenbyid) for details.
     */
    expiresIn?: pulumi.Input<number>;
    /**
     * (Optional) Is this token refreshable? Defaults to `false`
     */
    refreshable?: pulumi.Input<boolean>;
    /**
     * (Optional) The scope of access that the token provides. Access to the REST API is always provided by default. Administrators can set any scope, while non-admin users can only set the scope to a subset of the groups to which they belong.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Optional) The user name for which this token is created. The username is based on the authenticated user - either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: `<service-id>/users/<username>`. Limited to 255 characters.
     */
    username?: pulumi.Input<string>;
}
