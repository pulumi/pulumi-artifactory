// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AccessToken extends pulumi.CustomResource {
    /**
     * Get an existing AccessToken resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessTokenState, opts?: pulumi.CustomResourceOptions): AccessToken {
        return new AccessToken(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'artifactory:index/accessToken:AccessToken';

    /**
     * Returns true if the given object is an instance of AccessToken.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccessToken {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessToken.__pulumiType;
    }

    public /*out*/ readonly accessToken!: pulumi.Output<string>;
    public readonly adminToken!: pulumi.Output<outputs.AccessTokenAdminToken | undefined>;
    public readonly audience!: pulumi.Output<string | undefined>;
    public readonly endDate!: pulumi.Output<string>;
    public readonly endDateRelative!: pulumi.Output<string | undefined>;
    public readonly groups!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly refreshToken!: pulumi.Output<string>;
    public readonly refreshable!: pulumi.Output<boolean | undefined>;
    public readonly username!: pulumi.Output<string>;

    /**
     * Create a AccessToken resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessTokenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccessTokenArgs | AccessTokenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccessTokenState | undefined;
            resourceInputs["accessToken"] = state ? state.accessToken : undefined;
            resourceInputs["adminToken"] = state ? state.adminToken : undefined;
            resourceInputs["audience"] = state ? state.audience : undefined;
            resourceInputs["endDate"] = state ? state.endDate : undefined;
            resourceInputs["endDateRelative"] = state ? state.endDateRelative : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["refreshToken"] = state ? state.refreshToken : undefined;
            resourceInputs["refreshable"] = state ? state.refreshable : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as AccessTokenArgs | undefined;
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["adminToken"] = args ? args.adminToken : undefined;
            resourceInputs["audience"] = args ? args.audience : undefined;
            resourceInputs["endDate"] = args ? args.endDate : undefined;
            resourceInputs["endDateRelative"] = args ? args.endDateRelative : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["refreshable"] = args ? args.refreshable : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["accessToken"] = undefined /*out*/;
            resourceInputs["refreshToken"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accessToken", "refreshToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AccessToken.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccessToken resources.
 */
export interface AccessTokenState {
    accessToken?: pulumi.Input<string>;
    adminToken?: pulumi.Input<inputs.AccessTokenAdminToken>;
    audience?: pulumi.Input<string>;
    endDate?: pulumi.Input<string>;
    endDateRelative?: pulumi.Input<string>;
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    refreshToken?: pulumi.Input<string>;
    refreshable?: pulumi.Input<boolean>;
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccessToken resource.
 */
export interface AccessTokenArgs {
    adminToken?: pulumi.Input<inputs.AccessTokenAdminToken>;
    audience?: pulumi.Input<string>;
    endDate?: pulumi.Input<string>;
    endDateRelative?: pulumi.Input<string>;
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    refreshable?: pulumi.Input<boolean>;
    username: pulumi.Input<string>;
}
