// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface AccessTokenAdminToken {
    instanceId: string;
}

export interface ArtifactPropertyWebhookCriteria {
    anyLocal: boolean;
    anyRemote: boolean;
    excludePatterns?: string[];
    includePatterns?: string[];
    repoKeys: string[];
}

export interface ArtifactWebhookCriteria {
    anyLocal: boolean;
    anyRemote: boolean;
    excludePatterns?: string[];
    includePatterns?: string[];
    repoKeys: string[];
}

export interface ArtifactoryReleaseBundleWebhookCriteria {
    anyReleaseBundle: boolean;
    excludePatterns?: string[];
    includePatterns?: string[];
    registeredReleaseBundleNames: string[];
}

export interface BuildWebhookCriteria {
    anyBuild: boolean;
    excludePatterns?: string[];
    includePatterns?: string[];
    selectedBuilds: string[];
}

export interface DistributionWebhookCriteria {
    anyReleaseBundle: boolean;
    excludePatterns?: string[];
    includePatterns?: string[];
    registeredReleaseBundleNames: string[];
}

export interface DockerWebhookCriteria {
    anyLocal: boolean;
    anyRemote: boolean;
    excludePatterns?: string[];
    includePatterns?: string[];
    repoKeys: string[];
}

export interface FederatedAlpineRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedBowerRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedCargoRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedChefRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedCocoapodsRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedComposerRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedConanRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedCondaRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedCranRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedDebianRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedDockerRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedGemsRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedGenericRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedGitltfsRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedGoRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedGradleRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedHelmRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedIvyRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedMavenRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedNpmRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedNugetRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedOpkgRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedPuppetRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedPypiRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedRpmRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedSbtRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedVagrantRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface OauthSettingsOauthProvider {
    apiUrl: string;
    authUrl: string;
    clientId: string;
    clientSecret: string;
    enabled?: boolean;
    name: string;
    tokenUrl: string;
    type: string;
}

export interface PermissionTargetBuild {
    actions?: outputs.PermissionTargetBuildActions;
    excludesPatterns?: string[];
    includesPatterns?: string[];
    repositories: string[];
}

export interface PermissionTargetBuildActions {
    groups?: outputs.PermissionTargetBuildActionsGroup[];
    users?: outputs.PermissionTargetBuildActionsUser[];
}

export interface PermissionTargetBuildActionsGroup {
    name: string;
    permissions: string[];
}

export interface PermissionTargetBuildActionsUser {
    name: string;
    permissions: string[];
}

export interface PermissionTargetReleaseBundle {
    actions?: outputs.PermissionTargetReleaseBundleActions;
    excludesPatterns?: string[];
    includesPatterns?: string[];
    repositories: string[];
}

export interface PermissionTargetReleaseBundleActions {
    groups?: outputs.PermissionTargetReleaseBundleActionsGroup[];
    users?: outputs.PermissionTargetReleaseBundleActionsUser[];
}

export interface PermissionTargetReleaseBundleActionsGroup {
    name: string;
    permissions: string[];
}

export interface PermissionTargetReleaseBundleActionsUser {
    name: string;
    permissions: string[];
}

export interface PermissionTargetRepo {
    actions?: outputs.PermissionTargetRepoActions;
    excludesPatterns?: string[];
    includesPatterns?: string[];
    repositories: string[];
}

export interface PermissionTargetRepoActions {
    groups?: outputs.PermissionTargetRepoActionsGroup[];
    users?: outputs.PermissionTargetRepoActionsUser[];
}

export interface PermissionTargetRepoActionsGroup {
    name: string;
    permissions: string[];
}

export interface PermissionTargetRepoActionsUser {
    name: string;
    permissions: string[];
}

export interface PermissionTargetsBuild {
    actions?: outputs.PermissionTargetsBuildActions;
    excludesPatterns?: string[];
    includesPatterns?: string[];
    repositories: string[];
}

export interface PermissionTargetsBuildActions {
    groups?: outputs.PermissionTargetsBuildActionsGroup[];
    users?: outputs.PermissionTargetsBuildActionsUser[];
}

export interface PermissionTargetsBuildActionsGroup {
    name: string;
    permissions: string[];
}

export interface PermissionTargetsBuildActionsUser {
    name: string;
    permissions: string[];
}

export interface PermissionTargetsReleaseBundle {
    actions?: outputs.PermissionTargetsReleaseBundleActions;
    excludesPatterns?: string[];
    includesPatterns?: string[];
    repositories: string[];
}

export interface PermissionTargetsReleaseBundleActions {
    groups?: outputs.PermissionTargetsReleaseBundleActionsGroup[];
    users?: outputs.PermissionTargetsReleaseBundleActionsUser[];
}

export interface PermissionTargetsReleaseBundleActionsGroup {
    name: string;
    permissions: string[];
}

export interface PermissionTargetsReleaseBundleActionsUser {
    name: string;
    permissions: string[];
}

export interface PermissionTargetsRepo {
    actions?: outputs.PermissionTargetsRepoActions;
    excludesPatterns?: string[];
    includesPatterns?: string[];
    repositories: string[];
}

export interface PermissionTargetsRepoActions {
    groups?: outputs.PermissionTargetsRepoActionsGroup[];
    users?: outputs.PermissionTargetsRepoActionsUser[];
}

export interface PermissionTargetsRepoActionsGroup {
    name: string;
    permissions: string[];
}

export interface PermissionTargetsRepoActionsUser {
    name: string;
    permissions: string[];
}

export interface PushReplicationReplication {
    enabled: boolean;
    password: string;
    pathPrefix?: string;
    proxy?: string;
    socketTimeoutMillis: number;
    syncDeletes: boolean;
    syncProperties: boolean;
    syncStatistics: boolean;
    url?: string;
    username?: string;
}

export interface ReleaseBundleWebhookCriteria {
    anyReleaseBundle: boolean;
    excludePatterns?: string[];
    includePatterns?: string[];
    registeredReleaseBundleNames: string[];
}

export interface RemoteAlpineRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteBowerRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteCargoRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteChefRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteCocoapodsRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteComposerRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteConanRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteCondaRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteCranRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteDebianRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteDockerRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteGemsRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteGenericRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteGitlfsRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteGoRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteGradleRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteHelmRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteIvyRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteMavenRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteNpmRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteNugetRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteOpkgRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteP2RepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemotePuppetRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemotePypiRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteRpmRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteSbtRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteVcsRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface ReplicationConfigReplication {
    enabled: boolean;
    password: string;
    pathPrefix?: string;
    proxy?: string;
    socketTimeoutMillis: number;
    syncDeletes: boolean;
    syncProperties: boolean;
    syncStatistics: boolean;
    url?: string;
    username?: string;
}

