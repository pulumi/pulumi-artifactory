// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AccessTokenAdminToken {
    instanceId: string;
}

export interface ArtifactPropertyWebhookCriteria {
    anyLocal: boolean;
    anyRemote: boolean;
    excludePatterns?: string[];
    includePatterns?: string[];
    repoKeys: string[];
}

export interface ArtifactPropertyWebhookHandler {
    customHttpHeaders?: {[key: string]: string};
    proxy?: string;
    secret?: string;
    url: string;
}

export interface ArtifactWebhookCriteria {
    anyLocal: boolean;
    anyRemote: boolean;
    excludePatterns?: string[];
    includePatterns?: string[];
    repoKeys: string[];
}

export interface ArtifactWebhookHandler {
    customHttpHeaders?: {[key: string]: string};
    proxy?: string;
    secret?: string;
    url: string;
}

export interface ArtifactoryReleaseBundleWebhookCriteria {
    anyReleaseBundle: boolean;
    excludePatterns?: string[];
    includePatterns?: string[];
    registeredReleaseBundleNames: string[];
}

export interface ArtifactoryReleaseBundleWebhookHandler {
    customHttpHeaders?: {[key: string]: string};
    proxy?: string;
    secret?: string;
    url: string;
}

export interface BuildWebhookCriteria {
    anyBuild: boolean;
    excludePatterns?: string[];
    includePatterns?: string[];
    selectedBuilds: string[];
}

export interface BuildWebhookHandler {
    customHttpHeaders?: {[key: string]: string};
    proxy?: string;
    secret?: string;
    url: string;
}

export interface DistributionWebhookCriteria {
    anyReleaseBundle: boolean;
    excludePatterns?: string[];
    includePatterns?: string[];
    registeredReleaseBundleNames: string[];
}

export interface DistributionWebhookHandler {
    customHttpHeaders?: {[key: string]: string};
    proxy?: string;
    secret?: string;
    url: string;
}

export interface DockerWebhookCriteria {
    anyLocal: boolean;
    anyRemote: boolean;
    excludePatterns?: string[];
    includePatterns?: string[];
    repoKeys: string[];
}

export interface DockerWebhookHandler {
    customHttpHeaders?: {[key: string]: string};
    proxy?: string;
    secret?: string;
    url: string;
}

export interface FederatedAlpineRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedBowerRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedCargoRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedChefRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedCocoapodsRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedComposerRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedConanRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedCondaRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedCranRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedDebianRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedDockerRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedDockerV1RepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedDockerV2RepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedGemsRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedGenericRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedGitltfsRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedGoRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedGradleRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedHelmRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedIvyRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedMavenRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedNpmRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedNugetRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedOpkgRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedPuppetRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedPypiRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedRpmRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedSbtRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedSwiftRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedTerraformModuleRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedTerraformProviderRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface FederatedVagrantRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedAlpineRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedBowerRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedCargoRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedChefRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedCocoapodsRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedComposerRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedConanRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedCondaRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedCranRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedDebianRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedDockerRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedDockerV1RepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedDockerV2RepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedGemsRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedGenericRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedGitlfsRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedGoRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedGradleRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedHelmRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedIvyRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedMavenRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedNpmRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedNugetRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedOpkgRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedPuppetRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedPypiRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedRpmRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedSbtRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedSwiftRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedTerraformModuleRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedTerraformProviderRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetFederatedVagrantRepositoryMember {
    enabled: boolean;
    url: string;
}

export interface GetPermissionTargetBuild {
    actions?: outputs.GetPermissionTargetBuildActions;
    excludesPatterns?: string[];
    includesPatterns?: string[];
    repositories: string[];
}

export interface GetPermissionTargetBuildActions {
    groups?: outputs.GetPermissionTargetBuildActionsGroup[];
    users?: outputs.GetPermissionTargetBuildActionsUser[];
}

export interface GetPermissionTargetBuildActionsGroup {
    name: string;
    permissions: string[];
}

export interface GetPermissionTargetBuildActionsUser {
    name: string;
    permissions: string[];
}

export interface GetPermissionTargetReleaseBundle {
    actions?: outputs.GetPermissionTargetReleaseBundleActions;
    excludesPatterns?: string[];
    includesPatterns?: string[];
    repositories: string[];
}

export interface GetPermissionTargetReleaseBundleActions {
    groups?: outputs.GetPermissionTargetReleaseBundleActionsGroup[];
    users?: outputs.GetPermissionTargetReleaseBundleActionsUser[];
}

export interface GetPermissionTargetReleaseBundleActionsGroup {
    name: string;
    permissions: string[];
}

export interface GetPermissionTargetReleaseBundleActionsUser {
    name: string;
    permissions: string[];
}

export interface GetPermissionTargetRepo {
    actions?: outputs.GetPermissionTargetRepoActions;
    excludesPatterns?: string[];
    includesPatterns?: string[];
    repositories: string[];
}

export interface GetPermissionTargetRepoActions {
    groups?: outputs.GetPermissionTargetRepoActionsGroup[];
    users?: outputs.GetPermissionTargetRepoActionsUser[];
}

export interface GetPermissionTargetRepoActionsGroup {
    name: string;
    permissions: string[];
}

export interface GetPermissionTargetRepoActionsUser {
    name: string;
    permissions: string[];
}

export interface GetRemoteAlpineRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteBowerRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteCargoRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteChefRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteCocoapodsRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteComposerRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteConanRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteCondaRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteCranRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteDebianRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteDockerRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteGemsRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteGenericRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteGitlfsRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteGoRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteGradleRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteHelmRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteIvyRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteMavenRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteNpmRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteNugetRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteOpkgRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteP2RepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemotePubRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemotePuppetRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemotePypiRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteRpmRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteSbtRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteSwiftRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteTerraformRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface GetRemoteVcsRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface LocalRepositoryMultiReplicationReplication {
    checkBinaryExistenceInFilestore?: boolean;
    enabled?: boolean;
    excludePathPrefixPattern?: string;
    includePathPrefixPattern?: string;
    password?: string;
    proxy?: string;
    replicationKey: string;
    socketTimeoutMillis?: number;
    syncDeletes?: boolean;
    syncProperties?: boolean;
    syncStatistics?: boolean;
    url: string;
    username: string;
}

export interface OauthSettingsOauthProvider {
    apiUrl: string;
    authUrl: string;
    clientId: string;
    clientSecret: string;
    enabled?: boolean;
    name: string;
    tokenUrl: string;
    type: string;
}

export interface PermissionTargetBuild {
    actions?: outputs.PermissionTargetBuildActions;
    excludesPatterns: string[];
    includesPatterns: string[];
    repositories: string[];
}

export interface PermissionTargetBuildActions {
    groups?: outputs.PermissionTargetBuildActionsGroup[];
    users?: outputs.PermissionTargetBuildActionsUser[];
}

export interface PermissionTargetBuildActionsGroup {
    name: string;
    permissions: string[];
}

export interface PermissionTargetBuildActionsUser {
    name: string;
    permissions: string[];
}

export interface PermissionTargetReleaseBundle {
    actions?: outputs.PermissionTargetReleaseBundleActions;
    excludesPatterns: string[];
    includesPatterns: string[];
    repositories: string[];
}

export interface PermissionTargetReleaseBundleActions {
    groups?: outputs.PermissionTargetReleaseBundleActionsGroup[];
    users?: outputs.PermissionTargetReleaseBundleActionsUser[];
}

export interface PermissionTargetReleaseBundleActionsGroup {
    name: string;
    permissions: string[];
}

export interface PermissionTargetReleaseBundleActionsUser {
    name: string;
    permissions: string[];
}

export interface PermissionTargetRepo {
    actions?: outputs.PermissionTargetRepoActions;
    excludesPatterns: string[];
    includesPatterns: string[];
    repositories: string[];
}

export interface PermissionTargetRepoActions {
    groups?: outputs.PermissionTargetRepoActionsGroup[];
    users?: outputs.PermissionTargetRepoActionsUser[];
}

export interface PermissionTargetRepoActionsGroup {
    name: string;
    permissions: string[];
}

export interface PermissionTargetRepoActionsUser {
    name: string;
    permissions: string[];
}

export interface PropertySetProperty {
    closedPredefinedValues?: boolean;
    multipleChoice?: boolean;
    name: string;
    predefinedValues: outputs.PropertySetPropertyPredefinedValue[];
}

export interface PropertySetPropertyPredefinedValue {
    defaultValue: boolean;
    name: string;
}

export interface PushReplicationReplication {
    checkBinaryExistenceInFilestore?: boolean;
    enabled: boolean;
    password: string;
    pathPrefix?: string;
    proxy?: string;
    socketTimeoutMillis: number;
    syncDeletes: boolean;
    syncProperties: boolean;
    syncStatistics: boolean;
    url: string;
    username: string;
}

export interface ReleaseBundleWebhookCriteria {
    anyReleaseBundle: boolean;
    excludePatterns?: string[];
    includePatterns?: string[];
    registeredReleaseBundleNames: string[];
}

export interface ReleaseBundleWebhookHandler {
    customHttpHeaders?: {[key: string]: string};
    proxy?: string;
    secret?: string;
    url: string;
}

export interface RemoteAlpineRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteBowerRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteCargoRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteChefRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteCocoapodsRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteComposerRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteConanRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteCondaRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteCranRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteDebianRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteDockerRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteGemsRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteGenericRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteGitlfsRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteGoRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteGradleRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteHelmRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteIvyRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteMavenRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteNpmRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteNugetRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteOpkgRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteP2RepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemotePubRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemotePuppetRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemotePypiRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteRpmRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteSbtRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteSwiftRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteTerraformRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface RemoteVcsRepositoryContentSynchronisation {
    enabled?: boolean;
    propertiesEnabled?: boolean;
    sourceOriginAbsenceDetection?: boolean;
    statisticsEnabled?: boolean;
}

export interface ReplicationConfigReplication {
    enabled: boolean;
    password: string;
    pathPrefix?: string;
    proxy?: string;
    socketTimeoutMillis: number;
    syncDeletes: boolean;
    syncProperties: boolean;
    syncStatistics: boolean;
    url?: string;
    username?: string;
}

