// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface AccessTokenAdminToken {
    instanceId: pulumi.Input<string>;
}

export interface ArtifactPropertyWebhookCriteria {
    /**
     * Trigger on any local repo.
     */
    anyLocal: pulumi.Input<boolean>;
    /**
     * Trigger on any remote repo.
     */
    anyRemote: pulumi.Input<boolean>;
    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\n Ant-style path expressions are supported (*, *\*, ?).\nFor example: "org/apache/**".
     */
    excludePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\n Ant-style path expressions are supported (*, *\*, ?).\nFor example: "org/apache/**".
     */
    includePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Trigger on this list of repo keys.
     */
    repoKeys: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ArtifactPropertyWebhookHandler {
    /**
     * Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.
     */
    customHttpHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Proxy key from Artifactory UI (Administration > Proxies > Configuration).
     */
    proxy?: pulumi.Input<string>;
    /**
     * Secret authentication token that will be sent to the configured URL. The value will be sent as `x-jfrog-event-auth` header.
     */
    secret?: pulumi.Input<string>;
    /**
     * Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.
     */
    url: pulumi.Input<string>;
}

export interface ArtifactWebhookCriteria {
    /**
     * Trigger on any local repo.
     */
    anyLocal: pulumi.Input<boolean>;
    /**
     * Trigger on any remote repo.
     */
    anyRemote: pulumi.Input<boolean>;
    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\n Ant-style path expressions are supported (*, *\*, ?).\nFor example: "org/apache/**".
     */
    excludePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\n Ant-style path expressions are supported (*, *\*, ?).\nFor example: "org/apache/**".
     */
    includePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Trigger on this list of repo keys.
     */
    repoKeys: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ArtifactWebhookHandler {
    /**
     * Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.
     */
    customHttpHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Proxy key from Artifactory UI (Administration > Proxies > Configuration).
     */
    proxy?: pulumi.Input<string>;
    /**
     * Secret authentication token that will be sent to the configured URL. The value will be sent as `x-jfrog-event-auth` header.
     */
    secret?: pulumi.Input<string>;
    /**
     * Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.
     */
    url: pulumi.Input<string>;
}

export interface ArtifactoryReleaseBundleWebhookCriteria {
    /**
     * Trigger on any release bundle
     */
    anyReleaseBundle: pulumi.Input<boolean>;
    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\n Ant-style path expressions are supported (*, *\*, ?).\nFor example: "org/apache/**"
     */
    excludePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\n Ant-style path expressions are supported (*, *\*, ?).\nFor example: "org/apache/**"
     */
    includePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Trigger on this list of release bundle names
     */
    registeredReleaseBundleNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ArtifactoryReleaseBundleWebhookHandler {
    /**
     * Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.
     */
    customHttpHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Proxy key from Artifactory UI (Administration > Proxies > Configuration).
     */
    proxy?: pulumi.Input<string>;
    /**
     * Secret authentication token that will be sent to the configured URL. The value will be sent as `x-jfrog-event-auth` header.
     */
    secret?: pulumi.Input<string>;
    /**
     * Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.
     */
    url: pulumi.Input<string>;
}

export interface BuildWebhookCriteria {
    /**
     * Trigger on any build.
     */
    anyBuild: pulumi.Input<boolean>;
    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\n Ant-style path expressions are supported (*, *\*, ?).\nFor example: "org/apache/**".
     */
    excludePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\n Ant-style path expressions are supported (*, *\*, ?).\nFor example: "org/apache/**".
     */
    includePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Trigger on this list of build names.
     */
    selectedBuilds: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BuildWebhookHandler {
    /**
     * Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.
     */
    customHttpHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Proxy key from Artifactory UI (Administration > Proxies > Configuration).
     */
    proxy?: pulumi.Input<string>;
    /**
     * Secret authentication token that will be sent to the configured URL. The value will be sent as `x-jfrog-event-auth` header.
     */
    secret?: pulumi.Input<string>;
    /**
     * Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.
     */
    url: pulumi.Input<string>;
}

export interface DistributionWebhookCriteria {
    /**
     * Trigger on any release bundle.
     */
    anyReleaseBundle: pulumi.Input<boolean>;
    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\n Ant-style path expressions are supported (*, *\*, ?).\nFor example: "org/apache/**".
     */
    excludePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\n Ant-style path expressions are supported (*, *\*, ?).\nFor example: "org/apache/**".
     */
    includePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Trigger on this list of release bundle names.
     */
    registeredReleaseBundleNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DistributionWebhookHandler {
    /**
     * Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.
     */
    customHttpHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Proxy key from Artifactory UI (Administration > Proxies > Configuration).
     */
    proxy?: pulumi.Input<string>;
    /**
     * Secret authentication token that will be sent to the configured URL. The value will be sent as `x-jfrog-event-auth` header.
     */
    secret?: pulumi.Input<string>;
    /**
     * Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.
     */
    url: pulumi.Input<string>;
}

export interface DockerWebhookCriteria {
    /**
     * Trigger on any local repo.
     */
    anyLocal: pulumi.Input<boolean>;
    /**
     * Trigger on any remote repo.
     */
    anyRemote: pulumi.Input<boolean>;
    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\n Ant-style path expressions are supported (*, *\*, ?).\nFor example: "org/apache/**".
     */
    excludePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\n Ant-style path expressions are supported (*, *\*, ?).\nFor example: "org/apache/**".
     */
    includePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Trigger on this list of repo keys.
     */
    repoKeys: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DockerWebhookHandler {
    /**
     * Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.
     */
    customHttpHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Proxy key from Artifactory UI (Administration > Proxies > Configuration).
     */
    proxy?: pulumi.Input<string>;
    /**
     * Secret authentication token that will be sent to the configured URL. The value will be sent as `x-jfrog-event-auth` header.
     */
    secret?: pulumi.Input<string>;
    /**
     * Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.
     */
    url: pulumi.Input<string>;
}

export interface FederatedAlpineRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedBowerRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedCargoRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedChefRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedCocoapodsRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedComposerRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedConanRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedCondaRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedCranRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedDebianRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedDockerRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedGemsRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedGenericRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedGitltfsRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedGoRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedGradleRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedHelmRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedIvyRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedMavenRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedNpmRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedNugetRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedOpkgRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedPuppetRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedPypiRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedRpmRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedSbtRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedTerraformModuleRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedTerraformProviderRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface FederatedVagrantRepositoryMember {
    /**
     * Represents the active state of the federated member. It is supported to change the enabled
     * status of my own member. The config will be updated on the other federated members automatically.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Full URL to ending with the repository name.
     */
    url: pulumi.Input<string>;
}

export interface OauthSettingsOauthProvider {
    /**
     * OAuth user info endpoint for the IdP.
     */
    apiUrl: pulumi.Input<string>;
    /**
     * OAuth authorization endpoint for the IdP.
     */
    authUrl: pulumi.Input<string>;
    /**
     * OAuth client ID configured on the IdP.
     */
    clientId: pulumi.Input<string>;
    /**
     * OAuth client secret configured on the IdP.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Enable the Artifactory OAuth provider.  Default value is `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Name of the Artifactory OAuth provider.
     */
    name: pulumi.Input<string>;
    /**
     * OAuth token endpoint for the IdP.
     */
    tokenUrl: pulumi.Input<string>;
    /**
     * Type of OAuth provider. (e.g., `github`, `google`, `cloudfoundry`, or `openId`)
     */
    type: pulumi.Input<string>;
}

export interface PermissionTargetBuild {
    /**
     * -
     */
    actions?: pulumi.Input<inputs.PermissionTargetBuildActions>;
    /**
     * Pattern of artifacts to exclude.
     */
    excludesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Pattern of artifacts to include.
     */
    includesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of repositories this permission target is applicable for.
     */
    repositories: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetBuildActions {
    /**
     * Groups this permission applies for.
     */
    groups?: pulumi.Input<pulumi.Input<inputs.PermissionTargetBuildActionsGroup>[]>;
    /**
     * Users this permission target applies for.
     */
    users?: pulumi.Input<pulumi.Input<inputs.PermissionTargetBuildActionsUser>[]>;
}

export interface PermissionTargetBuildActionsGroup {
    /**
     * Name of permission.
     */
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetBuildActionsUser {
    /**
     * Name of permission.
     */
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetReleaseBundle {
    /**
     * -
     */
    actions?: pulumi.Input<inputs.PermissionTargetReleaseBundleActions>;
    /**
     * Pattern of artifacts to exclude.
     */
    excludesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Pattern of artifacts to include.
     */
    includesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of repositories this permission target is applicable for.
     */
    repositories: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetReleaseBundleActions {
    /**
     * Groups this permission applies for.
     */
    groups?: pulumi.Input<pulumi.Input<inputs.PermissionTargetReleaseBundleActionsGroup>[]>;
    /**
     * Users this permission target applies for.
     */
    users?: pulumi.Input<pulumi.Input<inputs.PermissionTargetReleaseBundleActionsUser>[]>;
}

export interface PermissionTargetReleaseBundleActionsGroup {
    /**
     * Name of permission.
     */
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetReleaseBundleActionsUser {
    /**
     * Name of permission.
     */
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetRepo {
    /**
     * -
     */
    actions?: pulumi.Input<inputs.PermissionTargetRepoActions>;
    /**
     * Pattern of artifacts to exclude.
     */
    excludesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Pattern of artifacts to include.
     */
    includesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of repositories this permission target is applicable for.
     */
    repositories: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetRepoActions {
    /**
     * Groups this permission applies for.
     */
    groups?: pulumi.Input<pulumi.Input<inputs.PermissionTargetRepoActionsGroup>[]>;
    /**
     * Users this permission target applies for.
     */
    users?: pulumi.Input<pulumi.Input<inputs.PermissionTargetRepoActionsUser>[]>;
}

export interface PermissionTargetRepoActionsGroup {
    /**
     * Name of permission.
     */
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetRepoActionsUser {
    /**
     * Name of permission.
     */
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsBuild {
    /**
     * -
     */
    actions?: pulumi.Input<inputs.PermissionTargetsBuildActions>;
    /**
     * Pattern of artifacts to exclude.
     */
    excludesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Pattern of artifacts to include.
     */
    includesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of repositories this permission target is applicable for.
     */
    repositories: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsBuildActions {
    /**
     * Groups this permission applies for.
     */
    groups?: pulumi.Input<pulumi.Input<inputs.PermissionTargetsBuildActionsGroup>[]>;
    /**
     * Users this permission target applies for.
     */
    users?: pulumi.Input<pulumi.Input<inputs.PermissionTargetsBuildActionsUser>[]>;
}

export interface PermissionTargetsBuildActionsGroup {
    /**
     * Name of permission.
     */
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsBuildActionsUser {
    /**
     * Name of permission.
     */
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsReleaseBundle {
    /**
     * -
     */
    actions?: pulumi.Input<inputs.PermissionTargetsReleaseBundleActions>;
    /**
     * Pattern of artifacts to exclude.
     */
    excludesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Pattern of artifacts to include.
     */
    includesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of repositories this permission target is applicable for.
     */
    repositories: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsReleaseBundleActions {
    /**
     * Groups this permission applies for.
     */
    groups?: pulumi.Input<pulumi.Input<inputs.PermissionTargetsReleaseBundleActionsGroup>[]>;
    /**
     * Users this permission target applies for.
     */
    users?: pulumi.Input<pulumi.Input<inputs.PermissionTargetsReleaseBundleActionsUser>[]>;
}

export interface PermissionTargetsReleaseBundleActionsGroup {
    /**
     * Name of permission.
     */
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsReleaseBundleActionsUser {
    /**
     * Name of permission.
     */
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsRepo {
    /**
     * -
     */
    actions?: pulumi.Input<inputs.PermissionTargetsRepoActions>;
    /**
     * Pattern of artifacts to exclude.
     */
    excludesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Pattern of artifacts to include.
     */
    includesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of repositories this permission target is applicable for.
     */
    repositories: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsRepoActions {
    /**
     * Groups this permission applies for.
     */
    groups?: pulumi.Input<pulumi.Input<inputs.PermissionTargetsRepoActionsGroup>[]>;
    /**
     * Users this permission target applies for.
     */
    users?: pulumi.Input<pulumi.Input<inputs.PermissionTargetsRepoActionsUser>[]>;
}

export interface PermissionTargetsRepoActionsGroup {
    /**
     * Name of permission.
     */
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsRepoActionsUser {
    /**
     * Name of permission.
     */
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PushReplicationReplication {
    /**
     * When true, enables distributed checksum storage. For more information, see
     * [Optimizing Repository Replication with Checksum-Based Storage](https://www.jfrog.com/confluence/display/JFROG/Repository+Replication#RepositoryReplication-OptimizingRepositoryReplicationUsingStorageLevelSynchronizationOptions).
     */
    checkBinaryExistenceInFilestore?: pulumi.Input<boolean>;
    /**
     * When set, this replication will be enabled when saved.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Required for local repository, but not needed for remote repository.
     */
    password: pulumi.Input<string>;
    /**
     * Only artifacts that located in path that matches the subpath within the remote repository will be replicated.
     */
    pathPrefix?: pulumi.Input<string>;
    /**
     * Proxy key from Artifactory Proxies settings. The proxy configuration will be used when communicating with the remote instance.
     */
    proxy?: pulumi.Input<string>;
    /**
     * The network timeout in milliseconds to use for remote operations.
     */
    socketTimeoutMillis?: pulumi.Input<number>;
    /**
     * When set, items that were deleted locally should also be deleted remotely (also applies to properties metadata).
     * Note that enabling this option, will delete artifacts on the target that do not exist in the source repository.
     */
    syncDeletes?: pulumi.Input<boolean>;
    /**
     * When set, the task also synchronizes the properties of replicated artifacts.
     */
    syncProperties?: pulumi.Input<boolean>;
    /**
     * When set, artifact download statistics will also be replicated. Set to avoid inadvertent cleanup at the target instance when setting up replication for disaster recovery.
     */
    syncStatistics?: pulumi.Input<boolean>;
    /**
     * The URL of the target local repository on a remote Artifactory server. Required for local repository, but not needed for remote repository.
     */
    url: pulumi.Input<string>;
    /**
     * Required for local repository, but not needed for remote repository.
     */
    username: pulumi.Input<string>;
}

export interface ReleaseBundleWebhookCriteria {
    /**
     * Trigger on any release bundle.
     */
    anyReleaseBundle: pulumi.Input<boolean>;
    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\n Ant-style path expressions are supported (*, *\*, ?).\nFor example: "org/apache/**".
     */
    excludePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\n Ant-style path expressions are supported (*, *\*, ?).\nFor example: "org/apache/**".
     */
    includePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Trigger on this list of release bundle names.
     */
    registeredReleaseBundleNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ReleaseBundleWebhookHandler {
    /**
     * Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.
     */
    customHttpHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Proxy key from Artifactory UI (Administration > Proxies > Configuration).
     */
    proxy?: pulumi.Input<string>;
    /**
     * Secret authentication token that will be sent to the configured URL. The value will be sent as `x-jfrog-event-auth` header.
     */
    secret?: pulumi.Input<string>;
    /**
     * Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.
     */
    url: pulumi.Input<string>;
}

export interface RemoteAlpineRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteBowerRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteCargoRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteChefRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteCocoapodsRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteComposerRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteConanRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteCondaRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteCranRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteDebianRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteDockerRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteGemsRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteGenericRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteGitlfsRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteGoRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteGradleRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteHelmRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteIvyRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteMavenRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteNpmRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteNugetRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteOpkgRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteP2RepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemotePubRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemotePuppetRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemotePypiRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteRpmRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteSbtRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteSwiftRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteTerraformRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteVcsRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface ReplicationConfigReplication {
    enabled?: pulumi.Input<boolean>;
    /**
     * Requires password encryption to be turned off `POST /api/system/decrypt`.
     */
    password?: pulumi.Input<string>;
    pathPrefix?: pulumi.Input<string>;
    /**
     * Proxy key from Artifactory Proxies setting
     */
    proxy?: pulumi.Input<string>;
    socketTimeoutMillis?: pulumi.Input<number>;
    syncDeletes?: pulumi.Input<boolean>;
    syncProperties?: pulumi.Input<boolean>;
    syncStatistics?: pulumi.Input<boolean>;
    url?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}
