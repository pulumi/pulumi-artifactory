// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface AccessTokenAdminToken {
    instanceId: pulumi.Input<string>;
}

export interface ArtifactPropertyWebhookCriteria {
    anyLocal: pulumi.Input<boolean>;
    anyRemote: pulumi.Input<boolean>;
    excludePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    includePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    repoKeys: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ArtifactWebhookCriteria {
    anyLocal: pulumi.Input<boolean>;
    anyRemote: pulumi.Input<boolean>;
    excludePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    includePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    repoKeys: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ArtifactoryReleaseBundleWebhookCriteria {
    anyReleaseBundle: pulumi.Input<boolean>;
    excludePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    includePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    registeredReleaseBundleNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BuildWebhookCriteria {
    anyBuild: pulumi.Input<boolean>;
    excludePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    includePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    selectedBuilds: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DistributionWebhookCriteria {
    anyReleaseBundle: pulumi.Input<boolean>;
    excludePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    includePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    registeredReleaseBundleNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DockerWebhookCriteria {
    anyLocal: pulumi.Input<boolean>;
    anyRemote: pulumi.Input<boolean>;
    excludePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    includePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    repoKeys: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FederatedAlpineRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedBowerRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedCargoRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedChefRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedCocoapodsRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedComposerRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedConanRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedCondaRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedCranRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedDebianRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedDockerRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedGemsRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedGenericRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedGitltfsRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedGoRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedGradleRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedHelmRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedIvyRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedMavenRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedNpmRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedNugetRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedOpkgRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedPuppetRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedPypiRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedRpmRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedSbtRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface FederatedVagrantRepositoryMember {
    enabled: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface OauthSettingsOauthProvider {
    apiUrl: pulumi.Input<string>;
    authUrl: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    tokenUrl: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface PermissionTargetBuild {
    actions?: pulumi.Input<inputs.PermissionTargetBuildActions>;
    excludesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    includesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    repositories: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetBuildActions {
    groups?: pulumi.Input<pulumi.Input<inputs.PermissionTargetBuildActionsGroup>[]>;
    users?: pulumi.Input<pulumi.Input<inputs.PermissionTargetBuildActionsUser>[]>;
}

export interface PermissionTargetBuildActionsGroup {
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetBuildActionsUser {
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetReleaseBundle {
    actions?: pulumi.Input<inputs.PermissionTargetReleaseBundleActions>;
    excludesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    includesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    repositories: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetReleaseBundleActions {
    groups?: pulumi.Input<pulumi.Input<inputs.PermissionTargetReleaseBundleActionsGroup>[]>;
    users?: pulumi.Input<pulumi.Input<inputs.PermissionTargetReleaseBundleActionsUser>[]>;
}

export interface PermissionTargetReleaseBundleActionsGroup {
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetReleaseBundleActionsUser {
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetRepo {
    actions?: pulumi.Input<inputs.PermissionTargetRepoActions>;
    excludesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    includesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    repositories: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetRepoActions {
    groups?: pulumi.Input<pulumi.Input<inputs.PermissionTargetRepoActionsGroup>[]>;
    users?: pulumi.Input<pulumi.Input<inputs.PermissionTargetRepoActionsUser>[]>;
}

export interface PermissionTargetRepoActionsGroup {
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetRepoActionsUser {
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsBuild {
    actions?: pulumi.Input<inputs.PermissionTargetsBuildActions>;
    excludesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    includesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    repositories: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsBuildActions {
    groups?: pulumi.Input<pulumi.Input<inputs.PermissionTargetsBuildActionsGroup>[]>;
    users?: pulumi.Input<pulumi.Input<inputs.PermissionTargetsBuildActionsUser>[]>;
}

export interface PermissionTargetsBuildActionsGroup {
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsBuildActionsUser {
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsReleaseBundle {
    actions?: pulumi.Input<inputs.PermissionTargetsReleaseBundleActions>;
    excludesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    includesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    repositories: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsReleaseBundleActions {
    groups?: pulumi.Input<pulumi.Input<inputs.PermissionTargetsReleaseBundleActionsGroup>[]>;
    users?: pulumi.Input<pulumi.Input<inputs.PermissionTargetsReleaseBundleActionsUser>[]>;
}

export interface PermissionTargetsReleaseBundleActionsGroup {
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsReleaseBundleActionsUser {
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsRepo {
    actions?: pulumi.Input<inputs.PermissionTargetsRepoActions>;
    excludesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    includesPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    repositories: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsRepoActions {
    groups?: pulumi.Input<pulumi.Input<inputs.PermissionTargetsRepoActionsGroup>[]>;
    users?: pulumi.Input<pulumi.Input<inputs.PermissionTargetsRepoActionsUser>[]>;
}

export interface PermissionTargetsRepoActionsGroup {
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionTargetsRepoActionsUser {
    name: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PushReplicationReplication {
    enabled?: pulumi.Input<boolean>;
    password?: pulumi.Input<string>;
    pathPrefix?: pulumi.Input<string>;
    proxy?: pulumi.Input<string>;
    socketTimeoutMillis?: pulumi.Input<number>;
    syncDeletes?: pulumi.Input<boolean>;
    syncProperties?: pulumi.Input<boolean>;
    syncStatistics?: pulumi.Input<boolean>;
    url?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface ReleaseBundleWebhookCriteria {
    anyReleaseBundle: pulumi.Input<boolean>;
    excludePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    includePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    registeredReleaseBundleNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RemoteAlpineRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteBowerRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteCargoRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteChefRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteCocoapodsRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteComposerRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteConanRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteCondaRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteCranRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteDebianRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteDockerRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteGemsRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteGenericRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteGitlfsRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteGoRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteGradleRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteHelmRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteIvyRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteMavenRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteNpmRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteNugetRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteOpkgRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteP2RepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemotePuppetRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemotePypiRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteRpmRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteSbtRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface RemoteVcsRepositoryContentSynchronisation {
    enabled?: pulumi.Input<boolean>;
    propertiesEnabled?: pulumi.Input<boolean>;
    sourceOriginAbsenceDetection?: pulumi.Input<boolean>;
    statisticsEnabled?: pulumi.Input<boolean>;
}

export interface ReplicationConfigReplication {
    enabled?: pulumi.Input<boolean>;
    password?: pulumi.Input<string>;
    pathPrefix?: pulumi.Input<string>;
    proxy?: pulumi.Input<string>;
    socketTimeoutMillis?: pulumi.Input<number>;
    syncDeletes?: pulumi.Input<boolean>;
    syncProperties?: pulumi.Input<boolean>;
    syncStatistics?: pulumi.Input<boolean>;
    url?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

