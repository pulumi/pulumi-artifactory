// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the artifactory package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'artifactory';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * This is a access token that can be given to you by your admin under `User Management > Access Tokens`. If not set, the
     * 'api_key' attribute value will be used.
     */
    public readonly accessToken!: pulumi.Output<string | undefined>;
    /**
     * API key. If `accessToken` attribute, `JFROG_ACCESS_TOKEN` or `ARTIFACTORY_ACCESS_TOKEN` environment variable is set, the
     * provider will ignore this attribute.
     *
     * @deprecated An upcoming version will support the option to block the usage/creation of API Keys (for admins to set on their platform).
In a future version (scheduled for end of Q3, 2023), the option to disable the usage/creation of API Keys will be available and set to disabled by default. Admins will be able to enable the usage/creation of API Keys.
By end of Q4 2024, API Keys will be deprecated all together and the option to use them will no longer be available. See [JFrog API deprecation process](https://jfrog.com/help/r/jfrog-platform-administration-documentation/jfrog-api-key-deprecation-process) for more details.
     */
    public readonly apiKey!: pulumi.Output<string | undefined>;
    /**
     * OIDC provider name. See [Configure an OIDC
     * Integration](https://jfrog.com/help/r/jfrog-platform-administration-documentation/configure-an-oidc-integration) for
     * more details.
     */
    public readonly oidcProviderName!: pulumi.Output<string | undefined>;
    /**
     * Artifactory URL.
     */
    public readonly url!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["accessToken"] = args?.accessToken ? pulumi.secret(args.accessToken) : undefined;
            resourceInputs["apiKey"] = args?.apiKey ? pulumi.secret(args.apiKey) : undefined;
            resourceInputs["checkLicense"] = pulumi.output((args ? args.checkLicense : undefined) ?? false).apply(JSON.stringify);
            resourceInputs["oidcProviderName"] = args ? args.oidcProviderName : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accessToken", "apiKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Provider.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * This is a access token that can be given to you by your admin under `User Management > Access Tokens`. If not set, the
     * 'api_key' attribute value will be used.
     */
    accessToken?: pulumi.Input<string>;
    /**
     * API key. If `accessToken` attribute, `JFROG_ACCESS_TOKEN` or `ARTIFACTORY_ACCESS_TOKEN` environment variable is set, the
     * provider will ignore this attribute.
     *
     * @deprecated An upcoming version will support the option to block the usage/creation of API Keys (for admins to set on their platform).
In a future version (scheduled for end of Q3, 2023), the option to disable the usage/creation of API Keys will be available and set to disabled by default. Admins will be able to enable the usage/creation of API Keys.
By end of Q4 2024, API Keys will be deprecated all together and the option to use them will no longer be available. See [JFrog API deprecation process](https://jfrog.com/help/r/jfrog-platform-administration-documentation/jfrog-api-key-deprecation-process) for more details.
     */
    apiKey?: pulumi.Input<string>;
    /**
     * Toggle for pre-flight checking of Artifactory Pro and Enterprise license. Default to `true`.
     *
     * @deprecated Remove this attribute from your provider configuration as it is no longer used and the attribute will be removed in the next major version of the provider.
     */
    checkLicense?: pulumi.Input<boolean>;
    /**
     * OIDC provider name. See [Configure an OIDC
     * Integration](https://jfrog.com/help/r/jfrog-platform-administration-documentation/configure-an-oidc-integration) for
     * more details.
     */
    oidcProviderName?: pulumi.Input<string>;
    /**
     * Artifactory URL.
     */
    url?: pulumi.Input<string>;
}
