// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the artifactory package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'artifactory';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Provider.__pulumiType;
    }

    /**
     * This is a access token that can be given to you by your admin under `Identity and Access`. If not set, the 'api_key'
     * attribute value will be used.
     */
    public readonly accessToken!: pulumi.Output<string | undefined>;
    /**
     * API token. Projects functionality will not work with any auth method other than access tokens
     *
     * @deprecated An upcoming version will support the option to block the usage/creation of API Keys (for admins to set on their platform).
In September 2022, the option to block the usage/creation of API Keys will be enabled by default, with the option for admins to change it back to enable API Keys.
In January 2023, API Keys will be deprecated all together and the option to use them will no longer be available.
     */
    public readonly apiKey!: pulumi.Output<string | undefined>;
    public readonly url!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["accessToken"] = args ? args.accessToken : undefined;
            resourceInputs["apiKey"] = args ? args.apiKey : undefined;
            resourceInputs["checkLicense"] = pulumi.output((args ? args.checkLicense : undefined) ?? false).apply(JSON.stringify);
            resourceInputs["url"] = args ? args.url : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Provider.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * This is a access token that can be given to you by your admin under `Identity and Access`. If not set, the 'api_key'
     * attribute value will be used.
     */
    accessToken?: pulumi.Input<string>;
    /**
     * API token. Projects functionality will not work with any auth method other than access tokens
     *
     * @deprecated An upcoming version will support the option to block the usage/creation of API Keys (for admins to set on their platform).
In September 2022, the option to block the usage/creation of API Keys will be enabled by default, with the option for admins to change it back to enable API Keys.
In January 2023, API Keys will be deprecated all together and the option to use them will no longer be available.
     */
    apiKey?: pulumi.Input<string>;
    /**
     * Toggle for pre-flight checking of Artifactory Pro and Enterprise license. Default to `true`.
     */
    checkLicense?: pulumi.Input<boolean>;
    url?: pulumi.Input<string>;
}
