// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFileinfo(args: GetFileinfoArgs, opts?: pulumi.InvokeOptions): Promise<GetFileinfoResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("artifactory:index/getFileinfo:getFileinfo", {
        "path": args.path,
        "repository": args.repository,
    }, opts);
}

/**
 * A collection of arguments for invoking getFileinfo.
 */
export interface GetFileinfoArgs {
    path: string;
    repository: string;
}

/**
 * A collection of values returned by getFileinfo.
 */
export interface GetFileinfoResult {
    readonly created: string;
    readonly createdBy: string;
    readonly downloadUri: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly lastModified: string;
    readonly lastUpdated: string;
    readonly md5: string;
    readonly mimetype: string;
    readonly modifiedBy: string;
    readonly path: string;
    readonly repository: string;
    readonly sha1: string;
    readonly sha256: string;
    readonly size: number;
}

export function getFileinfoOutput(args: GetFileinfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFileinfoResult> {
    return pulumi.output(args).apply(a => getFileinfo(a, opts))
}

/**
 * A collection of arguments for invoking getFileinfo.
 */
export interface GetFileinfoOutputArgs {
    path: pulumi.Input<string>;
    repository: pulumi.Input<string>;
}
