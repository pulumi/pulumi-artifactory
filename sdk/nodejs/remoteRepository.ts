// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * Remote repositories can be imported using their name, e.g.
 *
 * ```sh
 *  $ pulumi import artifactory:index/remoteRepository:RemoteRepository my-remote my-remote
 * ```
 */
export class RemoteRepository extends pulumi.CustomResource {
    /**
     * Get an existing RemoteRepository resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RemoteRepositoryState, opts?: pulumi.CustomResourceOptions): RemoteRepository {
        return new RemoteRepository(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'artifactory:index/remoteRepository:RemoteRepository';

    /**
     * Returns true if the given object is an instance of RemoteRepository.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RemoteRepository {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RemoteRepository.__pulumiType;
    }

    public readonly allowAnyHostAuth!: pulumi.Output<boolean>;
    public readonly blackedOut!: pulumi.Output<boolean>;
    public readonly blockMismatchingMimeTypes!: pulumi.Output<boolean>;
    public readonly bowerRegistryUrl!: pulumi.Output<string>;
    public readonly bypassHeadRequests!: pulumi.Output<boolean>;
    public readonly clientTlsCertificate!: pulumi.Output<string>;
    public readonly contentSynchronisation!: pulumi.Output<outputs.RemoteRepositoryContentSynchronisation>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly downloadContextPath!: pulumi.Output<string | undefined>;
    public readonly enableCookieManagement!: pulumi.Output<boolean>;
    public readonly enableTokenAuthentication!: pulumi.Output<boolean>;
    public readonly excludesPattern!: pulumi.Output<string>;
    public readonly feedContextPath!: pulumi.Output<string | undefined>;
    public readonly fetchJarsEagerly!: pulumi.Output<boolean>;
    public readonly fetchSourcesEagerly!: pulumi.Output<boolean>;
    public readonly forceNugetAuthentication!: pulumi.Output<boolean>;
    public readonly handleReleases!: pulumi.Output<boolean>;
    public readonly handleSnapshots!: pulumi.Output<boolean>;
    public readonly hardFail!: pulumi.Output<boolean>;
    public readonly includesPattern!: pulumi.Output<string>;
    public readonly key!: pulumi.Output<string>;
    public readonly localAddress!: pulumi.Output<string | undefined>;
    public readonly maxUniqueSnapshots!: pulumi.Output<number>;
    public readonly missedCachePeriodSeconds!: pulumi.Output<number>;
    public readonly notes!: pulumi.Output<string | undefined>;
    public readonly offline!: pulumi.Output<boolean>;
    public readonly packageType!: pulumi.Output<string | undefined>;
    /**
     * Requires password encryption to be turned off `POST /api/system/decrypt`
     */
    public readonly password!: pulumi.Output<string | undefined>;
    public readonly propagateQueryParams!: pulumi.Output<boolean>;
    public readonly propertySets!: pulumi.Output<string[] | undefined>;
    public readonly proxy!: pulumi.Output<string>;
    public readonly pypiRegistryUrl!: pulumi.Output<string>;
    public readonly remoteRepoChecksumPolicyType!: pulumi.Output<string>;
    public readonly repoLayoutRef!: pulumi.Output<string>;
    /**
     * The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.
     */
    public readonly retrievalCachePeriodSeconds!: pulumi.Output<number>;
    public readonly shareConfiguration!: pulumi.Output<boolean>;
    public readonly socketTimeoutMillis!: pulumi.Output<number>;
    public readonly storeArtifactsLocally!: pulumi.Output<boolean>;
    public readonly suppressPomConsistencyChecks!: pulumi.Output<boolean>;
    public readonly synchronizeProperties!: pulumi.Output<boolean>;
    public readonly unusedArtifactsCleanupPeriodHours!: pulumi.Output<number>;
    public readonly url!: pulumi.Output<string>;
    public readonly username!: pulumi.Output<string | undefined>;
    public readonly v3FeedUrl!: pulumi.Output<string | undefined>;
    public readonly vcsGitDownloadUrl!: pulumi.Output<string>;
    public readonly vcsGitProvider!: pulumi.Output<string>;
    public readonly vcsType!: pulumi.Output<string>;
    public readonly xrayIndex!: pulumi.Output<boolean>;

    /**
     * Create a RemoteRepository resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RemoteRepositoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RemoteRepositoryArgs | RemoteRepositoryState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RemoteRepositoryState | undefined;
            inputs["allowAnyHostAuth"] = state ? state.allowAnyHostAuth : undefined;
            inputs["blackedOut"] = state ? state.blackedOut : undefined;
            inputs["blockMismatchingMimeTypes"] = state ? state.blockMismatchingMimeTypes : undefined;
            inputs["bowerRegistryUrl"] = state ? state.bowerRegistryUrl : undefined;
            inputs["bypassHeadRequests"] = state ? state.bypassHeadRequests : undefined;
            inputs["clientTlsCertificate"] = state ? state.clientTlsCertificate : undefined;
            inputs["contentSynchronisation"] = state ? state.contentSynchronisation : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["downloadContextPath"] = state ? state.downloadContextPath : undefined;
            inputs["enableCookieManagement"] = state ? state.enableCookieManagement : undefined;
            inputs["enableTokenAuthentication"] = state ? state.enableTokenAuthentication : undefined;
            inputs["excludesPattern"] = state ? state.excludesPattern : undefined;
            inputs["feedContextPath"] = state ? state.feedContextPath : undefined;
            inputs["fetchJarsEagerly"] = state ? state.fetchJarsEagerly : undefined;
            inputs["fetchSourcesEagerly"] = state ? state.fetchSourcesEagerly : undefined;
            inputs["forceNugetAuthentication"] = state ? state.forceNugetAuthentication : undefined;
            inputs["handleReleases"] = state ? state.handleReleases : undefined;
            inputs["handleSnapshots"] = state ? state.handleSnapshots : undefined;
            inputs["hardFail"] = state ? state.hardFail : undefined;
            inputs["includesPattern"] = state ? state.includesPattern : undefined;
            inputs["key"] = state ? state.key : undefined;
            inputs["localAddress"] = state ? state.localAddress : undefined;
            inputs["maxUniqueSnapshots"] = state ? state.maxUniqueSnapshots : undefined;
            inputs["missedCachePeriodSeconds"] = state ? state.missedCachePeriodSeconds : undefined;
            inputs["notes"] = state ? state.notes : undefined;
            inputs["offline"] = state ? state.offline : undefined;
            inputs["packageType"] = state ? state.packageType : undefined;
            inputs["password"] = state ? state.password : undefined;
            inputs["propagateQueryParams"] = state ? state.propagateQueryParams : undefined;
            inputs["propertySets"] = state ? state.propertySets : undefined;
            inputs["proxy"] = state ? state.proxy : undefined;
            inputs["pypiRegistryUrl"] = state ? state.pypiRegistryUrl : undefined;
            inputs["remoteRepoChecksumPolicyType"] = state ? state.remoteRepoChecksumPolicyType : undefined;
            inputs["repoLayoutRef"] = state ? state.repoLayoutRef : undefined;
            inputs["retrievalCachePeriodSeconds"] = state ? state.retrievalCachePeriodSeconds : undefined;
            inputs["shareConfiguration"] = state ? state.shareConfiguration : undefined;
            inputs["socketTimeoutMillis"] = state ? state.socketTimeoutMillis : undefined;
            inputs["storeArtifactsLocally"] = state ? state.storeArtifactsLocally : undefined;
            inputs["suppressPomConsistencyChecks"] = state ? state.suppressPomConsistencyChecks : undefined;
            inputs["synchronizeProperties"] = state ? state.synchronizeProperties : undefined;
            inputs["unusedArtifactsCleanupPeriodHours"] = state ? state.unusedArtifactsCleanupPeriodHours : undefined;
            inputs["url"] = state ? state.url : undefined;
            inputs["username"] = state ? state.username : undefined;
            inputs["v3FeedUrl"] = state ? state.v3FeedUrl : undefined;
            inputs["vcsGitDownloadUrl"] = state ? state.vcsGitDownloadUrl : undefined;
            inputs["vcsGitProvider"] = state ? state.vcsGitProvider : undefined;
            inputs["vcsType"] = state ? state.vcsType : undefined;
            inputs["xrayIndex"] = state ? state.xrayIndex : undefined;
        } else {
            const args = argsOrState as RemoteRepositoryArgs | undefined;
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.url === undefined) && !opts.urn) {
                throw new Error("Missing required property 'url'");
            }
            inputs["allowAnyHostAuth"] = args ? args.allowAnyHostAuth : undefined;
            inputs["blackedOut"] = args ? args.blackedOut : undefined;
            inputs["blockMismatchingMimeTypes"] = args ? args.blockMismatchingMimeTypes : undefined;
            inputs["bowerRegistryUrl"] = args ? args.bowerRegistryUrl : undefined;
            inputs["bypassHeadRequests"] = args ? args.bypassHeadRequests : undefined;
            inputs["clientTlsCertificate"] = args ? args.clientTlsCertificate : undefined;
            inputs["contentSynchronisation"] = args ? args.contentSynchronisation : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["downloadContextPath"] = args ? args.downloadContextPath : undefined;
            inputs["enableCookieManagement"] = args ? args.enableCookieManagement : undefined;
            inputs["enableTokenAuthentication"] = args ? args.enableTokenAuthentication : undefined;
            inputs["excludesPattern"] = args ? args.excludesPattern : undefined;
            inputs["feedContextPath"] = args ? args.feedContextPath : undefined;
            inputs["fetchJarsEagerly"] = args ? args.fetchJarsEagerly : undefined;
            inputs["fetchSourcesEagerly"] = args ? args.fetchSourcesEagerly : undefined;
            inputs["forceNugetAuthentication"] = args ? args.forceNugetAuthentication : undefined;
            inputs["handleReleases"] = args ? args.handleReleases : undefined;
            inputs["handleSnapshots"] = args ? args.handleSnapshots : undefined;
            inputs["hardFail"] = args ? args.hardFail : undefined;
            inputs["includesPattern"] = args ? args.includesPattern : undefined;
            inputs["key"] = args ? args.key : undefined;
            inputs["localAddress"] = args ? args.localAddress : undefined;
            inputs["maxUniqueSnapshots"] = args ? args.maxUniqueSnapshots : undefined;
            inputs["missedCachePeriodSeconds"] = args ? args.missedCachePeriodSeconds : undefined;
            inputs["notes"] = args ? args.notes : undefined;
            inputs["offline"] = args ? args.offline : undefined;
            inputs["packageType"] = args ? args.packageType : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["propagateQueryParams"] = args ? args.propagateQueryParams : undefined;
            inputs["propertySets"] = args ? args.propertySets : undefined;
            inputs["proxy"] = args ? args.proxy : undefined;
            inputs["pypiRegistryUrl"] = args ? args.pypiRegistryUrl : undefined;
            inputs["remoteRepoChecksumPolicyType"] = args ? args.remoteRepoChecksumPolicyType : undefined;
            inputs["repoLayoutRef"] = args ? args.repoLayoutRef : undefined;
            inputs["retrievalCachePeriodSeconds"] = args ? args.retrievalCachePeriodSeconds : undefined;
            inputs["shareConfiguration"] = args ? args.shareConfiguration : undefined;
            inputs["socketTimeoutMillis"] = args ? args.socketTimeoutMillis : undefined;
            inputs["storeArtifactsLocally"] = args ? args.storeArtifactsLocally : undefined;
            inputs["suppressPomConsistencyChecks"] = args ? args.suppressPomConsistencyChecks : undefined;
            inputs["synchronizeProperties"] = args ? args.synchronizeProperties : undefined;
            inputs["unusedArtifactsCleanupPeriodHours"] = args ? args.unusedArtifactsCleanupPeriodHours : undefined;
            inputs["url"] = args ? args.url : undefined;
            inputs["username"] = args ? args.username : undefined;
            inputs["v3FeedUrl"] = args ? args.v3FeedUrl : undefined;
            inputs["vcsGitDownloadUrl"] = args ? args.vcsGitDownloadUrl : undefined;
            inputs["vcsGitProvider"] = args ? args.vcsGitProvider : undefined;
            inputs["vcsType"] = args ? args.vcsType : undefined;
            inputs["xrayIndex"] = args ? args.xrayIndex : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(RemoteRepository.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RemoteRepository resources.
 */
export interface RemoteRepositoryState {
    allowAnyHostAuth?: pulumi.Input<boolean>;
    blackedOut?: pulumi.Input<boolean>;
    blockMismatchingMimeTypes?: pulumi.Input<boolean>;
    bowerRegistryUrl?: pulumi.Input<string>;
    bypassHeadRequests?: pulumi.Input<boolean>;
    clientTlsCertificate?: pulumi.Input<string>;
    contentSynchronisation?: pulumi.Input<inputs.RemoteRepositoryContentSynchronisation>;
    description?: pulumi.Input<string>;
    downloadContextPath?: pulumi.Input<string>;
    enableCookieManagement?: pulumi.Input<boolean>;
    enableTokenAuthentication?: pulumi.Input<boolean>;
    excludesPattern?: pulumi.Input<string>;
    feedContextPath?: pulumi.Input<string>;
    fetchJarsEagerly?: pulumi.Input<boolean>;
    fetchSourcesEagerly?: pulumi.Input<boolean>;
    forceNugetAuthentication?: pulumi.Input<boolean>;
    handleReleases?: pulumi.Input<boolean>;
    handleSnapshots?: pulumi.Input<boolean>;
    hardFail?: pulumi.Input<boolean>;
    includesPattern?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    localAddress?: pulumi.Input<string>;
    maxUniqueSnapshots?: pulumi.Input<number>;
    missedCachePeriodSeconds?: pulumi.Input<number>;
    notes?: pulumi.Input<string>;
    offline?: pulumi.Input<boolean>;
    packageType?: pulumi.Input<string>;
    /**
     * Requires password encryption to be turned off `POST /api/system/decrypt`
     */
    password?: pulumi.Input<string>;
    propagateQueryParams?: pulumi.Input<boolean>;
    propertySets?: pulumi.Input<pulumi.Input<string>[]>;
    proxy?: pulumi.Input<string>;
    pypiRegistryUrl?: pulumi.Input<string>;
    remoteRepoChecksumPolicyType?: pulumi.Input<string>;
    repoLayoutRef?: pulumi.Input<string>;
    /**
     * The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.
     */
    retrievalCachePeriodSeconds?: pulumi.Input<number>;
    shareConfiguration?: pulumi.Input<boolean>;
    socketTimeoutMillis?: pulumi.Input<number>;
    storeArtifactsLocally?: pulumi.Input<boolean>;
    suppressPomConsistencyChecks?: pulumi.Input<boolean>;
    synchronizeProperties?: pulumi.Input<boolean>;
    unusedArtifactsCleanupPeriodHours?: pulumi.Input<number>;
    url?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    v3FeedUrl?: pulumi.Input<string>;
    vcsGitDownloadUrl?: pulumi.Input<string>;
    vcsGitProvider?: pulumi.Input<string>;
    vcsType?: pulumi.Input<string>;
    xrayIndex?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a RemoteRepository resource.
 */
export interface RemoteRepositoryArgs {
    allowAnyHostAuth?: pulumi.Input<boolean>;
    blackedOut?: pulumi.Input<boolean>;
    blockMismatchingMimeTypes?: pulumi.Input<boolean>;
    bowerRegistryUrl?: pulumi.Input<string>;
    bypassHeadRequests?: pulumi.Input<boolean>;
    clientTlsCertificate?: pulumi.Input<string>;
    contentSynchronisation?: pulumi.Input<inputs.RemoteRepositoryContentSynchronisation>;
    description?: pulumi.Input<string>;
    downloadContextPath?: pulumi.Input<string>;
    enableCookieManagement?: pulumi.Input<boolean>;
    enableTokenAuthentication?: pulumi.Input<boolean>;
    excludesPattern?: pulumi.Input<string>;
    feedContextPath?: pulumi.Input<string>;
    fetchJarsEagerly?: pulumi.Input<boolean>;
    fetchSourcesEagerly?: pulumi.Input<boolean>;
    forceNugetAuthentication?: pulumi.Input<boolean>;
    handleReleases?: pulumi.Input<boolean>;
    handleSnapshots?: pulumi.Input<boolean>;
    hardFail?: pulumi.Input<boolean>;
    includesPattern?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    localAddress?: pulumi.Input<string>;
    maxUniqueSnapshots?: pulumi.Input<number>;
    missedCachePeriodSeconds?: pulumi.Input<number>;
    notes?: pulumi.Input<string>;
    offline?: pulumi.Input<boolean>;
    packageType?: pulumi.Input<string>;
    /**
     * Requires password encryption to be turned off `POST /api/system/decrypt`
     */
    password?: pulumi.Input<string>;
    propagateQueryParams?: pulumi.Input<boolean>;
    propertySets?: pulumi.Input<pulumi.Input<string>[]>;
    proxy?: pulumi.Input<string>;
    pypiRegistryUrl?: pulumi.Input<string>;
    remoteRepoChecksumPolicyType?: pulumi.Input<string>;
    repoLayoutRef?: pulumi.Input<string>;
    /**
     * The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.
     */
    retrievalCachePeriodSeconds?: pulumi.Input<number>;
    shareConfiguration?: pulumi.Input<boolean>;
    socketTimeoutMillis?: pulumi.Input<number>;
    storeArtifactsLocally?: pulumi.Input<boolean>;
    suppressPomConsistencyChecks?: pulumi.Input<boolean>;
    synchronizeProperties?: pulumi.Input<boolean>;
    unusedArtifactsCleanupPeriodHours?: pulumi.Input<number>;
    url: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    v3FeedUrl?: pulumi.Input<string>;
    vcsGitDownloadUrl?: pulumi.Input<string>;
    vcsGitProvider?: pulumi.Input<string>;
    vcsType?: pulumi.Input<string>;
    xrayIndex?: pulumi.Input<boolean>;
}
