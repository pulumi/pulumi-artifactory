// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Artifactory Virtual Maven Repository Resource
 *
 * Provides an Artifactory virtual repository resource, but with specific maven feature. This should be preferred over the original
 * one-size-fits-all `artifactory.VirtualRepository`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as artifactory from "@pulumi/artifactory";
 *
 * const bar = new artifactory.LocalRepository("bar", {
 *     key: "bar",
 *     packageType: "maven",
 *     repoLayoutRef: "maven-2-default",
 * });
 * const baz = new artifactory.RemoteRepository("baz", {
 *     key: "baz",
 *     packageType: "maven",
 *     repoLayoutRef: "maven-2-default",
 *     url: "https://search.maven.com/",
 * });
 * const foo = new artifactory.MavenRepository("foo", {
 *     description: "A test virtual repo",
 *     excludesPattern: "com/google/**",
 *     forceMavenAuthentication: true,
 *     includesPattern: "com/jfrog/**,cloud/jfrog/**",
 *     key: "maven-virt-repo",
 *     notes: "Internal description",
 *     pomRepositoryReferencesCleanupPolicy: "discard_active_reference",
 *     repoLayoutRef: "maven-2-default",
 *     repositories: [
 *         bar.key,
 *         artifactory_local_repository_baz.key,
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Virtual repositories can be imported using their name, e.g.
 *
 * ```sh
 *  $ pulumi import artifactory:index/mavenRepository:MavenRepository foo foo
 * ```
 */
export class MavenRepository extends pulumi.CustomResource {
    /**
     * Get an existing MavenRepository resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MavenRepositoryState, opts?: pulumi.CustomResourceOptions): MavenRepository {
        return new MavenRepository(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'artifactory:index/mavenRepository:MavenRepository';

    /**
     * Returns true if the given object is an instance of MavenRepository.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MavenRepository {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MavenRepository.__pulumiType;
    }

    public readonly artifactoryRequestsCanRetrieveRemoteArtifacts!: pulumi.Output<boolean | undefined>;
    public readonly defaultDeploymentRepo!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**&#47;z/*.By default no
     * artifacts are excluded.
     */
    public readonly excludesPattern!: pulumi.Output<string | undefined>;
    /**
     * - forces authentication when fetching from remote repos
     */
    public readonly forceMavenAuthentication!: pulumi.Output<boolean>;
    /**
     * List of artifact patterns to include when evaluating artifact requests in the form of x/y/**&#47;z/*. When used, only
     * artifacts matching one of the include patterns are served. By default, all artifacts are included (**&#47;*).
     */
    public readonly includesPattern!: pulumi.Output<string | undefined>;
    public readonly key!: pulumi.Output<string>;
    /**
     * - Key pair to use for... well, I'm not sure. Maybe ssh auth to remote repo?
     */
    public readonly keyPair!: pulumi.Output<string | undefined>;
    public readonly notes!: pulumi.Output<string | undefined>;
    public /*out*/ readonly packageType!: pulumi.Output<string>;
    /**
     * . One of: `"discardActiveReference", "discardAnyReference", "nothing"`
     */
    public readonly pomRepositoryReferencesCleanupPolicy!: pulumi.Output<string>;
    public readonly repoLayoutRef!: pulumi.Output<string>;
    public readonly repositories!: pulumi.Output<string[]>;

    /**
     * Create a MavenRepository resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MavenRepositoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MavenRepositoryArgs | MavenRepositoryState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MavenRepositoryState | undefined;
            inputs["artifactoryRequestsCanRetrieveRemoteArtifacts"] = state ? state.artifactoryRequestsCanRetrieveRemoteArtifacts : undefined;
            inputs["defaultDeploymentRepo"] = state ? state.defaultDeploymentRepo : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["excludesPattern"] = state ? state.excludesPattern : undefined;
            inputs["forceMavenAuthentication"] = state ? state.forceMavenAuthentication : undefined;
            inputs["includesPattern"] = state ? state.includesPattern : undefined;
            inputs["key"] = state ? state.key : undefined;
            inputs["keyPair"] = state ? state.keyPair : undefined;
            inputs["notes"] = state ? state.notes : undefined;
            inputs["packageType"] = state ? state.packageType : undefined;
            inputs["pomRepositoryReferencesCleanupPolicy"] = state ? state.pomRepositoryReferencesCleanupPolicy : undefined;
            inputs["repoLayoutRef"] = state ? state.repoLayoutRef : undefined;
            inputs["repositories"] = state ? state.repositories : undefined;
        } else {
            const args = argsOrState as MavenRepositoryArgs | undefined;
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.repositories === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repositories'");
            }
            inputs["artifactoryRequestsCanRetrieveRemoteArtifacts"] = args ? args.artifactoryRequestsCanRetrieveRemoteArtifacts : undefined;
            inputs["defaultDeploymentRepo"] = args ? args.defaultDeploymentRepo : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["excludesPattern"] = args ? args.excludesPattern : undefined;
            inputs["forceMavenAuthentication"] = args ? args.forceMavenAuthentication : undefined;
            inputs["includesPattern"] = args ? args.includesPattern : undefined;
            inputs["key"] = args ? args.key : undefined;
            inputs["keyPair"] = args ? args.keyPair : undefined;
            inputs["notes"] = args ? args.notes : undefined;
            inputs["pomRepositoryReferencesCleanupPolicy"] = args ? args.pomRepositoryReferencesCleanupPolicy : undefined;
            inputs["repoLayoutRef"] = args ? args.repoLayoutRef : undefined;
            inputs["repositories"] = args ? args.repositories : undefined;
            inputs["packageType"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(MavenRepository.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MavenRepository resources.
 */
export interface MavenRepositoryState {
    artifactoryRequestsCanRetrieveRemoteArtifacts?: pulumi.Input<boolean>;
    defaultDeploymentRepo?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**&#47;z/*.By default no
     * artifacts are excluded.
     */
    excludesPattern?: pulumi.Input<string>;
    /**
     * - forces authentication when fetching from remote repos
     */
    forceMavenAuthentication?: pulumi.Input<boolean>;
    /**
     * List of artifact patterns to include when evaluating artifact requests in the form of x/y/**&#47;z/*. When used, only
     * artifacts matching one of the include patterns are served. By default, all artifacts are included (**&#47;*).
     */
    includesPattern?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    /**
     * - Key pair to use for... well, I'm not sure. Maybe ssh auth to remote repo?
     */
    keyPair?: pulumi.Input<string>;
    notes?: pulumi.Input<string>;
    packageType?: pulumi.Input<string>;
    /**
     * . One of: `"discardActiveReference", "discardAnyReference", "nothing"`
     */
    pomRepositoryReferencesCleanupPolicy?: pulumi.Input<string>;
    repoLayoutRef?: pulumi.Input<string>;
    repositories?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a MavenRepository resource.
 */
export interface MavenRepositoryArgs {
    artifactoryRequestsCanRetrieveRemoteArtifacts?: pulumi.Input<boolean>;
    defaultDeploymentRepo?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**&#47;z/*.By default no
     * artifacts are excluded.
     */
    excludesPattern?: pulumi.Input<string>;
    /**
     * - forces authentication when fetching from remote repos
     */
    forceMavenAuthentication?: pulumi.Input<boolean>;
    /**
     * List of artifact patterns to include when evaluating artifact requests in the form of x/y/**&#47;z/*. When used, only
     * artifacts matching one of the include patterns are served. By default, all artifacts are included (**&#47;*).
     */
    includesPattern?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    /**
     * - Key pair to use for... well, I'm not sure. Maybe ssh auth to remote repo?
     */
    keyPair?: pulumi.Input<string>;
    notes?: pulumi.Input<string>;
    /**
     * . One of: `"discardActiveReference", "discardAnyReference", "nothing"`
     */
    pomRepositoryReferencesCleanupPolicy?: pulumi.Input<string>;
    repoLayoutRef?: pulumi.Input<string>;
    repositories: pulumi.Input<pulumi.Input<string>[]>;
}
