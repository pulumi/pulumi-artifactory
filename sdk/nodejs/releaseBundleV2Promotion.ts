// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource enables you to promote Release Bundle V2 version. For more information, see [JFrog documentation](https://jfrog.com/help/r/jfrog-artifactory-documentation/promote-a-release-bundle-v2-to-a-target-environment).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as artifactory from "@pulumi/artifactory";
 *
 * const my_release_bundle_v2_promotion = new artifactory.ReleaseBundleV2Promotion("my-release-bundle-v2-promotion", {
 *     name: "my-release-bundle-v2-artifacts",
 *     version: "1.0.0",
 *     keypairName: "my-keypair-name",
 *     environment: "DEV",
 *     includedRepositoryKeys: ["commons-qa-maven-local"],
 * });
 * ```
 */
export class ReleaseBundleV2Promotion extends pulumi.CustomResource {
    /**
     * Get an existing ReleaseBundleV2Promotion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReleaseBundleV2PromotionState, opts?: pulumi.CustomResourceOptions): ReleaseBundleV2Promotion {
        return new ReleaseBundleV2Promotion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'artifactory:index/releaseBundleV2Promotion:ReleaseBundleV2Promotion';

    /**
     * Returns true if the given object is an instance of ReleaseBundleV2Promotion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReleaseBundleV2Promotion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReleaseBundleV2Promotion.__pulumiType;
    }

    /**
     * Timestamp when the new version was created (ISO 8601 standard).
     */
    declare public /*out*/ readonly created: pulumi.Output<string>;
    /**
     * Timestamp when the new version was created (in milliseconds).
     */
    declare public /*out*/ readonly createdMillis: pulumi.Output<number>;
    /**
     * Target environment
     */
    declare public readonly environment: pulumi.Output<string>;
    /**
     * Defines specific repositories to exclude from the promotion.
     */
    declare public readonly excludedRepositoryKeys: pulumi.Output<string[] | undefined>;
    /**
     * Defines specific repositories to include in the promotion. If this property is left undefined, all repositories (except those specifically excluded) are included in the promotion. Important: If one or more repositories are specifically included, all other repositories are excluded (regardless of what is defined in `excludedRepositoryKeys`).
     */
    declare public readonly includedRepositoryKeys: pulumi.Output<string[] | undefined>;
    /**
     * Key-pair name to use for signature creation
     */
    declare public readonly keypairName: pulumi.Output<string>;
    /**
     * Name of Release Bundle
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Project key the Release Bundle belongs to
     */
    declare public readonly projectKey: pulumi.Output<string | undefined>;
    /**
     * Version to promote
     */
    declare public readonly version: pulumi.Output<string>;

    /**
     * Create a ReleaseBundleV2Promotion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReleaseBundleV2PromotionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReleaseBundleV2PromotionArgs | ReleaseBundleV2PromotionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ReleaseBundleV2PromotionState | undefined;
            resourceInputs["created"] = state?.created;
            resourceInputs["createdMillis"] = state?.createdMillis;
            resourceInputs["environment"] = state?.environment;
            resourceInputs["excludedRepositoryKeys"] = state?.excludedRepositoryKeys;
            resourceInputs["includedRepositoryKeys"] = state?.includedRepositoryKeys;
            resourceInputs["keypairName"] = state?.keypairName;
            resourceInputs["name"] = state?.name;
            resourceInputs["projectKey"] = state?.projectKey;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as ReleaseBundleV2PromotionArgs | undefined;
            if (args?.environment === undefined && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if (args?.keypairName === undefined && !opts.urn) {
                throw new Error("Missing required property 'keypairName'");
            }
            if (args?.version === undefined && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["environment"] = args?.environment;
            resourceInputs["excludedRepositoryKeys"] = args?.excludedRepositoryKeys;
            resourceInputs["includedRepositoryKeys"] = args?.includedRepositoryKeys;
            resourceInputs["keypairName"] = args?.keypairName;
            resourceInputs["name"] = args?.name;
            resourceInputs["projectKey"] = args?.projectKey;
            resourceInputs["version"] = args?.version;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["createdMillis"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ReleaseBundleV2Promotion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ReleaseBundleV2Promotion resources.
 */
export interface ReleaseBundleV2PromotionState {
    /**
     * Timestamp when the new version was created (ISO 8601 standard).
     */
    created?: pulumi.Input<string>;
    /**
     * Timestamp when the new version was created (in milliseconds).
     */
    createdMillis?: pulumi.Input<number>;
    /**
     * Target environment
     */
    environment?: pulumi.Input<string>;
    /**
     * Defines specific repositories to exclude from the promotion.
     */
    excludedRepositoryKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defines specific repositories to include in the promotion. If this property is left undefined, all repositories (except those specifically excluded) are included in the promotion. Important: If one or more repositories are specifically included, all other repositories are excluded (regardless of what is defined in `excludedRepositoryKeys`).
     */
    includedRepositoryKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Key-pair name to use for signature creation
     */
    keypairName?: pulumi.Input<string>;
    /**
     * Name of Release Bundle
     */
    name?: pulumi.Input<string>;
    /**
     * Project key the Release Bundle belongs to
     */
    projectKey?: pulumi.Input<string>;
    /**
     * Version to promote
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ReleaseBundleV2Promotion resource.
 */
export interface ReleaseBundleV2PromotionArgs {
    /**
     * Target environment
     */
    environment: pulumi.Input<string>;
    /**
     * Defines specific repositories to exclude from the promotion.
     */
    excludedRepositoryKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defines specific repositories to include in the promotion. If this property is left undefined, all repositories (except those specifically excluded) are included in the promotion. Important: If one or more repositories are specifically included, all other repositories are excluded (regardless of what is defined in `excludedRepositoryKeys`).
     */
    includedRepositoryKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Key-pair name to use for signature creation
     */
    keypairName: pulumi.Input<string>;
    /**
     * Name of Release Bundle
     */
    name?: pulumi.Input<string>;
    /**
     * Project key the Release Bundle belongs to
     */
    projectKey?: pulumi.Input<string>;
    /**
     * Version to promote
     */
    version: pulumi.Input<string>;
}
