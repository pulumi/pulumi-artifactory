// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## # Artifactory Release Bundle Webhook Resource
 *
 * Provides an Artifactory webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.
 *
 * ## Example Usage
 *
 * .
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as artifactory from "@pulumi/artifactory";
 *
 * const release_bundle_webhook = new artifactory.ReleaseBundleWebhook("release-bundle-webhook", {
 *     criteria: {
 *         anyReleaseBundle: false,
 *         excludePatterns: ["bar/**"],
 *         includePatterns: ["foo/**"],
 *         registeredReleaseBundleNames: ["bundle-name"],
 *     },
 *     customHttpHeaders: {
 *         "header-1": "value-1",
 *         "header-2": "value-2",
 *     },
 *     eventTypes: [
 *         "created",
 *         "signed",
 *         "deleted",
 *     ],
 *     key: "release-bundle-webhook",
 *     proxy: "proxy-key",
 *     secret: "some-secret",
 *     url: "http://tempurl.org/webhook",
 * });
 * ```
 */
export class ReleaseBundleWebhook extends pulumi.CustomResource {
    /**
     * Get an existing ReleaseBundleWebhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReleaseBundleWebhookState, opts?: pulumi.CustomResourceOptions): ReleaseBundleWebhook {
        return new ReleaseBundleWebhook(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'artifactory:index/releaseBundleWebhook:ReleaseBundleWebhook';

    /**
     * Returns true if the given object is an instance of ReleaseBundleWebhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReleaseBundleWebhook {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReleaseBundleWebhook.__pulumiType;
    }

    /**
     * Specifies where the webhook will be applied on which repositories.
     */
    public readonly criteria!: pulumi.Output<outputs.ReleaseBundleWebhookCriteria>;
    /**
     * Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.
     */
    public readonly customHttpHeaders!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Webhook description. Max length 1000 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Status of webhook. Default to 'true'
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: "created", "signed", "deleted"
     */
    public readonly eventTypes!: pulumi.Output<string[]>;
    /**
     * The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * Proxy key from Artifactory Proxies setting
     */
    public readonly proxy!: pulumi.Output<string | undefined>;
    /**
     * Secret authentication token that will be sent to the configured URL
     */
    public readonly secret!: pulumi.Output<string | undefined>;
    /**
     * Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.
     */
    public readonly url!: pulumi.Output<string>;

    /**
     * Create a ReleaseBundleWebhook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReleaseBundleWebhookArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReleaseBundleWebhookArgs | ReleaseBundleWebhookState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ReleaseBundleWebhookState | undefined;
            resourceInputs["criteria"] = state ? state.criteria : undefined;
            resourceInputs["customHttpHeaders"] = state ? state.customHttpHeaders : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["eventTypes"] = state ? state.eventTypes : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["proxy"] = state ? state.proxy : undefined;
            resourceInputs["secret"] = state ? state.secret : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as ReleaseBundleWebhookArgs | undefined;
            if ((!args || args.criteria === undefined) && !opts.urn) {
                throw new Error("Missing required property 'criteria'");
            }
            if ((!args || args.eventTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'eventTypes'");
            }
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.url === undefined) && !opts.urn) {
                throw new Error("Missing required property 'url'");
            }
            resourceInputs["criteria"] = args ? args.criteria : undefined;
            resourceInputs["customHttpHeaders"] = args ? args.customHttpHeaders : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["eventTypes"] = args ? args.eventTypes : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["proxy"] = args ? args.proxy : undefined;
            resourceInputs["secret"] = args ? args.secret : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ReleaseBundleWebhook.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ReleaseBundleWebhook resources.
 */
export interface ReleaseBundleWebhookState {
    /**
     * Specifies where the webhook will be applied on which repositories.
     */
    criteria?: pulumi.Input<inputs.ReleaseBundleWebhookCriteria>;
    /**
     * Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.
     */
    customHttpHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Webhook description. Max length 1000 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Status of webhook. Default to 'true'
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: "created", "signed", "deleted"
     */
    eventTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
     */
    key?: pulumi.Input<string>;
    /**
     * Proxy key from Artifactory Proxies setting
     */
    proxy?: pulumi.Input<string>;
    /**
     * Secret authentication token that will be sent to the configured URL
     */
    secret?: pulumi.Input<string>;
    /**
     * Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ReleaseBundleWebhook resource.
 */
export interface ReleaseBundleWebhookArgs {
    /**
     * Specifies where the webhook will be applied on which repositories.
     */
    criteria: pulumi.Input<inputs.ReleaseBundleWebhookCriteria>;
    /**
     * Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.
     */
    customHttpHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Webhook description. Max length 1000 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Status of webhook. Default to 'true'
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: "created", "signed", "deleted"
     */
    eventTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.
     */
    key: pulumi.Input<string>;
    /**
     * Proxy key from Artifactory Proxies setting
     */
    proxy?: pulumi.Input<string>;
    /**
     * Secret authentication token that will be sent to the configured URL
     */
    secret?: pulumi.Input<string>;
    /**
     * Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.
     */
    url: pulumi.Input<string>;
}
