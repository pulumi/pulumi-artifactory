// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * Replication configs can be imported using their repo key, e.g.
 *
 * ```sh
 *  $ pulumi import artifactory:index/singleReplicationConfig:SingleReplicationConfig foo-rep repository-key
 * ```
 */
export class SingleReplicationConfig extends pulumi.CustomResource {
    /**
     * Get an existing SingleReplicationConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SingleReplicationConfigState, opts?: pulumi.CustomResourceOptions): SingleReplicationConfig {
        return new SingleReplicationConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'artifactory:index/singleReplicationConfig:SingleReplicationConfig';

    /**
     * Returns true if the given object is an instance of SingleReplicationConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SingleReplicationConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SingleReplicationConfig.__pulumiType;
    }

    public readonly cronExp!: pulumi.Output<string>;
    public readonly enableEventReplication!: pulumi.Output<boolean>;
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * Requires password encryption to be turned off `POST /api/system/decrypt`
     */
    public readonly password!: pulumi.Output<string | undefined>;
    public readonly pathPrefix!: pulumi.Output<string | undefined>;
    public readonly repoKey!: pulumi.Output<string>;
    public readonly socketTimeoutMillis!: pulumi.Output<number>;
    public readonly syncDeletes!: pulumi.Output<boolean>;
    public readonly syncProperties!: pulumi.Output<boolean>;
    public readonly syncStatistics!: pulumi.Output<boolean>;
    public readonly url!: pulumi.Output<string | undefined>;
    public readonly username!: pulumi.Output<string | undefined>;

    /**
     * Create a SingleReplicationConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SingleReplicationConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SingleReplicationConfigArgs | SingleReplicationConfigState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SingleReplicationConfigState | undefined;
            inputs["cronExp"] = state ? state.cronExp : undefined;
            inputs["enableEventReplication"] = state ? state.enableEventReplication : undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["password"] = state ? state.password : undefined;
            inputs["pathPrefix"] = state ? state.pathPrefix : undefined;
            inputs["repoKey"] = state ? state.repoKey : undefined;
            inputs["socketTimeoutMillis"] = state ? state.socketTimeoutMillis : undefined;
            inputs["syncDeletes"] = state ? state.syncDeletes : undefined;
            inputs["syncProperties"] = state ? state.syncProperties : undefined;
            inputs["syncStatistics"] = state ? state.syncStatistics : undefined;
            inputs["url"] = state ? state.url : undefined;
            inputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as SingleReplicationConfigArgs | undefined;
            if ((!args || args.cronExp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cronExp'");
            }
            if ((!args || args.repoKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repoKey'");
            }
            inputs["cronExp"] = args ? args.cronExp : undefined;
            inputs["enableEventReplication"] = args ? args.enableEventReplication : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["pathPrefix"] = args ? args.pathPrefix : undefined;
            inputs["repoKey"] = args ? args.repoKey : undefined;
            inputs["socketTimeoutMillis"] = args ? args.socketTimeoutMillis : undefined;
            inputs["syncDeletes"] = args ? args.syncDeletes : undefined;
            inputs["syncProperties"] = args ? args.syncProperties : undefined;
            inputs["syncStatistics"] = args ? args.syncStatistics : undefined;
            inputs["url"] = args ? args.url : undefined;
            inputs["username"] = args ? args.username : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SingleReplicationConfig.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SingleReplicationConfig resources.
 */
export interface SingleReplicationConfigState {
    cronExp?: pulumi.Input<string>;
    enableEventReplication?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    /**
     * Requires password encryption to be turned off `POST /api/system/decrypt`
     */
    password?: pulumi.Input<string>;
    pathPrefix?: pulumi.Input<string>;
    repoKey?: pulumi.Input<string>;
    socketTimeoutMillis?: pulumi.Input<number>;
    syncDeletes?: pulumi.Input<boolean>;
    syncProperties?: pulumi.Input<boolean>;
    syncStatistics?: pulumi.Input<boolean>;
    url?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SingleReplicationConfig resource.
 */
export interface SingleReplicationConfigArgs {
    cronExp: pulumi.Input<string>;
    enableEventReplication?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    /**
     * Requires password encryption to be turned off `POST /api/system/decrypt`
     */
    password?: pulumi.Input<string>;
    pathPrefix?: pulumi.Input<string>;
    repoKey: pulumi.Input<string>;
    socketTimeoutMillis?: pulumi.Input<number>;
    syncDeletes?: pulumi.Input<boolean>;
    syncProperties?: pulumi.Input<boolean>;
    syncStatistics?: pulumi.Input<boolean>;
    url?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}
