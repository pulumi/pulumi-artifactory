// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Artifactory SAML SSO Settings Resource
 *
 * This resource can be used to manage Artifactory's SAML SSO settings.
 *
 * Only a single `artifactory.SamlSettings` resource is meant to be defined.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as artifactory from "@pulumi/artifactory";
 *
 * // Configure Artifactory SAML SSO settings
 * const saml = new artifactory.SamlSettings("saml", {
 *     allowUserToAccessProfile: true,
 *     autoRedirect: true,
 *     certificate: "test-certificate",
 *     emailAttribute: "email",
 *     enable: true,
 *     groupAttribute: "groups",
 *     loginUrl: "test-login-url",
 *     logoutUrl: "test-logout-url",
 *     noAutoUserCreation: false,
 *     serviceProviderName: "okta",
 *     syncGroups: true,
 *     verifyAudienceRestriction: true,
 * });
 * ```
 *
 * ## Import
 *
 * Current SAML SSO settings can be imported using `saml_settings` as the `ID`, e.g.
 *
 * ```sh
 *  $ pulumi import artifactory:index/samlSettings:SamlSettings saml saml_settings
 * ```
 */
export class SamlSettings extends pulumi.CustomResource {
    /**
     * Get an existing SamlSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SamlSettingsState, opts?: pulumi.CustomResourceOptions): SamlSettings {
        return new SamlSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'artifactory:index/samlSettings:SamlSettings';

    /**
     * Returns true if the given object is an instance of SamlSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SamlSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SamlSettings.__pulumiType;
    }

    /**
     * Allow persisted users to access their profile.  Default value is `true`.
     */
    public readonly allowUserToAccessProfile!: pulumi.Output<boolean | undefined>;
    /**
     * Auto redirect to login through the IdP when clicking on Artifactory's login link.  Default value is `false`.
     */
    public readonly autoRedirect!: pulumi.Output<boolean | undefined>;
    /**
     * SAML certificate that contains the public key for the IdP service provider.  Used by Artifactory to verify sign-in requests.
     */
    public readonly certificate!: pulumi.Output<string | undefined>;
    /**
     * Name of the attribute in the SAML response from the IdP that contains the user's email.
     */
    public readonly emailAttribute!: pulumi.Output<string | undefined>;
    /**
     * Enable SAML SSO.  Default value is `true`.
     */
    public readonly enable!: pulumi.Output<boolean | undefined>;
    /**
     * Name of the attribute in the SAML response from the IdP that contains the user's group memberships.
     */
    public readonly groupAttribute!: pulumi.Output<string | undefined>;
    /**
     * Service provider login url configured on the IdP.
     */
    public readonly loginUrl!: pulumi.Output<string>;
    /**
     * Service provider logout url, or where to redirect after user logs out.
     */
    public readonly logoutUrl!: pulumi.Output<string>;
    /**
     * Enable the creation of local Artifactory users.  Default value is `false`.
     */
    public readonly noAutoUserCreation!: pulumi.Output<boolean | undefined>;
    /**
     * Name of the service provider configured on the .
     */
    public readonly serviceProviderName!: pulumi.Output<string>;
    /**
     * Associate user with Artifactory groups based on the `groupAttribute` provided in the SAML response from the identity provider.  Default value is `false`.
     */
    public readonly syncGroups!: pulumi.Output<boolean | undefined>;
    /**
     * Enable "audience", or who the SAML assertion is intended for.  Ensures that the correct service provider intended for Artifactory is used on the IdP.  Default value is `true`.
     */
    public readonly verifyAudienceRestriction!: pulumi.Output<boolean | undefined>;

    /**
     * Create a SamlSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SamlSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SamlSettingsArgs | SamlSettingsState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SamlSettingsState | undefined;
            inputs["allowUserToAccessProfile"] = state ? state.allowUserToAccessProfile : undefined;
            inputs["autoRedirect"] = state ? state.autoRedirect : undefined;
            inputs["certificate"] = state ? state.certificate : undefined;
            inputs["emailAttribute"] = state ? state.emailAttribute : undefined;
            inputs["enable"] = state ? state.enable : undefined;
            inputs["groupAttribute"] = state ? state.groupAttribute : undefined;
            inputs["loginUrl"] = state ? state.loginUrl : undefined;
            inputs["logoutUrl"] = state ? state.logoutUrl : undefined;
            inputs["noAutoUserCreation"] = state ? state.noAutoUserCreation : undefined;
            inputs["serviceProviderName"] = state ? state.serviceProviderName : undefined;
            inputs["syncGroups"] = state ? state.syncGroups : undefined;
            inputs["verifyAudienceRestriction"] = state ? state.verifyAudienceRestriction : undefined;
        } else {
            const args = argsOrState as SamlSettingsArgs | undefined;
            if ((!args || args.loginUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loginUrl'");
            }
            if ((!args || args.logoutUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logoutUrl'");
            }
            if ((!args || args.serviceProviderName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceProviderName'");
            }
            inputs["allowUserToAccessProfile"] = args ? args.allowUserToAccessProfile : undefined;
            inputs["autoRedirect"] = args ? args.autoRedirect : undefined;
            inputs["certificate"] = args ? args.certificate : undefined;
            inputs["emailAttribute"] = args ? args.emailAttribute : undefined;
            inputs["enable"] = args ? args.enable : undefined;
            inputs["groupAttribute"] = args ? args.groupAttribute : undefined;
            inputs["loginUrl"] = args ? args.loginUrl : undefined;
            inputs["logoutUrl"] = args ? args.logoutUrl : undefined;
            inputs["noAutoUserCreation"] = args ? args.noAutoUserCreation : undefined;
            inputs["serviceProviderName"] = args ? args.serviceProviderName : undefined;
            inputs["syncGroups"] = args ? args.syncGroups : undefined;
            inputs["verifyAudienceRestriction"] = args ? args.verifyAudienceRestriction : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SamlSettings.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SamlSettings resources.
 */
export interface SamlSettingsState {
    /**
     * Allow persisted users to access their profile.  Default value is `true`.
     */
    allowUserToAccessProfile?: pulumi.Input<boolean>;
    /**
     * Auto redirect to login through the IdP when clicking on Artifactory's login link.  Default value is `false`.
     */
    autoRedirect?: pulumi.Input<boolean>;
    /**
     * SAML certificate that contains the public key for the IdP service provider.  Used by Artifactory to verify sign-in requests.
     */
    certificate?: pulumi.Input<string>;
    /**
     * Name of the attribute in the SAML response from the IdP that contains the user's email.
     */
    emailAttribute?: pulumi.Input<string>;
    /**
     * Enable SAML SSO.  Default value is `true`.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * Name of the attribute in the SAML response from the IdP that contains the user's group memberships.
     */
    groupAttribute?: pulumi.Input<string>;
    /**
     * Service provider login url configured on the IdP.
     */
    loginUrl?: pulumi.Input<string>;
    /**
     * Service provider logout url, or where to redirect after user logs out.
     */
    logoutUrl?: pulumi.Input<string>;
    /**
     * Enable the creation of local Artifactory users.  Default value is `false`.
     */
    noAutoUserCreation?: pulumi.Input<boolean>;
    /**
     * Name of the service provider configured on the .
     */
    serviceProviderName?: pulumi.Input<string>;
    /**
     * Associate user with Artifactory groups based on the `groupAttribute` provided in the SAML response from the identity provider.  Default value is `false`.
     */
    syncGroups?: pulumi.Input<boolean>;
    /**
     * Enable "audience", or who the SAML assertion is intended for.  Ensures that the correct service provider intended for Artifactory is used on the IdP.  Default value is `true`.
     */
    verifyAudienceRestriction?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a SamlSettings resource.
 */
export interface SamlSettingsArgs {
    /**
     * Allow persisted users to access their profile.  Default value is `true`.
     */
    allowUserToAccessProfile?: pulumi.Input<boolean>;
    /**
     * Auto redirect to login through the IdP when clicking on Artifactory's login link.  Default value is `false`.
     */
    autoRedirect?: pulumi.Input<boolean>;
    /**
     * SAML certificate that contains the public key for the IdP service provider.  Used by Artifactory to verify sign-in requests.
     */
    certificate?: pulumi.Input<string>;
    /**
     * Name of the attribute in the SAML response from the IdP that contains the user's email.
     */
    emailAttribute?: pulumi.Input<string>;
    /**
     * Enable SAML SSO.  Default value is `true`.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * Name of the attribute in the SAML response from the IdP that contains the user's group memberships.
     */
    groupAttribute?: pulumi.Input<string>;
    /**
     * Service provider login url configured on the IdP.
     */
    loginUrl: pulumi.Input<string>;
    /**
     * Service provider logout url, or where to redirect after user logs out.
     */
    logoutUrl: pulumi.Input<string>;
    /**
     * Enable the creation of local Artifactory users.  Default value is `false`.
     */
    noAutoUserCreation?: pulumi.Input<boolean>;
    /**
     * Name of the service provider configured on the .
     */
    serviceProviderName: pulumi.Input<string>;
    /**
     * Associate user with Artifactory groups based on the `groupAttribute` provided in the SAML response from the identity provider.  Default value is `false`.
     */
    syncGroups?: pulumi.Input<boolean>;
    /**
     * Enable "audience", or who the SAML assertion is intended for.  Ensures that the correct service provider intended for Artifactory is used on the IdP.  Default value is `true`.
     */
    verifyAudienceRestriction?: pulumi.Input<boolean>;
}
