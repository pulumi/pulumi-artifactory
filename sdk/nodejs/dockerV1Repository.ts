// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Artifactory Local Docker V1 Repository Resource
 *
 * Creates a local Docker v1 repository - By choosing a V1 repository, you don't really have many options
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as artifactory from "@pulumi/artifactory";
 *
 * const foo = new artifactory.DockerV2Repository("foo", {
 *     key: "foo",
 * });
 * ```
 */
export class DockerV1Repository extends pulumi.CustomResource {
    /**
     * Get an existing DockerV1Repository resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DockerV1RepositoryState, opts?: pulumi.CustomResourceOptions): DockerV1Repository {
        return new DockerV1Repository(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'artifactory:index/dockerV1Repository:DockerV1Repository';

    /**
     * Returns true if the given object is an instance of DockerV1Repository.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DockerV1Repository {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DockerV1Repository.__pulumiType;
    }

    /**
     * The Docker API version to use. This cannot be set
     */
    public /*out*/ readonly apiVersion!: pulumi.Output<string>;
    /**
     * When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
     * therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
     * security (e.g., cross-site scripting attacks).
     */
    public readonly archiveBrowsingEnabled!: pulumi.Output<boolean | undefined>;
    public readonly blackedOut!: pulumi.Output<boolean | undefined>;
    /**
     * When set, Artifactory will block the pushing of Docker images with manifest v2 schema 1 to this repository.
     */
    public /*out*/ readonly blockPushingSchema1!: pulumi.Output<boolean>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly downloadDirect!: pulumi.Output<boolean | undefined>;
    public readonly excludesPattern!: pulumi.Output<string>;
    public readonly includesPattern!: pulumi.Output<string>;
    public readonly indexCompressionFormats!: pulumi.Output<string[] | undefined>;
    /**
     * - the identity key of the repo
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * The maximum number of unique tags of a single Docker image to store in this repository. Once the number tags for an
     * image exceeds this setting, older tags are removed. A value of 0 (default) indicates there is no limit. This only
     * applies to manifest v2
     */
    public readonly maxUniqueTags!: pulumi.Output<number>;
    public readonly notes!: pulumi.Output<string | undefined>;
    public /*out*/ readonly packageType!: pulumi.Output<string>;
    public readonly propertySets!: pulumi.Output<string[] | undefined>;
    public readonly repoLayoutRef!: pulumi.Output<string>;
    /**
     * If greater than 1, overwritten tags will be saved by their digest, up to the set up number. This only applies to
     * manifest V2
     */
    public /*out*/ readonly tagRetention!: pulumi.Output<number>;
    public readonly xrayIndex!: pulumi.Output<boolean>;

    /**
     * Create a DockerV1Repository resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DockerV1RepositoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DockerV1RepositoryArgs | DockerV1RepositoryState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DockerV1RepositoryState | undefined;
            inputs["apiVersion"] = state ? state.apiVersion : undefined;
            inputs["archiveBrowsingEnabled"] = state ? state.archiveBrowsingEnabled : undefined;
            inputs["blackedOut"] = state ? state.blackedOut : undefined;
            inputs["blockPushingSchema1"] = state ? state.blockPushingSchema1 : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["downloadDirect"] = state ? state.downloadDirect : undefined;
            inputs["excludesPattern"] = state ? state.excludesPattern : undefined;
            inputs["includesPattern"] = state ? state.includesPattern : undefined;
            inputs["indexCompressionFormats"] = state ? state.indexCompressionFormats : undefined;
            inputs["key"] = state ? state.key : undefined;
            inputs["maxUniqueTags"] = state ? state.maxUniqueTags : undefined;
            inputs["notes"] = state ? state.notes : undefined;
            inputs["packageType"] = state ? state.packageType : undefined;
            inputs["propertySets"] = state ? state.propertySets : undefined;
            inputs["repoLayoutRef"] = state ? state.repoLayoutRef : undefined;
            inputs["tagRetention"] = state ? state.tagRetention : undefined;
            inputs["xrayIndex"] = state ? state.xrayIndex : undefined;
        } else {
            const args = argsOrState as DockerV1RepositoryArgs | undefined;
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            inputs["archiveBrowsingEnabled"] = args ? args.archiveBrowsingEnabled : undefined;
            inputs["blackedOut"] = args ? args.blackedOut : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["downloadDirect"] = args ? args.downloadDirect : undefined;
            inputs["excludesPattern"] = args ? args.excludesPattern : undefined;
            inputs["includesPattern"] = args ? args.includesPattern : undefined;
            inputs["indexCompressionFormats"] = args ? args.indexCompressionFormats : undefined;
            inputs["key"] = args ? args.key : undefined;
            inputs["maxUniqueTags"] = args ? args.maxUniqueTags : undefined;
            inputs["notes"] = args ? args.notes : undefined;
            inputs["propertySets"] = args ? args.propertySets : undefined;
            inputs["repoLayoutRef"] = args ? args.repoLayoutRef : undefined;
            inputs["xrayIndex"] = args ? args.xrayIndex : undefined;
            inputs["apiVersion"] = undefined /*out*/;
            inputs["blockPushingSchema1"] = undefined /*out*/;
            inputs["packageType"] = undefined /*out*/;
            inputs["tagRetention"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(DockerV1Repository.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DockerV1Repository resources.
 */
export interface DockerV1RepositoryState {
    /**
     * The Docker API version to use. This cannot be set
     */
    apiVersion?: pulumi.Input<string>;
    /**
     * When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
     * therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
     * security (e.g., cross-site scripting attacks).
     */
    archiveBrowsingEnabled?: pulumi.Input<boolean>;
    blackedOut?: pulumi.Input<boolean>;
    /**
     * When set, Artifactory will block the pushing of Docker images with manifest v2 schema 1 to this repository.
     */
    blockPushingSchema1?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    downloadDirect?: pulumi.Input<boolean>;
    excludesPattern?: pulumi.Input<string>;
    includesPattern?: pulumi.Input<string>;
    indexCompressionFormats?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - the identity key of the repo
     */
    key?: pulumi.Input<string>;
    /**
     * The maximum number of unique tags of a single Docker image to store in this repository. Once the number tags for an
     * image exceeds this setting, older tags are removed. A value of 0 (default) indicates there is no limit. This only
     * applies to manifest v2
     */
    maxUniqueTags?: pulumi.Input<number>;
    notes?: pulumi.Input<string>;
    packageType?: pulumi.Input<string>;
    propertySets?: pulumi.Input<pulumi.Input<string>[]>;
    repoLayoutRef?: pulumi.Input<string>;
    /**
     * If greater than 1, overwritten tags will be saved by their digest, up to the set up number. This only applies to
     * manifest V2
     */
    tagRetention?: pulumi.Input<number>;
    xrayIndex?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a DockerV1Repository resource.
 */
export interface DockerV1RepositoryArgs {
    /**
     * When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and
     * therefore requires strict content moderation to prevent malicious users from uploading content that may compromise
     * security (e.g., cross-site scripting attacks).
     */
    archiveBrowsingEnabled?: pulumi.Input<boolean>;
    blackedOut?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    downloadDirect?: pulumi.Input<boolean>;
    excludesPattern?: pulumi.Input<string>;
    includesPattern?: pulumi.Input<string>;
    indexCompressionFormats?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - the identity key of the repo
     */
    key: pulumi.Input<string>;
    /**
     * The maximum number of unique tags of a single Docker image to store in this repository. Once the number tags for an
     * image exceeds this setting, older tags are removed. A value of 0 (default) indicates there is no limit. This only
     * applies to manifest v2
     */
    maxUniqueTags?: pulumi.Input<number>;
    notes?: pulumi.Input<string>;
    propertySets?: pulumi.Input<pulumi.Input<string>[]>;
    repoLayoutRef?: pulumi.Input<string>;
    xrayIndex?: pulumi.Input<boolean>;
}
