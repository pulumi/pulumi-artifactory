// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Artifactory Local Repository Resource
 *
 * Provides an Artifactory local repository resource. This can be used to create and manage Artifactory local repositories.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as artifactory from "@pulumi/artifactory";
 *
 * // Create a new Artifactory local repository called my-local
 * const my_local = new artifactory.LocalRepository("my-local", {
 *     key: "my-local",
 *     packageType: "npm",
 * });
 * ```
 *
 * ## Import
 *
 * Local repositories can be imported using their name, e.g.
 *
 * ```sh
 *  $ pulumi import artifactory:index/localRepository:LocalRepository my-local my-local
 * ```
 */
export class LocalRepository extends pulumi.CustomResource {
    /**
     * Get an existing LocalRepository resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LocalRepositoryState, opts?: pulumi.CustomResourceOptions): LocalRepository {
        return new LocalRepository(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'artifactory:index/localRepository:LocalRepository';

    /**
     * Returns true if the given object is an instance of LocalRepository.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LocalRepository {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LocalRepository.__pulumiType;
    }

    public readonly archiveBrowsingEnabled!: pulumi.Output<boolean | undefined>;
    public readonly blackedOut!: pulumi.Output<boolean>;
    public readonly calculateYumMetadata!: pulumi.Output<boolean | undefined>;
    public readonly checksumPolicyType!: pulumi.Output<string>;
    public readonly debianTrivialLayout!: pulumi.Output<boolean | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly dockerApiVersion!: pulumi.Output<string>;
    public readonly enableFileListsIndexing!: pulumi.Output<boolean>;
    public readonly excludesPattern!: pulumi.Output<string>;
    public readonly forceNugetAuthentication!: pulumi.Output<boolean>;
    public readonly handleReleases!: pulumi.Output<boolean>;
    public readonly handleSnapshots!: pulumi.Output<boolean>;
    public readonly includesPattern!: pulumi.Output<string>;
    public readonly indexCompressionFormats!: pulumi.Output<string[] | undefined>;
    public readonly key!: pulumi.Output<string>;
    public readonly maxUniqueSnapshots!: pulumi.Output<number>;
    public readonly maxUniqueTags!: pulumi.Output<number>;
    public readonly notes!: pulumi.Output<string | undefined>;
    public readonly packageType!: pulumi.Output<string>;
    public readonly propertySets!: pulumi.Output<string[] | undefined>;
    public readonly repoLayoutRef!: pulumi.Output<string>;
    public readonly snapshotVersionBehavior!: pulumi.Output<string>;
    public readonly suppressPomConsistencyChecks!: pulumi.Output<boolean>;
    public readonly xrayIndex!: pulumi.Output<boolean>;
    public readonly yumRootDepth!: pulumi.Output<number | undefined>;

    /**
     * Create a LocalRepository resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocalRepositoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LocalRepositoryArgs | LocalRepositoryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LocalRepositoryState | undefined;
            resourceInputs["archiveBrowsingEnabled"] = state ? state.archiveBrowsingEnabled : undefined;
            resourceInputs["blackedOut"] = state ? state.blackedOut : undefined;
            resourceInputs["calculateYumMetadata"] = state ? state.calculateYumMetadata : undefined;
            resourceInputs["checksumPolicyType"] = state ? state.checksumPolicyType : undefined;
            resourceInputs["debianTrivialLayout"] = state ? state.debianTrivialLayout : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dockerApiVersion"] = state ? state.dockerApiVersion : undefined;
            resourceInputs["enableFileListsIndexing"] = state ? state.enableFileListsIndexing : undefined;
            resourceInputs["excludesPattern"] = state ? state.excludesPattern : undefined;
            resourceInputs["forceNugetAuthentication"] = state ? state.forceNugetAuthentication : undefined;
            resourceInputs["handleReleases"] = state ? state.handleReleases : undefined;
            resourceInputs["handleSnapshots"] = state ? state.handleSnapshots : undefined;
            resourceInputs["includesPattern"] = state ? state.includesPattern : undefined;
            resourceInputs["indexCompressionFormats"] = state ? state.indexCompressionFormats : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["maxUniqueSnapshots"] = state ? state.maxUniqueSnapshots : undefined;
            resourceInputs["maxUniqueTags"] = state ? state.maxUniqueTags : undefined;
            resourceInputs["notes"] = state ? state.notes : undefined;
            resourceInputs["packageType"] = state ? state.packageType : undefined;
            resourceInputs["propertySets"] = state ? state.propertySets : undefined;
            resourceInputs["repoLayoutRef"] = state ? state.repoLayoutRef : undefined;
            resourceInputs["snapshotVersionBehavior"] = state ? state.snapshotVersionBehavior : undefined;
            resourceInputs["suppressPomConsistencyChecks"] = state ? state.suppressPomConsistencyChecks : undefined;
            resourceInputs["xrayIndex"] = state ? state.xrayIndex : undefined;
            resourceInputs["yumRootDepth"] = state ? state.yumRootDepth : undefined;
        } else {
            const args = argsOrState as LocalRepositoryArgs | undefined;
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            resourceInputs["archiveBrowsingEnabled"] = args ? args.archiveBrowsingEnabled : undefined;
            resourceInputs["blackedOut"] = args ? args.blackedOut : undefined;
            resourceInputs["calculateYumMetadata"] = args ? args.calculateYumMetadata : undefined;
            resourceInputs["checksumPolicyType"] = args ? args.checksumPolicyType : undefined;
            resourceInputs["debianTrivialLayout"] = args ? args.debianTrivialLayout : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dockerApiVersion"] = args ? args.dockerApiVersion : undefined;
            resourceInputs["enableFileListsIndexing"] = args ? args.enableFileListsIndexing : undefined;
            resourceInputs["excludesPattern"] = args ? args.excludesPattern : undefined;
            resourceInputs["forceNugetAuthentication"] = args ? args.forceNugetAuthentication : undefined;
            resourceInputs["handleReleases"] = args ? args.handleReleases : undefined;
            resourceInputs["handleSnapshots"] = args ? args.handleSnapshots : undefined;
            resourceInputs["includesPattern"] = args ? args.includesPattern : undefined;
            resourceInputs["indexCompressionFormats"] = args ? args.indexCompressionFormats : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["maxUniqueSnapshots"] = args ? args.maxUniqueSnapshots : undefined;
            resourceInputs["maxUniqueTags"] = args ? args.maxUniqueTags : undefined;
            resourceInputs["notes"] = args ? args.notes : undefined;
            resourceInputs["packageType"] = args ? args.packageType : undefined;
            resourceInputs["propertySets"] = args ? args.propertySets : undefined;
            resourceInputs["repoLayoutRef"] = args ? args.repoLayoutRef : undefined;
            resourceInputs["snapshotVersionBehavior"] = args ? args.snapshotVersionBehavior : undefined;
            resourceInputs["suppressPomConsistencyChecks"] = args ? args.suppressPomConsistencyChecks : undefined;
            resourceInputs["xrayIndex"] = args ? args.xrayIndex : undefined;
            resourceInputs["yumRootDepth"] = args ? args.yumRootDepth : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LocalRepository.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LocalRepository resources.
 */
export interface LocalRepositoryState {
    archiveBrowsingEnabled?: pulumi.Input<boolean>;
    blackedOut?: pulumi.Input<boolean>;
    calculateYumMetadata?: pulumi.Input<boolean>;
    checksumPolicyType?: pulumi.Input<string>;
    debianTrivialLayout?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    dockerApiVersion?: pulumi.Input<string>;
    enableFileListsIndexing?: pulumi.Input<boolean>;
    excludesPattern?: pulumi.Input<string>;
    forceNugetAuthentication?: pulumi.Input<boolean>;
    handleReleases?: pulumi.Input<boolean>;
    handleSnapshots?: pulumi.Input<boolean>;
    includesPattern?: pulumi.Input<string>;
    indexCompressionFormats?: pulumi.Input<pulumi.Input<string>[]>;
    key?: pulumi.Input<string>;
    maxUniqueSnapshots?: pulumi.Input<number>;
    maxUniqueTags?: pulumi.Input<number>;
    notes?: pulumi.Input<string>;
    packageType?: pulumi.Input<string>;
    propertySets?: pulumi.Input<pulumi.Input<string>[]>;
    repoLayoutRef?: pulumi.Input<string>;
    snapshotVersionBehavior?: pulumi.Input<string>;
    suppressPomConsistencyChecks?: pulumi.Input<boolean>;
    xrayIndex?: pulumi.Input<boolean>;
    yumRootDepth?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a LocalRepository resource.
 */
export interface LocalRepositoryArgs {
    archiveBrowsingEnabled?: pulumi.Input<boolean>;
    blackedOut?: pulumi.Input<boolean>;
    calculateYumMetadata?: pulumi.Input<boolean>;
    checksumPolicyType?: pulumi.Input<string>;
    debianTrivialLayout?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    dockerApiVersion?: pulumi.Input<string>;
    enableFileListsIndexing?: pulumi.Input<boolean>;
    excludesPattern?: pulumi.Input<string>;
    forceNugetAuthentication?: pulumi.Input<boolean>;
    handleReleases?: pulumi.Input<boolean>;
    handleSnapshots?: pulumi.Input<boolean>;
    includesPattern?: pulumi.Input<string>;
    indexCompressionFormats?: pulumi.Input<pulumi.Input<string>[]>;
    key: pulumi.Input<string>;
    maxUniqueSnapshots?: pulumi.Input<number>;
    maxUniqueTags?: pulumi.Input<number>;
    notes?: pulumi.Input<string>;
    packageType?: pulumi.Input<string>;
    propertySets?: pulumi.Input<pulumi.Input<string>[]>;
    repoLayoutRef?: pulumi.Input<string>;
    snapshotVersionBehavior?: pulumi.Input<string>;
    suppressPomConsistencyChecks?: pulumi.Input<boolean>;
    xrayIndex?: pulumi.Input<boolean>;
    yumRootDepth?: pulumi.Input<number>;
}
