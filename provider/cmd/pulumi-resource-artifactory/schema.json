{
    "name": "artifactory",
    "description": "A Pulumi package for creating and managing artifactory cloud resources.",
    "keywords": [
        "pulumi",
        "artifactory"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`artifactory` Terraform Provider](https://github.com/terraform-providers/terraform-provider-artifactory).",
    "repository": "https://github.com/pulumi/pulumi-artifactory",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "accessToken": {
                "type": "string",
                "description": "This is a bearer token that can be given to you by your admin under `Identity and Access`\n"
            },
            "apiKey": {
                "type": "string",
                "deprecationMessage": "Xray and projects functionality will not work with any auth method other than access tokens (Bearer)"
            },
            "password": {
                "type": "string",
                "description": "Insider note: You may actually use an api_key as the password. This will get your around xray limitations instead of a\nbearer token\n",
                "deprecationMessage": "Xray and projects functionality will not work with any auth method other than access tokens (Bearer)"
            },
            "url": {
                "type": "string"
            },
            "username": {
                "type": "string",
                "deprecationMessage": "Xray and projects functionality will not work with any auth method other than access tokens (Bearer)"
            }
        }
    },
    "provider": {
        "description": "The provider type for the artifactory package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "accessToken": {
                "type": "string",
                "description": "This is a bearer token that can be given to you by your admin under `Identity and Access`\n"
            },
            "apiKey": {
                "type": "string",
                "deprecationMessage": "Xray and projects functionality will not work with any auth method other than access tokens (Bearer)"
            },
            "password": {
                "type": "string",
                "description": "Insider note: You may actually use an api_key as the password. This will get your around xray limitations instead of a\nbearer token\n",
                "deprecationMessage": "Xray and projects functionality will not work with any auth method other than access tokens (Bearer)"
            },
            "url": {
                "type": "string"
            },
            "username": {
                "type": "string",
                "deprecationMessage": "Xray and projects functionality will not work with any auth method other than access tokens (Bearer)"
            }
        },
        "inputProperties": {
            "accessToken": {
                "type": "string",
                "description": "This is a bearer token that can be given to you by your admin under `Identity and Access`\n"
            },
            "apiKey": {
                "type": "string",
                "deprecationMessage": "Xray and projects functionality will not work with any auth method other than access tokens (Bearer)"
            },
            "password": {
                "type": "string",
                "description": "Insider note: You may actually use an api_key as the password. This will get your around xray limitations instead of a\nbearer token\n",
                "deprecationMessage": "Xray and projects functionality will not work with any auth method other than access tokens (Bearer)"
            },
            "url": {
                "type": "string"
            },
            "username": {
                "type": "string",
                "deprecationMessage": "Xray and projects functionality will not work with any auth method other than access tokens (Bearer)"
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-artifactory/sdk/go/artifactory"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing artifactory cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-artifactory)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-artifactory` repo](https://github.com/pulumi/pulumi-artifactory/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-artifactory` repo](https://github.com/terraform-providers/terraform-provider-artifactory/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-artifactory)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-artifactory` repo](https://github.com/pulumi/pulumi-artifactory/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-artifactory` repo](https://github.com/terraform-providers/terraform-provider-artifactory/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}