{
    "name": "artifactory",
    "description": "A Pulumi package for creating and managing artifactory cloud resources.",
    "keywords": [
        "pulumi",
        "artifactory"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`artifactory` Terraform Provider](https://github.com/jfrog/terraform-provider-artifactory).",
    "repository": "https://github.com/pulumi/pulumi-artifactory",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "accessToken": {
                "type": "string",
                "description": "This is a access token that can be given to you by your admin under `Identity and Access`\n"
            },
            "apiKey": {
                "type": "string",
                "description": "API token. Projects functionality will not work with any auth method other than access tokens\n"
            },
            "checkLicense": {
                "type": "boolean",
                "description": "Toggle for pre-flight checking of Artifactory Pro and Enterprise license. Default to `true`.\n",
                "default": false
            },
            "url": {
                "type": "string"
            }
        }
    },
    "types": {
        "artifactory:index/AccessTokenAdminToken:AccessTokenAdminToken": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "instanceId"
            ]
        },
        "artifactory:index/ArtifactPropertyWebhookCriteria:ArtifactPropertyWebhookCriteria": {
            "properties": {
                "anyLocal": {
                    "type": "boolean",
                    "description": "Trigger on any local repo\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "anyRemote": {
                    "type": "boolean",
                    "description": "Trigger on any remote repo\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, **, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, **, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Trigger on this list of repo keys\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "anyLocal",
                "anyRemote",
                "repoKeys"
            ]
        },
        "artifactory:index/ArtifactWebhookCriteria:ArtifactWebhookCriteria": {
            "properties": {
                "anyLocal": {
                    "type": "boolean",
                    "description": "Trigger on any local repo\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "anyRemote": {
                    "type": "boolean",
                    "description": "Trigger on any remote repo\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, **, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, **, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Trigger on this list of repo keys\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "anyLocal",
                "anyRemote",
                "repoKeys"
            ]
        },
        "artifactory:index/ArtifactoryReleaseBundleWebhookCriteria:ArtifactoryReleaseBundleWebhookCriteria": {
            "properties": {
                "anyReleaseBundle": {
                    "type": "boolean",
                    "description": "Trigger on any release bundle\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, **, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, **, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registeredReleaseBundleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Trigger on this list of release bundle names\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "anyReleaseBundle",
                "registeredReleaseBundleNames"
            ]
        },
        "artifactory:index/BuildWebhookCriteria:BuildWebhookCriteria": {
            "properties": {
                "anyBuild": {
                    "type": "boolean",
                    "description": "Trigger on any build\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, **, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, **, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "selectedBuilds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Trigger on this list of build names\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "anyBuild",
                "selectedBuilds"
            ]
        },
        "artifactory:index/DistributionWebhookCriteria:DistributionWebhookCriteria": {
            "properties": {
                "anyReleaseBundle": {
                    "type": "boolean",
                    "description": "Trigger on any release bundle\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, **, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, **, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registeredReleaseBundleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Trigger on this list of release bundle names\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "anyReleaseBundle",
                "registeredReleaseBundleNames"
            ]
        },
        "artifactory:index/DockerWebhookCriteria:DockerWebhookCriteria": {
            "properties": {
                "anyLocal": {
                    "type": "boolean",
                    "description": "Trigger on any local repo\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "anyRemote": {
                    "type": "boolean",
                    "description": "Trigger on any remote repo\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, **, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, **, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Trigger on this list of repo keys\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "anyLocal",
                "anyRemote",
                "repoKeys"
            ]
        },
        "artifactory:index/FederatedAlpineRepositoryMember:FederatedAlpineRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedBowerRepositoryMember:FederatedBowerRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedCargoRepositoryMember:FederatedCargoRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedChefRepositoryMember:FederatedChefRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedCocoapodsRepositoryMember:FederatedCocoapodsRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedComposerRepositoryMember:FederatedComposerRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedConanRepositoryMember:FederatedConanRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedCondaRepositoryMember:FederatedCondaRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedCranRepositoryMember:FederatedCranRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedDebianRepositoryMember:FederatedDebianRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedDockerRepositoryMember:FederatedDockerRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedGemsRepositoryMember:FederatedGemsRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedGenericRepositoryMember:FederatedGenericRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedGitltfsRepositoryMember:FederatedGitltfsRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedGoRepositoryMember:FederatedGoRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedGradleRepositoryMember:FederatedGradleRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedHelmRepositoryMember:FederatedHelmRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedIvyRepositoryMember:FederatedIvyRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedMavenRepositoryMember:FederatedMavenRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedNpmRepositoryMember:FederatedNpmRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedNugetRepositoryMember:FederatedNugetRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedOpkgRepositoryMember:FederatedOpkgRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedPuppetRepositoryMember:FederatedPuppetRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedPypiRepositoryMember:FederatedPypiRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedRpmRepositoryMember:FederatedRpmRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedSbtRepositoryMember:FederatedSbtRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedVagrantRepositoryMember:FederatedVagrantRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled status of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/OauthSettingsOauthProvider:OauthSettingsOauthProvider": {
            "properties": {
                "apiUrl": {
                    "type": "string",
                    "description": "OAuth user info endpoint for the IdP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "description": "OAuth authorization endpoint for the IdP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "OAuth client ID configured on the IdP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "description": "OAuth client secret configured on the IdP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable the Artifactory OAuth provider.  Default value is `true`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Artifactory OAuth provider.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "OAuth token endpoint for the IdP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of OAuth provider. (e.g., `github`, `google`, `cloudfoundry`, or `openId`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "apiUrl",
                "authUrl",
                "clientId",
                "clientSecret",
                "name",
                "tokenUrl",
                "type"
            ]
        },
        "artifactory:index/PermissionTargetBuild:PermissionTargetBuild": {
            "properties": {
                "actions": {
                    "$ref": "#/types/artifactory:index/PermissionTargetBuildActions:PermissionTargetBuildActions",
                    "description": "-\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to exclude\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to include\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of repositories this permission target is applicable for\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "repositories"
            ]
        },
        "artifactory:index/PermissionTargetBuildActions:PermissionTargetBuildActions": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetBuildActionsGroup:PermissionTargetBuildActionsGroup"
                    },
                    "description": "Groups this permission applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetBuildActionsUser:PermissionTargetBuildActionsUser"
                    },
                    "description": "Users this permission target applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/PermissionTargetBuildActionsGroup:PermissionTargetBuildActionsGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetBuildActionsUser:PermissionTargetBuildActionsUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetReleaseBundle:PermissionTargetReleaseBundle": {
            "properties": {
                "actions": {
                    "$ref": "#/types/artifactory:index/PermissionTargetReleaseBundleActions:PermissionTargetReleaseBundleActions",
                    "description": "-\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to exclude\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to include\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of repositories this permission target is applicable for\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "repositories"
            ]
        },
        "artifactory:index/PermissionTargetReleaseBundleActions:PermissionTargetReleaseBundleActions": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetReleaseBundleActionsGroup:PermissionTargetReleaseBundleActionsGroup"
                    },
                    "description": "Groups this permission applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetReleaseBundleActionsUser:PermissionTargetReleaseBundleActionsUser"
                    },
                    "description": "Users this permission target applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/PermissionTargetReleaseBundleActionsGroup:PermissionTargetReleaseBundleActionsGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetReleaseBundleActionsUser:PermissionTargetReleaseBundleActionsUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetRepo:PermissionTargetRepo": {
            "properties": {
                "actions": {
                    "$ref": "#/types/artifactory:index/PermissionTargetRepoActions:PermissionTargetRepoActions",
                    "description": "-\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to exclude\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to include\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of repositories this permission target is applicable for\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "repositories"
            ]
        },
        "artifactory:index/PermissionTargetRepoActions:PermissionTargetRepoActions": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetRepoActionsGroup:PermissionTargetRepoActionsGroup"
                    },
                    "description": "Groups this permission applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetRepoActionsUser:PermissionTargetRepoActionsUser"
                    },
                    "description": "Users this permission target applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/PermissionTargetRepoActionsGroup:PermissionTargetRepoActionsGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetRepoActionsUser:PermissionTargetRepoActionsUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetsBuild:PermissionTargetsBuild": {
            "properties": {
                "actions": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsBuildActions:PermissionTargetsBuildActions",
                    "description": "-\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to exclude\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to include\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of repositories this permission target is applicable for\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "repositories"
            ]
        },
        "artifactory:index/PermissionTargetsBuildActions:PermissionTargetsBuildActions": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsBuildActionsGroup:PermissionTargetsBuildActionsGroup"
                    },
                    "description": "Groups this permission applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsBuildActionsUser:PermissionTargetsBuildActionsUser"
                    },
                    "description": "Users this permission target applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/PermissionTargetsBuildActionsGroup:PermissionTargetsBuildActionsGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetsBuildActionsUser:PermissionTargetsBuildActionsUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetsReleaseBundle:PermissionTargetsReleaseBundle": {
            "properties": {
                "actions": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsReleaseBundleActions:PermissionTargetsReleaseBundleActions",
                    "description": "-\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to exclude\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to include\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of repositories this permission target is applicable for\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "repositories"
            ]
        },
        "artifactory:index/PermissionTargetsReleaseBundleActions:PermissionTargetsReleaseBundleActions": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsReleaseBundleActionsGroup:PermissionTargetsReleaseBundleActionsGroup"
                    },
                    "description": "Groups this permission applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsReleaseBundleActionsUser:PermissionTargetsReleaseBundleActionsUser"
                    },
                    "description": "Users this permission target applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/PermissionTargetsReleaseBundleActionsGroup:PermissionTargetsReleaseBundleActionsGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetsReleaseBundleActionsUser:PermissionTargetsReleaseBundleActionsUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetsRepo:PermissionTargetsRepo": {
            "properties": {
                "actions": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsRepoActions:PermissionTargetsRepoActions",
                    "description": "-\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to exclude\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to include\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of repositories this permission target is applicable for\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "repositories"
            ]
        },
        "artifactory:index/PermissionTargetsRepoActions:PermissionTargetsRepoActions": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsRepoActionsGroup:PermissionTargetsRepoActionsGroup"
                    },
                    "description": "Groups this permission applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsRepoActionsUser:PermissionTargetsRepoActionsUser"
                    },
                    "description": "Users this permission target applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/PermissionTargetsRepoActionsGroup:PermissionTargetsRepoActionsGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetsRepoActionsUser:PermissionTargetsRepoActionsUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PushReplicationReplication:PushReplicationReplication": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pathPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncDeletes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncProperties": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncStatistics": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "password",
                "url",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "password",
                        "socketTimeoutMillis",
                        "syncDeletes",
                        "syncProperties",
                        "syncStatistics",
                        "url",
                        "username"
                    ]
                }
            }
        },
        "artifactory:index/ReleaseBundleWebhookCriteria:ReleaseBundleWebhookCriteria": {
            "properties": {
                "anyReleaseBundle": {
                    "type": "boolean",
                    "description": "Trigger on any release bundle\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, **, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, **, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registeredReleaseBundleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Trigger on this list of release bundle names\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "anyReleaseBundle",
                "registeredReleaseBundleNames"
            ]
        },
        "artifactory:index/RemoteAlpineRepositoryContentSynchronisation:RemoteAlpineRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteBowerRepositoryContentSynchronisation:RemoteBowerRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteCargoRepositoryContentSynchronisation:RemoteCargoRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "If set, Remote repository proxies a local or remote repository from another instance of Artifactory. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "description": "If set, properties for artifacts that have been cached in this repository will be updated if they are modified in the artifact hosted at the remote Artifactory instance. The trigger to synchronize the properties is download of the artifact from the remote repository cache of the local Artifactory instance. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "description": "If set, Artifactory displays an indication on cached items if they have been deleted from the corresponding repository in the remote Artifactory instance. Default value is 'false'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "description": "If set, Artifactory will notify the remote instance whenever an artifact in the Smart Remote Repository is downloaded locally so that it can update its download counter. Note that if this option is not set, there may be a discrepancy between the number of artifacts reported to have been downloaded in the different Artifactory instances of the proxy chain. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteChefRepositoryContentSynchronisation:RemoteChefRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteCocoapodsRepositoryContentSynchronisation:RemoteCocoapodsRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteComposerRepositoryContentSynchronisation:RemoteComposerRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteConanRepositoryContentSynchronisation:RemoteConanRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteCondaRepositoryContentSynchronisation:RemoteCondaRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteCranRepositoryContentSynchronisation:RemoteCranRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteDebianRepositoryContentSynchronisation:RemoteDebianRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteDockerRepositoryContentSynchronisation:RemoteDockerRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "If set, Remote repository proxies a local or remote repository from another instance of Artifactory. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "description": "If set, properties for artifacts that have been cached in this repository will be updated if they are modified in the artifact hosted at the remote Artifactory instance. The trigger to synchronize the properties is download of the artifact from the remote repository cache of the local Artifactory instance. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "description": "If set, Artifactory displays an indication on cached items if they have been deleted from the corresponding repository in the remote Artifactory instance. Default value is 'false'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "description": "If set, Artifactory will notify the remote instance whenever an artifact in the Smart Remote Repository is downloaded locally so that it can update its download counter. Note that if this option is not set, there may be a discrepancy between the number of artifacts reported to have been downloaded in the different Artifactory instances of the proxy chain. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteGemsRepositoryContentSynchronisation:RemoteGemsRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteGenericRepositoryContentSynchronisation:RemoteGenericRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "If set, Remote repository proxies a local or remote repository from another instance of Artifactory. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "description": "If set, properties for artifacts that have been cached in this repository will be updated if they are modified in the artifact hosted at the remote Artifactory instance. The trigger to synchronize the properties is download of the artifact from the remote repository cache of the local Artifactory instance. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "description": "If set, Artifactory displays an indication on cached items if they have been deleted from the corresponding repository in the remote Artifactory instance. Default value is 'false'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "description": "If set, Artifactory will notify the remote instance whenever an artifact in the Smart Remote Repository is downloaded locally so that it can update its download counter. Note that if this option is not set, there may be a discrepancy between the number of artifacts reported to have been downloaded in the different Artifactory instances of the proxy chain. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteGitlfsRepositoryContentSynchronisation:RemoteGitlfsRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteGoRepositoryContentSynchronisation:RemoteGoRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteGradleRepositoryContentSynchronisation:RemoteGradleRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "If set, Remote repository proxies a local or remote repository from another instance of Artifactory. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "description": "If set, properties for artifacts that have been cached in this repository will be updated if they are modified in the artifact hosted at the remote Artifactory instance. The trigger to synchronize the properties is download of the artifact from the remote repository cache of the local Artifactory instance. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "description": "If set, Artifactory displays an indication on cached items if they have been deleted from the corresponding repository in the remote Artifactory instance. Default value is 'false'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "description": "If set, Artifactory will notify the remote instance whenever an artifact in the Smart Remote Repository is downloaded locally so that it can update its download counter. Note that if this option is not set, there may be a discrepancy between the number of artifacts reported to have been downloaded in the different Artifactory instances of the proxy chain. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteHelmRepositoryContentSynchronisation:RemoteHelmRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "If set, Remote repository proxies a local or remote repository from another instance of Artifactory. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "description": "If set, properties for artifacts that have been cached in this repository will be updated if they are modified in the artifact hosted at the remote Artifactory instance. The trigger to synchronize the properties is download of the artifact from the remote repository cache of the local Artifactory instance. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "description": "If set, Artifactory displays an indication on cached items if they have been deleted from the corresponding repository in the remote Artifactory instance. Default value is 'false'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "description": "If set, Artifactory will notify the remote instance whenever an artifact in the Smart Remote Repository is downloaded locally so that it can update its download counter. Note that if this option is not set, there may be a discrepancy between the number of artifacts reported to have been downloaded in the different Artifactory instances of the proxy chain. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteIvyRepositoryContentSynchronisation:RemoteIvyRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "If set, Remote repository proxies a local or remote repository from another instance of Artifactory. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "description": "If set, properties for artifacts that have been cached in this repository will be updated if they are modified in the artifact hosted at the remote Artifactory instance. The trigger to synchronize the properties is download of the artifact from the remote repository cache of the local Artifactory instance. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "description": "If set, Artifactory displays an indication on cached items if they have been deleted from the corresponding repository in the remote Artifactory instance. Default value is 'false'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "description": "If set, Artifactory will notify the remote instance whenever an artifact in the Smart Remote Repository is downloaded locally so that it can update its download counter. Note that if this option is not set, there may be a discrepancy between the number of artifacts reported to have been downloaded in the different Artifactory instances of the proxy chain. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteMavenRepositoryContentSynchronisation:RemoteMavenRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "If set, Remote repository proxies a local or remote repository from another instance of Artifactory. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "description": "If set, properties for artifacts that have been cached in this repository will be updated if they are modified in the artifact hosted at the remote Artifactory instance. The trigger to synchronize the properties is download of the artifact from the remote repository cache of the local Artifactory instance. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "description": "If set, Artifactory displays an indication on cached items if they have been deleted from the corresponding repository in the remote Artifactory instance. Default value is 'false'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "description": "If set, Artifactory will notify the remote instance whenever an artifact in the Smart Remote Repository is downloaded locally so that it can update its download counter. Note that if this option is not set, there may be a discrepancy between the number of artifacts reported to have been downloaded in the different Artifactory instances of the proxy chain. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteNpmRepositoryContentSynchronisation:RemoteNpmRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "If set, Remote repository proxies a local or remote repository from another instance of Artifactory. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "description": "If set, properties for artifacts that have been cached in this repository will be updated if they are modified in the artifact hosted at the remote Artifactory instance. The trigger to synchronize the properties is download of the artifact from the remote repository cache of the local Artifactory instance. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "description": "If set, Artifactory displays an indication on cached items if they have been deleted from the corresponding repository in the remote Artifactory instance. Default value is 'false'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "description": "If set, Artifactory will notify the remote instance whenever an artifact in the Smart Remote Repository is downloaded locally so that it can update its download counter. Note that if this option is not set, there may be a discrepancy between the number of artifacts reported to have been downloaded in the different Artifactory instances of the proxy chain. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteNugetRepositoryContentSynchronisation:RemoteNugetRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteOpkgRepositoryContentSynchronisation:RemoteOpkgRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteP2RepositoryContentSynchronisation:RemoteP2RepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemotePuppetRepositoryContentSynchronisation:RemotePuppetRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemotePypiRepositoryContentSynchronisation:RemotePypiRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "If set, Remote repository proxies a local or remote repository from another instance of Artifactory. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "description": "If set, properties for artifacts that have been cached in this repository will be updated if they are modified in the artifact hosted at the remote Artifactory instance. The trigger to synchronize the properties is download of the artifact from the remote repository cache of the local Artifactory instance. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "description": "If set, Artifactory displays an indication on cached items if they have been deleted from the corresponding repository in the remote Artifactory instance. Default value is 'false'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "description": "If set, Artifactory will notify the remote instance whenever an artifact in the Smart Remote Repository is downloaded locally so that it can update its download counter. Note that if this option is not set, there may be a discrepancy between the number of artifacts reported to have been downloaded in the different Artifactory instances of the proxy chain. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteRpmRepositoryContentSynchronisation:RemoteRpmRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteSbtRepositoryContentSynchronisation:RemoteSbtRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "If set, Remote repository proxies a local or remote repository from another instance of Artifactory. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "description": "If set, properties for artifacts that have been cached in this repository will be updated if they are modified in the artifact hosted at the remote Artifactory instance. The trigger to synchronize the properties is download of the artifact from the remote repository cache of the local Artifactory instance. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "description": "If set, Artifactory displays an indication on cached items if they have been deleted from the corresponding repository in the remote Artifactory instance. Default value is 'false'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "description": "If set, Artifactory will notify the remote instance whenever an artifact in the Smart Remote Repository is downloaded locally so that it can update its download counter. Note that if this option is not set, there may be a discrepancy between the number of artifacts reported to have been downloaded in the different Artifactory instances of the proxy chain. Default value is 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteVcsRepositoryContentSynchronisation:RemoteVcsRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/ReplicationConfigReplication:ReplicationConfigReplication": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "Requires password encryption to be turned off `POST /api/system/decrypt`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pathPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncDeletes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncProperties": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncStatistics": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "password",
                        "socketTimeoutMillis",
                        "syncDeletes",
                        "syncProperties",
                        "syncStatistics"
                    ]
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the artifactory package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "accessToken": {
                "type": "string",
                "description": "This is a access token that can be given to you by your admin under `Identity and Access`\n"
            },
            "apiKey": {
                "type": "string",
                "description": "API token. Projects functionality will not work with any auth method other than access tokens\n"
            },
            "checkLicense": {
                "type": "boolean",
                "description": "Toggle for pre-flight checking of Artifactory Pro and Enterprise license. Default to `true`.\n"
            },
            "url": {
                "type": "string"
            }
        },
        "inputProperties": {
            "accessToken": {
                "type": "string",
                "description": "This is a access token that can be given to you by your admin under `Identity and Access`\n"
            },
            "apiKey": {
                "type": "string",
                "description": "API token. Projects functionality will not work with any auth method other than access tokens\n"
            },
            "checkLicense": {
                "type": "boolean",
                "description": "Toggle for pre-flight checking of Artifactory Pro and Enterprise license. Default to `true`.\n",
                "default": false
            },
            "url": {
                "type": "string"
            }
        }
    },
    "resources": {
        "artifactory:index/accessToken:AccessToken": {
            "description": "\n\n\n## Import\n\nArtifactory **does not** retain access tokens and cannot be imported into state. ",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Returns the access token to authenciate to Artifactory\n",
                    "language": {
                        "csharp": {
                            "name": "Details"
                        }
                    }
                },
                "adminToken": {
                    "$ref": "#/types/artifactory:index/AccessTokenAdminToken:AccessTokenAdminToken",
                    "description": "(Optional) Specify the `instance_id` in this block to grant this token admin privileges. This can only be created when the authenticated user is an admin. `admin_token` cannot be specified with `groups`.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "(Optional) A space-separate list of the other Artifactory instances or services that should accept this token identified by their Artifactory Service IDs. You may set `\"jfrt@*\"` so the token to be accepted by all Artifactory instances.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "(Optional) The end date which the token is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`).\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "(Optional) A relative duration for which the token is valid until, for example `240h` (10 days) or `2400h30m`. Valid time units are \"s\", \"m\", \"h\".\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Optional) List of groups. The token is granted access based on the permissions of the groups. Specify `[\"*\"]` for all groups that the user belongs to. `groups` cannot be specified with `admin_token`.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Returns the refresh token when `refreshable` is true, or an empty string when `refreshable` is false\n"
                },
                "refreshable": {
                    "type": "boolean",
                    "description": "(Optional) Is this token refreshable? Defaults to `false`\n"
                },
                "username": {
                    "type": "string",
                    "description": "(Required) The username or subject for the token. A non-admin can only specify their own username. Admins can specify any existing username, or a new name for a temporary token. Temporary tokens require `groups` to be set.\n"
                }
            },
            "required": [
                "accessToken",
                "endDate",
                "refreshToken",
                "username"
            ],
            "inputProperties": {
                "adminToken": {
                    "$ref": "#/types/artifactory:index/AccessTokenAdminToken:AccessTokenAdminToken",
                    "description": "(Optional) Specify the `instance_id` in this block to grant this token admin privileges. This can only be created when the authenticated user is an admin. `admin_token` cannot be specified with `groups`.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "(Optional) A space-separate list of the other Artifactory instances or services that should accept this token identified by their Artifactory Service IDs. You may set `\"jfrt@*\"` so the token to be accepted by all Artifactory instances.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "(Optional) The end date which the token is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`).\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "(Optional) A relative duration for which the token is valid until, for example `240h` (10 days) or `2400h30m`. Valid time units are \"s\", \"m\", \"h\".\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Optional) List of groups. The token is granted access based on the permissions of the groups. Specify `[\"*\"]` for all groups that the user belongs to. `groups` cannot be specified with `admin_token`.\n"
                },
                "refreshable": {
                    "type": "boolean",
                    "description": "(Optional) Is this token refreshable? Defaults to `false`\n"
                },
                "username": {
                    "type": "string",
                    "description": "(Required) The username or subject for the token. A non-admin can only specify their own username. Admins can specify any existing username, or a new name for a temporary token. Temporary tokens require `groups` to be set.\n"
                }
            },
            "requiredInputs": [
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessToken resources.\n",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "Returns the access token to authenciate to Artifactory\n",
                        "language": {
                            "csharp": {
                                "name": "Details"
                            }
                        }
                    },
                    "adminToken": {
                        "$ref": "#/types/artifactory:index/AccessTokenAdminToken:AccessTokenAdminToken",
                        "description": "(Optional) Specify the `instance_id` in this block to grant this token admin privileges. This can only be created when the authenticated user is an admin. `admin_token` cannot be specified with `groups`.\n"
                    },
                    "audience": {
                        "type": "string",
                        "description": "(Optional) A space-separate list of the other Artifactory instances or services that should accept this token identified by their Artifactory Service IDs. You may set `\"jfrt@*\"` so the token to be accepted by all Artifactory instances.\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "(Optional) The end date which the token is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`).\n"
                    },
                    "endDateRelative": {
                        "type": "string",
                        "description": "(Optional) A relative duration for which the token is valid until, for example `240h` (10 days) or `2400h30m`. Valid time units are \"s\", \"m\", \"h\".\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Optional) List of groups. The token is granted access based on the permissions of the groups. Specify `[\"*\"]` for all groups that the user belongs to. `groups` cannot be specified with `admin_token`.\n"
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "Returns the refresh token when `refreshable` is true, or an empty string when `refreshable` is false\n"
                    },
                    "refreshable": {
                        "type": "boolean",
                        "description": "(Optional) Is this token refreshable? Defaults to `false`\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "(Required) The username or subject for the token. A non-admin can only specify their own username. Admins can specify any existing username, or a new name for a temporary token. Temporary tokens require `groups` to be set.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/alpineRepository:AlpineRepository": {
            "description": "## # Artifactory Local Alpine Repository Resource\n\nCreates a local Alpine repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\nimport * from \"fs\";\n\nconst some_keypairRSA = new artifactory.Keypair(\"some-keypairRSA\", {\n    pairName: \"some-keypair\",\n    pairType: \"RSA\",\n    alias: \"foo-alias\",\n    privateKey: fs.readFileSync(\"samples/rsa.priv\"),\n    publicKey: fs.readFileSync(\"samples/rsa.pub\"),\n});\nconst terraform_local_test_alpine_repo_basic = new artifactory.AlpineRepository(\"terraform-local-test-alpine-repo-basic\", {\n    key: \"terraform-local-test-alpine-repo-basic\",\n    primaryKeypairRef: some_keypairRSA.pairName,\n}, {\n    dependsOn: [some_keypairRSA],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nsome_keypair_rsa = artifactory.Keypair(\"some-keypairRSA\",\n    pair_name=\"some-keypair\",\n    pair_type=\"RSA\",\n    alias=\"foo-alias\",\n    private_key=(lambda path: open(path).read())(\"samples/rsa.priv\"),\n    public_key=(lambda path: open(path).read())(\"samples/rsa.pub\"))\nterraform_local_test_alpine_repo_basic = artifactory.AlpineRepository(\"terraform-local-test-alpine-repo-basic\",\n    key=\"terraform-local-test-alpine-repo-basic\",\n    primary_keypair_ref=some_keypair_rsa.pair_name,\n    opts=pulumi.ResourceOptions(depends_on=[some_keypair_rsa]))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var some_keypairRSA = new Artifactory.Keypair(\"some-keypairRSA\", new Artifactory.KeypairArgs\n        {\n            PairName = \"some-keypair\",\n            PairType = \"RSA\",\n            Alias = \"foo-alias\",\n            PrivateKey = File.ReadAllText(\"samples/rsa.priv\"),\n            PublicKey = File.ReadAllText(\"samples/rsa.pub\"),\n        });\n        var terraform_local_test_alpine_repo_basic = new Artifactory.AlpineRepository(\"terraform-local-test-alpine-repo-basic\", new Artifactory.AlpineRepositoryArgs\n        {\n            Key = \"terraform-local-test-alpine-repo-basic\",\n            PrimaryKeypairRef = some_keypairRSA.PairName,\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                some_keypairRSA,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewKeypair(ctx, \"some-keypairRSA\", \u0026artifactory.KeypairArgs{\n\t\t\tPairName:   pulumi.String(\"some-keypair\"),\n\t\t\tPairType:   pulumi.String(\"RSA\"),\n\t\t\tAlias:      pulumi.String(\"foo-alias\"),\n\t\t\tPrivateKey: readFileOrPanic(\"samples/rsa.priv\"),\n\t\t\tPublicKey:  readFileOrPanic(\"samples/rsa.pub\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewAlpineRepository(ctx, \"terraform-local-test-alpine-repo-basic\", \u0026artifactory.AlpineRepositoryArgs{\n\t\t\tKey:               pulumi.String(\"terraform-local-test-alpine-repo-basic\"),\n\t\t\tPrimaryKeypairRef: some_keypairRSA.PairName,\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tsome_keypairRSA,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "- The RSA key to be used to sign alpine indecies\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "- The RSA key to be used to sign alpine indecies\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlpineRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "indexCompressionFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "primaryKeypairRef": {
                        "type": "string",
                        "description": "- The RSA key to be used to sign alpine indecies\n"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/anonymousUser:AnonymousUser": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Define a new Artifactory 'anonymous' user for import\nconst anonymous = new artifactory.AnonymousUser(\"anonymous\", {});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Define a new Artifactory 'anonymous' user for import\nanonymous = artifactory.AnonymousUser(\"anonymous\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Define a new Artifactory 'anonymous' user for import\n        var anonymous = new Artifactory.AnonymousUser(\"anonymous\", new Artifactory.AnonymousUserArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewAnonymousUser(ctx, \"anonymous\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAnonymous user can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/anonymousUser:AnonymousUser anonymous-user anonymous\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "(Optional) Username for anonymous user. This should not be set in the HCL, or change after importing into Terraform\nstate.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "(Optional) Username for anonymous user. This should not be set in the HCL, or change after importing into Terraform\nstate.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AnonymousUser resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "(Optional) Username for anonymous user. This should not be set in the HCL, or change after importing into Terraform\nstate.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/apiKey:ApiKey": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a new Artifactory API key for the configured user\nconst ci = new artifactory.ApiKey(\"ci\", {});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Create a new Artifactory API key for the configured user\nci = artifactory.ApiKey(\"ci\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Artifactory API key for the configured user\n        var ci = new Artifactory.ApiKey(\"ci\", new Artifactory.ApiKeyArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewApiKey(ctx, \"ci\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA user's API key can be imported using any identifier, e.g.\n\n```sh\n $ pulumi import artifactory:index/apiKey:ApiKey test import\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key.\n",
                    "language": {
                        "csharp": {
                            "name": "Key"
                        }
                    }
                }
            },
            "required": [
                "apiKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApiKey resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "The API key.\n",
                        "language": {
                            "csharp": {
                                "name": "Key"
                            }
                        }
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/artifactPropertyWebhook:ArtifactPropertyWebhook": {
            "description": "## # Artifactory Artifact Property Webhook Resource\n\nProvides an Artifactory webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_generic_local = new artifactory.LocalGenericRepository(\"my-generic-local\", {key: \"my-generic-local\"});\nconst artifact_webhook = new artifactory.ArtifactPropertyWebhook(\"artifact-webhook\", {\n    key: \"artifact-property-webhook\",\n    eventTypes: [\n        \"added\",\n        \"deleted\",\n    ],\n    criteria: {\n        anyLocal: true,\n        anyRemote: false,\n        repoKeys: [my_generic_local.key],\n        includePatterns: [\"foo/**\"],\n        excludePatterns: [\"bar/**\"],\n    },\n    url: \"http://tempurl.org/webhook\",\n    secret: \"some-secret\",\n    proxy: \"proxy-key\",\n    customHttpHeaders: {\n        \"header-1\": \"value-1\",\n        \"header-2\": \"value-2\",\n    },\n}, {\n    dependsOn: [my_generic_local],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_generic_local = artifactory.LocalGenericRepository(\"my-generic-local\", key=\"my-generic-local\")\nartifact_webhook = artifactory.ArtifactPropertyWebhook(\"artifact-webhook\",\n    key=\"artifact-property-webhook\",\n    event_types=[\n        \"added\",\n        \"deleted\",\n    ],\n    criteria=artifactory.ArtifactPropertyWebhookCriteriaArgs(\n        any_local=True,\n        any_remote=False,\n        repo_keys=[my_generic_local.key],\n        include_patterns=[\"foo/**\"],\n        exclude_patterns=[\"bar/**\"],\n    ),\n    url=\"http://tempurl.org/webhook\",\n    secret=\"some-secret\",\n    proxy=\"proxy-key\",\n    custom_http_headers={\n        \"header-1\": \"value-1\",\n        \"header-2\": \"value-2\",\n    },\n    opts=pulumi.ResourceOptions(depends_on=[my_generic_local]))\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_generic_local = new Artifactory.LocalGenericRepository(\"my-generic-local\", new Artifactory.LocalGenericRepositoryArgs\n        {\n            Key = \"my-generic-local\",\n        });\n        var artifact_webhook = new Artifactory.ArtifactPropertyWebhook(\"artifact-webhook\", new Artifactory.ArtifactPropertyWebhookArgs\n        {\n            Key = \"artifact-property-webhook\",\n            EventTypes = \n            {\n                \"added\",\n                \"deleted\",\n            },\n            Criteria = new Artifactory.Inputs.ArtifactPropertyWebhookCriteriaArgs\n            {\n                AnyLocal = true,\n                AnyRemote = false,\n                RepoKeys = \n                {\n                    my_generic_local.Key,\n                },\n                IncludePatterns = \n                {\n                    \"foo/**\",\n                },\n                ExcludePatterns = \n                {\n                    \"bar/**\",\n                },\n            },\n            Url = \"http://tempurl.org/webhook\",\n            Secret = \"some-secret\",\n            Proxy = \"proxy-key\",\n            CustomHttpHeaders = \n            {\n                { \"header-1\", \"value-1\" },\n                { \"header-2\", \"value-2\" },\n            },\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                my_generic_local,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalGenericRepository(ctx, \"my-generic-local\", \u0026artifactory.LocalGenericRepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-generic-local\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewArtifactPropertyWebhook(ctx, \"artifact-webhook\", \u0026artifactory.ArtifactPropertyWebhookArgs{\n\t\t\tKey: pulumi.String(\"artifact-property-webhook\"),\n\t\t\tEventTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"added\"),\n\t\t\t\tpulumi.String(\"deleted\"),\n\t\t\t},\n\t\t\tCriteria: \u0026ArtifactPropertyWebhookCriteriaArgs{\n\t\t\t\tAnyLocal:  pulumi.Bool(true),\n\t\t\t\tAnyRemote: pulumi.Bool(false),\n\t\t\t\tRepoKeys: pulumi.StringArray{\n\t\t\t\t\tmy_generic_local.Key,\n\t\t\t\t},\n\t\t\t\tIncludePatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"foo/**\"),\n\t\t\t\t},\n\t\t\t\tExcludePatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"bar/**\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUrl:    pulumi.String(\"http://tempurl.org/webhook\"),\n\t\t\tSecret: pulumi.String(\"some-secret\"),\n\t\t\tProxy:  pulumi.String(\"proxy-key\"),\n\t\t\tCustomHttpHeaders: pulumi.StringMap{\n\t\t\t\t\"header-1\": pulumi.String(\"value-1\"),\n\t\t\t\t\"header-2\": pulumi.String(\"value-2\"),\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tmy_generic_local,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ArtifactPropertyWebhookCriteria:ArtifactPropertyWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"added\", \"deleted\"\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL\n"
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                }
            },
            "required": [
                "criteria",
                "eventTypes",
                "key",
                "url"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ArtifactPropertyWebhookCriteria:ArtifactPropertyWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"added\", \"deleted\"\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL\n"
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                }
            },
            "requiredInputs": [
                "criteria",
                "eventTypes",
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ArtifactPropertyWebhook resources.\n",
                "properties": {
                    "criteria": {
                        "$ref": "#/types/artifactory:index/ArtifactPropertyWebhookCriteria:ArtifactPropertyWebhookCriteria",
                        "description": "Specifies where the webhook will be applied on which repositories.\n"
                    },
                    "customHttpHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Webhook description. Max length 1000 characters.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of webhook. Default to 'true'\n"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"added\", \"deleted\"\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "secret": {
                        "type": "string",
                        "description": "Secret authentication token that will be sent to the configured URL\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/artifactWebhook:ArtifactWebhook": {
            "description": "## # Artifactory Artifact Webhook Resource\n\nProvides an Artifactory webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_generic_local = new artifactory.LocalGenericRepository(\"my-generic-local\", {key: \"my-generic-local\"});\nconst artifact_webhook = new artifactory.ArtifactWebhook(\"artifact-webhook\", {\n    key: \"artifact-webhook\",\n    eventTypes: [\n        \"deployed\",\n        \"deleted\",\n        \"moved\",\n        \"copied\",\n    ],\n    criteria: {\n        anyLocal: true,\n        anyRemote: false,\n        repoKeys: [my_generic_local.key],\n        includePatterns: [\"foo/**\"],\n        excludePatterns: [\"bar/**\"],\n    },\n    url: \"http://tempurl.org/webhook\",\n    secret: \"some-secret\",\n    proxy: \"proxy-key\",\n    customHttpHeaders: {\n        \"header-1\": \"value-1\",\n        \"header-2\": \"value-2\",\n    },\n}, {\n    dependsOn: [my_generic_local],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_generic_local = artifactory.LocalGenericRepository(\"my-generic-local\", key=\"my-generic-local\")\nartifact_webhook = artifactory.ArtifactWebhook(\"artifact-webhook\",\n    key=\"artifact-webhook\",\n    event_types=[\n        \"deployed\",\n        \"deleted\",\n        \"moved\",\n        \"copied\",\n    ],\n    criteria=artifactory.ArtifactWebhookCriteriaArgs(\n        any_local=True,\n        any_remote=False,\n        repo_keys=[my_generic_local.key],\n        include_patterns=[\"foo/**\"],\n        exclude_patterns=[\"bar/**\"],\n    ),\n    url=\"http://tempurl.org/webhook\",\n    secret=\"some-secret\",\n    proxy=\"proxy-key\",\n    custom_http_headers={\n        \"header-1\": \"value-1\",\n        \"header-2\": \"value-2\",\n    },\n    opts=pulumi.ResourceOptions(depends_on=[my_generic_local]))\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_generic_local = new Artifactory.LocalGenericRepository(\"my-generic-local\", new Artifactory.LocalGenericRepositoryArgs\n        {\n            Key = \"my-generic-local\",\n        });\n        var artifact_webhook = new Artifactory.ArtifactWebhook(\"artifact-webhook\", new Artifactory.ArtifactWebhookArgs\n        {\n            Key = \"artifact-webhook\",\n            EventTypes = \n            {\n                \"deployed\",\n                \"deleted\",\n                \"moved\",\n                \"copied\",\n            },\n            Criteria = new Artifactory.Inputs.ArtifactWebhookCriteriaArgs\n            {\n                AnyLocal = true,\n                AnyRemote = false,\n                RepoKeys = \n                {\n                    my_generic_local.Key,\n                },\n                IncludePatterns = \n                {\n                    \"foo/**\",\n                },\n                ExcludePatterns = \n                {\n                    \"bar/**\",\n                },\n            },\n            Url = \"http://tempurl.org/webhook\",\n            Secret = \"some-secret\",\n            Proxy = \"proxy-key\",\n            CustomHttpHeaders = \n            {\n                { \"header-1\", \"value-1\" },\n                { \"header-2\", \"value-2\" },\n            },\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                my_generic_local,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalGenericRepository(ctx, \"my-generic-local\", \u0026artifactory.LocalGenericRepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-generic-local\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewArtifactWebhook(ctx, \"artifact-webhook\", \u0026artifactory.ArtifactWebhookArgs{\n\t\t\tKey: pulumi.String(\"artifact-webhook\"),\n\t\t\tEventTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"deployed\"),\n\t\t\t\tpulumi.String(\"deleted\"),\n\t\t\t\tpulumi.String(\"moved\"),\n\t\t\t\tpulumi.String(\"copied\"),\n\t\t\t},\n\t\t\tCriteria: \u0026ArtifactWebhookCriteriaArgs{\n\t\t\t\tAnyLocal:  pulumi.Bool(true),\n\t\t\t\tAnyRemote: pulumi.Bool(false),\n\t\t\t\tRepoKeys: pulumi.StringArray{\n\t\t\t\t\tmy_generic_local.Key,\n\t\t\t\t},\n\t\t\t\tIncludePatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"foo/**\"),\n\t\t\t\t},\n\t\t\t\tExcludePatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"bar/**\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUrl:    pulumi.String(\"http://tempurl.org/webhook\"),\n\t\t\tSecret: pulumi.String(\"some-secret\"),\n\t\t\tProxy:  pulumi.String(\"proxy-key\"),\n\t\t\tCustomHttpHeaders: pulumi.StringMap{\n\t\t\t\t\"header-1\": pulumi.String(\"value-1\"),\n\t\t\t\t\"header-2\": pulumi.String(\"value-2\"),\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tmy_generic_local,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ArtifactWebhookCriteria:ArtifactWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"deployed\", \"deleted\", \"moved\", \"copied\"\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL\n"
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                }
            },
            "required": [
                "criteria",
                "eventTypes",
                "key",
                "url"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ArtifactWebhookCriteria:ArtifactWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"deployed\", \"deleted\", \"moved\", \"copied\"\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL\n"
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                }
            },
            "requiredInputs": [
                "criteria",
                "eventTypes",
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ArtifactWebhook resources.\n",
                "properties": {
                    "criteria": {
                        "$ref": "#/types/artifactory:index/ArtifactWebhookCriteria:ArtifactWebhookCriteria",
                        "description": "Specifies where the webhook will be applied on which repositories.\n"
                    },
                    "customHttpHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Webhook description. Max length 1000 characters.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of webhook. Default to 'true'\n"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"deployed\", \"deleted\", \"moved\", \"copied\"\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "secret": {
                        "type": "string",
                        "description": "Secret authentication token that will be sent to the configured URL\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/artifactoryReleaseBundleWebhook:ArtifactoryReleaseBundleWebhook": {
            "description": "## # Artifactory Release Bundle Webhook Resource\n\nProvides an Artifactory webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst release_bundle_webhook = new artifactory.ReleaseBundleWebhook(\"release-bundle-webhook\", {\n    criteria: {\n        anyReleaseBundle: false,\n        excludePatterns: [\"bar/**\"],\n        includePatterns: [\"foo/**\"],\n        registeredReleaseBundleNames: [\"bundle-name\"],\n    },\n    customHttpHeaders: {\n        \"header-1\": \"value-1\",\n        \"header-2\": \"value-2\",\n    },\n    eventTypes: [\n        \"created\",\n        \"signed\",\n        \"deleted\",\n    ],\n    key: \"release-bundle-webhook\",\n    proxy: \"proxy-key\",\n    secret: \"some-secret\",\n    url: \"http://tempurl.org/webhook\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nrelease_bundle_webhook = artifactory.ReleaseBundleWebhook(\"release-bundle-webhook\",\n    criteria=artifactory.ReleaseBundleWebhookCriteriaArgs(\n        any_release_bundle=False,\n        exclude_patterns=[\"bar/**\"],\n        include_patterns=[\"foo/**\"],\n        registered_release_bundle_names=[\"bundle-name\"],\n    ),\n    custom_http_headers={\n        \"header-1\": \"value-1\",\n        \"header-2\": \"value-2\",\n    },\n    event_types=[\n        \"created\",\n        \"signed\",\n        \"deleted\",\n    ],\n    key=\"release-bundle-webhook\",\n    proxy=\"proxy-key\",\n    secret=\"some-secret\",\n    url=\"http://tempurl.org/webhook\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var release_bundle_webhook = new Artifactory.ReleaseBundleWebhook(\"release-bundle-webhook\", new Artifactory.ReleaseBundleWebhookArgs\n        {\n            Criteria = new Artifactory.Inputs.ReleaseBundleWebhookCriteriaArgs\n            {\n                AnyReleaseBundle = false,\n                ExcludePatterns = \n                {\n                    \"bar/**\",\n                },\n                IncludePatterns = \n                {\n                    \"foo/**\",\n                },\n                RegisteredReleaseBundleNames = \n                {\n                    \"bundle-name\",\n                },\n            },\n            CustomHttpHeaders = \n            {\n                { \"header-1\", \"value-1\" },\n                { \"header-2\", \"value-2\" },\n            },\n            EventTypes = \n            {\n                \"created\",\n                \"signed\",\n                \"deleted\",\n            },\n            Key = \"release-bundle-webhook\",\n            Proxy = \"proxy-key\",\n            Secret = \"some-secret\",\n            Url = \"http://tempurl.org/webhook\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewReleaseBundleWebhook(ctx, \"release-bundle-webhook\", \u0026artifactory.ReleaseBundleWebhookArgs{\n\t\t\tCriteria: \u0026ReleaseBundleWebhookCriteriaArgs{\n\t\t\t\tAnyReleaseBundle: pulumi.Bool(false),\n\t\t\t\tExcludePatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"bar/**\"),\n\t\t\t\t},\n\t\t\t\tIncludePatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"foo/**\"),\n\t\t\t\t},\n\t\t\t\tRegisteredReleaseBundleNames: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"bundle-name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tCustomHttpHeaders: pulumi.StringMap{\n\t\t\t\t\"header-1\": pulumi.String(\"value-1\"),\n\t\t\t\t\"header-2\": pulumi.String(\"value-2\"),\n\t\t\t},\n\t\t\tEventTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"created\"),\n\t\t\t\tpulumi.String(\"signed\"),\n\t\t\t\tpulumi.String(\"deleted\"),\n\t\t\t},\n\t\t\tKey:    pulumi.String(\"release-bundle-webhook\"),\n\t\t\tProxy:  pulumi.String(\"proxy-key\"),\n\t\t\tSecret: pulumi.String(\"some-secret\"),\n\t\t\tUrl:    pulumi.String(\"http://tempurl.org/webhook\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ArtifactoryReleaseBundleWebhookCriteria:ArtifactoryReleaseBundleWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"created\", \"signed\", \"deleted\"\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL\n"
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                }
            },
            "required": [
                "criteria",
                "eventTypes",
                "key",
                "url"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ArtifactoryReleaseBundleWebhookCriteria:ArtifactoryReleaseBundleWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"created\", \"signed\", \"deleted\"\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL\n"
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                }
            },
            "requiredInputs": [
                "criteria",
                "eventTypes",
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ArtifactoryReleaseBundleWebhook resources.\n",
                "properties": {
                    "criteria": {
                        "$ref": "#/types/artifactory:index/ArtifactoryReleaseBundleWebhookCriteria:ArtifactoryReleaseBundleWebhookCriteria",
                        "description": "Specifies where the webhook will be applied on which repositories.\n"
                    },
                    "customHttpHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Webhook description. Max length 1000 characters.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of webhook. Default to 'true'\n"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"created\", \"signed\", \"deleted\"\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "secret": {
                        "type": "string",
                        "description": "Secret authentication token that will be sent to the configured URL\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/backup:Backup": {
            "description": "## # Artifactory Backup Resource\n\nThis resource can be used to manage the automatic and periodic backups of the entire Artifactory instance.\n\nWhen a artifactory.Backup resource is configured and enabled to true, backup of the entire Artifactory system will be done automatically and periodically.  The backup process creates a time-stamped directory in the target backup directory.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Configure Artifactory Backup system config\nconst backupConfigName = new artifactory.Backup(\"backup_config_name\", {\n    createArchive: false,\n    cronExp: \"0 0 12 * * ?\",\n    enabled: true,\n    excludeNewRepositories: true,\n    excludedRepositories: [],\n    key: \"backup_config_name\",\n    retentionPeriodHours: 1000,\n    sendMailOnError: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Configure Artifactory Backup system config\nbackup_config_name = artifactory.Backup(\"backupConfigName\",\n    create_archive=False,\n    cron_exp=\"0 0 12 * * ?\",\n    enabled=True,\n    exclude_new_repositories=True,\n    excluded_repositories=[],\n    key=\"backup_config_name\",\n    retention_period_hours=1000,\n    send_mail_on_error=True)\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Configure Artifactory Backup system config\n        var backupConfigName = new Artifactory.Backup(\"backupConfigName\", new Artifactory.BackupArgs\n        {\n            CreateArchive = false,\n            CronExp = \"0 0 12 * * ?\",\n            Enabled = true,\n            ExcludeNewRepositories = true,\n            ExcludedRepositories = {},\n            Key = \"backup_config_name\",\n            RetentionPeriodHours = 1000,\n            SendMailOnError = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewBackup(ctx, \"backupConfigName\", \u0026artifactory.BackupArgs{\n\t\t\tCreateArchive:          pulumi.Bool(false),\n\t\t\tCronExp:                pulumi.String(\"0 0 12 * * ?\"),\n\t\t\tEnabled:                pulumi.Bool(true),\n\t\t\tExcludeNewRepositories: pulumi.Bool(true),\n\t\t\tExcludedRepositories:   pulumi.StringArray{},\n\t\t\tKey:                    pulumi.String(\"backup_config_name\"),\n\t\t\tRetentionPeriodHours:   pulumi.Int(1000),\n\t\t\tSendMailOnError:        pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\nNote: `Key` argument has to match to the resource name.   \nReference Link: [JFrog Artifactory Backup](https://www.jfrog.com/confluence/display/JFROG/Backups)\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nBackup config can be imported using the key, e.g.\n\n```sh\n $ pulumi import artifactory:index/backup:Backup backup_name backup_name\n```\n\n ",
            "properties": {
                "createArchive": {
                    "type": "boolean",
                    "description": "If set, backups will be created within a Zip archive (Slow and CPU intensive). Default value is `false`.\n"
                },
                "cronExp": {
                    "type": "string",
                    "description": "A valid CRON expression that you can use to control backup frequency. Eg: \"0 0 12 * * ? \"\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Flag to enable or disable the backup config. Default value is `true`.\n"
                },
                "excludeNewRepositories": {
                    "type": "boolean",
                    "description": "When set, new repositories will not be automatically added to the backup. Default value is `false`.\n"
                },
                "excludedRepositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of excluded repositories from the backup. Default is empty list.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The unique ID of the artifactory backup config.\n"
                },
                "retentionPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to keep a backup before Artifactory will clean it up to free up disk space. Applicable only to non-incremental backups. Default value is 168 hours ie: 7 days.\n"
                },
                "sendMailOnError": {
                    "type": "boolean",
                    "description": "If set, all Artifactory administrators will be notified by email if any problem is encountered during backup. Default value is `true`.\n"
                }
            },
            "required": [
                "cronExp",
                "key"
            ],
            "inputProperties": {
                "createArchive": {
                    "type": "boolean",
                    "description": "If set, backups will be created within a Zip archive (Slow and CPU intensive). Default value is `false`.\n"
                },
                "cronExp": {
                    "type": "string",
                    "description": "A valid CRON expression that you can use to control backup frequency. Eg: \"0 0 12 * * ? \"\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Flag to enable or disable the backup config. Default value is `true`.\n"
                },
                "excludeNewRepositories": {
                    "type": "boolean",
                    "description": "When set, new repositories will not be automatically added to the backup. Default value is `false`.\n"
                },
                "excludedRepositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of excluded repositories from the backup. Default is empty list.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The unique ID of the artifactory backup config.\n"
                },
                "retentionPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to keep a backup before Artifactory will clean it up to free up disk space. Applicable only to non-incremental backups. Default value is 168 hours ie: 7 days.\n"
                },
                "sendMailOnError": {
                    "type": "boolean",
                    "description": "If set, all Artifactory administrators will be notified by email if any problem is encountered during backup. Default value is `true`.\n"
                }
            },
            "requiredInputs": [
                "cronExp",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Backup resources.\n",
                "properties": {
                    "createArchive": {
                        "type": "boolean",
                        "description": "If set, backups will be created within a Zip archive (Slow and CPU intensive). Default value is `false`.\n"
                    },
                    "cronExp": {
                        "type": "string",
                        "description": "A valid CRON expression that you can use to control backup frequency. Eg: \"0 0 12 * * ? \"\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Flag to enable or disable the backup config. Default value is `true`.\n"
                    },
                    "excludeNewRepositories": {
                        "type": "boolean",
                        "description": "When set, new repositories will not be automatically added to the backup. Default value is `false`.\n"
                    },
                    "excludedRepositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of excluded repositories from the backup. Default is empty list.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The unique ID of the artifactory backup config.\n"
                    },
                    "retentionPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to keep a backup before Artifactory will clean it up to free up disk space. Applicable only to non-incremental backups. Default value is 168 hours ie: 7 days.\n"
                    },
                    "sendMailOnError": {
                        "type": "boolean",
                        "description": "If set, all Artifactory administrators will be notified by email if any problem is encountered during backup. Default value is `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/buildWebhook:BuildWebhook": {
            "description": "## # Artifactory Build Webhook Resource\n\nProvides an Artifactory webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst build_webhook = new artifactory.BuildWebhook(\"build-webhook\", {\n    criteria: {\n        anyBuild: true,\n        excludePatterns: [\"bar/**\"],\n        includePatterns: [\"foo/**\"],\n        selectedBuilds: [\"build-id\"],\n    },\n    customHttpHeaders: {\n        \"header-1\": \"value-1\",\n        \"header-2\": \"value-2\",\n    },\n    eventTypes: [\n        \"uploaded\",\n        \"deleted\",\n        \"promoted\",\n    ],\n    key: \"build-webhook\",\n    proxy: \"proxy-key\",\n    secret: \"some-secret\",\n    url: \"http://tempurl.org/webhook\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nbuild_webhook = artifactory.BuildWebhook(\"build-webhook\",\n    criteria=artifactory.BuildWebhookCriteriaArgs(\n        any_build=True,\n        exclude_patterns=[\"bar/**\"],\n        include_patterns=[\"foo/**\"],\n        selected_builds=[\"build-id\"],\n    ),\n    custom_http_headers={\n        \"header-1\": \"value-1\",\n        \"header-2\": \"value-2\",\n    },\n    event_types=[\n        \"uploaded\",\n        \"deleted\",\n        \"promoted\",\n    ],\n    key=\"build-webhook\",\n    proxy=\"proxy-key\",\n    secret=\"some-secret\",\n    url=\"http://tempurl.org/webhook\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var build_webhook = new Artifactory.BuildWebhook(\"build-webhook\", new Artifactory.BuildWebhookArgs\n        {\n            Criteria = new Artifactory.Inputs.BuildWebhookCriteriaArgs\n            {\n                AnyBuild = true,\n                ExcludePatterns = \n                {\n                    \"bar/**\",\n                },\n                IncludePatterns = \n                {\n                    \"foo/**\",\n                },\n                SelectedBuilds = \n                {\n                    \"build-id\",\n                },\n            },\n            CustomHttpHeaders = \n            {\n                { \"header-1\", \"value-1\" },\n                { \"header-2\", \"value-2\" },\n            },\n            EventTypes = \n            {\n                \"uploaded\",\n                \"deleted\",\n                \"promoted\",\n            },\n            Key = \"build-webhook\",\n            Proxy = \"proxy-key\",\n            Secret = \"some-secret\",\n            Url = \"http://tempurl.org/webhook\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewBuildWebhook(ctx, \"build-webhook\", \u0026artifactory.BuildWebhookArgs{\n\t\t\tCriteria: \u0026BuildWebhookCriteriaArgs{\n\t\t\t\tAnyBuild: pulumi.Bool(true),\n\t\t\t\tExcludePatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"bar/**\"),\n\t\t\t\t},\n\t\t\t\tIncludePatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"foo/**\"),\n\t\t\t\t},\n\t\t\t\tSelectedBuilds: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"build-id\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tCustomHttpHeaders: pulumi.StringMap{\n\t\t\t\t\"header-1\": pulumi.String(\"value-1\"),\n\t\t\t\t\"header-2\": pulumi.String(\"value-2\"),\n\t\t\t},\n\t\t\tEventTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"uploaded\"),\n\t\t\t\tpulumi.String(\"deleted\"),\n\t\t\t\tpulumi.String(\"promoted\"),\n\t\t\t},\n\t\t\tKey:    pulumi.String(\"build-webhook\"),\n\t\t\tProxy:  pulumi.String(\"proxy-key\"),\n\t\t\tSecret: pulumi.String(\"some-secret\"),\n\t\t\tUrl:    pulumi.String(\"http://tempurl.org/webhook\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/BuildWebhookCriteria:BuildWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"uploaded\", \"deleted\", \"promoted\"\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL\n"
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                }
            },
            "required": [
                "criteria",
                "eventTypes",
                "key",
                "url"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/BuildWebhookCriteria:BuildWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"uploaded\", \"deleted\", \"promoted\"\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL\n"
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                }
            },
            "requiredInputs": [
                "criteria",
                "eventTypes",
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BuildWebhook resources.\n",
                "properties": {
                    "criteria": {
                        "$ref": "#/types/artifactory:index/BuildWebhookCriteria:BuildWebhookCriteria",
                        "description": "Specifies where the webhook will be applied on which repositories.\n"
                    },
                    "customHttpHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Webhook description. Max length 1000 characters.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of webhook. Default to 'true'\n"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"uploaded\", \"deleted\", \"promoted\"\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "secret": {
                        "type": "string",
                        "description": "Secret authentication token that will be sent to the configured URL\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/certificate:Certificate": {
            "description": "## # Artifactory Certificate Resource\n\nProvides an Artifactory certificate resource. This can be used to create and manage Artifactory certificates which can be used as client authentication against remote repositories.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\nimport * as fs from \"fs\";\n\n// Create a new Artifactory certificate called my-cert\nconst my_cert = new artifactory.Certificate(\"my-cert\", {\n    alias: \"my-cert\",\n    content: fs.readFileSync(\"/path/to/bundle.pem\", \"utf-8\"),\n});\n// This can then be used by a remote repository\nconst my_remote = new artifactory.RemoteMavenRepository(\"my-remote\", {\n    // more code\n    clientTlsCertificate: my_cert.alias,\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Create a new Artifactory certificate called my-cert\nmy_cert = artifactory.Certificate(\"my-cert\",\n    alias=\"my-cert\",\n    content=(lambda path: open(path).read())(\"/path/to/bundle.pem\"))\n# This can then be used by a remote repository\nmy_remote = artifactory.RemoteMavenRepository(\"my-remote\", client_tls_certificate=my_cert.alias)\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Artifactory certificate called my-cert\n        var my_cert = new Artifactory.Certificate(\"my-cert\", new Artifactory.CertificateArgs\n        {\n            Alias = \"my-cert\",\n            Content = File.ReadAllText(\"/path/to/bundle.pem\"),\n        });\n        // This can then be used by a remote repository\n        var my_remote = new Artifactory.RemoteMavenRepository(\"my-remote\", new Artifactory.RemoteMavenRepositoryArgs\n        {\n            ClientTlsCertificate = my_cert.Alias,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewCertificate(ctx, \"my-cert\", \u0026artifactory.CertificateArgs{\n\t\t\tAlias:   pulumi.String(\"my-cert\"),\n\t\t\tContent: readFileOrPanic(\"/path/to/bundle.pem\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewRemoteMavenRepository(ctx, \"my-remote\", \u0026artifactory.RemoteMavenRepositoryArgs{\n\t\t\tClientTlsCertificate: my_cert.Alias,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCertificates can be imported using their alias, e.g.\n\n```sh\n $ pulumi import artifactory:index/certificate:Certificate my-cert my-cert\n```\n\n ",
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Name of certificate.\n"
                },
                "content": {
                    "type": "string",
                    "description": "PEM-encoded client certificate and private key.\n"
                },
                "file": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string",
                    "description": "SHA256 fingerprint of the certificate.\n"
                },
                "issuedBy": {
                    "type": "string",
                    "description": "Name of the certificate authority that issued the certificate.\n"
                },
                "issuedOn": {
                    "type": "string",
                    "description": "The time \u0026 date when the certificate is valid from.\n"
                },
                "issuedTo": {
                    "type": "string",
                    "description": "Name of whom the certificate has been issued to.\n"
                },
                "validUntil": {
                    "type": "string",
                    "description": "The time \u0026 date when the certificate expires.\n"
                }
            },
            "required": [
                "alias",
                "fingerprint",
                "issuedBy",
                "issuedOn",
                "issuedTo",
                "validUntil"
            ],
            "inputProperties": {
                "alias": {
                    "type": "string",
                    "description": "Name of certificate.\n"
                },
                "content": {
                    "type": "string",
                    "description": "PEM-encoded client certificate and private key.\n"
                },
                "file": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "alias"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Certificate resources.\n",
                "properties": {
                    "alias": {
                        "type": "string",
                        "description": "Name of certificate.\n"
                    },
                    "content": {
                        "type": "string",
                        "description": "PEM-encoded client certificate and private key.\n"
                    },
                    "file": {
                        "type": "string"
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "SHA256 fingerprint of the certificate.\n"
                    },
                    "issuedBy": {
                        "type": "string",
                        "description": "Name of the certificate authority that issued the certificate.\n"
                    },
                    "issuedOn": {
                        "type": "string",
                        "description": "The time \u0026 date when the certificate is valid from.\n"
                    },
                    "issuedTo": {
                        "type": "string",
                        "description": "Name of whom the certificate has been issued to.\n"
                    },
                    "validUntil": {
                        "type": "string",
                        "description": "The time \u0026 date when the certificate expires.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/debianRepository:DebianRepository": {
            "description": "## # Artifactory Local Debian Repository Resource\n\nCreates a local Debian repository and allows for the creation of a GPG key\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\nimport * from \"fs\";\n\nconst some_keypairGPG1 = new artifactory.Keypair(\"some-keypairGPG1\", {\n    pairName: `some-keypair${random_id.randid.id}`,\n    pairType: \"GPG\",\n    alias: \"foo-alias1\",\n    privateKey: fs.readFileSync(\"samples/gpg.priv\"),\n    publicKey: fs.readFileSync(\"samples/gpg.pub\"),\n});\nconst some_keypairGPG2 = new artifactory.Keypair(\"some-keypairGPG2\", {\n    pairName: `some-keypair4${random_id.randid.id}`,\n    pairType: \"GPG\",\n    alias: \"foo-alias2\",\n    privateKey: fs.readFileSync(\"samples/gpg.priv\"),\n    publicKey: fs.readFileSync(\"samples/gpg.pub\"),\n});\nconst my_debian_repo = new artifactory.DebianRepository(\"my-debian-repo\", {\n    key: \"my-debian-repo\",\n    primaryKeypairRef: some_keypairGPG1.pairName,\n    secondaryKeypairRef: some_keypairGPG2.pairName,\n    indexCompressionFormats: [\n        \"bz2\",\n        \"lzma\",\n        \"xz\",\n    ],\n    trivialLayout: true,\n}, {\n    dependsOn: [\n        some_keypairGPG1,\n        some_keypairGPG2,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nsome_keypair_gpg1 = artifactory.Keypair(\"some-keypairGPG1\",\n    pair_name=f\"some-keypair{random_id['randid']['id']}\",\n    pair_type=\"GPG\",\n    alias=\"foo-alias1\",\n    private_key=(lambda path: open(path).read())(\"samples/gpg.priv\"),\n    public_key=(lambda path: open(path).read())(\"samples/gpg.pub\"))\nsome_keypair_gpg2 = artifactory.Keypair(\"some-keypairGPG2\",\n    pair_name=f\"some-keypair4{random_id['randid']['id']}\",\n    pair_type=\"GPG\",\n    alias=\"foo-alias2\",\n    private_key=(lambda path: open(path).read())(\"samples/gpg.priv\"),\n    public_key=(lambda path: open(path).read())(\"samples/gpg.pub\"))\nmy_debian_repo = artifactory.DebianRepository(\"my-debian-repo\",\n    key=\"my-debian-repo\",\n    primary_keypair_ref=some_keypair_gpg1.pair_name,\n    secondary_keypair_ref=some_keypair_gpg2.pair_name,\n    index_compression_formats=[\n        \"bz2\",\n        \"lzma\",\n        \"xz\",\n    ],\n    trivial_layout=True,\n    opts=pulumi.ResourceOptions(depends_on=[\n            some_keypair_gpg1,\n            some_keypair_gpg2,\n        ]))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var some_keypairGPG1 = new Artifactory.Keypair(\"some-keypairGPG1\", new Artifactory.KeypairArgs\n        {\n            PairName = $\"some-keypair{random_id.Randid.Id}\",\n            PairType = \"GPG\",\n            Alias = \"foo-alias1\",\n            PrivateKey = File.ReadAllText(\"samples/gpg.priv\"),\n            PublicKey = File.ReadAllText(\"samples/gpg.pub\"),\n        });\n        var some_keypairGPG2 = new Artifactory.Keypair(\"some-keypairGPG2\", new Artifactory.KeypairArgs\n        {\n            PairName = $\"some-keypair4{random_id.Randid.Id}\",\n            PairType = \"GPG\",\n            Alias = \"foo-alias2\",\n            PrivateKey = File.ReadAllText(\"samples/gpg.priv\"),\n            PublicKey = File.ReadAllText(\"samples/gpg.pub\"),\n        });\n        var my_debian_repo = new Artifactory.DebianRepository(\"my-debian-repo\", new Artifactory.DebianRepositoryArgs\n        {\n            Key = \"my-debian-repo\",\n            PrimaryKeypairRef = some_keypairGPG1.PairName,\n            SecondaryKeypairRef = some_keypairGPG2.PairName,\n            IndexCompressionFormats = \n            {\n                \"bz2\",\n                \"lzma\",\n                \"xz\",\n            },\n            TrivialLayout = true,\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                some_keypairGPG1,\n                some_keypairGPG2,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewKeypair(ctx, \"some-keypairGPG1\", \u0026artifactory.KeypairArgs{\n\t\t\tPairName:   pulumi.String(fmt.Sprintf(\"%v%v\", \"some-keypair\", random_id.Randid.Id)),\n\t\t\tPairType:   pulumi.String(\"GPG\"),\n\t\t\tAlias:      pulumi.String(\"foo-alias1\"),\n\t\t\tPrivateKey: readFileOrPanic(\"samples/gpg.priv\"),\n\t\t\tPublicKey:  readFileOrPanic(\"samples/gpg.pub\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewKeypair(ctx, \"some-keypairGPG2\", \u0026artifactory.KeypairArgs{\n\t\t\tPairName:   pulumi.String(fmt.Sprintf(\"%v%v\", \"some-keypair4\", random_id.Randid.Id)),\n\t\t\tPairType:   pulumi.String(\"GPG\"),\n\t\t\tAlias:      pulumi.String(\"foo-alias2\"),\n\t\t\tPrivateKey: readFileOrPanic(\"samples/gpg.priv\"),\n\t\t\tPublicKey:  readFileOrPanic(\"samples/gpg.pub\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewDebianRepository(ctx, \"my-debian-repo\", \u0026artifactory.DebianRepositoryArgs{\n\t\t\tKey:                 pulumi.String(\"my-debian-repo\"),\n\t\t\tPrimaryKeypairRef:   some_keypairGPG1.PairName,\n\t\t\tSecondaryKeypairRef: some_keypairGPG2.PairName,\n\t\t\tIndexCompressionFormats: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"bz2\"),\n\t\t\t\tpulumi.String(\"lzma\"),\n\t\t\t\tpulumi.String(\"xz\"),\n\t\t\t},\n\t\t\tTrivialLayout: pulumi.Bool(true),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tsome_keypairGPG1,\n\t\t\tsome_keypairGPG2,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- If you're creating this repo, then maybe you know?\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "- The RSA key to be used to sign packages\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "- Not really clear what this does\n"
                },
                "trivialLayout": {
                    "type": "boolean",
                    "description": "- Apparently this is a deprecated repo layout\n",
                    "deprecationMessage": "You shouldn't be using this"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- If you're creating this repo, then maybe you know?\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "- The RSA key to be used to sign packages\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "- Not really clear what this does\n"
                },
                "trivialLayout": {
                    "type": "boolean",
                    "description": "- Apparently this is a deprecated repo layout\n",
                    "deprecationMessage": "You shouldn't be using this"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DebianRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "indexCompressionFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "- If you're creating this repo, then maybe you know?\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "primaryKeypairRef": {
                        "type": "string",
                        "description": "- The RSA key to be used to sign packages\n"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "secondaryKeypairRef": {
                        "type": "string",
                        "description": "- Not really clear what this does\n"
                    },
                    "trivialLayout": {
                        "type": "boolean",
                        "description": "- Apparently this is a deprecated repo layout\n",
                        "deprecationMessage": "You shouldn't be using this"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/distributionWebhook:DistributionWebhook": {
            "description": "## # Artifactory Distribution Webhook Resource\n\nProvides an Artifactory webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst distribution_webhook = new artifactory.DistributionWebhook(\"distribution-webhook\", {\n    criteria: {\n        anyReleaseBundle: false,\n        excludePatterns: [\"bar/**\"],\n        includePatterns: [\"foo/**\"],\n        registeredReleaseBundleNames: [\"bundle-name\"],\n    },\n    customHttpHeaders: {\n        \"header-1\": \"value-1\",\n        \"header-2\": \"value-2\",\n    },\n    eventTypes: [\n        \"distribute_started\",\n        \"distribute_completed\",\n        \"distribute_aborted\",\n        \"distribute_failed\",\n        \"delete_started\",\n        \"delete_completed\",\n        \"delete_failed\",\n    ],\n    key: \"distribution-webhook\",\n    proxy: \"proxy-key\",\n    secret: \"some-secret\",\n    url: \"http://tempurl.org/webhook\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\ndistribution_webhook = artifactory.DistributionWebhook(\"distribution-webhook\",\n    criteria=artifactory.DistributionWebhookCriteriaArgs(\n        any_release_bundle=False,\n        exclude_patterns=[\"bar/**\"],\n        include_patterns=[\"foo/**\"],\n        registered_release_bundle_names=[\"bundle-name\"],\n    ),\n    custom_http_headers={\n        \"header-1\": \"value-1\",\n        \"header-2\": \"value-2\",\n    },\n    event_types=[\n        \"distribute_started\",\n        \"distribute_completed\",\n        \"distribute_aborted\",\n        \"distribute_failed\",\n        \"delete_started\",\n        \"delete_completed\",\n        \"delete_failed\",\n    ],\n    key=\"distribution-webhook\",\n    proxy=\"proxy-key\",\n    secret=\"some-secret\",\n    url=\"http://tempurl.org/webhook\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var distribution_webhook = new Artifactory.DistributionWebhook(\"distribution-webhook\", new Artifactory.DistributionWebhookArgs\n        {\n            Criteria = new Artifactory.Inputs.DistributionWebhookCriteriaArgs\n            {\n                AnyReleaseBundle = false,\n                ExcludePatterns = \n                {\n                    \"bar/**\",\n                },\n                IncludePatterns = \n                {\n                    \"foo/**\",\n                },\n                RegisteredReleaseBundleNames = \n                {\n                    \"bundle-name\",\n                },\n            },\n            CustomHttpHeaders = \n            {\n                { \"header-1\", \"value-1\" },\n                { \"header-2\", \"value-2\" },\n            },\n            EventTypes = \n            {\n                \"distribute_started\",\n                \"distribute_completed\",\n                \"distribute_aborted\",\n                \"distribute_failed\",\n                \"delete_started\",\n                \"delete_completed\",\n                \"delete_failed\",\n            },\n            Key = \"distribution-webhook\",\n            Proxy = \"proxy-key\",\n            Secret = \"some-secret\",\n            Url = \"http://tempurl.org/webhook\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewDistributionWebhook(ctx, \"distribution-webhook\", \u0026artifactory.DistributionWebhookArgs{\n\t\t\tCriteria: \u0026DistributionWebhookCriteriaArgs{\n\t\t\t\tAnyReleaseBundle: pulumi.Bool(false),\n\t\t\t\tExcludePatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"bar/**\"),\n\t\t\t\t},\n\t\t\t\tIncludePatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"foo/**\"),\n\t\t\t\t},\n\t\t\t\tRegisteredReleaseBundleNames: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"bundle-name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tCustomHttpHeaders: pulumi.StringMap{\n\t\t\t\t\"header-1\": pulumi.String(\"value-1\"),\n\t\t\t\t\"header-2\": pulumi.String(\"value-2\"),\n\t\t\t},\n\t\t\tEventTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"distribute_started\"),\n\t\t\t\tpulumi.String(\"distribute_completed\"),\n\t\t\t\tpulumi.String(\"distribute_aborted\"),\n\t\t\t\tpulumi.String(\"distribute_failed\"),\n\t\t\t\tpulumi.String(\"delete_started\"),\n\t\t\t\tpulumi.String(\"delete_completed\"),\n\t\t\t\tpulumi.String(\"delete_failed\"),\n\t\t\t},\n\t\t\tKey:    pulumi.String(\"distribution-webhook\"),\n\t\t\tProxy:  pulumi.String(\"proxy-key\"),\n\t\t\tSecret: pulumi.String(\"some-secret\"),\n\t\t\tUrl:    pulumi.String(\"http://tempurl.org/webhook\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/DistributionWebhookCriteria:DistributionWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"distribute_started\", \"distribute_completed\", \"distribute_aborted\", \"distribute_failed\", \"delete_started\", \"delete_completed\", \"delete_failed\"\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL\n"
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                }
            },
            "required": [
                "criteria",
                "eventTypes",
                "key",
                "url"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/DistributionWebhookCriteria:DistributionWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"distribute_started\", \"distribute_completed\", \"distribute_aborted\", \"distribute_failed\", \"delete_started\", \"delete_completed\", \"delete_failed\"\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL\n"
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                }
            },
            "requiredInputs": [
                "criteria",
                "eventTypes",
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DistributionWebhook resources.\n",
                "properties": {
                    "criteria": {
                        "$ref": "#/types/artifactory:index/DistributionWebhookCriteria:DistributionWebhookCriteria",
                        "description": "Specifies where the webhook will be applied on which repositories.\n"
                    },
                    "customHttpHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Webhook description. Max length 1000 characters.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of webhook. Default to 'true'\n"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"distribute_started\", \"distribute_completed\", \"distribute_aborted\", \"distribute_failed\", \"delete_started\", \"delete_completed\", \"delete_failed\"\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "secret": {
                        "type": "string",
                        "description": "Secret authentication token that will be sent to the configured URL\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/dockerV1Repository:DockerV1Repository": {
            "description": "## # Artifactory Local Docker V1 Repository Resource\n\nCreates a local Docker v1 repository - By choosing a V1 repository, you don't really have many options\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo = new artifactory.DockerV2Repository(\"foo\", {\n    key: \"foo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo = artifactory.DockerV2Repository(\"foo\", key=\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Artifactory.DockerV2Repository(\"foo\", new Artifactory.DockerV2RepositoryArgs\n        {\n            Key = \"foo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewDockerV2Repository(ctx, \"foo\", \u0026artifactory.DockerV2RepositoryArgs{\n\t\t\tKey: pulumi.String(\"foo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "blockPushingSchema1": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "maxUniqueTags": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "tagRetention": {
                    "type": "integer"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "apiVersion",
                "blockPushingSchema1",
                "excludesPattern",
                "includesPattern",
                "key",
                "maxUniqueTags",
                "packageType",
                "tagRetention"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "maxUniqueTags": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DockerV1Repository resources.\n",
                "properties": {
                    "apiVersion": {
                        "type": "string"
                    },
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "blockPushingSchema1": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "maxUniqueTags": {
                        "type": "integer"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "tagRetention": {
                        "type": "integer"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/dockerV2Repository:DockerV2Repository": {
            "description": "## # Artifactory Local Docker V2 Repository Resource\n\nCreates a local Docker v2 repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo = new artifactory.DockerV2Repository(\"foo\", {\n    key: \"foo\",\n    maxUniqueTags: 5,\n    tagRetention: 3,\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo = artifactory.DockerV2Repository(\"foo\",\n    key=\"foo\",\n    max_unique_tags=5,\n    tag_retention=3)\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Artifactory.DockerV2Repository(\"foo\", new Artifactory.DockerV2RepositoryArgs\n        {\n            Key = \"foo\",\n            MaxUniqueTags = 5,\n            TagRetention = 3,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewDockerV2Repository(ctx, \"foo\", \u0026artifactory.DockerV2RepositoryArgs{\n\t\t\tKey:           pulumi.String(\"foo\"),\n\t\t\tMaxUniqueTags: pulumi.Int(5),\n\t\t\tTagRetention:  pulumi.Int(3),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "description": "The Docker API version to use. This cannot be set\n"
                },
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "blockPushingSchema1": {
                    "type": "boolean",
                    "description": "- When set, Artifactory will block the pushing of Docker images with manifest v2 schema 1 to this repository.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "maxUniqueTags": {
                    "type": "integer",
                    "description": "- The maximum number of unique tags of a single Docker image to store in this repository. Once the number tags for an image exceeds this setting, older tags are removed. A value of 0 (default) indicates there is no limit. This only applies to manifest v2\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "tagRetention": {
                    "type": "integer",
                    "description": "- If greater than 1, overwritten tags will be saved by their digest, up to the set up number. This only applies to manifest V2\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "apiVersion",
                "blockPushingSchema1",
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "blockPushingSchema1": {
                    "type": "boolean",
                    "description": "- When set, Artifactory will block the pushing of Docker images with manifest v2 schema 1 to this repository.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "maxUniqueTags": {
                    "type": "integer",
                    "description": "- The maximum number of unique tags of a single Docker image to store in this repository. Once the number tags for an image exceeds this setting, older tags are removed. A value of 0 (default) indicates there is no limit. This only applies to manifest v2\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "tagRetention": {
                    "type": "integer",
                    "description": "- If greater than 1, overwritten tags will be saved by their digest, up to the set up number. This only applies to manifest V2\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DockerV2Repository resources.\n",
                "properties": {
                    "apiVersion": {
                        "type": "string",
                        "description": "The Docker API version to use. This cannot be set\n"
                    },
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "blockPushingSchema1": {
                        "type": "boolean",
                        "description": "- When set, Artifactory will block the pushing of Docker images with manifest v2 schema 1 to this repository.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "maxUniqueTags": {
                        "type": "integer",
                        "description": "- The maximum number of unique tags of a single Docker image to store in this repository. Once the number tags for an image exceeds this setting, older tags are removed. A value of 0 (default) indicates there is no limit. This only applies to manifest v2\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "tagRetention": {
                        "type": "integer",
                        "description": "- If greater than 1, overwritten tags will be saved by their digest, up to the set up number. This only applies to manifest V2\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/dockerWebhook:DockerWebhook": {
            "description": "## # Artifactory Docker Webhook Resource\n\nProvides an Artifactory webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_docker_local = new artifactory.DockerV2Repository(\"my-docker-local\", {key: \"my-docker-local\"});\nconst docker_webhook = new artifactory.DockerWebhook(\"docker-webhook\", {\n    key: \"docker-webhook\",\n    eventTypes: [\n        \"pushed\",\n        \"deleted\",\n        \"promoted\",\n    ],\n    criteria: {\n        anyLocal: true,\n        anyRemote: false,\n        repoKeys: [my_docker_local.key],\n        includePatterns: [\"foo/**\"],\n        excludePatterns: [\"bar/**\"],\n    },\n    url: \"http://tempurl.org/webhook\",\n    secret: \"some-secret\",\n    proxy: \"proxy-key\",\n    customHttpHeaders: {\n        \"header-1\": \"value-1\",\n        \"header-2\": \"value-2\",\n    },\n}, {\n    dependsOn: [my_docker_local],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_docker_local = artifactory.DockerV2Repository(\"my-docker-local\", key=\"my-docker-local\")\ndocker_webhook = artifactory.DockerWebhook(\"docker-webhook\",\n    key=\"docker-webhook\",\n    event_types=[\n        \"pushed\",\n        \"deleted\",\n        \"promoted\",\n    ],\n    criteria=artifactory.DockerWebhookCriteriaArgs(\n        any_local=True,\n        any_remote=False,\n        repo_keys=[my_docker_local.key],\n        include_patterns=[\"foo/**\"],\n        exclude_patterns=[\"bar/**\"],\n    ),\n    url=\"http://tempurl.org/webhook\",\n    secret=\"some-secret\",\n    proxy=\"proxy-key\",\n    custom_http_headers={\n        \"header-1\": \"value-1\",\n        \"header-2\": \"value-2\",\n    },\n    opts=pulumi.ResourceOptions(depends_on=[my_docker_local]))\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_docker_local = new Artifactory.DockerV2Repository(\"my-docker-local\", new Artifactory.DockerV2RepositoryArgs\n        {\n            Key = \"my-docker-local\",\n        });\n        var docker_webhook = new Artifactory.DockerWebhook(\"docker-webhook\", new Artifactory.DockerWebhookArgs\n        {\n            Key = \"docker-webhook\",\n            EventTypes = \n            {\n                \"pushed\",\n                \"deleted\",\n                \"promoted\",\n            },\n            Criteria = new Artifactory.Inputs.DockerWebhookCriteriaArgs\n            {\n                AnyLocal = true,\n                AnyRemote = false,\n                RepoKeys = \n                {\n                    my_docker_local.Key,\n                },\n                IncludePatterns = \n                {\n                    \"foo/**\",\n                },\n                ExcludePatterns = \n                {\n                    \"bar/**\",\n                },\n            },\n            Url = \"http://tempurl.org/webhook\",\n            Secret = \"some-secret\",\n            Proxy = \"proxy-key\",\n            CustomHttpHeaders = \n            {\n                { \"header-1\", \"value-1\" },\n                { \"header-2\", \"value-2\" },\n            },\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                my_docker_local,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewDockerV2Repository(ctx, \"my-docker-local\", \u0026artifactory.DockerV2RepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-docker-local\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewDockerWebhook(ctx, \"docker-webhook\", \u0026artifactory.DockerWebhookArgs{\n\t\t\tKey: pulumi.String(\"docker-webhook\"),\n\t\t\tEventTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"pushed\"),\n\t\t\t\tpulumi.String(\"deleted\"),\n\t\t\t\tpulumi.String(\"promoted\"),\n\t\t\t},\n\t\t\tCriteria: \u0026DockerWebhookCriteriaArgs{\n\t\t\t\tAnyLocal:  pulumi.Bool(true),\n\t\t\t\tAnyRemote: pulumi.Bool(false),\n\t\t\t\tRepoKeys: pulumi.StringArray{\n\t\t\t\t\tmy_docker_local.Key,\n\t\t\t\t},\n\t\t\t\tIncludePatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"foo/**\"),\n\t\t\t\t},\n\t\t\t\tExcludePatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"bar/**\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUrl:    pulumi.String(\"http://tempurl.org/webhook\"),\n\t\t\tSecret: pulumi.String(\"some-secret\"),\n\t\t\tProxy:  pulumi.String(\"proxy-key\"),\n\t\t\tCustomHttpHeaders: pulumi.StringMap{\n\t\t\t\t\"header-1\": pulumi.String(\"value-1\"),\n\t\t\t\t\"header-2\": pulumi.String(\"value-2\"),\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tmy_docker_local,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/DockerWebhookCriteria:DockerWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"pushed\", \"deleted\", \"promoted\"\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL\n"
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                }
            },
            "required": [
                "criteria",
                "eventTypes",
                "key",
                "url"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/DockerWebhookCriteria:DockerWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"pushed\", \"deleted\", \"promoted\"\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL\n"
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                }
            },
            "requiredInputs": [
                "criteria",
                "eventTypes",
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DockerWebhook resources.\n",
                "properties": {
                    "criteria": {
                        "$ref": "#/types/artifactory:index/DockerWebhookCriteria:DockerWebhookCriteria",
                        "description": "Specifies where the webhook will be applied on which repositories.\n"
                    },
                    "customHttpHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Webhook description. Max length 1000 characters.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of webhook. Default to 'true'\n"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"pushed\", \"deleted\", \"promoted\"\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "secret": {
                        "type": "string",
                        "description": "Secret authentication token that will be sent to the configured URL\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedAlpineRepository:FederatedAlpineRepository": {
            "description": "## # Artifactory Federated Alpine Repository Resource\n\nCreates a federated Alpine repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_alpine_repo = new artifactory.FederatedAlpineRepository(\"terraform-federated-test-alpine-repo\", {\n    key: \"terraform-federated-test-alpine-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-alpine-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-alpine-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_alpine_repo = artifactory.FederatedAlpineRepository(\"terraform-federated-test-alpine-repo\",\n    key=\"terraform-federated-test-alpine-repo\",\n    members=[\n        artifactory.FederatedAlpineRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-alpine-repo\",\n        ),\n        artifactory.FederatedAlpineRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-alpine-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_alpine_repo = new Artifactory.FederatedAlpineRepository(\"terraform-federated-test-alpine-repo\", new Artifactory.FederatedAlpineRepositoryArgs\n        {\n            Key = \"terraform-federated-test-alpine-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedAlpineRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-alpine-repo\",\n                },\n                new Artifactory.Inputs.FederatedAlpineRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-alpine-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedAlpineRepository(ctx, \"terraform-federated-test-alpine-repo\", \u0026artifactory.FederatedAlpineRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-alpine-repo\"),\n\t\t\tMembers: FederatedAlpineRepositoryMemberArray{\n\t\t\t\t\u0026FederatedAlpineRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-alpine-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedAlpineRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-alpine-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedAlpineRepositoryMember:FederatedAlpineRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedAlpineRepositoryMember:FederatedAlpineRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedAlpineRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedAlpineRepositoryMember:FederatedAlpineRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedBowerRepository:FederatedBowerRepository": {
            "description": "## # Artifactory Federated Bower Repository Resource\n\nCreates a federated Bower repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_bower_repo = new artifactory.FederatedBowerRepository(\"terraform-federated-test-bower-repo\", {\n    key: \"terraform-federated-test-bower-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-bower-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-bower-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_bower_repo = artifactory.FederatedBowerRepository(\"terraform-federated-test-bower-repo\",\n    key=\"terraform-federated-test-bower-repo\",\n    members=[\n        artifactory.FederatedBowerRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-bower-repo\",\n        ),\n        artifactory.FederatedBowerRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-bower-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_bower_repo = new Artifactory.FederatedBowerRepository(\"terraform-federated-test-bower-repo\", new Artifactory.FederatedBowerRepositoryArgs\n        {\n            Key = \"terraform-federated-test-bower-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedBowerRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-bower-repo\",\n                },\n                new Artifactory.Inputs.FederatedBowerRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-bower-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedBowerRepository(ctx, \"terraform-federated-test-bower-repo\", \u0026artifactory.FederatedBowerRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-bower-repo\"),\n\t\t\tMembers: FederatedBowerRepositoryMemberArray{\n\t\t\t\t\u0026FederatedBowerRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-bower-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedBowerRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-bower-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedBowerRepositoryMember:FederatedBowerRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedBowerRepositoryMember:FederatedBowerRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedBowerRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedBowerRepositoryMember:FederatedBowerRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedCargoRepository:FederatedCargoRepository": {
            "description": "## # Artifactory Federated Cargo Repository Resource\n\nCreates a federated Cargo repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_cargo_repo = new artifactory.FederatedCargoRepository(\"terraform-federated-test-cargo-repo\", {\n    key: \"terraform-federated-test-cargo-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-cargo-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-cargo-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_cargo_repo = artifactory.FederatedCargoRepository(\"terraform-federated-test-cargo-repo\",\n    key=\"terraform-federated-test-cargo-repo\",\n    members=[\n        artifactory.FederatedCargoRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-cargo-repo\",\n        ),\n        artifactory.FederatedCargoRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-cargo-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_cargo_repo = new Artifactory.FederatedCargoRepository(\"terraform-federated-test-cargo-repo\", new Artifactory.FederatedCargoRepositoryArgs\n        {\n            Key = \"terraform-federated-test-cargo-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedCargoRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-cargo-repo\",\n                },\n                new Artifactory.Inputs.FederatedCargoRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-cargo-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedCargoRepository(ctx, \"terraform-federated-test-cargo-repo\", \u0026artifactory.FederatedCargoRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-cargo-repo\"),\n\t\t\tMembers: FederatedCargoRepositoryMemberArray{\n\t\t\t\t\u0026FederatedCargoRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-cargo-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedCargoRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-cargo-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCargoRepositoryMember:FederatedCargoRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCargoRepositoryMember:FederatedCargoRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedCargoRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedCargoRepositoryMember:FederatedCargoRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedChefRepository:FederatedChefRepository": {
            "description": "## # Artifactory Federated Chef Repository Resource\n\nCreates a federated Chef repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_chef_repo = new artifactory.FederatedChefRepository(\"terraform-federated-test-chef-repo\", {\n    key: \"terraform-federated-test-chef-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-chef-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-chef-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_chef_repo = artifactory.FederatedChefRepository(\"terraform-federated-test-chef-repo\",\n    key=\"terraform-federated-test-chef-repo\",\n    members=[\n        artifactory.FederatedChefRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-chef-repo\",\n        ),\n        artifactory.FederatedChefRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-chef-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_chef_repo = new Artifactory.FederatedChefRepository(\"terraform-federated-test-chef-repo\", new Artifactory.FederatedChefRepositoryArgs\n        {\n            Key = \"terraform-federated-test-chef-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedChefRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-chef-repo\",\n                },\n                new Artifactory.Inputs.FederatedChefRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-chef-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedChefRepository(ctx, \"terraform-federated-test-chef-repo\", \u0026artifactory.FederatedChefRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-chef-repo\"),\n\t\t\tMembers: FederatedChefRepositoryMemberArray{\n\t\t\t\t\u0026FederatedChefRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-chef-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedChefRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-chef-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedChefRepositoryMember:FederatedChefRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedChefRepositoryMember:FederatedChefRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedChefRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedChefRepositoryMember:FederatedChefRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedCocoapodsRepository:FederatedCocoapodsRepository": {
            "description": "## # Artifactory Federated Cocoapods Repository Resource\n\nCreates a federated Cocoapods repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_cocoapods_repo = new artifactory.FederatedCocoapodsRepository(\"terraform-federated-test-cocoapods-repo\", {\n    key: \"terraform-federated-test-cocoapods-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-cocoapods-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-cocoapods-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_cocoapods_repo = artifactory.FederatedCocoapodsRepository(\"terraform-federated-test-cocoapods-repo\",\n    key=\"terraform-federated-test-cocoapods-repo\",\n    members=[\n        artifactory.FederatedCocoapodsRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-cocoapods-repo\",\n        ),\n        artifactory.FederatedCocoapodsRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-cocoapods-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_cocoapods_repo = new Artifactory.FederatedCocoapodsRepository(\"terraform-federated-test-cocoapods-repo\", new Artifactory.FederatedCocoapodsRepositoryArgs\n        {\n            Key = \"terraform-federated-test-cocoapods-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedCocoapodsRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-cocoapods-repo\",\n                },\n                new Artifactory.Inputs.FederatedCocoapodsRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-cocoapods-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedCocoapodsRepository(ctx, \"terraform-federated-test-cocoapods-repo\", \u0026artifactory.FederatedCocoapodsRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-cocoapods-repo\"),\n\t\t\tMembers: FederatedCocoapodsRepositoryMemberArray{\n\t\t\t\t\u0026FederatedCocoapodsRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-cocoapods-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedCocoapodsRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-cocoapods-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCocoapodsRepositoryMember:FederatedCocoapodsRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCocoapodsRepositoryMember:FederatedCocoapodsRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedCocoapodsRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedCocoapodsRepositoryMember:FederatedCocoapodsRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedComposerRepository:FederatedComposerRepository": {
            "description": "## # Artifactory Federated Composer Repository Resource\n\nCreates a federated Composer repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_composer_repo = new artifactory.FederatedComposerRepository(\"terraform-federated-test-composer-repo\", {\n    key: \"terraform-federated-test-composer-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-composer-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-composer-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_composer_repo = artifactory.FederatedComposerRepository(\"terraform-federated-test-composer-repo\",\n    key=\"terraform-federated-test-composer-repo\",\n    members=[\n        artifactory.FederatedComposerRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-composer-repo\",\n        ),\n        artifactory.FederatedComposerRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-composer-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_composer_repo = new Artifactory.FederatedComposerRepository(\"terraform-federated-test-composer-repo\", new Artifactory.FederatedComposerRepositoryArgs\n        {\n            Key = \"terraform-federated-test-composer-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedComposerRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-composer-repo\",\n                },\n                new Artifactory.Inputs.FederatedComposerRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-composer-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedComposerRepository(ctx, \"terraform-federated-test-composer-repo\", \u0026artifactory.FederatedComposerRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-composer-repo\"),\n\t\t\tMembers: FederatedComposerRepositoryMemberArray{\n\t\t\t\t\u0026FederatedComposerRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-composer-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedComposerRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-composer-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedComposerRepositoryMember:FederatedComposerRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedComposerRepositoryMember:FederatedComposerRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedComposerRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedComposerRepositoryMember:FederatedComposerRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedConanRepository:FederatedConanRepository": {
            "description": "## # Artifactory Federated Conan Repository Resource\n\nCreates a federated Conan repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_conan_repo = new artifactory.FederatedConanRepository(\"terraform-federated-test-conan-repo\", {\n    key: \"terraform-federated-test-conan-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-conan-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-conan-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_conan_repo = artifactory.FederatedConanRepository(\"terraform-federated-test-conan-repo\",\n    key=\"terraform-federated-test-conan-repo\",\n    members=[\n        artifactory.FederatedConanRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-conan-repo\",\n        ),\n        artifactory.FederatedConanRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-conan-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_conan_repo = new Artifactory.FederatedConanRepository(\"terraform-federated-test-conan-repo\", new Artifactory.FederatedConanRepositoryArgs\n        {\n            Key = \"terraform-federated-test-conan-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedConanRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-conan-repo\",\n                },\n                new Artifactory.Inputs.FederatedConanRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-conan-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedConanRepository(ctx, \"terraform-federated-test-conan-repo\", \u0026artifactory.FederatedConanRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-conan-repo\"),\n\t\t\tMembers: FederatedConanRepositoryMemberArray{\n\t\t\t\t\u0026FederatedConanRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-conan-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedConanRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-conan-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedConanRepositoryMember:FederatedConanRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedConanRepositoryMember:FederatedConanRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedConanRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedConanRepositoryMember:FederatedConanRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedCondaRepository:FederatedCondaRepository": {
            "description": "## # Artifactory Federated Conda Repository Resource\n\nCreates a federated Conda repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_conda_repo = new artifactory.FederatedCondaRepository(\"terraform-federated-test-conda-repo\", {\n    key: \"terraform-federated-test-conda-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-conda-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-conda-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_conda_repo = artifactory.FederatedCondaRepository(\"terraform-federated-test-conda-repo\",\n    key=\"terraform-federated-test-conda-repo\",\n    members=[\n        artifactory.FederatedCondaRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-conda-repo\",\n        ),\n        artifactory.FederatedCondaRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-conda-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_conda_repo = new Artifactory.FederatedCondaRepository(\"terraform-federated-test-conda-repo\", new Artifactory.FederatedCondaRepositoryArgs\n        {\n            Key = \"terraform-federated-test-conda-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedCondaRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-conda-repo\",\n                },\n                new Artifactory.Inputs.FederatedCondaRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-conda-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedCondaRepository(ctx, \"terraform-federated-test-conda-repo\", \u0026artifactory.FederatedCondaRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-conda-repo\"),\n\t\t\tMembers: FederatedCondaRepositoryMemberArray{\n\t\t\t\t\u0026FederatedCondaRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-conda-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedCondaRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-conda-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCondaRepositoryMember:FederatedCondaRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCondaRepositoryMember:FederatedCondaRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedCondaRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedCondaRepositoryMember:FederatedCondaRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedCranRepository:FederatedCranRepository": {
            "description": "## # Artifactory Federated Cran Repository Resource\n\nCreates a federated Cran repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_cran_repo = new artifactory.FederatedCranRepository(\"terraform-federated-test-cran-repo\", {\n    key: \"terraform-federated-test-cran-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-cran-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-cran-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_cran_repo = artifactory.FederatedCranRepository(\"terraform-federated-test-cran-repo\",\n    key=\"terraform-federated-test-cran-repo\",\n    members=[\n        artifactory.FederatedCranRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-cran-repo\",\n        ),\n        artifactory.FederatedCranRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-cran-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_cran_repo = new Artifactory.FederatedCranRepository(\"terraform-federated-test-cran-repo\", new Artifactory.FederatedCranRepositoryArgs\n        {\n            Key = \"terraform-federated-test-cran-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedCranRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-cran-repo\",\n                },\n                new Artifactory.Inputs.FederatedCranRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-cran-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedCranRepository(ctx, \"terraform-federated-test-cran-repo\", \u0026artifactory.FederatedCranRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-cran-repo\"),\n\t\t\tMembers: FederatedCranRepositoryMemberArray{\n\t\t\t\t\u0026FederatedCranRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-cran-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedCranRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-cran-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCranRepositoryMember:FederatedCranRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCranRepositoryMember:FederatedCranRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedCranRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedCranRepositoryMember:FederatedCranRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedDebianRepository:FederatedDebianRepository": {
            "description": "## # Artifactory Federated Debian Repository Resource\n\nCreates a federated Debian repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_debian_repo = new artifactory.FederatedDebianRepository(\"terraform-federated-test-debian-repo\", {\n    key: \"terraform-federated-test-debian-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-debian-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-debian-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_debian_repo = artifactory.FederatedDebianRepository(\"terraform-federated-test-debian-repo\",\n    key=\"terraform-federated-test-debian-repo\",\n    members=[\n        artifactory.FederatedDebianRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-debian-repo\",\n        ),\n        artifactory.FederatedDebianRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-debian-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_debian_repo = new Artifactory.FederatedDebianRepository(\"terraform-federated-test-debian-repo\", new Artifactory.FederatedDebianRepositoryArgs\n        {\n            Key = \"terraform-federated-test-debian-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedDebianRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-debian-repo\",\n                },\n                new Artifactory.Inputs.FederatedDebianRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-debian-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedDebianRepository(ctx, \"terraform-federated-test-debian-repo\", \u0026artifactory.FederatedDebianRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-debian-repo\"),\n\t\t\tMembers: FederatedDebianRepositoryMemberArray{\n\t\t\t\t\u0026FederatedDebianRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-debian-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedDebianRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-debian-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedDebianRepositoryMember:FederatedDebianRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedDebianRepositoryMember:FederatedDebianRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedDebianRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedDebianRepositoryMember:FederatedDebianRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedDockerRepository:FederatedDockerRepository": {
            "description": "## # Artifactory Federated Docker Repository Resource\n\nCreates a federated Docker repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_docker_repo = new artifactory.FederatedDockerRepository(\"terraform-federated-test-docker-repo\", {\n    key: \"terraform-federated-test-docker-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-docker-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-docker-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_docker_repo = artifactory.FederatedDockerRepository(\"terraform-federated-test-docker-repo\",\n    key=\"terraform-federated-test-docker-repo\",\n    members=[\n        artifactory.FederatedDockerRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-docker-repo\",\n        ),\n        artifactory.FederatedDockerRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-docker-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_docker_repo = new Artifactory.FederatedDockerRepository(\"terraform-federated-test-docker-repo\", new Artifactory.FederatedDockerRepositoryArgs\n        {\n            Key = \"terraform-federated-test-docker-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedDockerRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-docker-repo\",\n                },\n                new Artifactory.Inputs.FederatedDockerRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-docker-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedDockerRepository(ctx, \"terraform-federated-test-docker-repo\", \u0026artifactory.FederatedDockerRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-docker-repo\"),\n\t\t\tMembers: FederatedDockerRepositoryMemberArray{\n\t\t\t\t\u0026FederatedDockerRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-docker-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedDockerRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-docker-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedDockerRepositoryMember:FederatedDockerRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedDockerRepositoryMember:FederatedDockerRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedDockerRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedDockerRepositoryMember:FederatedDockerRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedGemsRepository:FederatedGemsRepository": {
            "description": "## # Artifactory Federated Gem Repository Resource\n\nCreates a federated Gem repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_gem_repo = new artifactory.FederatedGemRepository(\"terraform-federated-test-gem-repo\", {\n    key: \"terraform-federated-test-gem-repo\",\n    member: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-gem-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-gem-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGemsRepositoryMember:FederatedGemsRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGemsRepositoryMember:FederatedGemsRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedGemsRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedGemsRepositoryMember:FederatedGemsRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedGenericRepository:FederatedGenericRepository": {
            "description": "## # Artifactory Federated Generic Repository Resource\n\nCreates a federated Generic repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_generic_repo = new artifactory.FederatedGenericRepository(\"terraform-federated-test-generic-repo\", {\n    key: \"terraform-federated-test-generic-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-generic-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-generic-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_generic_repo = artifactory.FederatedGenericRepository(\"terraform-federated-test-generic-repo\",\n    key=\"terraform-federated-test-generic-repo\",\n    members=[\n        artifactory.FederatedGenericRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-generic-repo\",\n        ),\n        artifactory.FederatedGenericRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-generic-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_generic_repo = new Artifactory.FederatedGenericRepository(\"terraform-federated-test-generic-repo\", new Artifactory.FederatedGenericRepositoryArgs\n        {\n            Key = \"terraform-federated-test-generic-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedGenericRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-generic-repo\",\n                },\n                new Artifactory.Inputs.FederatedGenericRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-generic-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedGenericRepository(ctx, \"terraform-federated-test-generic-repo\", \u0026artifactory.FederatedGenericRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-generic-repo\"),\n\t\t\tMembers: FederatedGenericRepositoryMemberArray{\n\t\t\t\t\u0026FederatedGenericRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-generic-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedGenericRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-generic-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGenericRepositoryMember:FederatedGenericRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGenericRepositoryMember:FederatedGenericRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedGenericRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedGenericRepositoryMember:FederatedGenericRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedGitltfsRepository:FederatedGitltfsRepository": {
            "description": "## # Artifactory Federated Gitlfs Repository Resource\n\nCreates a federated Gitlfs repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_gitlfs_repo = new artifactory.FederatedGitltfsRepository(\"terraform-federated-test-gitlfs-repo\", {\n    key: \"terraform-federated-test-gitlfs-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-gitlfs-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-gitlfs-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_gitlfs_repo = artifactory.FederatedGitltfsRepository(\"terraform-federated-test-gitlfs-repo\",\n    key=\"terraform-federated-test-gitlfs-repo\",\n    members=[\n        artifactory.FederatedGitltfsRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-gitlfs-repo\",\n        ),\n        artifactory.FederatedGitltfsRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-gitlfs-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_gitlfs_repo = new Artifactory.FederatedGitltfsRepository(\"terraform-federated-test-gitlfs-repo\", new Artifactory.FederatedGitltfsRepositoryArgs\n        {\n            Key = \"terraform-federated-test-gitlfs-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedGitltfsRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-gitlfs-repo\",\n                },\n                new Artifactory.Inputs.FederatedGitltfsRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-gitlfs-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedGitltfsRepository(ctx, \"terraform-federated-test-gitlfs-repo\", \u0026artifactory.FederatedGitltfsRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-gitlfs-repo\"),\n\t\t\tMembers: FederatedGitltfsRepositoryMemberArray{\n\t\t\t\t\u0026FederatedGitltfsRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-gitlfs-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedGitltfsRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-gitlfs-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGitltfsRepositoryMember:FederatedGitltfsRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGitltfsRepositoryMember:FederatedGitltfsRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedGitltfsRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedGitltfsRepositoryMember:FederatedGitltfsRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedGoRepository:FederatedGoRepository": {
            "description": "## # Artifactory Federated Go Repository Resource\n\nCreates a federated Go repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_go_repo = new artifactory.FederatedGoRepository(\"terraform-federated-test-go-repo\", {\n    key: \"terraform-federated-test-go-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-go-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-go-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_go_repo = artifactory.FederatedGoRepository(\"terraform-federated-test-go-repo\",\n    key=\"terraform-federated-test-go-repo\",\n    members=[\n        artifactory.FederatedGoRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-go-repo\",\n        ),\n        artifactory.FederatedGoRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-go-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_go_repo = new Artifactory.FederatedGoRepository(\"terraform-federated-test-go-repo\", new Artifactory.FederatedGoRepositoryArgs\n        {\n            Key = \"terraform-federated-test-go-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedGoRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-go-repo\",\n                },\n                new Artifactory.Inputs.FederatedGoRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-go-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedGoRepository(ctx, \"terraform-federated-test-go-repo\", \u0026artifactory.FederatedGoRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-go-repo\"),\n\t\t\tMembers: FederatedGoRepositoryMemberArray{\n\t\t\t\t\u0026FederatedGoRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-go-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedGoRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-go-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGoRepositoryMember:FederatedGoRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGoRepositoryMember:FederatedGoRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedGoRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedGoRepositoryMember:FederatedGoRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedGradleRepository:FederatedGradleRepository": {
            "description": "## # Artifactory Federated Gradle Repository Resource\n\nCreates a federated Gradle repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_gradle_repo = new artifactory.FederatedGradleRepository(\"terraform-federated-test-gradle-repo\", {\n    key: \"terraform-federated-test-gradle-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-gradle-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-gradle-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_gradle_repo = artifactory.FederatedGradleRepository(\"terraform-federated-test-gradle-repo\",\n    key=\"terraform-federated-test-gradle-repo\",\n    members=[\n        artifactory.FederatedGradleRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-gradle-repo\",\n        ),\n        artifactory.FederatedGradleRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-gradle-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_gradle_repo = new Artifactory.FederatedGradleRepository(\"terraform-federated-test-gradle-repo\", new Artifactory.FederatedGradleRepositoryArgs\n        {\n            Key = \"terraform-federated-test-gradle-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedGradleRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-gradle-repo\",\n                },\n                new Artifactory.Inputs.FederatedGradleRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-gradle-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedGradleRepository(ctx, \"terraform-federated-test-gradle-repo\", \u0026artifactory.FederatedGradleRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-gradle-repo\"),\n\t\t\tMembers: FederatedGradleRepositoryMemberArray{\n\t\t\t\t\u0026FederatedGradleRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-gradle-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedGradleRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-gradle-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGradleRepositoryMember:FederatedGradleRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGradleRepositoryMember:FederatedGradleRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedGradleRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedGradleRepositoryMember:FederatedGradleRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedHelmRepository:FederatedHelmRepository": {
            "description": "## # Artifactory Federated Helm Repository Resource\n\nCreates a federated Helm repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_helm_repo = new artifactory.FederatedHelmRepository(\"terraform-federated-test-helm-repo\", {\n    key: \"terraform-federated-test-helm-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-helm-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-helm-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_helm_repo = artifactory.FederatedHelmRepository(\"terraform-federated-test-helm-repo\",\n    key=\"terraform-federated-test-helm-repo\",\n    members=[\n        artifactory.FederatedHelmRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-helm-repo\",\n        ),\n        artifactory.FederatedHelmRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-helm-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_helm_repo = new Artifactory.FederatedHelmRepository(\"terraform-federated-test-helm-repo\", new Artifactory.FederatedHelmRepositoryArgs\n        {\n            Key = \"terraform-federated-test-helm-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedHelmRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-helm-repo\",\n                },\n                new Artifactory.Inputs.FederatedHelmRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-helm-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedHelmRepository(ctx, \"terraform-federated-test-helm-repo\", \u0026artifactory.FederatedHelmRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-helm-repo\"),\n\t\t\tMembers: FederatedHelmRepositoryMemberArray{\n\t\t\t\t\u0026FederatedHelmRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-helm-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedHelmRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-helm-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedHelmRepositoryMember:FederatedHelmRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedHelmRepositoryMember:FederatedHelmRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedHelmRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedHelmRepositoryMember:FederatedHelmRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedIvyRepository:FederatedIvyRepository": {
            "description": "## # Artifactory Federated Ivy Repository Resource\n\nCreates a federated Ivy repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_ivy_repo = new artifactory.FederatedIvyRepository(\"terraform-federated-test-ivy-repo\", {\n    key: \"terraform-federated-test-ivy-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-ivy-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-ivy-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_ivy_repo = artifactory.FederatedIvyRepository(\"terraform-federated-test-ivy-repo\",\n    key=\"terraform-federated-test-ivy-repo\",\n    members=[\n        artifactory.FederatedIvyRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-ivy-repo\",\n        ),\n        artifactory.FederatedIvyRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-ivy-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_ivy_repo = new Artifactory.FederatedIvyRepository(\"terraform-federated-test-ivy-repo\", new Artifactory.FederatedIvyRepositoryArgs\n        {\n            Key = \"terraform-federated-test-ivy-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedIvyRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-ivy-repo\",\n                },\n                new Artifactory.Inputs.FederatedIvyRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-ivy-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedIvyRepository(ctx, \"terraform-federated-test-ivy-repo\", \u0026artifactory.FederatedIvyRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-ivy-repo\"),\n\t\t\tMembers: FederatedIvyRepositoryMemberArray{\n\t\t\t\t\u0026FederatedIvyRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-ivy-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedIvyRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-ivy-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedIvyRepositoryMember:FederatedIvyRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedIvyRepositoryMember:FederatedIvyRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedIvyRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedIvyRepositoryMember:FederatedIvyRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedMavenRepository:FederatedMavenRepository": {
            "description": "## # Artifactory Federated Maven Repository Resource\n\nCreates a federated Maven repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_maven_repo = new artifactory.FederatedMavenRepository(\"terraform-federated-test-maven-repo\", {\n    key: \"terraform-federated-test-maven-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-maven-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-maven-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_maven_repo = artifactory.FederatedMavenRepository(\"terraform-federated-test-maven-repo\",\n    key=\"terraform-federated-test-maven-repo\",\n    members=[\n        artifactory.FederatedMavenRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-maven-repo\",\n        ),\n        artifactory.FederatedMavenRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-maven-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_maven_repo = new Artifactory.FederatedMavenRepository(\"terraform-federated-test-maven-repo\", new Artifactory.FederatedMavenRepositoryArgs\n        {\n            Key = \"terraform-federated-test-maven-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedMavenRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-maven-repo\",\n                },\n                new Artifactory.Inputs.FederatedMavenRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-maven-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedMavenRepository(ctx, \"terraform-federated-test-maven-repo\", \u0026artifactory.FederatedMavenRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-maven-repo\"),\n\t\t\tMembers: FederatedMavenRepositoryMemberArray{\n\t\t\t\t\u0026FederatedMavenRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-maven-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedMavenRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-maven-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedMavenRepositoryMember:FederatedMavenRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedMavenRepositoryMember:FederatedMavenRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedMavenRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedMavenRepositoryMember:FederatedMavenRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedNpmRepository:FederatedNpmRepository": {
            "description": "## # Artifactory Federated Npm Repository Resource\n\nCreates a federated Npm repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_npm_repo = new artifactory.FederatedNpmRepository(\"terraform-federated-test-npm-repo\", {\n    key: \"terraform-federated-test-npm-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-npm-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-npm-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_npm_repo = artifactory.FederatedNpmRepository(\"terraform-federated-test-npm-repo\",\n    key=\"terraform-federated-test-npm-repo\",\n    members=[\n        artifactory.FederatedNpmRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-npm-repo\",\n        ),\n        artifactory.FederatedNpmRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-npm-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_npm_repo = new Artifactory.FederatedNpmRepository(\"terraform-federated-test-npm-repo\", new Artifactory.FederatedNpmRepositoryArgs\n        {\n            Key = \"terraform-federated-test-npm-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedNpmRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-npm-repo\",\n                },\n                new Artifactory.Inputs.FederatedNpmRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-npm-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedNpmRepository(ctx, \"terraform-federated-test-npm-repo\", \u0026artifactory.FederatedNpmRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-npm-repo\"),\n\t\t\tMembers: FederatedNpmRepositoryMemberArray{\n\t\t\t\t\u0026FederatedNpmRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-npm-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedNpmRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-npm-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedNpmRepositoryMember:FederatedNpmRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedNpmRepositoryMember:FederatedNpmRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedNpmRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedNpmRepositoryMember:FederatedNpmRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedNugetRepository:FederatedNugetRepository": {
            "description": "## # Artifactory Federated Nuget Repository Resource\n\nCreates a federated Nuget repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_nuget_repo = new artifactory.FederatedNugetRepository(\"terraform-federated-test-nuget-repo\", {\n    key: \"terraform-federated-test-nuget-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-nuget-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-nuget-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_nuget_repo = artifactory.FederatedNugetRepository(\"terraform-federated-test-nuget-repo\",\n    key=\"terraform-federated-test-nuget-repo\",\n    members=[\n        artifactory.FederatedNugetRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-nuget-repo\",\n        ),\n        artifactory.FederatedNugetRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-nuget-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_nuget_repo = new Artifactory.FederatedNugetRepository(\"terraform-federated-test-nuget-repo\", new Artifactory.FederatedNugetRepositoryArgs\n        {\n            Key = \"terraform-federated-test-nuget-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedNugetRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-nuget-repo\",\n                },\n                new Artifactory.Inputs.FederatedNugetRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-nuget-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedNugetRepository(ctx, \"terraform-federated-test-nuget-repo\", \u0026artifactory.FederatedNugetRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-nuget-repo\"),\n\t\t\tMembers: FederatedNugetRepositoryMemberArray{\n\t\t\t\t\u0026FederatedNugetRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-nuget-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedNugetRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-nuget-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedNugetRepositoryMember:FederatedNugetRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedNugetRepositoryMember:FederatedNugetRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedNugetRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedNugetRepositoryMember:FederatedNugetRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedOpkgRepository:FederatedOpkgRepository": {
            "description": "## # Artifactory Federated Opkg Repository Resource\n\nCreates a federated Opkg repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_opkg_repo = new artifactory.FederatedOpkgRepository(\"terraform-federated-test-opkg-repo\", {\n    key: \"terraform-federated-test-opkg-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-opkg-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-opkg-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_opkg_repo = artifactory.FederatedOpkgRepository(\"terraform-federated-test-opkg-repo\",\n    key=\"terraform-federated-test-opkg-repo\",\n    members=[\n        artifactory.FederatedOpkgRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-opkg-repo\",\n        ),\n        artifactory.FederatedOpkgRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-opkg-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_opkg_repo = new Artifactory.FederatedOpkgRepository(\"terraform-federated-test-opkg-repo\", new Artifactory.FederatedOpkgRepositoryArgs\n        {\n            Key = \"terraform-federated-test-opkg-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedOpkgRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-opkg-repo\",\n                },\n                new Artifactory.Inputs.FederatedOpkgRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-opkg-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedOpkgRepository(ctx, \"terraform-federated-test-opkg-repo\", \u0026artifactory.FederatedOpkgRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-opkg-repo\"),\n\t\t\tMembers: FederatedOpkgRepositoryMemberArray{\n\t\t\t\t\u0026FederatedOpkgRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-opkg-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedOpkgRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-opkg-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedOpkgRepositoryMember:FederatedOpkgRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedOpkgRepositoryMember:FederatedOpkgRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedOpkgRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedOpkgRepositoryMember:FederatedOpkgRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedPuppetRepository:FederatedPuppetRepository": {
            "description": "## # Artifactory Federated Puppet Repository Resource\n\nCreates a federated Puppet repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_puppet_repo = new artifactory.FederatedPuppetRepository(\"terraform-federated-test-puppet-repo\", {\n    key: \"terraform-federated-test-puppet-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-puppet-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-puppet-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_puppet_repo = artifactory.FederatedPuppetRepository(\"terraform-federated-test-puppet-repo\",\n    key=\"terraform-federated-test-puppet-repo\",\n    members=[\n        artifactory.FederatedPuppetRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-puppet-repo\",\n        ),\n        artifactory.FederatedPuppetRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-puppet-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_puppet_repo = new Artifactory.FederatedPuppetRepository(\"terraform-federated-test-puppet-repo\", new Artifactory.FederatedPuppetRepositoryArgs\n        {\n            Key = \"terraform-federated-test-puppet-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedPuppetRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-puppet-repo\",\n                },\n                new Artifactory.Inputs.FederatedPuppetRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-puppet-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedPuppetRepository(ctx, \"terraform-federated-test-puppet-repo\", \u0026artifactory.FederatedPuppetRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-puppet-repo\"),\n\t\t\tMembers: FederatedPuppetRepositoryMemberArray{\n\t\t\t\t\u0026FederatedPuppetRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-puppet-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedPuppetRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-puppet-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedPuppetRepositoryMember:FederatedPuppetRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedPuppetRepositoryMember:FederatedPuppetRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedPuppetRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedPuppetRepositoryMember:FederatedPuppetRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedPypiRepository:FederatedPypiRepository": {
            "description": "## # Artifactory Federated Pypi Repository Resource\n\nCreates a federated Pypi repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_pypi_repo = new artifactory.FederatedPypiRepository(\"terraform-federated-test-pypi-repo\", {\n    key: \"terraform-federated-test-pypi-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-pypi-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-pypi-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_pypi_repo = artifactory.FederatedPypiRepository(\"terraform-federated-test-pypi-repo\",\n    key=\"terraform-federated-test-pypi-repo\",\n    members=[\n        artifactory.FederatedPypiRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-pypi-repo\",\n        ),\n        artifactory.FederatedPypiRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-pypi-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_pypi_repo = new Artifactory.FederatedPypiRepository(\"terraform-federated-test-pypi-repo\", new Artifactory.FederatedPypiRepositoryArgs\n        {\n            Key = \"terraform-federated-test-pypi-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedPypiRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-pypi-repo\",\n                },\n                new Artifactory.Inputs.FederatedPypiRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-pypi-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedPypiRepository(ctx, \"terraform-federated-test-pypi-repo\", \u0026artifactory.FederatedPypiRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-pypi-repo\"),\n\t\t\tMembers: FederatedPypiRepositoryMemberArray{\n\t\t\t\t\u0026FederatedPypiRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-pypi-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedPypiRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-pypi-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedPypiRepositoryMember:FederatedPypiRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedPypiRepositoryMember:FederatedPypiRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedPypiRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedPypiRepositoryMember:FederatedPypiRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedRpmRepository:FederatedRpmRepository": {
            "description": "## # Artifactory Federated Rpm Repository Resource\n\nCreates a federated Rpm repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_rpm_repo = new artifactory.FederatedRpmRepository(\"terraform-federated-test-rpm-repo\", {\n    key: \"terraform-federated-test-rpm-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-rpm-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-rpm-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_rpm_repo = artifactory.FederatedRpmRepository(\"terraform-federated-test-rpm-repo\",\n    key=\"terraform-federated-test-rpm-repo\",\n    members=[\n        artifactory.FederatedRpmRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-rpm-repo\",\n        ),\n        artifactory.FederatedRpmRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-rpm-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_rpm_repo = new Artifactory.FederatedRpmRepository(\"terraform-federated-test-rpm-repo\", new Artifactory.FederatedRpmRepositoryArgs\n        {\n            Key = \"terraform-federated-test-rpm-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedRpmRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-rpm-repo\",\n                },\n                new Artifactory.Inputs.FederatedRpmRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-rpm-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedRpmRepository(ctx, \"terraform-federated-test-rpm-repo\", \u0026artifactory.FederatedRpmRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-rpm-repo\"),\n\t\t\tMembers: FederatedRpmRepositoryMemberArray{\n\t\t\t\t\u0026FederatedRpmRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-rpm-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedRpmRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-rpm-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedRpmRepositoryMember:FederatedRpmRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedRpmRepositoryMember:FederatedRpmRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedRpmRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedRpmRepositoryMember:FederatedRpmRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedSbtRepository:FederatedSbtRepository": {
            "description": "## # Artifactory Federated SBT Repository Resource\n\nCreates a federated SBT repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_sbt_repo = new artifactory.FederatedSbtRepository(\"terraform-federated-test-sbt-repo\", {\n    key: \"terraform-federated-test-sbt-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-sbt-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-sbt-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_sbt_repo = artifactory.FederatedSbtRepository(\"terraform-federated-test-sbt-repo\",\n    key=\"terraform-federated-test-sbt-repo\",\n    members=[\n        artifactory.FederatedSbtRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-sbt-repo\",\n        ),\n        artifactory.FederatedSbtRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-sbt-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_sbt_repo = new Artifactory.FederatedSbtRepository(\"terraform-federated-test-sbt-repo\", new Artifactory.FederatedSbtRepositoryArgs\n        {\n            Key = \"terraform-federated-test-sbt-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedSbtRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-sbt-repo\",\n                },\n                new Artifactory.Inputs.FederatedSbtRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-sbt-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedSbtRepository(ctx, \"terraform-federated-test-sbt-repo\", \u0026artifactory.FederatedSbtRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-sbt-repo\"),\n\t\t\tMembers: FederatedSbtRepositoryMemberArray{\n\t\t\t\t\u0026FederatedSbtRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-sbt-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedSbtRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-sbt-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedSbtRepositoryMember:FederatedSbtRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedSbtRepositoryMember:FederatedSbtRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedSbtRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedSbtRepositoryMember:FederatedSbtRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedVagrantRepository:FederatedVagrantRepository": {
            "description": "## # Artifactory Federated Vagrant Repository Resource\n\nCreates a federated Vagrant repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_vagrant_repo = new artifactory.FederatedVagrantRepository(\"terraform-federated-test-vagrant-repo\", {\n    key: \"terraform-federated-test-vagrant-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-vagrant-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-vagrant-repo-2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_federated_test_vagrant_repo = artifactory.FederatedVagrantRepository(\"terraform-federated-test-vagrant-repo\",\n    key=\"terraform-federated-test-vagrant-repo\",\n    members=[\n        artifactory.FederatedVagrantRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl.org/artifactory/terraform-federated-test-vagrant-repo\",\n        ),\n        artifactory.FederatedVagrantRepositoryMemberArgs(\n            enabled=True,\n            url=\"http://tempurl2.org/artifactory/terraform-federated-test-vagrant-repo-2\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_federated_test_vagrant_repo = new Artifactory.FederatedVagrantRepository(\"terraform-federated-test-vagrant-repo\", new Artifactory.FederatedVagrantRepositoryArgs\n        {\n            Key = \"terraform-federated-test-vagrant-repo\",\n            Members = \n            {\n                new Artifactory.Inputs.FederatedVagrantRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl.org/artifactory/terraform-federated-test-vagrant-repo\",\n                },\n                new Artifactory.Inputs.FederatedVagrantRepositoryMemberArgs\n                {\n                    Enabled = true,\n                    Url = \"http://tempurl2.org/artifactory/terraform-federated-test-vagrant-repo-2\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewFederatedVagrantRepository(ctx, \"terraform-federated-test-vagrant-repo\", \u0026artifactory.FederatedVagrantRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-federated-test-vagrant-repo\"),\n\t\t\tMembers: FederatedVagrantRepositoryMemberArray{\n\t\t\t\t\u0026FederatedVagrantRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl.org/artifactory/terraform-federated-test-vagrant-repo\"),\n\t\t\t\t},\n\t\t\t\t\u0026FederatedVagrantRepositoryMemberArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\tUrl:     pulumi.String(\"http://tempurl2.org/artifactory/terraform-federated-test-vagrant-repo-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedVagrantRepositoryMember:FederatedVagrantRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType",
                "xrayIndex"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string"
                },
                "includesPattern": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedVagrantRepositoryMember:FederatedVagrantRepositoryMember"
                    },
                    "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedVagrantRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string"
                    },
                    "includesPattern": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedVagrantRepositoryMember:FederatedVagrantRepositoryMember"
                        },
                        "description": "- The list of Federated members and must contain this repository URL (configured base URL + `/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set. Please follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository) to set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/generalSecurity:GeneralSecurity": {
            "description": "## # Artifactory General Security Resource\n\nThis resource can be used to manage Artifactory's general security settings.\n\nOnly a single `artifactory.GeneralSecurity` resource is meant to be defined.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Configure Artifactory general security settings\nconst security = new artifactory.GeneralSecurity(\"security\", {\n    enableAnonymousAccess: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Configure Artifactory general security settings\nsecurity = artifactory.GeneralSecurity(\"security\", enable_anonymous_access=True)\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Configure Artifactory general security settings\n        var security = new Artifactory.GeneralSecurity(\"security\", new Artifactory.GeneralSecurityArgs\n        {\n            EnableAnonymousAccess = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewGeneralSecurity(ctx, \"security\", \u0026artifactory.GeneralSecurityArgs{\n\t\t\tEnableAnonymousAccess: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCurrent general security settings can be imported using `security` as the `ID`, e.g.\n\n```sh\n $ pulumi import artifactory:index/generalSecurity:GeneralSecurity security security\n```\n\n environments, or may change without notice. ",
            "properties": {
                "enableAnonymousAccess": {
                    "type": "boolean"
                }
            },
            "inputProperties": {
                "enableAnonymousAccess": {
                    "type": "boolean"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GeneralSecurity resources.\n",
                "properties": {
                    "enableAnonymousAccess": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/goRepository:GoRepository": {
            "description": "## # Artifactory Virtual Go Repository Resource\n\nProvides an Artifactory virtual repository resource with specific go lang features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst baz_go = new artifactory.GoRepository(\"baz-go\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    externalDependenciesEnabled: true,\n    externalDependenciesPatterns: [\n        \"**/github.com/**\",\n        \"**/go.googlesource.com/**\",\n    ],\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"baz-go\",\n    notes: \"Internal description\",\n    repoLayoutRef: \"go-default\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nbaz_go = artifactory.GoRepository(\"baz-go\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    external_dependencies_enabled=True,\n    external_dependencies_patterns=[\n        \"**/github.com/**\",\n        \"**/go.googlesource.com/**\",\n    ],\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"baz-go\",\n    notes=\"Internal description\",\n    repo_layout_ref=\"go-default\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var baz_go = new Artifactory.GoRepository(\"baz-go\", new Artifactory.GoRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            ExternalDependenciesEnabled = true,\n            ExternalDependenciesPatterns = \n            {\n                \"**/github.com/**\",\n                \"**/go.googlesource.com/**\",\n            },\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"baz-go\",\n            Notes = \"Internal description\",\n            RepoLayoutRef = \"go-default\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewGoRepository(ctx, \"baz-go\", \u0026artifactory.GoRepositoryArgs{\n\t\t\tDescription:                 pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern:             pulumi.String(\"com/google/**\"),\n\t\t\tExternalDependenciesEnabled: pulumi.Bool(true),\n\t\t\tExternalDependenciesPatterns: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"**/github.com/**\"),\n\t\t\t\tpulumi.String(\"**/go.googlesource.com/**\"),\n\t\t\t},\n\t\t\tIncludesPattern: pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:             pulumi.String(\"baz-go\"),\n\t\t\tNotes:           pulumi.String(\"Internal description\"),\n\t\t\tRepoLayoutRef:   pulumi.String(\"go-default\"),\n\t\t\tRepositories:    pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/goRepository:GoRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "Shorthand for \"Enable 'go-import' Meta Tags\" on the UI. This must be set to true in order to use the allow list\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "'go-import' Allow List on the UI.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "Shorthand for \"Enable 'go-import' Meta Tags\" on the UI. This must be set to true in order to use the allow list\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "'go-import' Allow List on the UI.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GoRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "externalDependenciesEnabled": {
                        "type": "boolean",
                        "description": "Shorthand for \"Enable 'go-import' Meta Tags\" on the UI. This must be set to true in order to use the allow list\n"
                    },
                    "externalDependenciesPatterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "'go-import' Allow List on the UI.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/group:Group": {
            "description": "\n\n\n## Import\n\nGroups can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/group:Group terraform-group mygroup\n```\n\n ",
            "properties": {
                "adminPrivileges": {
                    "type": "boolean",
                    "description": "Any users added to this group will automatically be assigned with admin privileges in the system.\n"
                },
                "autoJoin": {
                    "type": "boolean",
                    "description": "When this parameter is set, any new users defined in the system are automatically assigned to this group.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for the group\n"
                },
                "detachAllUsers": {
                    "type": "boolean",
                    "description": "When this override is set, an empty or missing usernames array will detach all users from the group\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the group\n"
                },
                "policyManager": {
                    "type": "boolean",
                    "description": "When this override is set, User in the group can set Xray security and compliance policies. Default value is 'false'.\n"
                },
                "realm": {
                    "type": "string",
                    "description": "The realm for the group.\n"
                },
                "realmAttributes": {
                    "type": "string",
                    "description": "The realm attributes for the group.\n"
                },
                "reportsManager": {
                    "type": "boolean",
                    "description": "When this override is set, User in the group can manage Xray Reports on any resource type. Default value is 'false'.\n"
                },
                "usersNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of users assigned to the group. If missing or empty, tf will not manage group membership\n"
                },
                "watchManager": {
                    "type": "boolean",
                    "description": "When this override is set, User in the group can manage Xray Watches on any resource type. Default value is 'false'.\n"
                }
            },
            "required": [
                "adminPrivileges",
                "autoJoin",
                "name",
                "realm"
            ],
            "inputProperties": {
                "adminPrivileges": {
                    "type": "boolean",
                    "description": "Any users added to this group will automatically be assigned with admin privileges in the system.\n"
                },
                "autoJoin": {
                    "type": "boolean",
                    "description": "When this parameter is set, any new users defined in the system are automatically assigned to this group.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for the group\n"
                },
                "detachAllUsers": {
                    "type": "boolean",
                    "description": "When this override is set, an empty or missing usernames array will detach all users from the group\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the group\n"
                },
                "policyManager": {
                    "type": "boolean",
                    "description": "When this override is set, User in the group can set Xray security and compliance policies. Default value is 'false'.\n"
                },
                "realm": {
                    "type": "string",
                    "description": "The realm for the group.\n"
                },
                "realmAttributes": {
                    "type": "string",
                    "description": "The realm attributes for the group.\n"
                },
                "reportsManager": {
                    "type": "boolean",
                    "description": "When this override is set, User in the group can manage Xray Reports on any resource type. Default value is 'false'.\n"
                },
                "usersNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of users assigned to the group. If missing or empty, tf will not manage group membership\n"
                },
                "watchManager": {
                    "type": "boolean",
                    "description": "When this override is set, User in the group can manage Xray Watches on any resource type. Default value is 'false'.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "adminPrivileges": {
                        "type": "boolean",
                        "description": "Any users added to this group will automatically be assigned with admin privileges in the system.\n"
                    },
                    "autoJoin": {
                        "type": "boolean",
                        "description": "When this parameter is set, any new users defined in the system are automatically assigned to this group.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description for the group\n"
                    },
                    "detachAllUsers": {
                        "type": "boolean",
                        "description": "When this override is set, an empty or missing usernames array will detach all users from the group\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the group\n"
                    },
                    "policyManager": {
                        "type": "boolean",
                        "description": "When this override is set, User in the group can set Xray security and compliance policies. Default value is 'false'.\n"
                    },
                    "realm": {
                        "type": "string",
                        "description": "The realm for the group.\n"
                    },
                    "realmAttributes": {
                        "type": "string",
                        "description": "The realm attributes for the group.\n"
                    },
                    "reportsManager": {
                        "type": "boolean",
                        "description": "When this override is set, User in the group can manage Xray Reports on any resource type. Default value is 'false'.\n"
                    },
                    "usersNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of users assigned to the group. If missing or empty, tf will not manage group membership\n"
                    },
                    "watchManager": {
                        "type": "boolean",
                        "description": "When this override is set, User in the group can manage Xray Watches on any resource type. Default value is 'false'.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/keypair:Keypair": {
            "description": "## # Artifactory keypair Resource\n\nRSA key pairs are used to sign and verify the Alpine Linux index files in JFrog Artifactory, while GPG key pairs are \nused to sign and validate packages integrity in JFrog Distribution. The JFrog Platform enables you to manage multiple \nRSA and GPG signing keys through the Keys Management UI and REST API. The JFrog Platform supports managing multiple \npairs of GPG signing keys to sign packages for authentication of several package types such as Debian, Opkg, and RPM \nthrough the Keys Management UI and REST API.\nPassphrases are not currently supported, though they exist in the API.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\nimport * from \"fs\";\n\nconst some_keypair6543461672124900137 = new artifactory.Keypair(\"some-keypair6543461672124900137\", {\n    pairName: \"some-keypair6543461672124900137\",\n    pairType: \"RSA\",\n    alias: \"foo-alias6543461672124900137\",\n    privateKey: fs.readFileSync(\"samples/rsa.priv\"),\n    publicKey: fs.readFileSync(\"samples/rsa.pub\"),\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nsome_keypair6543461672124900137 = artifactory.Keypair(\"some-keypair6543461672124900137\",\n    pair_name=\"some-keypair6543461672124900137\",\n    pair_type=\"RSA\",\n    alias=\"foo-alias6543461672124900137\",\n    private_key=(lambda path: open(path).read())(\"samples/rsa.priv\"),\n    public_key=(lambda path: open(path).read())(\"samples/rsa.pub\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var some_keypair6543461672124900137 = new Artifactory.Keypair(\"some-keypair6543461672124900137\", new Artifactory.KeypairArgs\n        {\n            PairName = \"some-keypair6543461672124900137\",\n            PairType = \"RSA\",\n            Alias = \"foo-alias6543461672124900137\",\n            PrivateKey = File.ReadAllText(\"samples/rsa.priv\"),\n            PublicKey = File.ReadAllText(\"samples/rsa.pub\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewKeypair(ctx, \"some-keypair6543461672124900137\", \u0026artifactory.KeypairArgs{\n\t\t\tPairName:   pulumi.String(\"some-keypair6543461672124900137\"),\n\t\t\tPairType:   pulumi.String(\"RSA\"),\n\t\t\tAlias:      pulumi.String(\"foo-alias6543461672124900137\"),\n\t\t\tPrivateKey: readFileOrPanic(\"samples/rsa.priv\"),\n\t\t\tPublicKey:  readFileOrPanic(\"samples/rsa.pub\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nKeypair can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/keypair:Keypair my-keypair my-keypair\n```\n\n ",
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Will be used as a filename when retrieving the public key via REST API.\n"
                },
                "pairName": {
                    "type": "string",
                    "description": "A unique identifier for the Key Pair record.\n"
                },
                "pairType": {
                    "type": "string",
                    "description": "Key Pair type. Supported types - GPG and RSA.\n"
                },
                "passphrase": {
                    "type": "string",
                    "description": "- Passphrase will be used to decrypt the private key. Validated server side.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "- Private key. PEM format will be validated.\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "- Public key. PEM format will be validated.\n"
                },
                "unavailable": {
                    "type": "boolean",
                    "description": "- Unknown usage. Returned in the json payload and cannot be set.\n"
                }
            },
            "required": [
                "alias",
                "pairName",
                "pairType",
                "privateKey",
                "publicKey",
                "unavailable"
            ],
            "inputProperties": {
                "alias": {
                    "type": "string",
                    "description": "Will be used as a filename when retrieving the public key via REST API.\n"
                },
                "pairName": {
                    "type": "string",
                    "description": "A unique identifier for the Key Pair record.\n"
                },
                "pairType": {
                    "type": "string",
                    "description": "Key Pair type. Supported types - GPG and RSA.\n"
                },
                "passphrase": {
                    "type": "string",
                    "description": "- Passphrase will be used to decrypt the private key. Validated server side.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "- Private key. PEM format will be validated.\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "- Public key. PEM format will be validated.\n"
                }
            },
            "requiredInputs": [
                "alias",
                "pairName",
                "pairType",
                "privateKey",
                "publicKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Keypair resources.\n",
                "properties": {
                    "alias": {
                        "type": "string",
                        "description": "Will be used as a filename when retrieving the public key via REST API.\n"
                    },
                    "pairName": {
                        "type": "string",
                        "description": "A unique identifier for the Key Pair record.\n"
                    },
                    "pairType": {
                        "type": "string",
                        "description": "Key Pair type. Supported types - GPG and RSA.\n"
                    },
                    "passphrase": {
                        "type": "string",
                        "description": "- Passphrase will be used to decrypt the private key. Validated server side.\n"
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "- Private key. PEM format will be validated.\n"
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "- Public key. PEM format will be validated.\n"
                    },
                    "unavailable": {
                        "type": "boolean",
                        "description": "- Unknown usage. Returned in the json payload and cannot be set.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/ldapGroupSetting:LdapGroupSetting": {
            "description": "## # Artifactory LDAP Group Setting Resource\n\nThis resource can be used to manage Artifactory's LDAP Group settings for user authentication.\n\nLDAP Groups Add-on allows you to synchronize your LDAP groups with the system and leverage your existing organizational structure for managing group-based permissions.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Configure Artifactory LDAP setting\nconst ldapGroupName = new artifactory.LdapGroupSetting(\"ldap_group_name\", {\n    descriptionAttribute: \"description\",\n    enabledLdap: \"ldap_name\",\n    filter: \"(objectClass=groupOfNames)\",\n    groupBaseDn: \"\",\n    groupMemberAttribute: \"uniqueMember\",\n    groupNameAttribute: \"cn\",\n    strategy: \"STATIC\",\n    subTree: true,\n});\n```\nNote: `Name` argument has to match to the resource name.   \nReference Link: [JFrog LDAP](https://www.jfrog.com/confluence/display/JFROG/LDAP)\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLDAP Group setting can be imported using the key, e.g.\n\n```sh\n $ pulumi import artifactory:index/ldapGroupSetting:LdapGroupSetting ldap_group_name ldap_group_name\n```\n\n ",
            "properties": {
                "descriptionAttribute": {
                    "type": "string",
                    "description": "An attribute on the group entry which denoting the group description. Used when importing groups.\n"
                },
                "filter": {
                    "type": "string",
                    "description": "The LDAP filter used to search for group entries. Used for importing groups.\n"
                },
                "groupBaseDn": {
                    "type": "string",
                    "description": "A search base for group entry DNs, relative to the DN on the LDAP server’s URL (and not relative to the LDAP Setting’s “Search Base”). Used when importing groups.\n"
                },
                "groupMemberAttribute": {
                    "type": "string",
                    "description": "A multi-value attribute on the group entry containing user DNs or IDs of the group members (e.g., uniqueMember,member).\n"
                },
                "groupNameAttribute": {
                    "type": "string",
                    "description": "Attribute on the group entry denoting the group name. Used when importing groups.\n"
                },
                "ldapSettingKey": {
                    "type": "string",
                    "description": "(Required) The LDAP setting key you want to use for group retrieval. The value for this field corresponds to\n'enabledLdap' field of the ldap group setting XML block of system configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Ldap group setting name.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The JFrog Platform Deployment (JPD) supports three ways of mapping groups to LDAP schemas:\n- STATIC: Group objects are aware of their members, however, the users are not aware of the groups they belong to. Each group object such as groupOfNames or groupOfUniqueNames holds its respective member attributes, typically member or uniqueMember, which is a user DN.\n- DYNAMIC: User objects are aware of what groups they belong to, but the group objects are not aware of their members. Each user object contains a custom attribute, such as group, that holds the group DNs or group names of which the user is a member.\n- HIERARCHICAL: The user's DN is indicative of the groups the user belongs to by using group names as part of user DN hierarchy. Each user DN contains a list of ou's or custom attributes that make up the group association. For example, uid=user1,ou=developers,ou=uk,dc=jfrog,dc=org indicates that user1 belongs to two groups: uk and developers.\n"
                },
                "subTree": {
                    "type": "boolean",
                    "description": "When set, enables deep search through the sub-tree of the LDAP URL + Search Base. True by default.\n"
                }
            },
            "required": [
                "descriptionAttribute",
                "filter",
                "groupMemberAttribute",
                "groupNameAttribute",
                "ldapSettingKey",
                "name",
                "strategy"
            ],
            "inputProperties": {
                "descriptionAttribute": {
                    "type": "string",
                    "description": "An attribute on the group entry which denoting the group description. Used when importing groups.\n"
                },
                "filter": {
                    "type": "string",
                    "description": "The LDAP filter used to search for group entries. Used for importing groups.\n"
                },
                "groupBaseDn": {
                    "type": "string",
                    "description": "A search base for group entry DNs, relative to the DN on the LDAP server’s URL (and not relative to the LDAP Setting’s “Search Base”). Used when importing groups.\n"
                },
                "groupMemberAttribute": {
                    "type": "string",
                    "description": "A multi-value attribute on the group entry containing user DNs or IDs of the group members (e.g., uniqueMember,member).\n"
                },
                "groupNameAttribute": {
                    "type": "string",
                    "description": "Attribute on the group entry denoting the group name. Used when importing groups.\n"
                },
                "ldapSettingKey": {
                    "type": "string",
                    "description": "(Required) The LDAP setting key you want to use for group retrieval. The value for this field corresponds to\n'enabledLdap' field of the ldap group setting XML block of system configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Ldap group setting name.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The JFrog Platform Deployment (JPD) supports three ways of mapping groups to LDAP schemas:\n- STATIC: Group objects are aware of their members, however, the users are not aware of the groups they belong to. Each group object such as groupOfNames or groupOfUniqueNames holds its respective member attributes, typically member or uniqueMember, which is a user DN.\n- DYNAMIC: User objects are aware of what groups they belong to, but the group objects are not aware of their members. Each user object contains a custom attribute, such as group, that holds the group DNs or group names of which the user is a member.\n- HIERARCHICAL: The user's DN is indicative of the groups the user belongs to by using group names as part of user DN hierarchy. Each user DN contains a list of ou's or custom attributes that make up the group association. For example, uid=user1,ou=developers,ou=uk,dc=jfrog,dc=org indicates that user1 belongs to two groups: uk and developers.\n"
                },
                "subTree": {
                    "type": "boolean",
                    "description": "When set, enables deep search through the sub-tree of the LDAP URL + Search Base. True by default.\n"
                }
            },
            "requiredInputs": [
                "descriptionAttribute",
                "filter",
                "groupMemberAttribute",
                "groupNameAttribute",
                "ldapSettingKey",
                "strategy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LdapGroupSetting resources.\n",
                "properties": {
                    "descriptionAttribute": {
                        "type": "string",
                        "description": "An attribute on the group entry which denoting the group description. Used when importing groups.\n"
                    },
                    "filter": {
                        "type": "string",
                        "description": "The LDAP filter used to search for group entries. Used for importing groups.\n"
                    },
                    "groupBaseDn": {
                        "type": "string",
                        "description": "A search base for group entry DNs, relative to the DN on the LDAP server’s URL (and not relative to the LDAP Setting’s “Search Base”). Used when importing groups.\n"
                    },
                    "groupMemberAttribute": {
                        "type": "string",
                        "description": "A multi-value attribute on the group entry containing user DNs or IDs of the group members (e.g., uniqueMember,member).\n"
                    },
                    "groupNameAttribute": {
                        "type": "string",
                        "description": "Attribute on the group entry denoting the group name. Used when importing groups.\n"
                    },
                    "ldapSettingKey": {
                        "type": "string",
                        "description": "(Required) The LDAP setting key you want to use for group retrieval. The value for this field corresponds to\n'enabledLdap' field of the ldap group setting XML block of system configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Ldap group setting name.\n"
                    },
                    "strategy": {
                        "type": "string",
                        "description": "The JFrog Platform Deployment (JPD) supports three ways of mapping groups to LDAP schemas:\n- STATIC: Group objects are aware of their members, however, the users are not aware of the groups they belong to. Each group object such as groupOfNames or groupOfUniqueNames holds its respective member attributes, typically member or uniqueMember, which is a user DN.\n- DYNAMIC: User objects are aware of what groups they belong to, but the group objects are not aware of their members. Each user object contains a custom attribute, such as group, that holds the group DNs or group names of which the user is a member.\n- HIERARCHICAL: The user's DN is indicative of the groups the user belongs to by using group names as part of user DN hierarchy. Each user DN contains a list of ou's or custom attributes that make up the group association. For example, uid=user1,ou=developers,ou=uk,dc=jfrog,dc=org indicates that user1 belongs to two groups: uk and developers.\n"
                    },
                    "subTree": {
                        "type": "boolean",
                        "description": "When set, enables deep search through the sub-tree of the LDAP URL + Search Base. True by default.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/ldapSetting:LdapSetting": {
            "description": "## # Artifactory LDAP Setting Resource\n\nThis resource can be used to manage Artifactory's LDAP settings for user authentication.\n\nWhen specified LDAP setting is active, Artifactory first attempts to authenticate the user against the LDAP server. If LDAP authentication fails, it then tries to authenticate via its internal database.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Configure Artifactory LDAP setting\nconst ldapName = new artifactory.LdapSetting(\"ldap_name\", {\n    allowUserToAccessProfile: false,\n    autoCreateUser: true,\n    emailAttribute: \"mail\",\n    enabled: true,\n    key: \"ldap_name\",\n    ldapPoisoningProtection: true,\n    ldapUrl: \"ldap://ldap_server_url\",\n    managerDn: \"mgr_dn\",\n    managerPassword: \"mgr_passwd_random\",\n    pagingSupportEnabled: false,\n    searchBase: \"ou=users\",\n    searchFilter: \"(uid={0})\",\n    searchSubTree: true,\n    userDnPattern: \"uid={0},ou=People\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Configure Artifactory LDAP setting\nldap_name = artifactory.LdapSetting(\"ldapName\",\n    allow_user_to_access_profile=False,\n    auto_create_user=True,\n    email_attribute=\"mail\",\n    enabled=True,\n    key=\"ldap_name\",\n    ldap_poisoning_protection=True,\n    ldap_url=\"ldap://ldap_server_url\",\n    manager_dn=\"mgr_dn\",\n    manager_password=\"mgr_passwd_random\",\n    paging_support_enabled=False,\n    search_base=\"ou=users\",\n    search_filter=\"(uid={0})\",\n    search_sub_tree=True,\n    user_dn_pattern=\"uid={0},ou=People\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Configure Artifactory LDAP setting\n        var ldapName = new Artifactory.LdapSetting(\"ldapName\", new Artifactory.LdapSettingArgs\n        {\n            AllowUserToAccessProfile = false,\n            AutoCreateUser = true,\n            EmailAttribute = \"mail\",\n            Enabled = true,\n            Key = \"ldap_name\",\n            LdapPoisoningProtection = true,\n            LdapUrl = \"ldap://ldap_server_url\",\n            ManagerDn = \"mgr_dn\",\n            ManagerPassword = \"mgr_passwd_random\",\n            PagingSupportEnabled = false,\n            SearchBase = \"ou=users\",\n            SearchFilter = \"(uid={0})\",\n            SearchSubTree = true,\n            UserDnPattern = \"uid={0},ou=People\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLdapSetting(ctx, \"ldapName\", \u0026artifactory.LdapSettingArgs{\n\t\t\tAllowUserToAccessProfile: pulumi.Bool(false),\n\t\t\tAutoCreateUser:           pulumi.Bool(true),\n\t\t\tEmailAttribute:           pulumi.String(\"mail\"),\n\t\t\tEnabled:                  pulumi.Bool(true),\n\t\t\tKey:                      pulumi.String(\"ldap_name\"),\n\t\t\tLdapPoisoningProtection:  pulumi.Bool(true),\n\t\t\tLdapUrl:                  pulumi.String(\"ldap://ldap_server_url\"),\n\t\t\tManagerDn:                pulumi.String(\"mgr_dn\"),\n\t\t\tManagerPassword:          pulumi.String(\"mgr_passwd_random\"),\n\t\t\tPagingSupportEnabled:     pulumi.Bool(false),\n\t\t\tSearchBase:               pulumi.String(\"ou=users\"),\n\t\t\tSearchFilter:             pulumi.String(\"(uid={0})\"),\n\t\t\tSearchSubTree:            pulumi.Bool(true),\n\t\t\tUserDnPattern:            pulumi.String(\"uid={0},ou=People\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\nNote: `Key` argument has to match to the resource name.   \nReference Link: [JFrog LDAP](https://www.jfrog.com/confluence/display/JFROG/LDAP)\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLDAP setting can be imported using the key, e.g.\n\n```sh\n $ pulumi import artifactory:index/ldapSetting:LdapSetting ldap_name ldap_name\n```\n\n ",
            "properties": {
                "allowUserToAccessProfile": {
                    "type": "boolean",
                    "description": "When set, users created after logging in using LDAP will be able to access their profile page.  Default value is `false`.\n"
                },
                "autoCreateUser": {
                    "type": "boolean",
                    "description": "When set, the system will automatically create new users for those who have logged in using LDAP, and assign them to the default groups.  Default value is `true`.\n"
                },
                "emailAttribute": {
                    "type": "string",
                    "description": "An attribute that can be used to map a user's email address to a user created automatically in Artifactory. Default value is `mail`.\n- Note: If blank/empty string input was set for email_attribute, Default value \"mail\" takes effect. This is to match with Artifactory behavior.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "When set, these settings are enabled. Default value is `true`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The unique ID of the LDAP setting.\n"
                },
                "ldapPoisoningProtection": {
                    "type": "boolean",
                    "description": "Protects against LDAP poisoning by filtering out users exposed to vulnerabilities.  Default value is `true`.\n"
                },
                "ldapUrl": {
                    "type": "string",
                    "description": "Location of the LDAP server in the following format: ldap://myserver:myport/dc=sampledomain,dc=com. The URL should include the base DN used to search for and/or authenticate users.\n"
                },
                "managerDn": {
                    "type": "string",
                    "description": "The full DN of a user with permissions that allow querying the LDAP server. When working with LDAP Groups, the user should have permissions for any extra group attributes such as memberOf.\n"
                },
                "managerPassword": {
                    "type": "string",
                    "description": "The password of the user binding to the LDAP server when using \"search\" authentication.\n"
                },
                "pagingSupportEnabled": {
                    "type": "boolean",
                    "description": "When set, supports paging results for the LDAP server. This feature requires that the LDAP Server supports a PagedResultsControl configuration.  Default value is `true`.\n"
                },
                "searchBase": {
                    "type": "string",
                    "description": "The Context name in which to search relative to the base DN in the LDAP URL. Multiple search bases may be specified separated by a pipe ( | ).\n"
                },
                "searchFilter": {
                    "type": "string",
                    "description": "A filter expression used to search for the user DN that is used in LDAP authentication. This is an LDAP search filter (as defined in 'RFC 2254') with optional arguments. In this case, the username is the only argument, denoted by '{0}'. Possible examples are: uid={0}) - this would search for a username match on the uid attribute. Authentication using LDAP is performed from the DN found if successful. Default value is blank/empty. \n- Note: LDAP settings should provide a userDnPattern or a searchFilter (or both)\n"
                },
                "searchSubTree": {
                    "type": "boolean",
                    "description": "When set, enables deep search through the sub-tree of the LDAP URL + Search Base.  Default value is `true`.\n"
                },
                "userDnPattern": {
                    "type": "string",
                    "description": "A DN pattern used to log users directly in to the LDAP database. This pattern is used to create a DN string for \"direct\" user authentication, and is relative to the base DN in the LDAP URL. The pattern argument {0} is replaced with the username at runtime. This only works if anonymous binding is allowed and a direct user DN can be used (which is not the default case for Active Directory). For example: uid={0},ou=People. Default value is blank/empty.\n- Note: LDAP settings should provide a userDnPattern or a searchFilter (or both).\n"
                }
            },
            "required": [
                "key",
                "ldapUrl",
                "managerPassword"
            ],
            "inputProperties": {
                "allowUserToAccessProfile": {
                    "type": "boolean",
                    "description": "When set, users created after logging in using LDAP will be able to access their profile page.  Default value is `false`.\n"
                },
                "autoCreateUser": {
                    "type": "boolean",
                    "description": "When set, the system will automatically create new users for those who have logged in using LDAP, and assign them to the default groups.  Default value is `true`.\n"
                },
                "emailAttribute": {
                    "type": "string",
                    "description": "An attribute that can be used to map a user's email address to a user created automatically in Artifactory. Default value is `mail`.\n- Note: If blank/empty string input was set for email_attribute, Default value \"mail\" takes effect. This is to match with Artifactory behavior.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "When set, these settings are enabled. Default value is `true`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The unique ID of the LDAP setting.\n"
                },
                "ldapPoisoningProtection": {
                    "type": "boolean",
                    "description": "Protects against LDAP poisoning by filtering out users exposed to vulnerabilities.  Default value is `true`.\n"
                },
                "ldapUrl": {
                    "type": "string",
                    "description": "Location of the LDAP server in the following format: ldap://myserver:myport/dc=sampledomain,dc=com. The URL should include the base DN used to search for and/or authenticate users.\n"
                },
                "managerDn": {
                    "type": "string",
                    "description": "The full DN of a user with permissions that allow querying the LDAP server. When working with LDAP Groups, the user should have permissions for any extra group attributes such as memberOf.\n"
                },
                "managerPassword": {
                    "type": "string",
                    "description": "The password of the user binding to the LDAP server when using \"search\" authentication.\n"
                },
                "pagingSupportEnabled": {
                    "type": "boolean",
                    "description": "When set, supports paging results for the LDAP server. This feature requires that the LDAP Server supports a PagedResultsControl configuration.  Default value is `true`.\n"
                },
                "searchBase": {
                    "type": "string",
                    "description": "The Context name in which to search relative to the base DN in the LDAP URL. Multiple search bases may be specified separated by a pipe ( | ).\n"
                },
                "searchFilter": {
                    "type": "string",
                    "description": "A filter expression used to search for the user DN that is used in LDAP authentication. This is an LDAP search filter (as defined in 'RFC 2254') with optional arguments. In this case, the username is the only argument, denoted by '{0}'. Possible examples are: uid={0}) - this would search for a username match on the uid attribute. Authentication using LDAP is performed from the DN found if successful. Default value is blank/empty. \n- Note: LDAP settings should provide a userDnPattern or a searchFilter (or both)\n"
                },
                "searchSubTree": {
                    "type": "boolean",
                    "description": "When set, enables deep search through the sub-tree of the LDAP URL + Search Base.  Default value is `true`.\n"
                },
                "userDnPattern": {
                    "type": "string",
                    "description": "A DN pattern used to log users directly in to the LDAP database. This pattern is used to create a DN string for \"direct\" user authentication, and is relative to the base DN in the LDAP URL. The pattern argument {0} is replaced with the username at runtime. This only works if anonymous binding is allowed and a direct user DN can be used (which is not the default case for Active Directory). For example: uid={0},ou=People. Default value is blank/empty.\n- Note: LDAP settings should provide a userDnPattern or a searchFilter (or both).\n"
                }
            },
            "requiredInputs": [
                "key",
                "ldapUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LdapSetting resources.\n",
                "properties": {
                    "allowUserToAccessProfile": {
                        "type": "boolean",
                        "description": "When set, users created after logging in using LDAP will be able to access their profile page.  Default value is `false`.\n"
                    },
                    "autoCreateUser": {
                        "type": "boolean",
                        "description": "When set, the system will automatically create new users for those who have logged in using LDAP, and assign them to the default groups.  Default value is `true`.\n"
                    },
                    "emailAttribute": {
                        "type": "string",
                        "description": "An attribute that can be used to map a user's email address to a user created automatically in Artifactory. Default value is `mail`.\n- Note: If blank/empty string input was set for email_attribute, Default value \"mail\" takes effect. This is to match with Artifactory behavior.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "When set, these settings are enabled. Default value is `true`.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The unique ID of the LDAP setting.\n"
                    },
                    "ldapPoisoningProtection": {
                        "type": "boolean",
                        "description": "Protects against LDAP poisoning by filtering out users exposed to vulnerabilities.  Default value is `true`.\n"
                    },
                    "ldapUrl": {
                        "type": "string",
                        "description": "Location of the LDAP server in the following format: ldap://myserver:myport/dc=sampledomain,dc=com. The URL should include the base DN used to search for and/or authenticate users.\n"
                    },
                    "managerDn": {
                        "type": "string",
                        "description": "The full DN of a user with permissions that allow querying the LDAP server. When working with LDAP Groups, the user should have permissions for any extra group attributes such as memberOf.\n"
                    },
                    "managerPassword": {
                        "type": "string",
                        "description": "The password of the user binding to the LDAP server when using \"search\" authentication.\n"
                    },
                    "pagingSupportEnabled": {
                        "type": "boolean",
                        "description": "When set, supports paging results for the LDAP server. This feature requires that the LDAP Server supports a PagedResultsControl configuration.  Default value is `true`.\n"
                    },
                    "searchBase": {
                        "type": "string",
                        "description": "The Context name in which to search relative to the base DN in the LDAP URL. Multiple search bases may be specified separated by a pipe ( | ).\n"
                    },
                    "searchFilter": {
                        "type": "string",
                        "description": "A filter expression used to search for the user DN that is used in LDAP authentication. This is an LDAP search filter (as defined in 'RFC 2254') with optional arguments. In this case, the username is the only argument, denoted by '{0}'. Possible examples are: uid={0}) - this would search for a username match on the uid attribute. Authentication using LDAP is performed from the DN found if successful. Default value is blank/empty. \n- Note: LDAP settings should provide a userDnPattern or a searchFilter (or both)\n"
                    },
                    "searchSubTree": {
                        "type": "boolean",
                        "description": "When set, enables deep search through the sub-tree of the LDAP URL + Search Base.  Default value is `true`.\n"
                    },
                    "userDnPattern": {
                        "type": "string",
                        "description": "A DN pattern used to log users directly in to the LDAP database. This pattern is used to create a DN string for \"direct\" user authentication, and is relative to the base DN in the LDAP URL. The pattern argument {0} is replaced with the username at runtime. This only works if anonymous binding is allowed and a direct user DN can be used (which is not the default case for Active Directory). For example: uid={0},ou=People. Default value is blank/empty.\n- Note: LDAP settings should provide a userDnPattern or a searchFilter (or both).\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localBowerRepository:LocalBowerRepository": {
            "description": "## # Artifactory Local Bower Repository Resource\n\nCreates a local bower repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_bower_repo = new artifactory.LocalBowerRepository(\"terraform-local-test-bower-repo\", {\n    key: \"terraform-local-test-bower-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_bower_repo = artifactory.LocalBowerRepository(\"terraform-local-test-bower-repo\", key=\"terraform-local-test-bower-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_bower_repo = new Artifactory.LocalBowerRepository(\"terraform-local-test-bower-repo\", new Artifactory.LocalBowerRepositoryArgs\n        {\n            Key = \"terraform-local-test-bower-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalBowerRepository(ctx, \"terraform-local-test-bower-repo\", \u0026artifactory.LocalBowerRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-bower-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalBowerRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localCargoRepository:LocalCargoRepository": {
            "description": "## # Artifactory Local Cargo Repository Resource\n\nCreates a local Cargo repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_cargo_repo_basic = new artifactory.LocalCargoRepository(\"terraform-local-test-cargo-repo-basic\", {\n    anonymousAccess: false,\n    key: \"terraform-local-test-cargo-repo-basic\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_cargo_repo_basic = artifactory.LocalCargoRepository(\"terraform-local-test-cargo-repo-basic\",\n    anonymous_access=False,\n    key=\"terraform-local-test-cargo-repo-basic\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_cargo_repo_basic = new Artifactory.LocalCargoRepository(\"terraform-local-test-cargo-repo-basic\", new Artifactory.LocalCargoRepositoryArgs\n        {\n            AnonymousAccess = false,\n            Key = \"terraform-local-test-cargo-repo-basic\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalCargoRepository(ctx, \"terraform-local-test-cargo-repo-basic\", \u0026artifactory.LocalCargoRepositoryArgs{\n\t\t\tAnonymousAccess: pulumi.Bool(false),\n\t\t\tKey:             pulumi.String(\"terraform-local-test-cargo-repo-basic\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "anonymousAccess": {
                    "type": "boolean",
                    "description": "Cargo client does not send credentials when performing download and search for crates. Enable this to allow anonymous access to these resources (only), note that this will override the security anonymous access option. Default value is 'false'.\n"
                },
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "anonymousAccess": {
                    "type": "boolean",
                    "description": "Cargo client does not send credentials when performing download and search for crates. Enable this to allow anonymous access to these resources (only), note that this will override the security anonymous access option. Default value is 'false'.\n"
                },
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalCargoRepository resources.\n",
                "properties": {
                    "anonymousAccess": {
                        "type": "boolean",
                        "description": "Cargo client does not send credentials when performing download and search for crates. Enable this to allow anonymous access to these resources (only), note that this will override the security anonymous access option. Default value is 'false'.\n"
                    },
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "indexCompressionFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localChefRepository:LocalChefRepository": {
            "description": "## # Artifactory Local Chef Repository Resource\n\nCreates a local chef repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_chef_repo = new artifactory.LocalChefRepository(\"terraform-local-test-chef-repo\", {\n    key: \"terraform-local-test-chef-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_chef_repo = artifactory.LocalChefRepository(\"terraform-local-test-chef-repo\", key=\"terraform-local-test-chef-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_chef_repo = new Artifactory.LocalChefRepository(\"terraform-local-test-chef-repo\", new Artifactory.LocalChefRepositoryArgs\n        {\n            Key = \"terraform-local-test-chef-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalChefRepository(ctx, \"terraform-local-test-chef-repo\", \u0026artifactory.LocalChefRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-chef-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalChefRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localCocoapodsRepository:LocalCocoapodsRepository": {
            "description": "## # Artifactory Local Cocoapods Repository Resource\n\nCreates a local cocoapods repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_cocoapods_repo = new artifactory.LocalCocoapodsRepository(\"terraform-local-test-cocoapods-repo\", {\n    key: \"terraform-local-test-cocoapods-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_cocoapods_repo = artifactory.LocalCocoapodsRepository(\"terraform-local-test-cocoapods-repo\", key=\"terraform-local-test-cocoapods-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_cocoapods_repo = new Artifactory.LocalCocoapodsRepository(\"terraform-local-test-cocoapods-repo\", new Artifactory.LocalCocoapodsRepositoryArgs\n        {\n            Key = \"terraform-local-test-cocoapods-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalCocoapodsRepository(ctx, \"terraform-local-test-cocoapods-repo\", \u0026artifactory.LocalCocoapodsRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-cocoapods-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalCocoapodsRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localComposerRepository:LocalComposerRepository": {
            "description": "## # Artifactory Local Php-Composer Repository Resource\n\nCreates a local composer repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_composer_repo = new artifactory.LocalComposerRepository(\"terraform-local-test-composer-repo\", {\n    key: \"terraform-local-test-composer-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_composer_repo = artifactory.LocalComposerRepository(\"terraform-local-test-composer-repo\", key=\"terraform-local-test-composer-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_composer_repo = new Artifactory.LocalComposerRepository(\"terraform-local-test-composer-repo\", new Artifactory.LocalComposerRepositoryArgs\n        {\n            Key = \"terraform-local-test-composer-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalComposerRepository(ctx, \"terraform-local-test-composer-repo\", \u0026artifactory.LocalComposerRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-composer-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalComposerRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localConanRepository:LocalConanRepository": {
            "description": "## # Artifactory Local Conan Repository Resource\n\nCreates a local conan repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_conan_repo = new artifactory.LocalConanRepository(\"terraform-local-test-conan-repo\", {\n    key: \"terraform-local-test-conan-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_conan_repo = artifactory.LocalConanRepository(\"terraform-local-test-conan-repo\", key=\"terraform-local-test-conan-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_conan_repo = new Artifactory.LocalConanRepository(\"terraform-local-test-conan-repo\", new Artifactory.LocalConanRepositoryArgs\n        {\n            Key = \"terraform-local-test-conan-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalConanRepository(ctx, \"terraform-local-test-conan-repo\", \u0026artifactory.LocalConanRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-conan-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalConanRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localCondaRepository:LocalCondaRepository": {
            "description": "## # Artifactory Local Conda Repository Resource\n\nCreates a local conda repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_conda_repo = new artifactory.LocalCondaRepository(\"terraform-local-test-conda-repo\", {\n    key: \"terraform-local-test-conda-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_conda_repo = artifactory.LocalCondaRepository(\"terraform-local-test-conda-repo\", key=\"terraform-local-test-conda-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_conda_repo = new Artifactory.LocalCondaRepository(\"terraform-local-test-conda-repo\", new Artifactory.LocalCondaRepositoryArgs\n        {\n            Key = \"terraform-local-test-conda-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalCondaRepository(ctx, \"terraform-local-test-conda-repo\", \u0026artifactory.LocalCondaRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-conda-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalCondaRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localCranRepository:LocalCranRepository": {
            "description": "## # Artifactory Local Cran Repository Resource\n\nCreates a local cran repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_cran_repo = new artifactory.LocalCranRepository(\"terraform-local-test-cran-repo\", {\n    key: \"terraform-local-test-cran-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_cran_repo = artifactory.LocalCranRepository(\"terraform-local-test-cran-repo\", key=\"terraform-local-test-cran-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_cran_repo = new Artifactory.LocalCranRepository(\"terraform-local-test-cran-repo\", new Artifactory.LocalCranRepositoryArgs\n        {\n            Key = \"terraform-local-test-cran-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalCranRepository(ctx, \"terraform-local-test-cran-repo\", \u0026artifactory.LocalCranRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-cran-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalCranRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localGemsRepository:LocalGemsRepository": {
            "description": "## # Artifactory Local Gems Repository Resource\n\nCreates a local gems repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_gems_repo = new artifactory.LocalGemsRepository(\"terraform-local-test-gems-repo\", {\n    key: \"terraform-local-test-gems-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_gems_repo = artifactory.LocalGemsRepository(\"terraform-local-test-gems-repo\", key=\"terraform-local-test-gems-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_gems_repo = new Artifactory.LocalGemsRepository(\"terraform-local-test-gems-repo\", new Artifactory.LocalGemsRepositoryArgs\n        {\n            Key = \"terraform-local-test-gems-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalGemsRepository(ctx, \"terraform-local-test-gems-repo\", \u0026artifactory.LocalGemsRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-gems-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalGemsRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localGenericRepository:LocalGenericRepository": {
            "description": "## # Artifactory Local Generic Repository Resource\n\nCreates a local generic repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_generic_repo = new artifactory.LocalGenericRepository(\"terraform-local-test-generic-repo\", {\n    key: \"terraform-local-test-generic-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_generic_repo = artifactory.LocalGenericRepository(\"terraform-local-test-generic-repo\", key=\"terraform-local-test-generic-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_generic_repo = new Artifactory.LocalGenericRepository(\"terraform-local-test-generic-repo\", new Artifactory.LocalGenericRepositoryArgs\n        {\n            Key = \"terraform-local-test-generic-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalGenericRepository(ctx, \"terraform-local-test-generic-repo\", \u0026artifactory.LocalGenericRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-generic-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory.\\nThis may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- A mandatory identifier for the repository that must be unique. It cannot begin with a number or contain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory.\\nThis may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- A mandatory identifier for the repository that must be unique. It cannot begin with a number or contain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalGenericRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory.\\nThis may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- A mandatory identifier for the repository that must be unique. It cannot begin with a number or contain spaces or special characters.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localGitltfsRepository:LocalGitltfsRepository": {
            "description": "## # Artifactory Local Gitlfs Repository Resource\n\nCreates a local gitlfs repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_gitlfs_repo = new artifactory.LocalGitltfsRepository(\"terraform-local-test-gitlfs-repo\", {\n    key: \"terraform-local-test-gitlfs-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_gitlfs_repo = artifactory.LocalGitltfsRepository(\"terraform-local-test-gitlfs-repo\", key=\"terraform-local-test-gitlfs-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_gitlfs_repo = new Artifactory.LocalGitltfsRepository(\"terraform-local-test-gitlfs-repo\", new Artifactory.LocalGitltfsRepositoryArgs\n        {\n            Key = \"terraform-local-test-gitlfs-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalGitltfsRepository(ctx, \"terraform-local-test-gitlfs-repo\", \u0026artifactory.LocalGitltfsRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-gitlfs-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalGitltfsRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localGoRepository:LocalGoRepository": {
            "description": "## # Artifactory Local Go Repository Resource\n\nCreates a local go repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_go_repo = new artifactory.LocalGoRepository(\"terraform-local-test-go-repo\", {\n    key: \"terraform-local-test-go-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_go_repo = artifactory.LocalGoRepository(\"terraform-local-test-go-repo\", key=\"terraform-local-test-go-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_go_repo = new Artifactory.LocalGoRepository(\"terraform-local-test-go-repo\", new Artifactory.LocalGoRepositoryArgs\n        {\n            Key = \"terraform-local-test-go-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalGoRepository(ctx, \"terraform-local-test-go-repo\", \u0026artifactory.LocalGoRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-go-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalGoRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localGradleRepository:LocalGradleRepository": {
            "description": "## # Artifactory Local Gradle Repository Resource\n\nCreates a local Gradle repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_gradle_repo_basic = new artifactory.LocalGradleRepository(\"terraform-local-test-gradle-repo-basic\", {\n    checksumPolicyType: \"client-checksums\",\n    handleReleases: true,\n    handleSnapshots: true,\n    key: \"terraform-local-test-gradle-repo-basic\",\n    maxUniqueSnapshots: 10,\n    snapshotVersionBehavior: \"unique\",\n    suppressPomConsistencyChecks: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_gradle_repo_basic = artifactory.LocalGradleRepository(\"terraform-local-test-gradle-repo-basic\",\n    checksum_policy_type=\"client-checksums\",\n    handle_releases=True,\n    handle_snapshots=True,\n    key=\"terraform-local-test-gradle-repo-basic\",\n    max_unique_snapshots=10,\n    snapshot_version_behavior=\"unique\",\n    suppress_pom_consistency_checks=True)\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_gradle_repo_basic = new Artifactory.LocalGradleRepository(\"terraform-local-test-gradle-repo-basic\", new Artifactory.LocalGradleRepositoryArgs\n        {\n            ChecksumPolicyType = \"client-checksums\",\n            HandleReleases = true,\n            HandleSnapshots = true,\n            Key = \"terraform-local-test-gradle-repo-basic\",\n            MaxUniqueSnapshots = 10,\n            SnapshotVersionBehavior = \"unique\",\n            SuppressPomConsistencyChecks = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalGradleRepository(ctx, \"terraform-local-test-gradle-repo-basic\", \u0026artifactory.LocalGradleRepositoryArgs{\n\t\t\tChecksumPolicyType:           pulumi.String(\"client-checksums\"),\n\t\t\tHandleReleases:               pulumi.Bool(true),\n\t\t\tHandleSnapshots:              pulumi.Bool(true),\n\t\t\tKey:                          pulumi.String(\"terraform-local-test-gradle-repo-basic\"),\n\t\t\tMaxUniqueSnapshots:           pulumi.Int(10),\n\t\t\tSnapshotVersionBehavior:      pulumi.String(\"unique\"),\n\t\t\tSuppressPomConsistencyChecks: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "- Checksum policy determines how Artifactory behaves when a client checksum for a deployed\n\"resource is missing or conflicts with the locally calculated checksum (bad checksum). For more details,\n\"please refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy)\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "- The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions.\nThe options are -\nUnique: Version number is based on a time-stamp (default)\nNon-unique: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type\nDeployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).\nIf the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error.\nYou can disable this behavior by setting the Suppress POM Consistency Checks checkbox. True by default for Gradle repository.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "- Checksum policy determines how Artifactory behaves when a client checksum for a deployed\n\"resource is missing or conflicts with the locally calculated checksum (bad checksum). For more details,\n\"please refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy)\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "- The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions.\nThe options are -\nUnique: Version number is based on a time-stamp (default)\nNon-unique: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type\nDeployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).\nIf the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error.\nYou can disable this behavior by setting the Suppress POM Consistency Checks checkbox. True by default for Gradle repository.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalGradleRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "checksumPolicyType": {
                        "type": "string",
                        "description": "- Checksum policy determines how Artifactory behaves when a client checksum for a deployed\n\"resource is missing or conflicts with the locally calculated checksum (bad checksum). For more details,\n\"please refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy)\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "- The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "snapshotVersionBehavior": {
                        "type": "string",
                        "description": "Specifies the naming convention for Maven SNAPSHOT versions.\nThe options are -\nUnique: Version number is based on a time-stamp (default)\nNon-unique: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type\nDeployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).\nIf the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error.\nYou can disable this behavior by setting the Suppress POM Consistency Checks checkbox. True by default for Gradle repository.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localHelmRepository:LocalHelmRepository": {
            "description": "## # Artifactory Local Helm Repository Resource\n\nCreates a local helm repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_helm_repo = new artifactory.LocalHelmRepository(\"terraform-local-test-helm-repo\", {\n    key: \"terraform-local-test-helm-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_helm_repo = artifactory.LocalHelmRepository(\"terraform-local-test-helm-repo\", key=\"terraform-local-test-helm-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_helm_repo = new Artifactory.LocalHelmRepository(\"terraform-local-test-helm-repo\", new Artifactory.LocalHelmRepositoryArgs\n        {\n            Key = \"terraform-local-test-helm-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalHelmRepository(ctx, \"terraform-local-test-helm-repo\", \u0026artifactory.LocalHelmRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-helm-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalHelmRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localIvyRepository:LocalIvyRepository": {
            "description": "## # Artifactory Local Ivy Repository Resource\n\nCreates a local ivy repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_ivy_repo = new artifactory.LocalIvyRepository(\"terraform-local-test-ivy-repo\", {\n    key: \"terraform-local-test-ivy-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_ivy_repo = artifactory.LocalIvyRepository(\"terraform-local-test-ivy-repo\", key=\"terraform-local-test-ivy-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_ivy_repo = new Artifactory.LocalIvyRepository(\"terraform-local-test-ivy-repo\", new Artifactory.LocalIvyRepositoryArgs\n        {\n            Key = \"terraform-local-test-ivy-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalIvyRepository(ctx, \"terraform-local-test-ivy-repo\", \u0026artifactory.LocalIvyRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-ivy-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - Unique: Version number is based on a\ntime-stamp (default) Non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type Deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - Unique: Version number is based on a\ntime-stamp (default) Non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type Deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalIvyRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "checksumPolicyType": {
                        "type": "string",
                        "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "snapshotVersionBehavior": {
                        "type": "string",
                        "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - Unique: Version number is based on a\ntime-stamp (default) Non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type Deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localMavenRepository:LocalMavenRepository": {
            "description": "## # Artifactory Local Maven Repository Resource\n\nCreates a local Maven repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_maven_repo_basic = new artifactory.LocalMavenRepository(\"terraform-local-test-maven-repo-basic\", {\n    checksumPolicyType: \"client-checksums\",\n    handleReleases: true,\n    handleSnapshots: true,\n    key: \"terraform-local-test-maven-repo-basic\",\n    maxUniqueSnapshots: 10,\n    snapshotVersionBehavior: \"unique\",\n    suppressPomConsistencyChecks: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_maven_repo_basic = artifactory.LocalMavenRepository(\"terraform-local-test-maven-repo-basic\",\n    checksum_policy_type=\"client-checksums\",\n    handle_releases=True,\n    handle_snapshots=True,\n    key=\"terraform-local-test-maven-repo-basic\",\n    max_unique_snapshots=10,\n    snapshot_version_behavior=\"unique\",\n    suppress_pom_consistency_checks=False)\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_maven_repo_basic = new Artifactory.LocalMavenRepository(\"terraform-local-test-maven-repo-basic\", new Artifactory.LocalMavenRepositoryArgs\n        {\n            ChecksumPolicyType = \"client-checksums\",\n            HandleReleases = true,\n            HandleSnapshots = true,\n            Key = \"terraform-local-test-maven-repo-basic\",\n            MaxUniqueSnapshots = 10,\n            SnapshotVersionBehavior = \"unique\",\n            SuppressPomConsistencyChecks = false,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalMavenRepository(ctx, \"terraform-local-test-maven-repo-basic\", \u0026artifactory.LocalMavenRepositoryArgs{\n\t\t\tChecksumPolicyType:           pulumi.String(\"client-checksums\"),\n\t\t\tHandleReleases:               pulumi.Bool(true),\n\t\t\tHandleSnapshots:              pulumi.Bool(true),\n\t\t\tKey:                          pulumi.String(\"terraform-local-test-maven-repo-basic\"),\n\t\t\tMaxUniqueSnapshots:           pulumi.Int(10),\n\t\t\tSnapshotVersionBehavior:      pulumi.String(\"unique\"),\n\t\t\tSuppressPomConsistencyChecks: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "- Checksum policy determines how Artifactory behaves when a client checksum for a deployed\n\"resource is missing or conflicts with the locally calculated checksum (bad checksum). For more details,\n\"please refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy)\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "- The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions.\nThe options are -\nUnique: Version number is based on a time-stamp (default)\nNon-unique: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type\nDeployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).\nIf the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error.\nYou can disable this behavior by setting the Suppress POM Consistency Checks checkbox. False by default for Maven repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "- Checksum policy determines how Artifactory behaves when a client checksum for a deployed\n\"resource is missing or conflicts with the locally calculated checksum (bad checksum). For more details,\n\"please refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy)\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "- The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions.\nThe options are -\nUnique: Version number is based on a time-stamp (default)\nNon-unique: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type\nDeployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).\nIf the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error.\nYou can disable this behavior by setting the Suppress POM Consistency Checks checkbox. False by default for Maven repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalMavenRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "checksumPolicyType": {
                        "type": "string",
                        "description": "- Checksum policy determines how Artifactory behaves when a client checksum for a deployed\n\"resource is missing or conflicts with the locally calculated checksum (bad checksum). For more details,\n\"please refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy)\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "- The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "snapshotVersionBehavior": {
                        "type": "string",
                        "description": "Specifies the naming convention for Maven SNAPSHOT versions.\nThe options are -\nUnique: Version number is based on a time-stamp (default)\nNon-unique: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type\nDeployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).\nIf the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error.\nYou can disable this behavior by setting the Suppress POM Consistency Checks checkbox. False by default for Maven repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localNpmRepository:LocalNpmRepository": {
            "description": "## # Artifactory Local NPM Repository Resource\n\nCreates a local npm repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_npm_repo = new artifactory.LocalNpmRepository(\"terraform-local-test-npm-repo\", {\n    key: \"terraform-local-test-npm-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_npm_repo = artifactory.LocalNpmRepository(\"terraform-local-test-npm-repo\", key=\"terraform-local-test-npm-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_npm_repo = new Artifactory.LocalNpmRepository(\"terraform-local-test-npm-repo\", new Artifactory.LocalNpmRepositoryArgs\n        {\n            Key = \"terraform-local-test-npm-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalNpmRepository(ctx, \"terraform-local-test-npm-repo\", \u0026artifactory.LocalNpmRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-npm-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalNpmRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localNugetRepository:LocalNugetRepository": {
            "description": "## # Artifactory Local Nuget Repository Resource\n\nCreates a local Nuget repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_nuget_repo_basic = new artifactory.LocalNugetRepository(\"terraform-local-test-nuget-repo-basic\", {\n    forceNugetAuthentication: true,\n    key: \"terraform-local-test-nuget-repo-basic\",\n    maxUniqueSnapshots: 5,\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_nuget_repo_basic = artifactory.LocalNugetRepository(\"terraform-local-test-nuget-repo-basic\",\n    force_nuget_authentication=True,\n    key=\"terraform-local-test-nuget-repo-basic\",\n    max_unique_snapshots=5)\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_nuget_repo_basic = new Artifactory.LocalNugetRepository(\"terraform-local-test-nuget-repo-basic\", new Artifactory.LocalNugetRepositoryArgs\n        {\n            ForceNugetAuthentication = true,\n            Key = \"terraform-local-test-nuget-repo-basic\",\n            MaxUniqueSnapshots = 5,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalNugetRepository(ctx, \"terraform-local-test-nuget-repo-basic\", \u0026artifactory.LocalNugetRepositoryArgs{\n\t\t\tForceNugetAuthentication: pulumi.Bool(true),\n\t\t\tKey:                      pulumi.String(\"terraform-local-test-nuget-repo-basic\"),\n\t\t\tMaxUniqueSnapshots:       pulumi.Int(5),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "forceNugetAuthentication": {
                    "type": "boolean",
                    "description": "- Force basic authentication credentials in order to use this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "- The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "forceNugetAuthentication": {
                    "type": "boolean",
                    "description": "- Force basic authentication credentials in order to use this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "- The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalNugetRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "forceNugetAuthentication": {
                        "type": "boolean",
                        "description": "- Force basic authentication credentials in order to use this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "- The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localOpkgRepository:LocalOpkgRepository": {
            "description": "## # Artifactory Local Opkg Repository Resource\n\nCreates a local opkg repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_opkg_repo = new artifactory.LocalOpkgRepository(\"terraform-local-test-opkg-repo\", {\n    key: \"terraform-local-test-opkg-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_opkg_repo = artifactory.LocalOpkgRepository(\"terraform-local-test-opkg-repo\", key=\"terraform-local-test-opkg-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_opkg_repo = new Artifactory.LocalOpkgRepository(\"terraform-local-test-opkg-repo\", new Artifactory.LocalOpkgRepositoryArgs\n        {\n            Key = \"terraform-local-test-opkg-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalOpkgRepository(ctx, \"terraform-local-test-opkg-repo\", \u0026artifactory.LocalOpkgRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-opkg-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalOpkgRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localPuppetRepository:LocalPuppetRepository": {
            "description": "## # Artifactory Local Puppet Repository Resource\n\nCreates a local puppet repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_puppet_repo = new artifactory.LocalPuppetRepository(\"terraform-local-test-puppet-repo\", {\n    key: \"terraform-local-test-puppet-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_puppet_repo = artifactory.LocalPuppetRepository(\"terraform-local-test-puppet-repo\", key=\"terraform-local-test-puppet-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_puppet_repo = new Artifactory.LocalPuppetRepository(\"terraform-local-test-puppet-repo\", new Artifactory.LocalPuppetRepositoryArgs\n        {\n            Key = \"terraform-local-test-puppet-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalPuppetRepository(ctx, \"terraform-local-test-puppet-repo\", \u0026artifactory.LocalPuppetRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-puppet-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalPuppetRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localPypiRepository:LocalPypiRepository": {
            "description": "## # Artifactory Local Pypi Repository Resource\n\nCreates a local pypi repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_pypi_repo = new artifactory.LocalPypiRepository(\"terraform-local-test-pypi-repo\", {\n    key: \"terraform-local-test-pypi-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_pypi_repo = artifactory.LocalPypiRepository(\"terraform-local-test-pypi-repo\", key=\"terraform-local-test-pypi-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_pypi_repo = new Artifactory.LocalPypiRepository(\"terraform-local-test-pypi-repo\", new Artifactory.LocalPypiRepositoryArgs\n        {\n            Key = \"terraform-local-test-pypi-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalPypiRepository(ctx, \"terraform-local-test-pypi-repo\", \u0026artifactory.LocalPypiRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-pypi-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalPypiRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localRpmRepository:LocalRpmRepository": {
            "description": "## # Artifactory Local RPM Repository Resource\n\nCreates a local RPM repository\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\nimport * from \"fs\";\n\nconst some_keypair_gpg_1 = new artifactory.Keypair(\"some-keypair-gpg-1\", {\n    pairName: `some-keypair${random_id.randid.id}`,\n    pairType: \"GPG\",\n    alias: \"foo-alias1\",\n    privateKey: fs.readFileSync(\"samples/gpg.priv\"),\n    publicKey: fs.readFileSync(\"samples/gpg.pub\"),\n});\nconst some_keypair_gpg_2 = new artifactory.Keypair(\"some-keypair-gpg-2\", {\n    pairName: `some-keypair${random_id.randid.id}`,\n    pairType: \"GPG\",\n    alias: \"foo-alias2\",\n    privateKey: fs.readFileSync(\"samples/gpg.priv\"),\n    publicKey: fs.readFileSync(\"samples/gpg.pub\"),\n});\nconst terraform_local_test_rpm_repo_basic = new artifactory.LocalRpmRepository(\"terraform-local-test-rpm-repo-basic\", {\n    key: \"terraform-local-test-rpm-repo-basic\",\n    yumRootDepth: 5,\n    calculateYumMetadata: true,\n    enableFileListsIndexing: true,\n    yumGroupFileNames: \"file-1.xml,file-2.xml\",\n    primaryKeypairRef: artifactory_keypair[\"some-keypairGPG1\"].pair_name,\n    secondaryKeypairRef: artifactory_keypair[\"some-keypairGPG2\"].pair_name,\n}, {\n    dependsOn: [\n        some_keypair_gpg_1,\n        some_keypair_gpg_2,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nsome_keypair_gpg_1 = artifactory.Keypair(\"some-keypair-gpg-1\",\n    pair_name=f\"some-keypair{random_id['randid']['id']}\",\n    pair_type=\"GPG\",\n    alias=\"foo-alias1\",\n    private_key=(lambda path: open(path).read())(\"samples/gpg.priv\"),\n    public_key=(lambda path: open(path).read())(\"samples/gpg.pub\"))\nsome_keypair_gpg_2 = artifactory.Keypair(\"some-keypair-gpg-2\",\n    pair_name=f\"some-keypair{random_id['randid']['id']}\",\n    pair_type=\"GPG\",\n    alias=\"foo-alias2\",\n    private_key=(lambda path: open(path).read())(\"samples/gpg.priv\"),\n    public_key=(lambda path: open(path).read())(\"samples/gpg.pub\"))\nterraform_local_test_rpm_repo_basic = artifactory.LocalRpmRepository(\"terraform-local-test-rpm-repo-basic\",\n    key=\"terraform-local-test-rpm-repo-basic\",\n    yum_root_depth=5,\n    calculate_yum_metadata=True,\n    enable_file_lists_indexing=True,\n    yum_group_file_names=\"file-1.xml,file-2.xml\",\n    primary_keypair_ref=artifactory_keypair[\"some-keypairGPG1\"][\"pair_name\"],\n    secondary_keypair_ref=artifactory_keypair[\"some-keypairGPG2\"][\"pair_name\"],\n    opts=pulumi.ResourceOptions(depends_on=[\n            some_keypair_gpg_1,\n            some_keypair_gpg_2,\n        ]))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var some_keypair_gpg_1 = new Artifactory.Keypair(\"some-keypair-gpg-1\", new Artifactory.KeypairArgs\n        {\n            PairName = $\"some-keypair{random_id.Randid.Id}\",\n            PairType = \"GPG\",\n            Alias = \"foo-alias1\",\n            PrivateKey = File.ReadAllText(\"samples/gpg.priv\"),\n            PublicKey = File.ReadAllText(\"samples/gpg.pub\"),\n        });\n        var some_keypair_gpg_2 = new Artifactory.Keypair(\"some-keypair-gpg-2\", new Artifactory.KeypairArgs\n        {\n            PairName = $\"some-keypair{random_id.Randid.Id}\",\n            PairType = \"GPG\",\n            Alias = \"foo-alias2\",\n            PrivateKey = File.ReadAllText(\"samples/gpg.priv\"),\n            PublicKey = File.ReadAllText(\"samples/gpg.pub\"),\n        });\n        var terraform_local_test_rpm_repo_basic = new Artifactory.LocalRpmRepository(\"terraform-local-test-rpm-repo-basic\", new Artifactory.LocalRpmRepositoryArgs\n        {\n            Key = \"terraform-local-test-rpm-repo-basic\",\n            YumRootDepth = 5,\n            CalculateYumMetadata = true,\n            EnableFileListsIndexing = true,\n            YumGroupFileNames = \"file-1.xml,file-2.xml\",\n            PrimaryKeypairRef = artifactory_keypair.Some_keypairGPG1.Pair_name,\n            SecondaryKeypairRef = artifactory_keypair.Some_keypairGPG2.Pair_name,\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                some_keypair_gpg_1,\n                some_keypair_gpg_2,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewKeypair(ctx, \"some-keypair-gpg-1\", \u0026artifactory.KeypairArgs{\n\t\t\tPairName:   pulumi.String(fmt.Sprintf(\"%v%v\", \"some-keypair\", random_id.Randid.Id)),\n\t\t\tPairType:   pulumi.String(\"GPG\"),\n\t\t\tAlias:      pulumi.String(\"foo-alias1\"),\n\t\t\tPrivateKey: readFileOrPanic(\"samples/gpg.priv\"),\n\t\t\tPublicKey:  readFileOrPanic(\"samples/gpg.pub\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewKeypair(ctx, \"some-keypair-gpg-2\", \u0026artifactory.KeypairArgs{\n\t\t\tPairName:   pulumi.String(fmt.Sprintf(\"%v%v\", \"some-keypair\", random_id.Randid.Id)),\n\t\t\tPairType:   pulumi.String(\"GPG\"),\n\t\t\tAlias:      pulumi.String(\"foo-alias2\"),\n\t\t\tPrivateKey: readFileOrPanic(\"samples/gpg.priv\"),\n\t\t\tPublicKey:  readFileOrPanic(\"samples/gpg.pub\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewLocalRpmRepository(ctx, \"terraform-local-test-rpm-repo-basic\", \u0026artifactory.LocalRpmRepositoryArgs{\n\t\t\tKey:                     pulumi.String(\"terraform-local-test-rpm-repo-basic\"),\n\t\t\tYumRootDepth:            pulumi.Int(5),\n\t\t\tCalculateYumMetadata:    pulumi.Bool(true),\n\t\t\tEnableFileListsIndexing: pulumi.Bool(true),\n\t\t\tYumGroupFileNames:       pulumi.String(\"file-1.xml,file-2.xml\"),\n\t\t\tPrimaryKeypairRef:       pulumi.Any(artifactory_keypair.Some - keypairGPG1.Pair_name),\n\t\t\tSecondaryKeypairRef:     pulumi.Any(artifactory_keypair.Some - keypairGPG2.Pair_name),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tsome_keypair_gpg_1,\n\t\t\tsome_keypair_gpg_2,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "calculateYumMetadata": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "enableFileListsIndexing": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "The primary GPG key to be used to sign packages\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "The secondary GPG key to be used to sign packages\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                },
                "yumGroupFileNames": {
                    "type": "string",
                    "description": "- A list of XML file names containing RPM group component definitions. Artifactory includes the group definitions as part of the calculated RPM metadata, as well as automatically generating a gzipped version of the group files, if required.\n"
                },
                "yumRootDepth": {
                    "type": "integer",
                    "description": "- The depth, relative to the repository's root folder, where RPM metadata is created. This is useful when your repository contains multiple RPM repositories under parallel hierarchies. For example, if your RPMs are stored under 'fedora/linux/$releasever/$basearch', specify a depth of 4. Once the number of snapshots exceeds this setting, older versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "calculateYumMetadata": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "enableFileListsIndexing": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "The primary GPG key to be used to sign packages\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "The secondary GPG key to be used to sign packages\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                },
                "yumGroupFileNames": {
                    "type": "string",
                    "description": "- A list of XML file names containing RPM group component definitions. Artifactory includes the group definitions as part of the calculated RPM metadata, as well as automatically generating a gzipped version of the group files, if required.\n"
                },
                "yumRootDepth": {
                    "type": "integer",
                    "description": "- The depth, relative to the repository's root folder, where RPM metadata is created. This is useful when your repository contains multiple RPM repositories under parallel hierarchies. For example, if your RPMs are stored under 'fedora/linux/$releasever/$basearch', specify a depth of 4. Once the number of snapshots exceeds this setting, older versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalRpmRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "calculateYumMetadata": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "enableFileListsIndexing": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "primaryKeypairRef": {
                        "type": "string",
                        "description": "The primary GPG key to be used to sign packages\n"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "secondaryKeypairRef": {
                        "type": "string",
                        "description": "The secondary GPG key to be used to sign packages\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    },
                    "yumGroupFileNames": {
                        "type": "string",
                        "description": "- A list of XML file names containing RPM group component definitions. Artifactory includes the group definitions as part of the calculated RPM metadata, as well as automatically generating a gzipped version of the group files, if required.\n"
                    },
                    "yumRootDepth": {
                        "type": "integer",
                        "description": "- The depth, relative to the repository's root folder, where RPM metadata is created. This is useful when your repository contains multiple RPM repositories under parallel hierarchies. For example, if your RPMs are stored under 'fedora/linux/$releasever/$basearch', specify a depth of 4. Once the number of snapshots exceeds this setting, older versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localSbtRepository:LocalSbtRepository": {
            "description": "## # Artifactory Local Sbt Repository Resource\n\nCreates a local sbt repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_sbt_repo = new artifactory.LocalSbtRepository(\"terraform-local-test-sbt-repo\", {\n    key: \"terraform-local-test-sbt-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_sbt_repo = artifactory.LocalSbtRepository(\"terraform-local-test-sbt-repo\", key=\"terraform-local-test-sbt-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_sbt_repo = new Artifactory.LocalSbtRepository(\"terraform-local-test-sbt-repo\", new Artifactory.LocalSbtRepositoryArgs\n        {\n            Key = \"terraform-local-test-sbt-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalSbtRepository(ctx, \"terraform-local-test-sbt-repo\", \u0026artifactory.LocalSbtRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-sbt-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - Unique: Version number is based on a\ntime-stamp (default) Non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type Deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - Unique: Version number is based on a\ntime-stamp (default) Non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type Deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalSbtRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "checksumPolicyType": {
                        "type": "string",
                        "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "snapshotVersionBehavior": {
                        "type": "string",
                        "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - Unique: Version number is based on a\ntime-stamp (default) Non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type Deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localVagrantRepository:LocalVagrantRepository": {
            "description": "## # Artifactory Local Vagrant Repository Resource\n\nCreates a local vagrant repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_vagrant_repo = new artifactory.LocalVagrantRepository(\"terraform-local-test-vagrant-repo\", {\n    key: \"terraform-local-test-vagrant-repo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nterraform_local_test_vagrant_repo = artifactory.LocalVagrantRepository(\"terraform-local-test-vagrant-repo\", key=\"terraform-local-test-vagrant-repo\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_local_test_vagrant_repo = new Artifactory.LocalVagrantRepository(\"terraform-local-test-vagrant-repo\", new Artifactory.LocalVagrantRepositoryArgs\n        {\n            Key = \"terraform-local-test-vagrant-repo\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalVagrantRepository(ctx, \"terraform-local-test-vagrant-repo\", \u0026artifactory.LocalVagrantRepositoryArgs{\n\t\t\tKey: pulumi.String(\"terraform-local-test-vagrant-repo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "- the identity key of the repo\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalVagrantRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "- the identity key of the repo\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/managedUser:ManagedUser": {
            "description": "## # Artifactory Managed User Resource\n\nProvides an Artifactory managed user resource. This can be used to create and maintain Artifactory users. For example, service account where password is known and managed externally.\n\nUnlike `artifactory.UnmanagedUser` and `artifactory.User`, the `password` attribute is required and cannot be empty.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a new Artifactory user called terraform\nconst test_user = new artifactory.ManagedUser(\"test-user\", {\n    email: \"test-user@artifactory-terraform.com\",\n    groups: [\n        \"logged-in-users\",\n        \"readers\",\n    ],\n    password: \"my super secret password\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Create a new Artifactory user called terraform\ntest_user = artifactory.ManagedUser(\"test-user\",\n    email=\"test-user@artifactory-terraform.com\",\n    groups=[\n        \"logged-in-users\",\n        \"readers\",\n    ],\n    password=\"my super secret password\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Artifactory user called terraform\n        var test_user = new Artifactory.ManagedUser(\"test-user\", new Artifactory.ManagedUserArgs\n        {\n            Email = \"test-user@artifactory-terraform.com\",\n            Groups = \n            {\n                \"logged-in-users\",\n                \"readers\",\n            },\n            Password = \"my super secret password\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewManagedUser(ctx, \"test-user\", \u0026artifactory.ManagedUserArgs{\n\t\t\tEmail: pulumi.String(\"test-user@artifactory-terraform.com\"),\n\t\t\tGroups: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"logged-in-users\"),\n\t\t\t\tpulumi.String(\"readers\"),\n\t\t\t},\n\t\t\tPassword: pulumi.String(\"my super secret password\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUsers can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/managedUser:ManagedUser test-user myusername\n```\n\n ",
            "properties": {
                "admin": {
                    "type": "boolean",
                    "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                },
                "disableUiAccess": {
                    "type": "boolean",
                    "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email for user.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups this user is a part of.\n"
                },
                "internalPasswordDisabled": {
                    "type": "boolean",
                    "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Username for user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the user.\n"
                },
                "profileUpdatable": {
                    "type": "boolean",
                    "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                }
            },
            "required": [
                "email",
                "name",
                "password"
            ],
            "inputProperties": {
                "admin": {
                    "type": "boolean",
                    "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                },
                "disableUiAccess": {
                    "type": "boolean",
                    "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email for user.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups this user is a part of.\n"
                },
                "internalPasswordDisabled": {
                    "type": "boolean",
                    "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Username for user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the user.\n"
                },
                "profileUpdatable": {
                    "type": "boolean",
                    "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                }
            },
            "requiredInputs": [
                "email",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagedUser resources.\n",
                "properties": {
                    "admin": {
                        "type": "boolean",
                        "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                    },
                    "disableUiAccess": {
                        "type": "boolean",
                        "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email for user.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups this user is a part of.\n"
                    },
                    "internalPasswordDisabled": {
                        "type": "boolean",
                        "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Username for user.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the user.\n"
                    },
                    "profileUpdatable": {
                        "type": "boolean",
                        "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/mavenRepository:MavenRepository": {
            "description": "## # Artifactory Virtual Maven Repository Resource\n\nProvides an Artifactory virtual repository resource with specific maven feature.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst bar = new artifactory.LocalMavenRepository(\"bar\", {\n    key: \"bar\",\n    repoLayoutRef: \"maven-2-default\",\n});\nconst baz = new artifactory.RemoteMavenRepository(\"baz\", {\n    key: \"baz\",\n    repoLayoutRef: \"maven-2-default\",\n    url: \"https://search.maven.com/\",\n});\nconst foo = new artifactory.MavenRepository(\"foo\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    forceMavenAuthentication: true,\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"maven-virt-repo\",\n    notes: \"Internal description\",\n    pomRepositoryReferencesCleanupPolicy: \"discard_active_reference\",\n    repoLayoutRef: \"maven-2-default\",\n    repositories: [\n        bar.key,\n        artifactory_local_maven_repository_baz.key,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nbar = artifactory.LocalMavenRepository(\"bar\",\n    key=\"bar\",\n    repo_layout_ref=\"maven-2-default\")\nbaz = artifactory.RemoteMavenRepository(\"baz\",\n    key=\"baz\",\n    repo_layout_ref=\"maven-2-default\",\n    url=\"https://search.maven.com/\")\nfoo = artifactory.MavenRepository(\"foo\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    force_maven_authentication=True,\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"maven-virt-repo\",\n    notes=\"Internal description\",\n    pom_repository_references_cleanup_policy=\"discard_active_reference\",\n    repo_layout_ref=\"maven-2-default\",\n    repositories=[\n        bar.key,\n        artifactory_local_maven_repository[\"baz\"][\"key\"],\n    ])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var bar = new Artifactory.LocalMavenRepository(\"bar\", new Artifactory.LocalMavenRepositoryArgs\n        {\n            Key = \"bar\",\n            RepoLayoutRef = \"maven-2-default\",\n        });\n        var baz = new Artifactory.RemoteMavenRepository(\"baz\", new Artifactory.RemoteMavenRepositoryArgs\n        {\n            Key = \"baz\",\n            RepoLayoutRef = \"maven-2-default\",\n            Url = \"https://search.maven.com/\",\n        });\n        var foo = new Artifactory.MavenRepository(\"foo\", new Artifactory.MavenRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            ForceMavenAuthentication = true,\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"maven-virt-repo\",\n            Notes = \"Internal description\",\n            PomRepositoryReferencesCleanupPolicy = \"discard_active_reference\",\n            RepoLayoutRef = \"maven-2-default\",\n            Repositories = \n            {\n                bar.Key,\n                artifactory_local_maven_repository.Baz.Key,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tbar, err := artifactory.NewLocalMavenRepository(ctx, \"bar\", \u0026artifactory.LocalMavenRepositoryArgs{\n\t\t\tKey:           pulumi.String(\"bar\"),\n\t\t\tRepoLayoutRef: pulumi.String(\"maven-2-default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewRemoteMavenRepository(ctx, \"baz\", \u0026artifactory.RemoteMavenRepositoryArgs{\n\t\t\tKey:           pulumi.String(\"baz\"),\n\t\t\tRepoLayoutRef: pulumi.String(\"maven-2-default\"),\n\t\t\tUrl:           pulumi.String(\"https://search.maven.com/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewMavenRepository(ctx, \"foo\", \u0026artifactory.MavenRepositoryArgs{\n\t\t\tDescription:                          pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern:                      pulumi.String(\"com/google/**\"),\n\t\t\tForceMavenAuthentication:             pulumi.Bool(true),\n\t\t\tIncludesPattern:                      pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:                                  pulumi.String(\"maven-virt-repo\"),\n\t\t\tNotes:                                pulumi.String(\"Internal description\"),\n\t\t\tPomRepositoryReferencesCleanupPolicy: pulumi.String(\"discard_active_reference\"),\n\t\t\tRepoLayoutRef:                        pulumi.String(\"maven-2-default\"),\n\t\t\tRepositories: pulumi.StringArray{\n\t\t\t\tbar.Key,\n\t\t\t\tpulumi.Any(artifactory_local_maven_repository.Baz.Key),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/mavenRepository:MavenRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "- forces authentication when fetching from remote repos\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": ". One of: `\"discard_active_reference\", \"discard_any_reference\", \"nothing\"`\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "forceMavenAuthentication",
                "key",
                "packageType",
                "pomRepositoryReferencesCleanupPolicy"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "- forces authentication when fetching from remote repos\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": ". One of: `\"discard_active_reference\", \"discard_any_reference\", \"nothing\"`\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MavenRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "forceMavenAuthentication": {
                        "type": "boolean",
                        "description": "- forces authentication when fetching from remote repos\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "keyPair": {
                        "type": "string",
                        "description": "The keypair used to sign artifacts\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "pomRepositoryReferencesCleanupPolicy": {
                        "type": "string",
                        "description": ". One of: `\"discard_active_reference\", \"discard_any_reference\", \"nothing\"`\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/oauthSettings:OauthSettings": {
            "description": "## # Artifactory OAuth SSO Settings Resource\n\nThis resource can be used to manage Artifactory's OAuth SSO settings.\n\nOnly a single `artifactory.OauthSettings` resource is meant to be defined.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Configure Artifactory OAuth SSO settings\nconst oauth = new artifactory.OauthSettings(\"oauth\", {\n    allowUserToAccessProfile: true,\n    enable: true,\n    oauthProviders: [{\n        apiUrl: \"https://organization.okta.com/oauth2/v1/userinfo\",\n        authUrl: \"https://organization.okta.com/oauth2/v1/authorize\",\n        clientId: \"foo\",\n        clientSecret: \"bar\",\n        enabled: false,\n        name: \"okta\",\n        tokenUrl: \"https://organization.okta.com/oauth2/v1/token\",\n        type: \"openId\",\n    }],\n    persistUsers: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Configure Artifactory OAuth SSO settings\noauth = artifactory.OauthSettings(\"oauth\",\n    allow_user_to_access_profile=True,\n    enable=True,\n    oauth_providers=[artifactory.OauthSettingsOauthProviderArgs(\n        api_url=\"https://organization.okta.com/oauth2/v1/userinfo\",\n        auth_url=\"https://organization.okta.com/oauth2/v1/authorize\",\n        client_id=\"foo\",\n        client_secret=\"bar\",\n        enabled=False,\n        name=\"okta\",\n        token_url=\"https://organization.okta.com/oauth2/v1/token\",\n        type=\"openId\",\n    )],\n    persist_users=True)\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Configure Artifactory OAuth SSO settings\n        var oauth = new Artifactory.OauthSettings(\"oauth\", new Artifactory.OauthSettingsArgs\n        {\n            AllowUserToAccessProfile = true,\n            Enable = true,\n            OauthProviders = \n            {\n                new Artifactory.Inputs.OauthSettingsOauthProviderArgs\n                {\n                    ApiUrl = \"https://organization.okta.com/oauth2/v1/userinfo\",\n                    AuthUrl = \"https://organization.okta.com/oauth2/v1/authorize\",\n                    ClientId = \"foo\",\n                    ClientSecret = \"bar\",\n                    Enabled = false,\n                    Name = \"okta\",\n                    TokenUrl = \"https://organization.okta.com/oauth2/v1/token\",\n                    Type = \"openId\",\n                },\n            },\n            PersistUsers = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewOauthSettings(ctx, \"oauth\", \u0026artifactory.OauthSettingsArgs{\n\t\t\tAllowUserToAccessProfile: pulumi.Bool(true),\n\t\t\tEnable:                   pulumi.Bool(true),\n\t\t\tOauthProviders: OauthSettingsOauthProviderArray{\n\t\t\t\t\u0026OauthSettingsOauthProviderArgs{\n\t\t\t\t\tApiUrl:       pulumi.String(\"https://organization.okta.com/oauth2/v1/userinfo\"),\n\t\t\t\t\tAuthUrl:      pulumi.String(\"https://organization.okta.com/oauth2/v1/authorize\"),\n\t\t\t\t\tClientId:     pulumi.String(\"foo\"),\n\t\t\t\t\tClientSecret: pulumi.String(\"bar\"),\n\t\t\t\t\tEnabled:      pulumi.Bool(false),\n\t\t\t\t\tName:         pulumi.String(\"okta\"),\n\t\t\t\t\tTokenUrl:     pulumi.String(\"https://organization.okta.com/oauth2/v1/token\"),\n\t\t\t\t\tType:         pulumi.String(\"openId\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPersistUsers: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCurrent OAuth SSO settings can be imported using `oauth_settings` as the `ID`, e.g.\n\n```sh\n $ pulumi import artifactory:index/oauthSettings:OauthSettings oauth oauth_settings\n```\n\n ",
            "properties": {
                "allowUserToAccessProfile": {
                    "type": "boolean",
                    "description": "Allow persisted users to access their profile.  Default value is `false`.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable OAuth SSO.  Default value is `true`.\n"
                },
                "oauthProviders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/OauthSettingsOauthProvider:OauthSettingsOauthProvider"
                    },
                    "description": "OAuth provider settings block. Multiple blocks can be defined, at least one is required.\n"
                },
                "persistUsers": {
                    "type": "boolean",
                    "description": "Enable the creation of local Artifactory users.  Default value is `false`.\n"
                }
            },
            "required": [
                "oauthProviders"
            ],
            "inputProperties": {
                "allowUserToAccessProfile": {
                    "type": "boolean",
                    "description": "Allow persisted users to access their profile.  Default value is `false`.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable OAuth SSO.  Default value is `true`.\n"
                },
                "oauthProviders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/OauthSettingsOauthProvider:OauthSettingsOauthProvider"
                    },
                    "description": "OAuth provider settings block. Multiple blocks can be defined, at least one is required.\n"
                },
                "persistUsers": {
                    "type": "boolean",
                    "description": "Enable the creation of local Artifactory users.  Default value is `false`.\n"
                }
            },
            "requiredInputs": [
                "oauthProviders"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OauthSettings resources.\n",
                "properties": {
                    "allowUserToAccessProfile": {
                        "type": "boolean",
                        "description": "Allow persisted users to access their profile.  Default value is `false`.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable OAuth SSO.  Default value is `true`.\n"
                    },
                    "oauthProviders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/OauthSettingsOauthProvider:OauthSettingsOauthProvider"
                        },
                        "description": "OAuth provider settings block. Multiple blocks can be defined, at least one is required.\n"
                    },
                    "persistUsers": {
                        "type": "boolean",
                        "description": "Enable the creation of local Artifactory users.  Default value is `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/permissionTarget:PermissionTarget": {
            "description": "## # Artifactory Permission Target Resource\n\n**Requires Artifactory \u003e= 6.6.0. If using a lower version see here**\n\nProvides an Artifactory permission target resource. This can be used to create and manage Artifactory permission targets.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a new Artifactory permission target called testpermission\nconst test_perm = new artifactory.PermissionTarget(\"test-perm\", {\n    build: {\n        actions: {\n            users: [{\n                name: \"anonymous\",\n                permissions: [\n                    \"read\",\n                    \"write\",\n                ],\n            }],\n        },\n        includesPatterns: [\"**\"],\n        repositories: [\"artifactory-build-info\"],\n    },\n    repo: {\n        actions: {\n            groups: [{\n                name: \"readers\",\n                permissions: [\"read\"],\n            }],\n            users: [{\n                name: \"anonymous\",\n                permissions: [\n                    \"read\",\n                    \"write\",\n                ],\n            }],\n        },\n        excludesPatterns: [\"bar/**\"],\n        includesPatterns: [\"foo/**\"],\n        repositories: [\"example-repo-local\"],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Create a new Artifactory permission target called testpermission\ntest_perm = artifactory.PermissionTarget(\"test-perm\",\n    build=artifactory.PermissionTargetBuildArgs(\n        actions=artifactory.PermissionTargetBuildActionsArgs(\n            users=[artifactory.PermissionTargetBuildActionsUserArgs(\n                name=\"anonymous\",\n                permissions=[\n                    \"read\",\n                    \"write\",\n                ],\n            )],\n        ),\n        includes_patterns=[\"**\"],\n        repositories=[\"artifactory-build-info\"],\n    ),\n    repo=artifactory.PermissionTargetRepoArgs(\n        actions=artifactory.PermissionTargetRepoActionsArgs(\n            groups=[artifactory.PermissionTargetRepoActionsGroupArgs(\n                name=\"readers\",\n                permissions=[\"read\"],\n            )],\n            users=[artifactory.PermissionTargetRepoActionsUserArgs(\n                name=\"anonymous\",\n                permissions=[\n                    \"read\",\n                    \"write\",\n                ],\n            )],\n        ),\n        excludes_patterns=[\"bar/**\"],\n        includes_patterns=[\"foo/**\"],\n        repositories=[\"example-repo-local\"],\n    ))\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Artifactory permission target called testpermission\n        var test_perm = new Artifactory.PermissionTarget(\"test-perm\", new Artifactory.PermissionTargetArgs\n        {\n            Build = new Artifactory.Inputs.PermissionTargetBuildArgs\n            {\n                Actions = new Artifactory.Inputs.PermissionTargetBuildActionsArgs\n                {\n                    Users = \n                    {\n                        new Artifactory.Inputs.PermissionTargetBuildActionsUserArgs\n                        {\n                            Name = \"anonymous\",\n                            Permissions = \n                            {\n                                \"read\",\n                                \"write\",\n                            },\n                        },\n                    },\n                },\n                IncludesPatterns = \n                {\n                    \"**\",\n                },\n                Repositories = \n                {\n                    \"artifactory-build-info\",\n                },\n            },\n            Repo = new Artifactory.Inputs.PermissionTargetRepoArgs\n            {\n                Actions = new Artifactory.Inputs.PermissionTargetRepoActionsArgs\n                {\n                    Groups = \n                    {\n                        new Artifactory.Inputs.PermissionTargetRepoActionsGroupArgs\n                        {\n                            Name = \"readers\",\n                            Permissions = \n                            {\n                                \"read\",\n                            },\n                        },\n                    },\n                    Users = \n                    {\n                        new Artifactory.Inputs.PermissionTargetRepoActionsUserArgs\n                        {\n                            Name = \"anonymous\",\n                            Permissions = \n                            {\n                                \"read\",\n                                \"write\",\n                            },\n                        },\n                    },\n                },\n                ExcludesPatterns = \n                {\n                    \"bar/**\",\n                },\n                IncludesPatterns = \n                {\n                    \"foo/**\",\n                },\n                Repositories = \n                {\n                    \"example-repo-local\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewPermissionTarget(ctx, \"test-perm\", \u0026artifactory.PermissionTargetArgs{\n\t\t\tBuild: \u0026PermissionTargetBuildArgs{\n\t\t\t\tActions: \u0026PermissionTargetBuildActionsArgs{\n\t\t\t\t\tUsers: PermissionTargetBuildActionsUserArray{\n\t\t\t\t\t\t\u0026PermissionTargetBuildActionsUserArgs{\n\t\t\t\t\t\t\tName: pulumi.String(\"anonymous\"),\n\t\t\t\t\t\t\tPermissions: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"read\"),\n\t\t\t\t\t\t\t\tpulumi.String(\"write\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tIncludesPatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"**\"),\n\t\t\t\t},\n\t\t\t\tRepositories: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"artifactory-build-info\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tRepo: \u0026PermissionTargetRepoArgs{\n\t\t\t\tActions: \u0026PermissionTargetRepoActionsArgs{\n\t\t\t\t\tGroups: PermissionTargetRepoActionsGroupArray{\n\t\t\t\t\t\t\u0026PermissionTargetRepoActionsGroupArgs{\n\t\t\t\t\t\t\tName: pulumi.String(\"readers\"),\n\t\t\t\t\t\t\tPermissions: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"read\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tUsers: PermissionTargetRepoActionsUserArray{\n\t\t\t\t\t\t\u0026PermissionTargetRepoActionsUserArgs{\n\t\t\t\t\t\t\tName: pulumi.String(\"anonymous\"),\n\t\t\t\t\t\t\tPermissions: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"read\"),\n\t\t\t\t\t\t\t\tpulumi.String(\"write\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tExcludesPatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"bar/**\"),\n\t\t\t\t},\n\t\t\t\tIncludesPatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"foo/**\"),\n\t\t\t\t},\n\t\t\t\tRepositories: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"example-repo-local\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Permissions\n\nThe provider supports the following `permission` enums:\n\n* `read`\n* `write`\n* `annotate`\n* `delete`\n* `manage`\n\nThe values can be mapped to the permissions from the official [documentation](https://www.jfrog.com/confluence/display/JFROG/Permissions):\n\n* `read` - matches `Read` permissions.\n* `write` - matches ` Deploy / Cache / Create` permissions.\n* `annotate` - matches `Annotate` permissions.\n* `delete` - matches `Delete / Overwrite` permissions.\n* `manage` - matches `Manage` permissions.\n\n\n## Import\n\nPermission targets can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/permissionTarget:PermissionTarget terraform-test-permission mypermission\n```\n\n ",
            "properties": {
                "build": {
                    "$ref": "#/types/artifactory:index/PermissionTargetBuild:PermissionTargetBuild",
                    "description": "As for repo but for artifactory-build-info permssions.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of permission\n"
                },
                "releaseBundle": {
                    "$ref": "#/types/artifactory:index/PermissionTargetReleaseBundle:PermissionTargetReleaseBundle"
                },
                "repo": {
                    "$ref": "#/types/artifactory:index/PermissionTargetRepo:PermissionTargetRepo",
                    "description": "Repository permission configuration\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "build": {
                    "$ref": "#/types/artifactory:index/PermissionTargetBuild:PermissionTargetBuild",
                    "description": "As for repo but for artifactory-build-info permssions.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of permission\n"
                },
                "releaseBundle": {
                    "$ref": "#/types/artifactory:index/PermissionTargetReleaseBundle:PermissionTargetReleaseBundle"
                },
                "repo": {
                    "$ref": "#/types/artifactory:index/PermissionTargetRepo:PermissionTargetRepo",
                    "description": "Repository permission configuration\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PermissionTarget resources.\n",
                "properties": {
                    "build": {
                        "$ref": "#/types/artifactory:index/PermissionTargetBuild:PermissionTargetBuild",
                        "description": "As for repo but for artifactory-build-info permssions.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of permission\n"
                    },
                    "releaseBundle": {
                        "$ref": "#/types/artifactory:index/PermissionTargetReleaseBundle:PermissionTargetReleaseBundle"
                    },
                    "repo": {
                        "$ref": "#/types/artifactory:index/PermissionTargetRepo:PermissionTargetRepo",
                        "description": "Repository permission configuration\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/permissionTargets:PermissionTargets": {
            "description": "## # Artifactory Permission Target Resource\n\n**Requires Artifactory \u003e= 6.6.0. If using a lower version see here**\n\nProvides an Artifactory permission target resource. This can be used to create and manage Artifactory permission targets.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a new Artifactory permission target called testpermission\nconst test_perm = new artifactory.PermissionTarget(\"test-perm\", {\n    build: {\n        actions: {\n            users: [{\n                name: \"anonymous\",\n                permissions: [\n                    \"read\",\n                    \"write\",\n                ],\n            }],\n        },\n        includesPatterns: [\"**\"],\n        repositories: [\"artifactory-build-info\"],\n    },\n    repo: {\n        actions: {\n            groups: [{\n                name: \"readers\",\n                permissions: [\"read\"],\n            }],\n            users: [{\n                name: \"anonymous\",\n                permissions: [\n                    \"read\",\n                    \"write\",\n                ],\n            }],\n        },\n        excludesPatterns: [\"bar/**\"],\n        includesPatterns: [\"foo/**\"],\n        repositories: [\"example-repo-local\"],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Create a new Artifactory permission target called testpermission\ntest_perm = artifactory.PermissionTarget(\"test-perm\",\n    build=artifactory.PermissionTargetBuildArgs(\n        actions=artifactory.PermissionTargetBuildActionsArgs(\n            users=[artifactory.PermissionTargetBuildActionsUserArgs(\n                name=\"anonymous\",\n                permissions=[\n                    \"read\",\n                    \"write\",\n                ],\n            )],\n        ),\n        includes_patterns=[\"**\"],\n        repositories=[\"artifactory-build-info\"],\n    ),\n    repo=artifactory.PermissionTargetRepoArgs(\n        actions=artifactory.PermissionTargetRepoActionsArgs(\n            groups=[artifactory.PermissionTargetRepoActionsGroupArgs(\n                name=\"readers\",\n                permissions=[\"read\"],\n            )],\n            users=[artifactory.PermissionTargetRepoActionsUserArgs(\n                name=\"anonymous\",\n                permissions=[\n                    \"read\",\n                    \"write\",\n                ],\n            )],\n        ),\n        excludes_patterns=[\"bar/**\"],\n        includes_patterns=[\"foo/**\"],\n        repositories=[\"example-repo-local\"],\n    ))\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Artifactory permission target called testpermission\n        var test_perm = new Artifactory.PermissionTarget(\"test-perm\", new Artifactory.PermissionTargetArgs\n        {\n            Build = new Artifactory.Inputs.PermissionTargetBuildArgs\n            {\n                Actions = new Artifactory.Inputs.PermissionTargetBuildActionsArgs\n                {\n                    Users = \n                    {\n                        new Artifactory.Inputs.PermissionTargetBuildActionsUserArgs\n                        {\n                            Name = \"anonymous\",\n                            Permissions = \n                            {\n                                \"read\",\n                                \"write\",\n                            },\n                        },\n                    },\n                },\n                IncludesPatterns = \n                {\n                    \"**\",\n                },\n                Repositories = \n                {\n                    \"artifactory-build-info\",\n                },\n            },\n            Repo = new Artifactory.Inputs.PermissionTargetRepoArgs\n            {\n                Actions = new Artifactory.Inputs.PermissionTargetRepoActionsArgs\n                {\n                    Groups = \n                    {\n                        new Artifactory.Inputs.PermissionTargetRepoActionsGroupArgs\n                        {\n                            Name = \"readers\",\n                            Permissions = \n                            {\n                                \"read\",\n                            },\n                        },\n                    },\n                    Users = \n                    {\n                        new Artifactory.Inputs.PermissionTargetRepoActionsUserArgs\n                        {\n                            Name = \"anonymous\",\n                            Permissions = \n                            {\n                                \"read\",\n                                \"write\",\n                            },\n                        },\n                    },\n                },\n                ExcludesPatterns = \n                {\n                    \"bar/**\",\n                },\n                IncludesPatterns = \n                {\n                    \"foo/**\",\n                },\n                Repositories = \n                {\n                    \"example-repo-local\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewPermissionTarget(ctx, \"test-perm\", \u0026artifactory.PermissionTargetArgs{\n\t\t\tBuild: \u0026PermissionTargetBuildArgs{\n\t\t\t\tActions: \u0026PermissionTargetBuildActionsArgs{\n\t\t\t\t\tUsers: PermissionTargetBuildActionsUserArray{\n\t\t\t\t\t\t\u0026PermissionTargetBuildActionsUserArgs{\n\t\t\t\t\t\t\tName: pulumi.String(\"anonymous\"),\n\t\t\t\t\t\t\tPermissions: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"read\"),\n\t\t\t\t\t\t\t\tpulumi.String(\"write\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tIncludesPatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"**\"),\n\t\t\t\t},\n\t\t\t\tRepositories: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"artifactory-build-info\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tRepo: \u0026PermissionTargetRepoArgs{\n\t\t\t\tActions: \u0026PermissionTargetRepoActionsArgs{\n\t\t\t\t\tGroups: PermissionTargetRepoActionsGroupArray{\n\t\t\t\t\t\t\u0026PermissionTargetRepoActionsGroupArgs{\n\t\t\t\t\t\t\tName: pulumi.String(\"readers\"),\n\t\t\t\t\t\t\tPermissions: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"read\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tUsers: PermissionTargetRepoActionsUserArray{\n\t\t\t\t\t\t\u0026PermissionTargetRepoActionsUserArgs{\n\t\t\t\t\t\t\tName: pulumi.String(\"anonymous\"),\n\t\t\t\t\t\t\tPermissions: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"read\"),\n\t\t\t\t\t\t\t\tpulumi.String(\"write\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tExcludesPatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"bar/**\"),\n\t\t\t\t},\n\t\t\t\tIncludesPatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"foo/**\"),\n\t\t\t\t},\n\t\t\t\tRepositories: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"example-repo-local\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Permissions\n\nThe provider supports the following `permission` enums:\n\n* `read`\n* `write`\n* `annotate`\n* `delete`\n* `manage`\n\nThe values can be mapped to the permissions from the official [documentation](https://www.jfrog.com/confluence/display/JFROG/Permissions):\n\n* `read` - matches `Read` permissions.\n* `write` - matches ` Deploy / Cache / Create` permissions.\n* `annotate` - matches `Annotate` permissions.\n* `delete` - matches `Delete / Overwrite` permissions.\n* `manage` - matches `Manage` permissions.\n\n\n## Import\n\nPermission targets can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/permissionTargets:PermissionTargets terraform-test-permission mypermission\n```\n\n ",
            "properties": {
                "build": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsBuild:PermissionTargetsBuild",
                    "description": "As for repo but for artifactory-build-info permssions.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of permission\n"
                },
                "releaseBundle": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsReleaseBundle:PermissionTargetsReleaseBundle"
                },
                "repo": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsRepo:PermissionTargetsRepo",
                    "description": "Repository permission configuration\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "build": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsBuild:PermissionTargetsBuild",
                    "description": "As for repo but for artifactory-build-info permssions.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of permission\n"
                },
                "releaseBundle": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsReleaseBundle:PermissionTargetsReleaseBundle"
                },
                "repo": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsRepo:PermissionTargetsRepo",
                    "description": "Repository permission configuration\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PermissionTargets resources.\n",
                "properties": {
                    "build": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsBuild:PermissionTargetsBuild",
                        "description": "As for repo but for artifactory-build-info permssions.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of permission\n"
                    },
                    "releaseBundle": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsReleaseBundle:PermissionTargetsReleaseBundle"
                    },
                    "repo": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsRepo:PermissionTargetsRepo",
                        "description": "Repository permission configuration\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/pullReplication:PullReplication": {
            "description": "## # Artifactory Pull Replication Resource\n\nProvides an Artifactory pull replication resource. This can be used to create and manage pull replication in Artifactory\nfor a local or remote repo.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a replication between two artifactory local repositories\nconst providerTestSource = new artifactory.LocalMavenRepository(\"provider_test_source\", {\n    key: \"provider_test_source\",\n});\nconst providerTestDest = new artifactory.RemoteMavenRepository(\"provider_test_dest\", {\n    key: \"provider_test_dest\",\n    password: \"bar\",\n    url: pulumi.interpolate`https://example.com/artifactory/${artifactory_local_maven_repository_artifactory_local_maven_repository.key}`,\n    username: \"foo\",\n});\nconst remote_rep = new artifactory.PullReplication(\"remote-rep\", {\n    cronExp: \"0 0 * * * ?\",\n    enableEventReplication: true,\n    repoKey: providerTestDest.key,\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Create a replication between two artifactory local repositories\nprovider_test_source = artifactory.LocalMavenRepository(\"providerTestSource\", key=\"provider_test_source\")\nprovider_test_dest = artifactory.RemoteMavenRepository(\"providerTestDest\",\n    key=\"provider_test_dest\",\n    password=\"bar\",\n    url=f\"https://example.com/artifactory/{artifactory_local_maven_repository['artifactory_local_maven_repository']['key']}\",\n    username=\"foo\")\nremote_rep = artifactory.PullReplication(\"remote-rep\",\n    cron_exp=\"0 0 * * * ?\",\n    enable_event_replication=True,\n    repo_key=provider_test_dest.key)\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a replication between two artifactory local repositories\n        var providerTestSource = new Artifactory.LocalMavenRepository(\"providerTestSource\", new Artifactory.LocalMavenRepositoryArgs\n        {\n            Key = \"provider_test_source\",\n        });\n        var providerTestDest = new Artifactory.RemoteMavenRepository(\"providerTestDest\", new Artifactory.RemoteMavenRepositoryArgs\n        {\n            Key = \"provider_test_dest\",\n            Password = \"bar\",\n            Url = $\"https://example.com/artifactory/{artifactory_local_maven_repository.Artifactory_local_maven_repository.Key}\",\n            Username = \"foo\",\n        });\n        var remote_rep = new Artifactory.PullReplication(\"remote-rep\", new Artifactory.PullReplicationArgs\n        {\n            CronExp = \"0 0 * * * ?\",\n            EnableEventReplication = true,\n            RepoKey = providerTestDest.Key,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewLocalMavenRepository(ctx, \"providerTestSource\", \u0026artifactory.LocalMavenRepositoryArgs{\n\t\t\tKey: pulumi.String(\"provider_test_source\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproviderTestDest, err := artifactory.NewRemoteMavenRepository(ctx, \"providerTestDest\", \u0026artifactory.RemoteMavenRepositoryArgs{\n\t\t\tKey:      pulumi.String(\"provider_test_dest\"),\n\t\t\tPassword: pulumi.String(\"bar\"),\n\t\t\tUrl:      pulumi.String(fmt.Sprintf(\"%v%v\", \"https://example.com/artifactory/\", artifactory_local_maven_repository.Artifactory_local_maven_repository.Key)),\n\t\t\tUsername: pulumi.String(\"foo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewPullReplication(ctx, \"remote-rep\", \u0026artifactory.PullReplicationArgs{\n\t\t\tCronExp:                pulumi.String(\"0 0 * * * ?\"),\n\t\t\tEnableEventReplication: pulumi.Bool(true),\n\t\t\tRepoKey:                providerTestDest.Key,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nPull replication config can be imported using its repo key, e.g.\n\n```sh\n $ pulumi import artifactory:index/pullReplication:PullReplication foo-rep repository-key\n```\n\n ",
            "properties": {
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "description": "Required for local repository, but not needed for remote repository.\n"
                },
                "pathPrefix": {
                    "type": "string"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "repoKey": {
                    "type": "string"
                },
                "socketTimeoutMillis": {
                    "type": "integer"
                },
                "syncDeletes": {
                    "type": "boolean"
                },
                "syncProperties": {
                    "type": "boolean"
                },
                "syncStatistics": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string",
                    "description": "Required for local repository, but not needed for remote repository.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Required for local repository, but not needed for remote repository.\n"
                }
            },
            "required": [
                "cronExp",
                "enableEventReplication",
                "enabled",
                "repoKey",
                "socketTimeoutMillis",
                "syncDeletes",
                "syncProperties",
                "syncStatistics"
            ],
            "inputProperties": {
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "description": "Required for local repository, but not needed for remote repository.\n"
                },
                "pathPrefix": {
                    "type": "string"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "repoKey": {
                    "type": "string"
                },
                "socketTimeoutMillis": {
                    "type": "integer"
                },
                "syncDeletes": {
                    "type": "boolean"
                },
                "syncProperties": {
                    "type": "boolean"
                },
                "syncStatistics": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string",
                    "description": "Required for local repository, but not needed for remote repository.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Required for local repository, but not needed for remote repository.\n"
                }
            },
            "requiredInputs": [
                "cronExp",
                "repoKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PullReplication resources.\n",
                "properties": {
                    "cronExp": {
                        "type": "string"
                    },
                    "enableEventReplication": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string",
                        "description": "Required for local repository, but not needed for remote repository.\n"
                    },
                    "pathPrefix": {
                        "type": "string"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "repoKey": {
                        "type": "string"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer"
                    },
                    "syncDeletes": {
                        "type": "boolean"
                    },
                    "syncProperties": {
                        "type": "boolean"
                    },
                    "syncStatistics": {
                        "type": "boolean"
                    },
                    "url": {
                        "type": "string",
                        "description": "Required for local repository, but not needed for remote repository.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Required for local repository, but not needed for remote repository.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/pushReplication:PushReplication": {
            "description": "## # Artifactory Push Replication Resource\n\nProvides an Artifactory push replication resource. This can be used to create and manage Artifactory push replications.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a replication between two artifactory local repositories\nconst providerTestSource = new artifactory.LocalMavenRepository(\"provider_test_source\", {\n    key: \"provider_test_source\",\n});\nconst providerTestDest = new artifactory.LocalMavenRepository(\"provider_test_dest\", {\n    key: \"provider_test_dest\",\n});\nconst foo_rep = new artifactory.PushReplication(\"foo-rep\", {\n    cronExp: \"0 0 * * * ?\",\n    enableEventReplication: true,\n    replications: [{\n        password: \"$var.artifactory_password\",\n        url: \"$var.artifactory_url\",\n        username: \"$var.artifactory_username\",\n    }],\n    repoKey: providerTestSource.key,\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Create a replication between two artifactory local repositories\nprovider_test_source = artifactory.LocalMavenRepository(\"providerTestSource\", key=\"provider_test_source\")\nprovider_test_dest = artifactory.LocalMavenRepository(\"providerTestDest\", key=\"provider_test_dest\")\nfoo_rep = artifactory.PushReplication(\"foo-rep\",\n    cron_exp=\"0 0 * * * ?\",\n    enable_event_replication=True,\n    replications=[artifactory.PushReplicationReplicationArgs(\n        password=\"$var.artifactory_password\",\n        url=\"$var.artifactory_url\",\n        username=\"$var.artifactory_username\",\n    )],\n    repo_key=provider_test_source.key)\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a replication between two artifactory local repositories\n        var providerTestSource = new Artifactory.LocalMavenRepository(\"providerTestSource\", new Artifactory.LocalMavenRepositoryArgs\n        {\n            Key = \"provider_test_source\",\n        });\n        var providerTestDest = new Artifactory.LocalMavenRepository(\"providerTestDest\", new Artifactory.LocalMavenRepositoryArgs\n        {\n            Key = \"provider_test_dest\",\n        });\n        var foo_rep = new Artifactory.PushReplication(\"foo-rep\", new Artifactory.PushReplicationArgs\n        {\n            CronExp = \"0 0 * * * ?\",\n            EnableEventReplication = true,\n            Replications = \n            {\n                new Artifactory.Inputs.PushReplicationReplicationArgs\n                {\n                    Password = \"$var.artifactory_password\",\n                    Url = \"$var.artifactory_url\",\n                    Username = \"$var.artifactory_username\",\n                },\n            },\n            RepoKey = providerTestSource.Key,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tproviderTestSource, err := artifactory.NewLocalMavenRepository(ctx, \"providerTestSource\", \u0026artifactory.LocalMavenRepositoryArgs{\n\t\t\tKey: pulumi.String(\"provider_test_source\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewLocalMavenRepository(ctx, \"providerTestDest\", \u0026artifactory.LocalMavenRepositoryArgs{\n\t\t\tKey: pulumi.String(\"provider_test_dest\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewPushReplication(ctx, \"foo-rep\", \u0026artifactory.PushReplicationArgs{\n\t\t\tCronExp:                pulumi.String(\"0 0 * * * ?\"),\n\t\t\tEnableEventReplication: pulumi.Bool(true),\n\t\t\tReplications: PushReplicationReplicationArray{\n\t\t\t\t\u0026PushReplicationReplicationArgs{\n\t\t\t\t\tPassword: pulumi.String(fmt.Sprintf(\"%v%v\", \"$\", \"var.artifactory_password\")),\n\t\t\t\t\tUrl:      pulumi.String(fmt.Sprintf(\"%v%v\", \"$\", \"var.artifactory_url\")),\n\t\t\t\t\tUsername: pulumi.String(fmt.Sprintf(\"%v%v\", \"$\", \"var.artifactory_username\")),\n\t\t\t\t},\n\t\t\t},\n\t\t\tRepoKey: providerTestSource.Key,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nPush replication configs can be imported using their repo key, e.g.\n\n```sh\n $ pulumi import artifactory:index/pushReplication:PushReplication foo-rep provider_test_source\n```\n\n ",
            "properties": {
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean"
                },
                "replications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PushReplicationReplication:PushReplicationReplication"
                    }
                },
                "repoKey": {
                    "type": "string"
                }
            },
            "required": [
                "cronExp",
                "enableEventReplication",
                "repoKey"
            ],
            "inputProperties": {
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean"
                },
                "replications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PushReplicationReplication:PushReplicationReplication"
                    }
                },
                "repoKey": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "cronExp",
                "repoKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PushReplication resources.\n",
                "properties": {
                    "cronExp": {
                        "type": "string"
                    },
                    "enableEventReplication": {
                        "type": "boolean"
                    },
                    "replications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/PushReplicationReplication:PushReplicationReplication"
                        }
                    },
                    "repoKey": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/releaseBundleWebhook:ReleaseBundleWebhook": {
            "description": "## # Artifactory Release Bundle Webhook Resource\n\nProvides an Artifactory webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst release_bundle_webhook = new artifactory.ReleaseBundleWebhook(\"release-bundle-webhook\", {\n    criteria: {\n        anyReleaseBundle: false,\n        excludePatterns: [\"bar/**\"],\n        includePatterns: [\"foo/**\"],\n        registeredReleaseBundleNames: [\"bundle-name\"],\n    },\n    customHttpHeaders: {\n        \"header-1\": \"value-1\",\n        \"header-2\": \"value-2\",\n    },\n    eventTypes: [\n        \"created\",\n        \"signed\",\n        \"deleted\",\n    ],\n    key: \"release-bundle-webhook\",\n    proxy: \"proxy-key\",\n    secret: \"some-secret\",\n    url: \"http://tempurl.org/webhook\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nrelease_bundle_webhook = artifactory.ReleaseBundleWebhook(\"release-bundle-webhook\",\n    criteria=artifactory.ReleaseBundleWebhookCriteriaArgs(\n        any_release_bundle=False,\n        exclude_patterns=[\"bar/**\"],\n        include_patterns=[\"foo/**\"],\n        registered_release_bundle_names=[\"bundle-name\"],\n    ),\n    custom_http_headers={\n        \"header-1\": \"value-1\",\n        \"header-2\": \"value-2\",\n    },\n    event_types=[\n        \"created\",\n        \"signed\",\n        \"deleted\",\n    ],\n    key=\"release-bundle-webhook\",\n    proxy=\"proxy-key\",\n    secret=\"some-secret\",\n    url=\"http://tempurl.org/webhook\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var release_bundle_webhook = new Artifactory.ReleaseBundleWebhook(\"release-bundle-webhook\", new Artifactory.ReleaseBundleWebhookArgs\n        {\n            Criteria = new Artifactory.Inputs.ReleaseBundleWebhookCriteriaArgs\n            {\n                AnyReleaseBundle = false,\n                ExcludePatterns = \n                {\n                    \"bar/**\",\n                },\n                IncludePatterns = \n                {\n                    \"foo/**\",\n                },\n                RegisteredReleaseBundleNames = \n                {\n                    \"bundle-name\",\n                },\n            },\n            CustomHttpHeaders = \n            {\n                { \"header-1\", \"value-1\" },\n                { \"header-2\", \"value-2\" },\n            },\n            EventTypes = \n            {\n                \"created\",\n                \"signed\",\n                \"deleted\",\n            },\n            Key = \"release-bundle-webhook\",\n            Proxy = \"proxy-key\",\n            Secret = \"some-secret\",\n            Url = \"http://tempurl.org/webhook\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewReleaseBundleWebhook(ctx, \"release-bundle-webhook\", \u0026artifactory.ReleaseBundleWebhookArgs{\n\t\t\tCriteria: \u0026ReleaseBundleWebhookCriteriaArgs{\n\t\t\t\tAnyReleaseBundle: pulumi.Bool(false),\n\t\t\t\tExcludePatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"bar/**\"),\n\t\t\t\t},\n\t\t\t\tIncludePatterns: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"foo/**\"),\n\t\t\t\t},\n\t\t\t\tRegisteredReleaseBundleNames: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"bundle-name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tCustomHttpHeaders: pulumi.StringMap{\n\t\t\t\t\"header-1\": pulumi.String(\"value-1\"),\n\t\t\t\t\"header-2\": pulumi.String(\"value-2\"),\n\t\t\t},\n\t\t\tEventTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"created\"),\n\t\t\t\tpulumi.String(\"signed\"),\n\t\t\t\tpulumi.String(\"deleted\"),\n\t\t\t},\n\t\t\tKey:    pulumi.String(\"release-bundle-webhook\"),\n\t\t\tProxy:  pulumi.String(\"proxy-key\"),\n\t\t\tSecret: pulumi.String(\"some-secret\"),\n\t\t\tUrl:    pulumi.String(\"http://tempurl.org/webhook\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ReleaseBundleWebhookCriteria:ReleaseBundleWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"created\", \"signed\", \"deleted\"\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL\n"
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                }
            },
            "required": [
                "criteria",
                "eventTypes",
                "key",
                "url"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ReleaseBundleWebhookCriteria:ReleaseBundleWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"created\", \"signed\", \"deleted\"\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL\n"
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                }
            },
            "requiredInputs": [
                "criteria",
                "eventTypes",
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ReleaseBundleWebhook resources.\n",
                "properties": {
                    "criteria": {
                        "$ref": "#/types/artifactory:index/ReleaseBundleWebhookCriteria:ReleaseBundleWebhookCriteria",
                        "description": "Specifies where the webhook will be applied on which repositories.\n"
                    },
                    "customHttpHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Webhook description. Max length 1000 characters.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of webhook. Default to 'true'\n"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"created\", \"signed\", \"deleted\"\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "secret": {
                        "type": "string",
                        "description": "Secret authentication token that will be sent to the configured URL\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteAlpineRepository:RemoteAlpineRepository": {
            "description": "## # Artifactory Remote Alpine Repository Resource\n\nCreates a remote Alpine repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Alpine+Linux+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote Alpine repository called my-remote-alpine.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_alpine = new artifactory.RemoteAlpineRepository(\"my-remote-alpine\", {\n    key: \"my-remote-alpine\",\n    url: \"http://dl-cdn.alpinelinux.org/alpine\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_alpine = artifactory.RemoteAlpineRepository(\"my-remote-alpine\",\n    key=\"my-remote-alpine\",\n    url=\"http://dl-cdn.alpinelinux.org/alpine\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_alpine = new Artifactory.RemoteAlpineRepository(\"my-remote-alpine\", new Artifactory.RemoteAlpineRepositoryArgs\n        {\n            Key = \"my-remote-alpine\",\n            Url = \"http://dl-cdn.alpinelinux.org/alpine\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteAlpineRepository(ctx, \"my-remote-alpine\", \u0026artifactory.RemoteAlpineRepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-remote-alpine\"),\n\t\t\tUrl: pulumi.String(\"http://dl-cdn.alpinelinux.org/alpine\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteAlpineRepositoryContentSynchronisation:RemoteAlpineRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteAlpineRepositoryContentSynchronisation:RemoteAlpineRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteAlpineRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteAlpineRepositoryContentSynchronisation:RemoteAlpineRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteBowerRepository:RemoteBowerRepository": {
            "description": "## # Artifactory Remote Bower Repository Resource\n\nCreates a remote Bower repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Bower+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote Bower repository called my-remote-bower.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_bower = new artifactory.RemoteBowerRepository(\"my-remote-bower\", {\n    key: \"my-remote-bower\",\n    url: \"https://github.com/\",\n    vcsGitProvider: \"GITHUB\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_bower = artifactory.RemoteBowerRepository(\"my-remote-bower\",\n    key=\"my-remote-bower\",\n    url=\"https://github.com/\",\n    vcs_git_provider=\"GITHUB\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_bower = new Artifactory.RemoteBowerRepository(\"my-remote-bower\", new Artifactory.RemoteBowerRepositoryArgs\n        {\n            Key = \"my-remote-bower\",\n            Url = \"https://github.com/\",\n            VcsGitProvider = \"GITHUB\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteBowerRepository(ctx, \"my-remote-bower\", \u0026artifactory.RemoteBowerRepositoryArgs{\n\t\t\tKey:            pulumi.String(\"my-remote-bower\"),\n\t\t\tUrl:            pulumi.String(\"https://github.com/\"),\n\t\t\tVcsGitProvider: pulumi.String(\"GITHUB\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bowerRegistryUrl": {
                    "type": "string",
                    "description": "Proxy remote Bower repository. Default value is \"https://registry.bower.io\".\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteBowerRepositoryContentSynchronisation:RemoteBowerRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"ARTIFACTORY\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bowerRegistryUrl": {
                    "type": "string",
                    "description": "Proxy remote Bower repository. Default value is \"https://registry.bower.io\".\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteBowerRepositoryContentSynchronisation:RemoteBowerRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"ARTIFACTORY\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteBowerRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bowerRegistryUrl": {
                        "type": "string",
                        "description": "Proxy remote Bower repository. Default value is \"https://registry.bower.io\".\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteBowerRepositoryContentSynchronisation:RemoteBowerRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "vcsGitDownloadUrl": {
                        "type": "string",
                        "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                    },
                    "vcsGitProvider": {
                        "type": "string",
                        "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"ARTIFACTORY\".\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteCargoRepository:RemoteCargoRepository": {
            "description": "## # Artifactory Remote Cargo Repository Resource\n\nProvides an Artifactory remote `cargo` repository resource. This provides cargo specific fields and is the only way to get them\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Cargo+Registry)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nCreate a new Artifactory remote cargo repository called my-remote-cargo\nfor brevity sake, only cargo specific fields are included; for other fields see documentation for\ngeneric repo.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_cargo = new artifactory.RemoteCargoRepository(\"my-remote-cargo\", {\n    anonymousAccess: true,\n    gitRegistryUrl: \"https://github.com/rust-lang/foo.index\",\n    key: \"my-remote-cargo\",\n    url: \"https://github.com/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_cargo = artifactory.RemoteCargoRepository(\"my-remote-cargo\",\n    anonymous_access=True,\n    git_registry_url=\"https://github.com/rust-lang/foo.index\",\n    key=\"my-remote-cargo\",\n    url=\"https://github.com/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_cargo = new Artifactory.RemoteCargoRepository(\"my-remote-cargo\", new Artifactory.RemoteCargoRepositoryArgs\n        {\n            AnonymousAccess = true,\n            GitRegistryUrl = \"https://github.com/rust-lang/foo.index\",\n            Key = \"my-remote-cargo\",\n            Url = \"https://github.com/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteCargoRepository(ctx, \"my-remote-cargo\", \u0026artifactory.RemoteCargoRepositoryArgs{\n\t\t\tAnonymousAccess: pulumi.Bool(true),\n\t\t\tGitRegistryUrl:  pulumi.String(\"https://github.com/rust-lang/foo.index\"),\n\t\t\tKey:             pulumi.String(\"my-remote-cargo\"),\n\t\t\tUrl:             pulumi.String(\"https://github.com/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Note\n\nIf you get a 400 error: `\"Custom Base URL should be defined prior to creating a Cargo repository\"`,\nyou must set the base url at: `http://${host}/ui/admin/configuration/general`\n",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "anonymousAccess": {
                    "type": "boolean",
                    "description": "- Cargo client does not send credentials when performing download and search for crates. Enable this to allow anonymous access to these resources (only), note that this will override the security anonymous access option.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCargoRepositoryContentSynchronisation:RemoteCargoRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "gitRegistryUrl": {
                    "type": "string",
                    "description": "- This is the index url, expected to be a git repository. for remote artifactory use \"arturl/git/repokey.git\"\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "gitRegistryUrl",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "anonymousAccess": {
                    "type": "boolean",
                    "description": "- Cargo client does not send credentials when performing download and search for crates. Enable this to allow anonymous access to these resources (only), note that this will override the security anonymous access option.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCargoRepositoryContentSynchronisation:RemoteCargoRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "gitRegistryUrl": {
                    "type": "string",
                    "description": "- This is the index url, expected to be a git repository. for remote artifactory use \"arturl/git/repokey.git\"\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "requiredInputs": [
                "gitRegistryUrl",
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteCargoRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                    },
                    "anonymousAccess": {
                        "type": "boolean",
                        "description": "- Cargo client does not send credentials when performing download and search for crates. Enable this to allow anonymous access to these resources (only), note that this will override the security anonymous access option.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteCargoRepositoryContentSynchronisation:RemoteCargoRepositoryContentSynchronisation",
                        "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "gitRegistryUrl": {
                        "type": "string",
                        "description": "- This is the index url, expected to be a git repository. for remote artifactory use \"arturl/git/repokey.git\"\n"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteChefRepository:RemoteChefRepository": {
            "description": "## # Artifactory Remote Chef Repository Resource\n\nCreates a remote Chef repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Chef+Cookbook+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote Chef repository called my-remote-chef.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_chef = new artifactory.RemoteChefRepository(\"my-remote-chef\", {\n    key: \"my-remote-chef\",\n    url: \"https://supermarket.chef.io\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_chef = artifactory.RemoteChefRepository(\"my-remote-chef\",\n    key=\"my-remote-chef\",\n    url=\"https://supermarket.chef.io\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_chef = new Artifactory.RemoteChefRepository(\"my-remote-chef\", new Artifactory.RemoteChefRepositoryArgs\n        {\n            Key = \"my-remote-chef\",\n            Url = \"https://supermarket.chef.io\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteChefRepository(ctx, \"my-remote-chef\", \u0026artifactory.RemoteChefRepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-remote-chef\"),\n\t\t\tUrl: pulumi.String(\"https://supermarket.chef.io\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteChefRepositoryContentSynchronisation:RemoteChefRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteChefRepositoryContentSynchronisation:RemoteChefRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteChefRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteChefRepositoryContentSynchronisation:RemoteChefRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteCocoapodsRepository:RemoteCocoapodsRepository": {
            "description": "## # Artifactory Remote CocoaPods Repository Resource\n\nCreates a remote CocoaPods repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/CocoaPods+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote CocoaPods repository called my-remote-cocoapods.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_cocoapods = new artifactory.RemoteCocoapodsRepository(\"my-remote-cocoapods\", {\n    key: \"my-remote-cocoapods\",\n    url: \"https://github.com/\",\n    vcsGitProvider: \"GITHUB\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_cocoapods = artifactory.RemoteCocoapodsRepository(\"my-remote-cocoapods\",\n    key=\"my-remote-cocoapods\",\n    url=\"https://github.com/\",\n    vcs_git_provider=\"GITHUB\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_cocoapods = new Artifactory.RemoteCocoapodsRepository(\"my-remote-cocoapods\", new Artifactory.RemoteCocoapodsRepositoryArgs\n        {\n            Key = \"my-remote-cocoapods\",\n            Url = \"https://github.com/\",\n            VcsGitProvider = \"GITHUB\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteCocoapodsRepository(ctx, \"my-remote-cocoapods\", \u0026artifactory.RemoteCocoapodsRepositoryArgs{\n\t\t\tKey:            pulumi.String(\"my-remote-cocoapods\"),\n\t\t\tUrl:            pulumi.String(\"https://github.com/\"),\n\t\t\tVcsGitProvider: pulumi.String(\"GITHUB\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCocoapodsRepositoryContentSynchronisation:RemoteCocoapodsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "podsSpecsRepoUrl": {
                    "type": "string",
                    "description": "Proxy remote CocoaPods Specs repositories. Default value is \"https://github.com/CocoaPods/Specs\".\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"ARTIFACTORY\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCocoapodsRepositoryContentSynchronisation:RemoteCocoapodsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "podsSpecsRepoUrl": {
                    "type": "string",
                    "description": "Proxy remote CocoaPods Specs repositories. Default value is \"https://github.com/CocoaPods/Specs\".\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"ARTIFACTORY\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteCocoapodsRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteCocoapodsRepositoryContentSynchronisation:RemoteCocoapodsRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "podsSpecsRepoUrl": {
                        "type": "string",
                        "description": "Proxy remote CocoaPods Specs repositories. Default value is \"https://github.com/CocoaPods/Specs\".\n"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "vcsGitDownloadUrl": {
                        "type": "string",
                        "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                    },
                    "vcsGitProvider": {
                        "type": "string",
                        "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"ARTIFACTORY\".\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteComposerRepository:RemoteComposerRepository": {
            "description": "## # Artifactory Remote PHP Composer Repository Resource\n\nCreates a remote PHP Composer repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/PHP+Composer+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote PHP Composer repository called my-remote-composer.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_composer = new artifactory.RemoteComposerRepository(\"my-remote-composer\", {\n    key: \"my-remote-composer\",\n    url: \"https://github.com/\",\n    vcsGitProvider: \"GITHUB\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_composer = artifactory.RemoteComposerRepository(\"my-remote-composer\",\n    key=\"my-remote-composer\",\n    url=\"https://github.com/\",\n    vcs_git_provider=\"GITHUB\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_composer = new Artifactory.RemoteComposerRepository(\"my-remote-composer\", new Artifactory.RemoteComposerRepositoryArgs\n        {\n            Key = \"my-remote-composer\",\n            Url = \"https://github.com/\",\n            VcsGitProvider = \"GITHUB\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteComposerRepository(ctx, \"my-remote-composer\", \u0026artifactory.RemoteComposerRepositoryArgs{\n\t\t\tKey:            pulumi.String(\"my-remote-composer\"),\n\t\t\tUrl:            pulumi.String(\"https://github.com/\"),\n\t\t\tVcsGitProvider: pulumi.String(\"GITHUB\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "composerRegistryUrl": {
                    "type": "string",
                    "description": "Proxy remote Composer repository. Default value is \"https://packagist.org\".\n"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteComposerRepositoryContentSynchronisation:RemoteComposerRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"ARTIFACTORY\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "composerRegistryUrl": {
                    "type": "string",
                    "description": "Proxy remote Composer repository. Default value is \"https://packagist.org\".\n"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteComposerRepositoryContentSynchronisation:RemoteComposerRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"ARTIFACTORY\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteComposerRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "composerRegistryUrl": {
                        "type": "string",
                        "description": "Proxy remote Composer repository. Default value is \"https://packagist.org\".\n"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteComposerRepositoryContentSynchronisation:RemoteComposerRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "vcsGitDownloadUrl": {
                        "type": "string",
                        "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                    },
                    "vcsGitProvider": {
                        "type": "string",
                        "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"ARTIFACTORY\".\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteConanRepository:RemoteConanRepository": {
            "description": "## # Artifactory Remote Conan Repository Resource\n\nCreates a remote Conan repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Conan+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote Conan repository called my-remote-conan.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_conan = new artifactory.RemoteConanRepository(\"my-remote-conan\", {\n    key: \"my-remote-conan\",\n    url: \"https://conan.bintray.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_conan = artifactory.RemoteConanRepository(\"my-remote-conan\",\n    key=\"my-remote-conan\",\n    url=\"https://conan.bintray.com\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_conan = new Artifactory.RemoteConanRepository(\"my-remote-conan\", new Artifactory.RemoteConanRepositoryArgs\n        {\n            Key = \"my-remote-conan\",\n            Url = \"https://conan.bintray.com\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteConanRepository(ctx, \"my-remote-conan\", \u0026artifactory.RemoteConanRepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-remote-conan\"),\n\t\t\tUrl: pulumi.String(\"https://conan.bintray.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteConanRepositoryContentSynchronisation:RemoteConanRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteConanRepositoryContentSynchronisation:RemoteConanRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteConanRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteConanRepositoryContentSynchronisation:RemoteConanRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteCondaRepository:RemoteCondaRepository": {
            "description": "## # Artifactory Remote Conda Repository Resource\n\nCreates a remote Conda repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Conda+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote Conda repository called my-remote-conda.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_conda = new artifactory.RemoteCondaRepository(\"my-remote-conda\", {\n    key: \"my-remote-conda\",\n    url: \"https://repo.anaconda.com/pkgs/main\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_conda = artifactory.RemoteCondaRepository(\"my-remote-conda\",\n    key=\"my-remote-conda\",\n    url=\"https://repo.anaconda.com/pkgs/main\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_conda = new Artifactory.RemoteCondaRepository(\"my-remote-conda\", new Artifactory.RemoteCondaRepositoryArgs\n        {\n            Key = \"my-remote-conda\",\n            Url = \"https://repo.anaconda.com/pkgs/main\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteCondaRepository(ctx, \"my-remote-conda\", \u0026artifactory.RemoteCondaRepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-remote-conda\"),\n\t\t\tUrl: pulumi.String(\"https://repo.anaconda.com/pkgs/main\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCondaRepositoryContentSynchronisation:RemoteCondaRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCondaRepositoryContentSynchronisation:RemoteCondaRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteCondaRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteCondaRepositoryContentSynchronisation:RemoteCondaRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteCranRepository:RemoteCranRepository": {
            "description": "## # Artifactory Remote Cran Repository Resource\n\nCreates a remote Cran repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/CRAN+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote Cran repository called my-remote-cran.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_cran = new artifactory.RemoteCranRepository(\"my-remote-cran\", {\n    key: \"my-remote-cran\",\n    url: \"https://cran.r-project.org/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_cran = artifactory.RemoteCranRepository(\"my-remote-cran\",\n    key=\"my-remote-cran\",\n    url=\"https://cran.r-project.org/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_cran = new Artifactory.RemoteCranRepository(\"my-remote-cran\", new Artifactory.RemoteCranRepositoryArgs\n        {\n            Key = \"my-remote-cran\",\n            Url = \"https://cran.r-project.org/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteCranRepository(ctx, \"my-remote-cran\", \u0026artifactory.RemoteCranRepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-remote-cran\"),\n\t\t\tUrl: pulumi.String(\"https://cran.r-project.org/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCranRepositoryContentSynchronisation:RemoteCranRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCranRepositoryContentSynchronisation:RemoteCranRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteCranRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteCranRepositoryContentSynchronisation:RemoteCranRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteDebianRepository:RemoteDebianRepository": {
            "description": "## # Artifactory Remote Debian Repository Resource\n\nCreates a remote Debian repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Debian+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote Debian repository called my-remote-debian.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_debian = new artifactory.RemoteDebianRepository(\"my-remote-debian\", {\n    key: \"my-remote-Debian\",\n    url: \"http://archive.ubuntu.com/ubuntu/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_debian = artifactory.RemoteDebianRepository(\"my-remote-debian\",\n    key=\"my-remote-Debian\",\n    url=\"http://archive.ubuntu.com/ubuntu/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_debian = new Artifactory.RemoteDebianRepository(\"my-remote-debian\", new Artifactory.RemoteDebianRepositoryArgs\n        {\n            Key = \"my-remote-Debian\",\n            Url = \"http://archive.ubuntu.com/ubuntu/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteDebianRepository(ctx, \"my-remote-debian\", \u0026artifactory.RemoteDebianRepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-remote-Debian\"),\n\t\t\tUrl: pulumi.String(\"http://archive.ubuntu.com/ubuntu/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteDebianRepositoryContentSynchronisation:RemoteDebianRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteDebianRepositoryContentSynchronisation:RemoteDebianRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteDebianRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteDebianRepositoryContentSynchronisation:RemoteDebianRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteDockerRepository:RemoteDockerRepository": {
            "description": "## # Artifactory Remote Repository Resource\n\nProvides an Artifactory remote `docker` repository resource. This provides docker specific fields and is the only way to\nget them\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nIncludes only new and relevant fields\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a new Artifactory remote docker repository called my-remote-docker\nconst my_remote_docker = new artifactory.RemoteDockerRepository(\"my-remote-docker\", {\n    blockPushingSchema1: true,\n    enableTokenAuthentication: true,\n    externalDependenciesEnabled: true,\n    externalDependenciesPatterns: [\n        \"**/hub.docker.io/**\",\n        \"**/bintray.jfrog.io/**\",\n    ],\n    key: \"my-remote-docker\",\n    url: \"https://hub.docker.io/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Create a new Artifactory remote docker repository called my-remote-docker\nmy_remote_docker = artifactory.RemoteDockerRepository(\"my-remote-docker\",\n    block_pushing_schema1=True,\n    enable_token_authentication=True,\n    external_dependencies_enabled=True,\n    external_dependencies_patterns=[\n        \"**/hub.docker.io/**\",\n        \"**/bintray.jfrog.io/**\",\n    ],\n    key=\"my-remote-docker\",\n    url=\"https://hub.docker.io/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Artifactory remote docker repository called my-remote-docker\n        var my_remote_docker = new Artifactory.RemoteDockerRepository(\"my-remote-docker\", new Artifactory.RemoteDockerRepositoryArgs\n        {\n            BlockPushingSchema1 = true,\n            EnableTokenAuthentication = true,\n            ExternalDependenciesEnabled = true,\n            ExternalDependenciesPatterns = \n            {\n                \"**/hub.docker.io/**\",\n                \"**/bintray.jfrog.io/**\",\n            },\n            Key = \"my-remote-docker\",\n            Url = \"https://hub.docker.io/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteDockerRepository(ctx, \"my-remote-docker\", \u0026artifactory.RemoteDockerRepositoryArgs{\n\t\t\tBlockPushingSchema1:         pulumi.Bool(true),\n\t\t\tEnableTokenAuthentication:   pulumi.Bool(true),\n\t\t\tExternalDependenciesEnabled: pulumi.Bool(true),\n\t\t\tExternalDependenciesPatterns: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"**/hub.docker.io/**\"),\n\t\t\t\tpulumi.String(\"**/bintray.jfrog.io/**\"),\n\t\t\t},\n\t\t\tKey: pulumi.String(\"my-remote-docker\"),\n\t\t\tUrl: pulumi.String(\"https://hub.docker.io/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "blockPushingSchema1": {
                    "type": "boolean",
                    "description": "When set, Artifactory will block the pulling of Docker images with manifest v2\nschema 1 from the remote repository (i.e. the upstream). It will be possible to pull images with manifest v2 schema 1\nthat exist in the cache.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteDockerRepositoryContentSynchronisation:RemoteDockerRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "enableTokenAuthentication": {
                    "type": "boolean",
                    "description": "Enable token (Bearer) based authentication.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "Also known as 'Foreign Layers Caching' on the UI\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An allow list of Ant-style path patterns that determine which remote VCS\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "blockPushingSchema1",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "enableTokenAuthentication",
                "excludesPattern",
                "externalDependenciesEnabled",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "blockPushingSchema1": {
                    "type": "boolean",
                    "description": "When set, Artifactory will block the pulling of Docker images with manifest v2\nschema 1 from the remote repository (i.e. the upstream). It will be possible to pull images with manifest v2 schema 1\nthat exist in the cache.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteDockerRepositoryContentSynchronisation:RemoteDockerRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "enableTokenAuthentication": {
                    "type": "boolean",
                    "description": "Enable token (Bearer) based authentication.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "Also known as 'Foreign Layers Caching' on the UI\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An allow list of Ant-style path patterns that determine which remote VCS\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteDockerRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "blockPushingSchema1": {
                        "type": "boolean",
                        "description": "When set, Artifactory will block the pulling of Docker images with manifest v2\nschema 1 from the remote repository (i.e. the upstream). It will be possible to pull images with manifest v2 schema 1\nthat exist in the cache.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteDockerRepositoryContentSynchronisation:RemoteDockerRepositoryContentSynchronisation",
                        "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "enableTokenAuthentication": {
                        "type": "boolean",
                        "description": "Enable token (Bearer) based authentication.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                    },
                    "externalDependenciesEnabled": {
                        "type": "boolean",
                        "description": "Also known as 'Foreign Layers Caching' on the UI\n"
                    },
                    "externalDependenciesPatterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An allow list of Ant-style path patterns that determine which remote VCS\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteGemsRepository:RemoteGemsRepository": {
            "description": "## # Artifactory Remote Gems Repository Resource\n\nCreates a remote Gems repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/RubyGems+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote Gems repository called my-remote-gems.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_gems = new artifactory.RemoteGemsRepository(\"my-remote-gems\", {\n    key: \"my-remote-gems\",\n    url: \"https://rubygems.org/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_gems = artifactory.RemoteGemsRepository(\"my-remote-gems\",\n    key=\"my-remote-gems\",\n    url=\"https://rubygems.org/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_gems = new Artifactory.RemoteGemsRepository(\"my-remote-gems\", new Artifactory.RemoteGemsRepositoryArgs\n        {\n            Key = \"my-remote-gems\",\n            Url = \"https://rubygems.org/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteGemsRepository(ctx, \"my-remote-gems\", \u0026artifactory.RemoteGemsRepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-remote-gems\"),\n\t\t\tUrl: pulumi.String(\"https://rubygems.org/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGemsRepositoryContentSynchronisation:RemoteGemsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGemsRepositoryContentSynchronisation:RemoteGemsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteGemsRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteGemsRepositoryContentSynchronisation:RemoteGemsRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteGenericRepository:RemoteGenericRepository": {
            "description": "## # Artifactory Remote Generic Repository Resource\n\nCreates a remote Generic repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote Generic repository called my-remote-generic.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_generic = new artifactory.RemoteGenericRepository(\"my-remote-generic\", {\n    key: \"my-remote-generic\",\n    url: \"http://testartifactory.io/artifactory/example-generic/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_generic = artifactory.RemoteGenericRepository(\"my-remote-generic\",\n    key=\"my-remote-generic\",\n    url=\"http://testartifactory.io/artifactory/example-generic/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_generic = new Artifactory.RemoteGenericRepository(\"my-remote-generic\", new Artifactory.RemoteGenericRepositoryArgs\n        {\n            Key = \"my-remote-generic\",\n            Url = \"http://testartifactory.io/artifactory/example-generic/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteGenericRepository(ctx, \"my-remote-generic\", \u0026artifactory.RemoteGenericRepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-remote-generic\"),\n\t\t\tUrl: pulumi.String(\"http://testartifactory.io/artifactory/example-generic/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGenericRepositoryContentSynchronisation:RemoteGenericRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg: \"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGenericRepositoryContentSynchronisation:RemoteGenericRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg: \"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteGenericRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteGenericRepositoryContentSynchronisation:RemoteGenericRepositoryContentSynchronisation",
                        "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg: \"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteGitlfsRepository:RemoteGitlfsRepository": {
            "description": "## # Artifactory Remote Gitlfs Repository Resource\n\nCreates a remote Gitlfs repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Git+LFS+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote Gitlfs repository called my-remote-gitlfs.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_gitlfs = new artifactory.RemoteGitlfsRepository(\"my-remote-gitlfs\", {\n    key: \"my-remote-gitlfs\",\n    url: \"http://testartifactory.io/artifactory/example-gitlfs/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_gitlfs = artifactory.RemoteGitlfsRepository(\"my-remote-gitlfs\",\n    key=\"my-remote-gitlfs\",\n    url=\"http://testartifactory.io/artifactory/example-gitlfs/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_gitlfs = new Artifactory.RemoteGitlfsRepository(\"my-remote-gitlfs\", new Artifactory.RemoteGitlfsRepositoryArgs\n        {\n            Key = \"my-remote-gitlfs\",\n            Url = \"http://testartifactory.io/artifactory/example-gitlfs/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteGitlfsRepository(ctx, \"my-remote-gitlfs\", \u0026artifactory.RemoteGitlfsRepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-remote-gitlfs\"),\n\t\t\tUrl: pulumi.String(\"http://testartifactory.io/artifactory/example-gitlfs/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGitlfsRepositoryContentSynchronisation:RemoteGitlfsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGitlfsRepositoryContentSynchronisation:RemoteGitlfsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteGitlfsRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteGitlfsRepositoryContentSynchronisation:RemoteGitlfsRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteGoRepository:RemoteGoRepository": {
            "description": "## # Artifactory Remote Go Repository Resource\n\nCreates a remote Go repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Go+Registry)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote Go repository called my-remote-go.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_go = new artifactory.RemoteGoRepository(\"my-remote-go\", {\n    key: \"my-remote-go\",\n    url: \"https://proxy.golang.org/\",\n    vcsGitProvider: \"ARTIFACTORY\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_go = artifactory.RemoteGoRepository(\"my-remote-go\",\n    key=\"my-remote-go\",\n    url=\"https://proxy.golang.org/\",\n    vcs_git_provider=\"ARTIFACTORY\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_go = new Artifactory.RemoteGoRepository(\"my-remote-go\", new Artifactory.RemoteGoRepositoryArgs\n        {\n            Key = \"my-remote-go\",\n            Url = \"https://proxy.golang.org/\",\n            VcsGitProvider = \"ARTIFACTORY\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteGoRepository(ctx, \"my-remote-go\", \u0026artifactory.RemoteGoRepositoryArgs{\n\t\t\tKey:            pulumi.String(\"my-remote-go\"),\n\t\t\tUrl:            pulumi.String(\"https://proxy.golang.org/\"),\n\t\t\tVcsGitProvider: pulumi.String(\"ARTIFACTORY\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGoRepositoryContentSynchronisation:RemoteGoRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"ARTIFACTORY\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGoRepositoryContentSynchronisation:RemoteGoRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"ARTIFACTORY\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteGoRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteGoRepositoryContentSynchronisation:RemoteGoRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "vcsGitProvider": {
                        "type": "string",
                        "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"ARTIFACTORY\".\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteGradleRepository:RemoteGradleRepository": {
            "description": "## # Artifactory Remote Gradle Repository Resource\n\nProvides an Artifactory remote `gradle` repository resource.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Remote+Repositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nIncludes only new and relevant fields, for anything else, see: generic repo.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst gradle_remote = new artifactory.RemoteGradleRepository(\"gradle-remote\", {\n    fetchJarsEagerly: true,\n    fetchSourcesEagerly: false,\n    key: \"gradle-remote-foo\",\n    rejectInvalidJars: true,\n    suppressPomConsistencyChecks: true,\n    url: \"https://repo1.maven.org/maven2/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\ngradle_remote = artifactory.RemoteGradleRepository(\"gradle-remote\",\n    fetch_jars_eagerly=True,\n    fetch_sources_eagerly=False,\n    key=\"gradle-remote-foo\",\n    reject_invalid_jars=True,\n    suppress_pom_consistency_checks=True,\n    url=\"https://repo1.maven.org/maven2/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var gradle_remote = new Artifactory.RemoteGradleRepository(\"gradle-remote\", new Artifactory.RemoteGradleRepositoryArgs\n        {\n            FetchJarsEagerly = true,\n            FetchSourcesEagerly = false,\n            Key = \"gradle-remote-foo\",\n            RejectInvalidJars = true,\n            SuppressPomConsistencyChecks = true,\n            Url = \"https://repo1.maven.org/maven2/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteGradleRepository(ctx, \"gradle-remote\", \u0026artifactory.RemoteGradleRepositoryArgs{\n\t\t\tFetchJarsEagerly:             pulumi.Bool(true),\n\t\t\tFetchSourcesEagerly:          pulumi.Bool(false),\n\t\t\tKey:                          pulumi.String(\"gradle-remote-foo\"),\n\t\t\tRejectInvalidJars:            pulumi.Bool(true),\n\t\t\tSuppressPomConsistencyChecks: pulumi.Bool(true),\n\t\t\tUrl:                          pulumi.String(\"https://repo1.maven.org/maven2/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGradleRepositoryContentSynchronisation:RemoteGradleRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "- Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "- Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGradleRepositoryContentSynchronisation:RemoteGradleRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "- Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "- Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteGradleRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteGradleRepositoryContentSynchronisation:RemoteGradleRepositoryContentSynchronisation",
                        "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "fetchJarsEagerly": {
                        "type": "boolean",
                        "description": "- When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                    },
                    "fetchSourcesEagerly": {
                        "type": "boolean",
                        "description": "- When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "- If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "- If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "rejectInvalidJars": {
                        "type": "boolean",
                        "description": "- Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                    },
                    "remoteRepoChecksumPolicyType": {
                        "type": "string",
                        "description": "- Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteHelmRepository:RemoteHelmRepository": {
            "description": "## # Artifactory Remote Repository Resource\n\nProvides an Artifactory remote `helm` repository resource. This provides helm specific fields and is the only way to get them.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Package+Management),\nalthough helm is (currently) not listed as a supported format\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nIncludes only new and relevant fields, for anything else, see: generic repo.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst helm_remote = new artifactory.RemoteHelmRepository(\"helm-remote\", {\n    externalDependenciesEnabled: true,\n    externalDependenciesPatterns: [\"**github.com**\"],\n    helmChartsBaseUrl: \"https://foo.com\",\n    key: \"helm-remote-foo25\",\n    url: \"https://repo.chartcenter.io/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nhelm_remote = artifactory.RemoteHelmRepository(\"helm-remote\",\n    external_dependencies_enabled=True,\n    external_dependencies_patterns=[\"**github.com**\"],\n    helm_charts_base_url=\"https://foo.com\",\n    key=\"helm-remote-foo25\",\n    url=\"https://repo.chartcenter.io/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var helm_remote = new Artifactory.RemoteHelmRepository(\"helm-remote\", new Artifactory.RemoteHelmRepositoryArgs\n        {\n            ExternalDependenciesEnabled = true,\n            ExternalDependenciesPatterns = \n            {\n                \"**github.com**\",\n            },\n            HelmChartsBaseUrl = \"https://foo.com\",\n            Key = \"helm-remote-foo25\",\n            Url = \"https://repo.chartcenter.io/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteHelmRepository(ctx, \"helm-remote\", \u0026artifactory.RemoteHelmRepositoryArgs{\n\t\t\tExternalDependenciesEnabled: pulumi.Bool(true),\n\t\t\tExternalDependenciesPatterns: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"**github.com**\"),\n\t\t\t},\n\t\t\tHelmChartsBaseUrl: pulumi.String(\"https://foo.com\"),\n\t\t\tKey:               pulumi.String(\"helm-remote-foo25\"),\n\t\t\tUrl:               pulumi.String(\"https://repo.chartcenter.io/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteHelmRepositoryContentSynchronisation:RemoteHelmRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "When set, external dependencies are rewritten.\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An Allow List of Ant-style path expressions that specify where external\ndependencies may be downloaded from. By default, this is set to ** which means that dependencies may be downloaded\nfrom any external source.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "helmChartsBaseUrl": {
                    "type": "string",
                    "description": "- No documentation is available. Hopefully you know what this means\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteHelmRepositoryContentSynchronisation:RemoteHelmRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "When set, external dependencies are rewritten.\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An Allow List of Ant-style path expressions that specify where external\ndependencies may be downloaded from. By default, this is set to ** which means that dependencies may be downloaded\nfrom any external source.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "helmChartsBaseUrl": {
                    "type": "string",
                    "description": "- No documentation is available. Hopefully you know what this means\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteHelmRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteHelmRepositoryContentSynchronisation:RemoteHelmRepositoryContentSynchronisation",
                        "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                    },
                    "externalDependenciesEnabled": {
                        "type": "boolean",
                        "description": "When set, external dependencies are rewritten.\n"
                    },
                    "externalDependenciesPatterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Allow List of Ant-style path expressions that specify where external\ndependencies may be downloaded from. By default, this is set to ** which means that dependencies may be downloaded\nfrom any external source.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                    },
                    "helmChartsBaseUrl": {
                        "type": "string",
                        "description": "- No documentation is available. Hopefully you know what this means\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteIvyRepository:RemoteIvyRepository": {
            "description": "## # Artifactory Remote Ivy Repository Resource\n\nProvides an Artifactory remote `ivy` repository resource.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Remote+Repositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nIncludes only new and relevant fields, for anything else, see: generic repo.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst ivy_remote = new artifactory.RemoteIvyRepository(\"ivy-remote\", {\n    fetchJarsEagerly: true,\n    fetchSourcesEagerly: false,\n    key: \"ivy-remote-foo\",\n    rejectInvalidJars: true,\n    suppressPomConsistencyChecks: true,\n    url: \"https://repo1.maven.org/maven2/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nivy_remote = artifactory.RemoteIvyRepository(\"ivy-remote\",\n    fetch_jars_eagerly=True,\n    fetch_sources_eagerly=False,\n    key=\"ivy-remote-foo\",\n    reject_invalid_jars=True,\n    suppress_pom_consistency_checks=True,\n    url=\"https://repo1.maven.org/maven2/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var ivy_remote = new Artifactory.RemoteIvyRepository(\"ivy-remote\", new Artifactory.RemoteIvyRepositoryArgs\n        {\n            FetchJarsEagerly = true,\n            FetchSourcesEagerly = false,\n            Key = \"ivy-remote-foo\",\n            RejectInvalidJars = true,\n            SuppressPomConsistencyChecks = true,\n            Url = \"https://repo1.maven.org/maven2/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteIvyRepository(ctx, \"ivy-remote\", \u0026artifactory.RemoteIvyRepositoryArgs{\n\t\t\tFetchJarsEagerly:             pulumi.Bool(true),\n\t\t\tFetchSourcesEagerly:          pulumi.Bool(false),\n\t\t\tKey:                          pulumi.String(\"ivy-remote-foo\"),\n\t\t\tRejectInvalidJars:            pulumi.Bool(true),\n\t\t\tSuppressPomConsistencyChecks: pulumi.Bool(true),\n\t\t\tUrl:                          pulumi.String(\"https://repo1.maven.org/maven2/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteIvyRepositoryContentSynchronisation:RemoteIvyRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "- Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "- Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteIvyRepositoryContentSynchronisation:RemoteIvyRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "- Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "- Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteIvyRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteIvyRepositoryContentSynchronisation:RemoteIvyRepositoryContentSynchronisation",
                        "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "fetchJarsEagerly": {
                        "type": "boolean",
                        "description": "- When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                    },
                    "fetchSourcesEagerly": {
                        "type": "boolean",
                        "description": "- When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "- If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "- If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "rejectInvalidJars": {
                        "type": "boolean",
                        "description": "- Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                    },
                    "remoteRepoChecksumPolicyType": {
                        "type": "string",
                        "description": "- Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteMavenRepository:RemoteMavenRepository": {
            "description": "## # Artifactory Remote Maven Repository Resource\n\nProvides an Artifactory remote `maven` repository resource.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Remote+Repositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nIncludes only new and relevant fields, for anything else, see: generic repo.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst maven_remote = new artifactory.RemoteMavenRepository(\"maven-remote\", {\n    fetchJarsEagerly: true,\n    fetchSourcesEagerly: false,\n    key: \"maven-remote-foo\",\n    rejectInvalidJars: true,\n    suppressPomConsistencyChecks: false,\n    url: \"https://repo1.maven.org/maven2/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmaven_remote = artifactory.RemoteMavenRepository(\"maven-remote\",\n    fetch_jars_eagerly=True,\n    fetch_sources_eagerly=False,\n    key=\"maven-remote-foo\",\n    reject_invalid_jars=True,\n    suppress_pom_consistency_checks=False,\n    url=\"https://repo1.maven.org/maven2/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var maven_remote = new Artifactory.RemoteMavenRepository(\"maven-remote\", new Artifactory.RemoteMavenRepositoryArgs\n        {\n            FetchJarsEagerly = true,\n            FetchSourcesEagerly = false,\n            Key = \"maven-remote-foo\",\n            RejectInvalidJars = true,\n            SuppressPomConsistencyChecks = false,\n            Url = \"https://repo1.maven.org/maven2/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteMavenRepository(ctx, \"maven-remote\", \u0026artifactory.RemoteMavenRepositoryArgs{\n\t\t\tFetchJarsEagerly:             pulumi.Bool(true),\n\t\t\tFetchSourcesEagerly:          pulumi.Bool(false),\n\t\t\tKey:                          pulumi.String(\"maven-remote-foo\"),\n\t\t\tRejectInvalidJars:            pulumi.Bool(true),\n\t\t\tSuppressPomConsistencyChecks: pulumi.Bool(false),\n\t\t\tUrl:                          pulumi.String(\"https://repo1.maven.org/maven2/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteMavenRepositoryContentSynchronisation:RemoteMavenRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "- Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "- Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteMavenRepositoryContentSynchronisation:RemoteMavenRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "- Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "- Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteMavenRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteMavenRepositoryContentSynchronisation:RemoteMavenRepositoryContentSynchronisation",
                        "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "fetchJarsEagerly": {
                        "type": "boolean",
                        "description": "- When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                    },
                    "fetchSourcesEagerly": {
                        "type": "boolean",
                        "description": "- When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "- If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "- If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "rejectInvalidJars": {
                        "type": "boolean",
                        "description": "- Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                    },
                    "remoteRepoChecksumPolicyType": {
                        "type": "string",
                        "description": "- Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteNpmRepository:RemoteNpmRepository": {
            "description": "## # Artifactory Remote npm Repository Resource\n\nProvides an Artifactory remote `npm` repository resource. This provides npm specific fields and is the only way to get them\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/npm+Registry)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nCreate a new Artifactory remote npm repository called my-remote-npm\nfor brevity sake, only npm specific fields are included; for other fields see documentation for\ngeneric repo.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst thing = new artifactory.RemoteNpmRepository(\"thing\", {\n    key: \"remote-thing-npm\",\n    listRemoteFolderItems: true,\n    mismatchingMimeTypesOverrideList: \"application/json,application/xml\",\n    url: \"https://registry.npmjs.org/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nthing = artifactory.RemoteNpmRepository(\"thing\",\n    key=\"remote-thing-npm\",\n    list_remote_folder_items=True,\n    mismatching_mime_types_override_list=\"application/json,application/xml\",\n    url=\"https://registry.npmjs.org/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var thing = new Artifactory.RemoteNpmRepository(\"thing\", new Artifactory.RemoteNpmRepositoryArgs\n        {\n            Key = \"remote-thing-npm\",\n            ListRemoteFolderItems = true,\n            MismatchingMimeTypesOverrideList = \"application/json,application/xml\",\n            Url = \"https://registry.npmjs.org/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteNpmRepository(ctx, \"thing\", \u0026artifactory.RemoteNpmRepositoryArgs{\n\t\t\tKey:                              pulumi.String(\"remote-thing-npm\"),\n\t\t\tListRemoteFolderItems:            pulumi.Bool(true),\n\t\t\tMismatchingMimeTypesOverrideList: pulumi.String(\"application/json,application/xml\"),\n\t\t\tUrl:                              pulumi.String(\"https://registry.npmjs.org/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteNpmRepositoryContentSynchronisation:RemoteNpmRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg: \"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteNpmRepositoryContentSynchronisation:RemoteNpmRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg: \"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteNpmRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteNpmRepositoryContentSynchronisation:RemoteNpmRepositoryContentSynchronisation",
                        "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg: \"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteNugetRepository:RemoteNugetRepository": {
            "description": "## # Artifactory Remote Nuget Repository Resource\n\nCreates a remote Nuget repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/NuGet+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote Nuget repository called my-remote-nuget.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_nuget = new artifactory.RemoteNugetRepository(\"my-remote-nuget\", {\n    downloadContextPath: \"api/v2/package\",\n    forceNugetAuthentication: true,\n    key: \"my-remote-nuget\",\n    url: \"https://www.nuget.org/\",\n    v3FeedUrl: \"https://api.nuget.org/v3/index.json\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_nuget = artifactory.RemoteNugetRepository(\"my-remote-nuget\",\n    download_context_path=\"api/v2/package\",\n    force_nuget_authentication=True,\n    key=\"my-remote-nuget\",\n    url=\"https://www.nuget.org/\",\n    v3_feed_url=\"https://api.nuget.org/v3/index.json\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_nuget = new Artifactory.RemoteNugetRepository(\"my-remote-nuget\", new Artifactory.RemoteNugetRepositoryArgs\n        {\n            DownloadContextPath = \"api/v2/package\",\n            ForceNugetAuthentication = true,\n            Key = \"my-remote-nuget\",\n            Url = \"https://www.nuget.org/\",\n            V3FeedUrl = \"https://api.nuget.org/v3/index.json\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteNugetRepository(ctx, \"my-remote-nuget\", \u0026artifactory.RemoteNugetRepositoryArgs{\n\t\t\tDownloadContextPath:      pulumi.String(\"api/v2/package\"),\n\t\t\tForceNugetAuthentication: pulumi.Bool(true),\n\t\t\tKey:                      pulumi.String(\"my-remote-nuget\"),\n\t\t\tUrl:                      pulumi.String(\"https://www.nuget.org/\"),\n\t\t\tV3FeedUrl:                pulumi.String(\"https://api.nuget.org/v3/index.json\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteNugetRepositoryContentSynchronisation:RemoteNugetRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "downloadContextPath": {
                    "type": "string",
                    "description": "The context path prefix through which NuGet downloads are served. Default value is 'api/v2/package'.\n"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "feedContextPath": {
                    "type": "string",
                    "description": "When proxying a remote NuGet repository, customize feed resource location using this attribute. Default value is 'api/v2'.\n"
                },
                "forceNugetAuthentication": {
                    "type": "boolean",
                    "description": "Force basic authentication credentials in order to use this repository. Default value is 'false'.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "v3FeedUrl": {
                    "type": "string",
                    "description": "The URL to the NuGet v3 feed. Default value is 'https://api.nuget.org/v3/index.json'.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteNugetRepositoryContentSynchronisation:RemoteNugetRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "downloadContextPath": {
                    "type": "string",
                    "description": "The context path prefix through which NuGet downloads are served. Default value is 'api/v2/package'.\n"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "feedContextPath": {
                    "type": "string",
                    "description": "When proxying a remote NuGet repository, customize feed resource location using this attribute. Default value is 'api/v2'.\n"
                },
                "forceNugetAuthentication": {
                    "type": "boolean",
                    "description": "Force basic authentication credentials in order to use this repository. Default value is 'false'.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "v3FeedUrl": {
                    "type": "string",
                    "description": "The URL to the NuGet v3 feed. Default value is 'https://api.nuget.org/v3/index.json'.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteNugetRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteNugetRepositoryContentSynchronisation:RemoteNugetRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadContextPath": {
                        "type": "string",
                        "description": "The context path prefix through which NuGet downloads are served. Default value is 'api/v2/package'.\n"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "feedContextPath": {
                        "type": "string",
                        "description": "When proxying a remote NuGet repository, customize feed resource location using this attribute. Default value is 'api/v2'.\n"
                    },
                    "forceNugetAuthentication": {
                        "type": "boolean",
                        "description": "Force basic authentication credentials in order to use this repository. Default value is 'false'.\n"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "v3FeedUrl": {
                        "type": "string",
                        "description": "The URL to the NuGet v3 feed. Default value is 'https://api.nuget.org/v3/index.json'.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteOpkgRepository:RemoteOpkgRepository": {
            "description": "## # Artifactory Remote Opkg Repository Resource\n\nCreates a remote Opkg repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Opkg+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote Opkg repository called my-remote-opkg.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_opkg = new artifactory.RemoteOpkgRepository(\"my-remote-opkg\", {\n    key: \"my-remote-opkg\",\n    url: \"http://testartifactory.io/artifactory/example-opkg/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_opkg = artifactory.RemoteOpkgRepository(\"my-remote-opkg\",\n    key=\"my-remote-opkg\",\n    url=\"http://testartifactory.io/artifactory/example-opkg/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_opkg = new Artifactory.RemoteOpkgRepository(\"my-remote-opkg\", new Artifactory.RemoteOpkgRepositoryArgs\n        {\n            Key = \"my-remote-opkg\",\n            Url = \"http://testartifactory.io/artifactory/example-opkg/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteOpkgRepository(ctx, \"my-remote-opkg\", \u0026artifactory.RemoteOpkgRepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-remote-opkg\"),\n\t\t\tUrl: pulumi.String(\"http://testartifactory.io/artifactory/example-opkg/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteOpkgRepositoryContentSynchronisation:RemoteOpkgRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteOpkgRepositoryContentSynchronisation:RemoteOpkgRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteOpkgRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteOpkgRepositoryContentSynchronisation:RemoteOpkgRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteP2Repository:RemoteP2Repository": {
            "description": "## # Artifactory Remote P2 Repository Resource\n\nCreates a remote P2 repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/P2+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote P2 repository called my-remote-p2.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_p2 = new artifactory.RemoteP2Repository(\"my-remote-p2\", {\n    key: \"my-remote-p2\",\n    url: \"http://testartifactory.io/artifactory/example-p2/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_p2 = artifactory.RemoteP2Repository(\"my-remote-p2\",\n    key=\"my-remote-p2\",\n    url=\"http://testartifactory.io/artifactory/example-p2/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_p2 = new Artifactory.RemoteP2Repository(\"my-remote-p2\", new Artifactory.RemoteP2RepositoryArgs\n        {\n            Key = \"my-remote-p2\",\n            Url = \"http://testartifactory.io/artifactory/example-p2/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteP2Repository(ctx, \"my-remote-p2\", \u0026artifactory.RemoteP2RepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-remote-p2\"),\n\t\t\tUrl: pulumi.String(\"http://testartifactory.io/artifactory/example-p2/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteP2RepositoryContentSynchronisation:RemoteP2RepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteP2RepositoryContentSynchronisation:RemoteP2RepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteP2Repository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteP2RepositoryContentSynchronisation:RemoteP2RepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remotePuppetRepository:RemotePuppetRepository": {
            "description": "## # Artifactory Remote Puppet Repository Resource\n\nCreates a remote Puppet repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Puppet+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote Puppet repository called my-remote-puppet.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_puppet = new artifactory.RemotePuppetRepository(\"my-remote-puppet\", {\n    key: \"my-remote-puppet\",\n    url: \"https://forgeapi.puppetlabs.com/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_puppet = artifactory.RemotePuppetRepository(\"my-remote-puppet\",\n    key=\"my-remote-puppet\",\n    url=\"https://forgeapi.puppetlabs.com/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_puppet = new Artifactory.RemotePuppetRepository(\"my-remote-puppet\", new Artifactory.RemotePuppetRepositoryArgs\n        {\n            Key = \"my-remote-puppet\",\n            Url = \"https://forgeapi.puppetlabs.com/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemotePuppetRepository(ctx, \"my-remote-puppet\", \u0026artifactory.RemotePuppetRepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-remote-puppet\"),\n\t\t\tUrl: pulumi.String(\"https://forgeapi.puppetlabs.com/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemotePuppetRepositoryContentSynchronisation:RemotePuppetRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemotePuppetRepositoryContentSynchronisation:RemotePuppetRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemotePuppetRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemotePuppetRepositoryContentSynchronisation:RemotePuppetRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remotePypiRepository:RemotePypiRepository": {
            "description": "## # Artifactory Remote Repository Resource\n\nProvides an Artifactory remote `pypi` repository resource. This provides pypi specific fields and is the only way to get them.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Package+Management).\nPypi specific documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/PyPI+Repositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nIncludes only new and relevant fields, for anything else, see: generic repo.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst pypi_remote = new artifactory.RemotePypiRepository(\"pypi-remote\", {\n    key: \"pypi-remote-foo\",\n    pypiRegistryUrl: \"https://pypi.org\",\n    pypiRepositorySuffix: \"simple\",\n    url: \"https://files.pythonhosted.org\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\npypi_remote = artifactory.RemotePypiRepository(\"pypi-remote\",\n    key=\"pypi-remote-foo\",\n    pypi_registry_url=\"https://pypi.org\",\n    pypi_repository_suffix=\"simple\",\n    url=\"https://files.pythonhosted.org\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var pypi_remote = new Artifactory.RemotePypiRepository(\"pypi-remote\", new Artifactory.RemotePypiRepositoryArgs\n        {\n            Key = \"pypi-remote-foo\",\n            PypiRegistryUrl = \"https://pypi.org\",\n            PypiRepositorySuffix = \"simple\",\n            Url = \"https://files.pythonhosted.org\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemotePypiRepository(ctx, \"pypi-remote\", \u0026artifactory.RemotePypiRepositoryArgs{\n\t\t\tKey:                  pulumi.String(\"pypi-remote-foo\"),\n\t\t\tPypiRegistryUrl:      pulumi.String(\"https://pypi.org\"),\n\t\t\tPypiRepositorySuffix: pulumi.String(\"simple\"),\n\t\t\tUrl:                  pulumi.String(\"https://files.pythonhosted.org\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemotePypiRepositoryContentSynchronisation:RemotePypiRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "pypiRegistryUrl": {
                    "type": "string",
                    "description": "To configure the remote repo to proxy public external PyPI repository, or a PyPI repository hosted on another Artifactory server. See JFrog Pypi documentation [here](https://www.jfrog.com/confluence/display/JFROG/PyPI+Repositories) for the usage details. Default value is 'https://pypi.org'.\n"
                },
                "pypiRepositorySuffix": {
                    "type": "string",
                    "description": "Usually should be left as a default for 'simple', unless the remote is a PyPI server that has custom registry suffix, like +simple in DevPI. Default value is 'simple'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemotePypiRepositoryContentSynchronisation:RemotePypiRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "pypiRegistryUrl": {
                    "type": "string",
                    "description": "To configure the remote repo to proxy public external PyPI repository, or a PyPI repository hosted on another Artifactory server. See JFrog Pypi documentation [here](https://www.jfrog.com/confluence/display/JFROG/PyPI+Repositories) for the usage details. Default value is 'https://pypi.org'.\n"
                },
                "pypiRepositorySuffix": {
                    "type": "string",
                    "description": "Usually should be left as a default for 'simple', unless the remote is a PyPI server that has custom registry suffix, like +simple in DevPI. Default value is 'simple'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemotePypiRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemotePypiRepositoryContentSynchronisation:RemotePypiRepositoryContentSynchronisation",
                        "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "pypiRegistryUrl": {
                        "type": "string",
                        "description": "To configure the remote repo to proxy public external PyPI repository, or a PyPI repository hosted on another Artifactory server. See JFrog Pypi documentation [here](https://www.jfrog.com/confluence/display/JFROG/PyPI+Repositories) for the usage details. Default value is 'https://pypi.org'.\n"
                    },
                    "pypiRepositorySuffix": {
                        "type": "string",
                        "description": "Usually should be left as a default for 'simple', unless the remote is a PyPI server that has custom registry suffix, like +simple in DevPI. Default value is 'simple'.\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteRpmRepository:RemoteRpmRepository": {
            "description": "## # Artifactory Remote RPM Repository Resource\n\nCreates a remote RPM repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/RPM+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote RPM repository called my-remote-rpm.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_rpm = new artifactory.RemoteRpmRepository(\"my-remote-rpm\", {\n    key: \"my-remote-rpm\",\n    url: \"http://mirror.centos.org/centos/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_remote_rpm = artifactory.RemoteRpmRepository(\"my-remote-rpm\",\n    key=\"my-remote-rpm\",\n    url=\"http://mirror.centos.org/centos/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_remote_rpm = new Artifactory.RemoteRpmRepository(\"my-remote-rpm\", new Artifactory.RemoteRpmRepositoryArgs\n        {\n            Key = \"my-remote-rpm\",\n            Url = \"http://mirror.centos.org/centos/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteRpmRepository(ctx, \"my-remote-rpm\", \u0026artifactory.RemoteRpmRepositoryArgs{\n\t\t\tKey: pulumi.String(\"my-remote-rpm\"),\n\t\t\tUrl: pulumi.String(\"http://mirror.centos.org/centos/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteRpmRepositoryContentSynchronisation:RemoteRpmRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteRpmRepositoryContentSynchronisation:RemoteRpmRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteRpmRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteRpmRepositoryContentSynchronisation:RemoteRpmRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteSbtRepository:RemoteSbtRepository": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\nIncludes only new and relevant fields, for anything else, see: generic repo.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst sbt_remote = new artifactory.RemoteSbtRepository(\"sbt-remote\", {\n    fetchJarsEagerly: true,\n    fetchSourcesEagerly: false,\n    key: \"sbt-remote-foo\",\n    rejectInvalidJars: true,\n    suppressPomConsistencyChecks: true,\n    url: \"https://repo1.maven.org/maven2/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nsbt_remote = artifactory.RemoteSbtRepository(\"sbt-remote\",\n    fetch_jars_eagerly=True,\n    fetch_sources_eagerly=False,\n    key=\"sbt-remote-foo\",\n    reject_invalid_jars=True,\n    suppress_pom_consistency_checks=True,\n    url=\"https://repo1.maven.org/maven2/\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sbt_remote = new Artifactory.RemoteSbtRepository(\"sbt-remote\", new Artifactory.RemoteSbtRepositoryArgs\n        {\n            FetchJarsEagerly = true,\n            FetchSourcesEagerly = false,\n            Key = \"sbt-remote-foo\",\n            RejectInvalidJars = true,\n            SuppressPomConsistencyChecks = true,\n            Url = \"https://repo1.maven.org/maven2/\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewRemoteSbtRepository(ctx, \"sbt-remote\", \u0026artifactory.RemoteSbtRepositoryArgs{\n\t\t\tFetchJarsEagerly:             pulumi.Bool(true),\n\t\t\tFetchSourcesEagerly:          pulumi.Bool(false),\n\t\t\tKey:                          pulumi.String(\"sbt-remote-foo\"),\n\t\t\tRejectInvalidJars:            pulumi.Bool(true),\n\t\t\tSuppressPomConsistencyChecks: pulumi.Bool(true),\n\t\t\tUrl:                          pulumi.String(\"https://repo1.maven.org/maven2/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteSbtRepositoryContentSynchronisation:RemoteSbtRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "description": "Requires password encryption to be turned off `POST /api/system/decrypt`\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "- Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "- Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteSbtRepositoryContentSynchronisation:RemoteSbtRepositoryContentSynchronisation",
                    "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "- If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Requires password encryption to be turned off `POST /api/system/decrypt`\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "- Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "- Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteSbtRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to any other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time, an online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed offline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact resolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources, HEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked, Artifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteSbtRepositoryContentSynchronisation:RemoteSbtRepositoryContentSynchronisation",
                        "description": "Reference [JFROG Smart Remote Repositories](https://www.jfrog.com/confluence/display/JFROG/Smart+Remote+Repositories)\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "description": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function\n",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "fetchJarsEagerly": {
                        "type": "boolean",
                        "description": "- When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                    },
                    "fetchSourcesEagerly": {
                        "type": "boolean",
                        "description": "- When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "- If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "- If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to communicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "- Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of the 'Retrieval Cache Period'. This field exists in the API but not in the UI.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with multiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "description": "Requires password encryption to be turned off `POST /api/system/decrypt`\n"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "rejectInvalidJars": {
                        "type": "boolean",
                        "description": "- Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                    },
                    "remoteRepoChecksumPolicyType": {
                        "type": "string",
                        "description": "- Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network operation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and direct repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with one Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory servers.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value of 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL. You kinda don't have a remote repo without it\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteVcsRepository:RemoteVcsRepository": {
            "description": "## # Artifactory Remote Go Repository Resource\n\nCreates a remote VCS repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/VCS+Repositories)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo create a new Artifactory remote VCS repository called my-remote-vcs.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_vcs = new artifactory.RemoteGoRepository(\"my-remote-vcs\", {\n    key: \"my-remote-vcs\",\n    maxUniqueSnapshots: 5,\n    url: \"https://github.com/\",\n    vcsGitProvider: \"GITHUB\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteVcsRepositoryContentSynchronisation:RemoteVcsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "- The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub, Bitbucket, \nStash, a remote Artifactory instance or a custom Git repository. Allowed values are: 'GITHUB', 'BITBUCKET', 'OLDSTASH',\n'STASH', 'ARTIFACTORY', 'CUSTOM'. Default value is 'GITHUB'\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteVcsRepositoryContentSynchronisation:RemoteVcsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The repository identifier. Must be unique system-wide\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "- The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "- the remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub, Bitbucket, \nStash, a remote Artifactory instance or a custom Git repository. Allowed values are: 'GITHUB', 'BITBUCKET', 'OLDSTASH',\n'STASH', 'ARTIFACTORY', 'CUSTOM'. Default value is 'GITHUB'\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteVcsRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteVcsRepositoryContentSynchronisation:RemoteVcsRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The repository identifier. Must be unique system-wide\n"
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "(Optional) Lists the items of remote folders in simple and list browsing. The remote content is cached according to the\nvalue of the 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "- The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "(Optional) The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "- the remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "vcsGitDownloadUrl": {
                        "type": "string",
                        "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                    },
                    "vcsGitProvider": {
                        "type": "string",
                        "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub, Bitbucket, \nStash, a remote Artifactory instance or a custom Git repository. Allowed values are: 'GITHUB', 'BITBUCKET', 'OLDSTASH',\n'STASH', 'ARTIFACTORY', 'CUSTOM'. Default value is 'GITHUB'\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/replicationConfig:ReplicationConfig": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a replication between two artifactory local repositories\nconst providerTestSource = new artifactory.LocalMavenRepository(\"provider_test_source\", {\n    key: \"provider_test_source\",\n});\nconst providerTestDest = new artifactory.LocalMavenRepository(\"provider_test_dest\", {\n    key: \"provider_test_dest\",\n});\nconst foo_rep = new artifactory.ReplicationConfig(\"foo-rep\", {\n    cronExp: \"0 0 * * * ?\",\n    enableEventReplication: true,\n    replications: [{\n        password: \"$var.artifactory_password\",\n        url: \"$var.artifactory_url\",\n        username: \"$var.artifactory_username\",\n    }],\n    repoKey: providerTestSource.key,\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Create a replication between two artifactory local repositories\nprovider_test_source = artifactory.LocalMavenRepository(\"providerTestSource\", key=\"provider_test_source\")\nprovider_test_dest = artifactory.LocalMavenRepository(\"providerTestDest\", key=\"provider_test_dest\")\nfoo_rep = artifactory.ReplicationConfig(\"foo-rep\",\n    cron_exp=\"0 0 * * * ?\",\n    enable_event_replication=True,\n    replications=[artifactory.ReplicationConfigReplicationArgs(\n        password=\"$var.artifactory_password\",\n        url=\"$var.artifactory_url\",\n        username=\"$var.artifactory_username\",\n    )],\n    repo_key=provider_test_source.key)\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a replication between two artifactory local repositories\n        var providerTestSource = new Artifactory.LocalMavenRepository(\"providerTestSource\", new Artifactory.LocalMavenRepositoryArgs\n        {\n            Key = \"provider_test_source\",\n        });\n        var providerTestDest = new Artifactory.LocalMavenRepository(\"providerTestDest\", new Artifactory.LocalMavenRepositoryArgs\n        {\n            Key = \"provider_test_dest\",\n        });\n        var foo_rep = new Artifactory.ReplicationConfig(\"foo-rep\", new Artifactory.ReplicationConfigArgs\n        {\n            CronExp = \"0 0 * * * ?\",\n            EnableEventReplication = true,\n            Replications = \n            {\n                new Artifactory.Inputs.ReplicationConfigReplicationArgs\n                {\n                    Password = \"$var.artifactory_password\",\n                    Url = \"$var.artifactory_url\",\n                    Username = \"$var.artifactory_username\",\n                },\n            },\n            RepoKey = providerTestSource.Key,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tproviderTestSource, err := artifactory.NewLocalMavenRepository(ctx, \"providerTestSource\", \u0026artifactory.LocalMavenRepositoryArgs{\n\t\t\tKey: pulumi.String(\"provider_test_source\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewLocalMavenRepository(ctx, \"providerTestDest\", \u0026artifactory.LocalMavenRepositoryArgs{\n\t\t\tKey: pulumi.String(\"provider_test_dest\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewReplicationConfig(ctx, \"foo-rep\", \u0026artifactory.ReplicationConfigArgs{\n\t\t\tCronExp:                pulumi.String(\"0 0 * * * ?\"),\n\t\t\tEnableEventReplication: pulumi.Bool(true),\n\t\t\tReplications: ReplicationConfigReplicationArray{\n\t\t\t\t\u0026ReplicationConfigReplicationArgs{\n\t\t\t\t\tPassword: pulumi.String(fmt.Sprintf(\"%v%v\", \"$\", \"var.artifactory_password\")),\n\t\t\t\t\tUrl:      pulumi.String(fmt.Sprintf(\"%v%v\", \"$\", \"var.artifactory_url\")),\n\t\t\t\t\tUsername: pulumi.String(fmt.Sprintf(\"%v%v\", \"$\", \"var.artifactory_username\")),\n\t\t\t\t},\n\t\t\t},\n\t\t\tRepoKey: providerTestSource.Key,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nReplication configs can be imported using their repo key, e.g.\n\n```sh\n $ pulumi import artifactory:index/replicationConfig:ReplicationConfig foo-rep provider_test_source\n```\n\n ",
            "properties": {
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean"
                },
                "replications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/ReplicationConfigReplication:ReplicationConfigReplication"
                    }
                },
                "repoKey": {
                    "type": "string"
                }
            },
            "required": [
                "cronExp",
                "enableEventReplication",
                "repoKey"
            ],
            "inputProperties": {
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean"
                },
                "replications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/ReplicationConfigReplication:ReplicationConfigReplication"
                    }
                },
                "repoKey": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "cronExp",
                "repoKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ReplicationConfig resources.\n",
                "properties": {
                    "cronExp": {
                        "type": "string"
                    },
                    "enableEventReplication": {
                        "type": "boolean"
                    },
                    "replications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/ReplicationConfigReplication:ReplicationConfigReplication"
                        }
                    },
                    "repoKey": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/samlSettings:SamlSettings": {
            "description": "## # Artifactory SAML SSO Settings Resource\n\nThis resource can be used to manage Artifactory's SAML SSO settings.\n\nOnly a single `artifactory.SamlSettings` resource is meant to be defined.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Configure Artifactory SAML SSO settings\nconst saml = new artifactory.SamlSettings(\"saml\", {\n    allowUserToAccessProfile: true,\n    autoRedirect: true,\n    certificate: \"test-certificate\",\n    emailAttribute: \"email\",\n    enable: true,\n    groupAttribute: \"groups\",\n    loginUrl: \"test-login-url\",\n    logoutUrl: \"test-logout-url\",\n    noAutoUserCreation: false,\n    serviceProviderName: \"okta\",\n    syncGroups: true,\n    useEncryptedAssertion: false,\n    verifyAudienceRestriction: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Configure Artifactory SAML SSO settings\nsaml = artifactory.SamlSettings(\"saml\",\n    allow_user_to_access_profile=True,\n    auto_redirect=True,\n    certificate=\"test-certificate\",\n    email_attribute=\"email\",\n    enable=True,\n    group_attribute=\"groups\",\n    login_url=\"test-login-url\",\n    logout_url=\"test-logout-url\",\n    no_auto_user_creation=False,\n    service_provider_name=\"okta\",\n    sync_groups=True,\n    use_encrypted_assertion=False,\n    verify_audience_restriction=True)\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Configure Artifactory SAML SSO settings\n        var saml = new Artifactory.SamlSettings(\"saml\", new Artifactory.SamlSettingsArgs\n        {\n            AllowUserToAccessProfile = true,\n            AutoRedirect = true,\n            Certificate = \"test-certificate\",\n            EmailAttribute = \"email\",\n            Enable = true,\n            GroupAttribute = \"groups\",\n            LoginUrl = \"test-login-url\",\n            LogoutUrl = \"test-logout-url\",\n            NoAutoUserCreation = false,\n            ServiceProviderName = \"okta\",\n            SyncGroups = true,\n            UseEncryptedAssertion = false,\n            VerifyAudienceRestriction = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewSamlSettings(ctx, \"saml\", \u0026artifactory.SamlSettingsArgs{\n\t\t\tAllowUserToAccessProfile:  pulumi.Bool(true),\n\t\t\tAutoRedirect:              pulumi.Bool(true),\n\t\t\tCertificate:               pulumi.String(\"test-certificate\"),\n\t\t\tEmailAttribute:            pulumi.String(\"email\"),\n\t\t\tEnable:                    pulumi.Bool(true),\n\t\t\tGroupAttribute:            pulumi.String(\"groups\"),\n\t\t\tLoginUrl:                  pulumi.String(\"test-login-url\"),\n\t\t\tLogoutUrl:                 pulumi.String(\"test-logout-url\"),\n\t\t\tNoAutoUserCreation:        pulumi.Bool(false),\n\t\t\tServiceProviderName:       pulumi.String(\"okta\"),\n\t\t\tSyncGroups:                pulumi.Bool(true),\n\t\t\tUseEncryptedAssertion:     pulumi.Bool(false),\n\t\t\tVerifyAudienceRestriction: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCurrent SAML SSO settings can be imported using `saml_settings` as the `ID`, e.g.\n\n```sh\n $ pulumi import artifactory:index/samlSettings:SamlSettings saml saml_settings\n```\n\n ",
            "properties": {
                "allowUserToAccessProfile": {
                    "type": "boolean",
                    "description": "Allow persisted users to access their profile.  Default value is `true`.\n"
                },
                "autoRedirect": {
                    "type": "boolean",
                    "description": "Auto redirect to login through the IdP when clicking on Artifactory's login link.  Default value is `false`.\n"
                },
                "certificate": {
                    "type": "string",
                    "description": "SAML certificate that contains the public key for the IdP service provider.  Used by Artifactory to verify sign-in requests. Default value is ``.\n"
                },
                "emailAttribute": {
                    "type": "string",
                    "description": "Name of the attribute in the SAML response from the IdP that contains the user's email. Default value is ``.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable SAML SSO.  Default value is `true`.\n"
                },
                "groupAttribute": {
                    "type": "string",
                    "description": "Name of the attribute in the SAML response from the IdP that contains the user's group memberships. Default value is ``.\n"
                },
                "loginUrl": {
                    "type": "string",
                    "description": "Service provider login url configured on the IdP.\n"
                },
                "logoutUrl": {
                    "type": "string",
                    "description": "Service provider logout url, or where to redirect after user logs out.\n"
                },
                "noAutoUserCreation": {
                    "type": "boolean",
                    "description": "When automatic user creation is off, authenticated users are not automatically created inside Artifactory. Instead, for every request from an SSO user, the user is temporarily associated with default groups (if such groups are defined), and the permissions for these groups apply. Without auto-user creation, you must manually create the user inside Artifactory to manage user permissions not attached to their default groups. Default value is `false`.\n"
                },
                "serviceProviderName": {
                    "type": "string",
                    "description": "The SAML service provider name. This should be a URI that is also known as the entityID, providerID, or entity identity.\n"
                },
                "syncGroups": {
                    "type": "boolean",
                    "description": "Associate user with Artifactory groups based on the `group_attribute` provided in the SAML response from the identity provider.  Default value is `false`.\n"
                },
                "useEncryptedAssertion": {
                    "type": "boolean",
                    "description": "When set, an X.509 public certificate will be created by Artifactory. Download this certificate and upload it to your IDP and choose your own encryption algorithm. This process will let you encrypt the assertion section in your SAML response. Default value is `false`.\n"
                },
                "verifyAudienceRestriction": {
                    "type": "boolean",
                    "description": "Enable \"audience\", or who the SAML assertion is intended for.  Ensures that the correct service provider intended for Artifactory is used on the IdP.  Default value is `true`.\n"
                }
            },
            "required": [
                "loginUrl",
                "logoutUrl",
                "serviceProviderName"
            ],
            "inputProperties": {
                "allowUserToAccessProfile": {
                    "type": "boolean",
                    "description": "Allow persisted users to access their profile.  Default value is `true`.\n"
                },
                "autoRedirect": {
                    "type": "boolean",
                    "description": "Auto redirect to login through the IdP when clicking on Artifactory's login link.  Default value is `false`.\n"
                },
                "certificate": {
                    "type": "string",
                    "description": "SAML certificate that contains the public key for the IdP service provider.  Used by Artifactory to verify sign-in requests. Default value is ``.\n"
                },
                "emailAttribute": {
                    "type": "string",
                    "description": "Name of the attribute in the SAML response from the IdP that contains the user's email. Default value is ``.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable SAML SSO.  Default value is `true`.\n"
                },
                "groupAttribute": {
                    "type": "string",
                    "description": "Name of the attribute in the SAML response from the IdP that contains the user's group memberships. Default value is ``.\n"
                },
                "loginUrl": {
                    "type": "string",
                    "description": "Service provider login url configured on the IdP.\n"
                },
                "logoutUrl": {
                    "type": "string",
                    "description": "Service provider logout url, or where to redirect after user logs out.\n"
                },
                "noAutoUserCreation": {
                    "type": "boolean",
                    "description": "When automatic user creation is off, authenticated users are not automatically created inside Artifactory. Instead, for every request from an SSO user, the user is temporarily associated with default groups (if such groups are defined), and the permissions for these groups apply. Without auto-user creation, you must manually create the user inside Artifactory to manage user permissions not attached to their default groups. Default value is `false`.\n"
                },
                "serviceProviderName": {
                    "type": "string",
                    "description": "The SAML service provider name. This should be a URI that is also known as the entityID, providerID, or entity identity.\n"
                },
                "syncGroups": {
                    "type": "boolean",
                    "description": "Associate user with Artifactory groups based on the `group_attribute` provided in the SAML response from the identity provider.  Default value is `false`.\n"
                },
                "useEncryptedAssertion": {
                    "type": "boolean",
                    "description": "When set, an X.509 public certificate will be created by Artifactory. Download this certificate and upload it to your IDP and choose your own encryption algorithm. This process will let you encrypt the assertion section in your SAML response. Default value is `false`.\n"
                },
                "verifyAudienceRestriction": {
                    "type": "boolean",
                    "description": "Enable \"audience\", or who the SAML assertion is intended for.  Ensures that the correct service provider intended for Artifactory is used on the IdP.  Default value is `true`.\n"
                }
            },
            "requiredInputs": [
                "loginUrl",
                "logoutUrl",
                "serviceProviderName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SamlSettings resources.\n",
                "properties": {
                    "allowUserToAccessProfile": {
                        "type": "boolean",
                        "description": "Allow persisted users to access their profile.  Default value is `true`.\n"
                    },
                    "autoRedirect": {
                        "type": "boolean",
                        "description": "Auto redirect to login through the IdP when clicking on Artifactory's login link.  Default value is `false`.\n"
                    },
                    "certificate": {
                        "type": "string",
                        "description": "SAML certificate that contains the public key for the IdP service provider.  Used by Artifactory to verify sign-in requests. Default value is ``.\n"
                    },
                    "emailAttribute": {
                        "type": "string",
                        "description": "Name of the attribute in the SAML response from the IdP that contains the user's email. Default value is ``.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable SAML SSO.  Default value is `true`.\n"
                    },
                    "groupAttribute": {
                        "type": "string",
                        "description": "Name of the attribute in the SAML response from the IdP that contains the user's group memberships. Default value is ``.\n"
                    },
                    "loginUrl": {
                        "type": "string",
                        "description": "Service provider login url configured on the IdP.\n"
                    },
                    "logoutUrl": {
                        "type": "string",
                        "description": "Service provider logout url, or where to redirect after user logs out.\n"
                    },
                    "noAutoUserCreation": {
                        "type": "boolean",
                        "description": "When automatic user creation is off, authenticated users are not automatically created inside Artifactory. Instead, for every request from an SSO user, the user is temporarily associated with default groups (if such groups are defined), and the permissions for these groups apply. Without auto-user creation, you must manually create the user inside Artifactory to manage user permissions not attached to their default groups. Default value is `false`.\n"
                    },
                    "serviceProviderName": {
                        "type": "string",
                        "description": "The SAML service provider name. This should be a URI that is also known as the entityID, providerID, or entity identity.\n"
                    },
                    "syncGroups": {
                        "type": "boolean",
                        "description": "Associate user with Artifactory groups based on the `group_attribute` provided in the SAML response from the identity provider.  Default value is `false`.\n"
                    },
                    "useEncryptedAssertion": {
                        "type": "boolean",
                        "description": "When set, an X.509 public certificate will be created by Artifactory. Download this certificate and upload it to your IDP and choose your own encryption algorithm. This process will let you encrypt the assertion section in your SAML response. Default value is `false`.\n"
                    },
                    "verifyAudienceRestriction": {
                        "type": "boolean",
                        "description": "Enable \"audience\", or who the SAML assertion is intended for.  Ensures that the correct service provider intended for Artifactory is used on the IdP.  Default value is `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/singleReplicationConfig:SingleReplicationConfig": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a replication between two artifactory local repositories\nconst providerTestSource = new artifactory.LocalMavenRepository(\"provider_test_source\", {\n    key: \"provider_test_source\",\n});\nconst providerTestDest = new artifactory.LocalMavenRepository(\"provider_test_dest\", {\n    key: \"provider_test_dest\",\n});\nconst foo_rep = new artifactory.SingleReplicationConfig(\"foo-rep\", {\n    cronExp: \"0 0 * * * ?\",\n    enableEventReplication: true,\n    password: var_artifactory_password,\n    repoKey: providerTestSource.key,\n    url: var_artifactory_url,\n    username: var_artifactory_username,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nReplication configs can be imported using their repo key, e.g.\n\n```sh\n $ pulumi import artifactory:index/singleReplicationConfig:SingleReplicationConfig foo-rep repository-key\n```\n\n ",
            "properties": {
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "description": "Requires password encryption to be turned off `POST /api/system/decrypt`\n"
                },
                "pathPrefix": {
                    "type": "string"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "repoKey": {
                    "type": "string"
                },
                "socketTimeoutMillis": {
                    "type": "integer"
                },
                "syncDeletes": {
                    "type": "boolean"
                },
                "syncProperties": {
                    "type": "boolean"
                },
                "syncStatistics": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "required": [
                "cronExp",
                "enableEventReplication",
                "enabled",
                "password",
                "repoKey",
                "socketTimeoutMillis",
                "syncDeletes",
                "syncProperties",
                "syncStatistics"
            ],
            "inputProperties": {
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "pathPrefix": {
                    "type": "string"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "repoKey": {
                    "type": "string"
                },
                "socketTimeoutMillis": {
                    "type": "integer"
                },
                "syncDeletes": {
                    "type": "boolean"
                },
                "syncProperties": {
                    "type": "boolean"
                },
                "syncStatistics": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "cronExp",
                "repoKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SingleReplicationConfig resources.\n",
                "properties": {
                    "cronExp": {
                        "type": "string"
                    },
                    "enableEventReplication": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string",
                        "description": "Requires password encryption to be turned off `POST /api/system/decrypt`\n"
                    },
                    "pathPrefix": {
                        "type": "string"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "repoKey": {
                        "type": "string"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer"
                    },
                    "syncDeletes": {
                        "type": "boolean"
                    },
                    "syncProperties": {
                        "type": "boolean"
                    },
                    "syncStatistics": {
                        "type": "boolean"
                    },
                    "url": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/unmanagedUser:UnmanagedUser": {
            "description": "## # Artifactory Unmanaged User Resource\n\nProvides an Artifactory unmanaged user resource. This can be used to create and maintain Artifactory users.\n\nWhen the optional attribute `password` is omitted, a random password is generated according to current Artifactory password policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a new Artifactory user called terraform\nconst test_user = new artifactory.UnmanagedUser(\"test-user\", {\n    email: \"test-user@artifactory-terraform.com\",\n    groups: [\n        \"logged-in-users\",\n        \"readers\",\n    ],\n    password: \"my super secret password\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Create a new Artifactory user called terraform\ntest_user = artifactory.UnmanagedUser(\"test-user\",\n    email=\"test-user@artifactory-terraform.com\",\n    groups=[\n        \"logged-in-users\",\n        \"readers\",\n    ],\n    password=\"my super secret password\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Artifactory user called terraform\n        var test_user = new Artifactory.UnmanagedUser(\"test-user\", new Artifactory.UnmanagedUserArgs\n        {\n            Email = \"test-user@artifactory-terraform.com\",\n            Groups = \n            {\n                \"logged-in-users\",\n                \"readers\",\n            },\n            Password = \"my super secret password\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewUnmanagedUser(ctx, \"test-user\", \u0026artifactory.UnmanagedUserArgs{\n\t\t\tEmail: pulumi.String(\"test-user@artifactory-terraform.com\"),\n\t\t\tGroups: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"logged-in-users\"),\n\t\t\t\tpulumi.String(\"readers\"),\n\t\t\t},\n\t\t\tPassword: pulumi.String(\"my super secret password\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUsers can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/unmanagedUser:UnmanagedUser test-user myusername\n```\n\n ",
            "properties": {
                "admin": {
                    "type": "boolean",
                    "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                },
                "disableUiAccess": {
                    "type": "boolean",
                    "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email for user.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups this user is a part of.\n"
                },
                "internalPasswordDisabled": {
                    "type": "boolean",
                    "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Username for user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the user. When omitted, a random password is generated using the following password policy: 10 characters with 1 digit, 1 symbol, with upper and lower case letters.\n"
                },
                "profileUpdatable": {
                    "type": "boolean",
                    "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                }
            },
            "required": [
                "email",
                "name"
            ],
            "inputProperties": {
                "admin": {
                    "type": "boolean",
                    "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                },
                "disableUiAccess": {
                    "type": "boolean",
                    "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email for user.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups this user is a part of.\n"
                },
                "internalPasswordDisabled": {
                    "type": "boolean",
                    "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Username for user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the user. When omitted, a random password is generated using the following password policy: 10 characters with 1 digit, 1 symbol, with upper and lower case letters.\n"
                },
                "profileUpdatable": {
                    "type": "boolean",
                    "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                }
            },
            "requiredInputs": [
                "email"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UnmanagedUser resources.\n",
                "properties": {
                    "admin": {
                        "type": "boolean",
                        "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                    },
                    "disableUiAccess": {
                        "type": "boolean",
                        "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email for user.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups this user is a part of.\n"
                    },
                    "internalPasswordDisabled": {
                        "type": "boolean",
                        "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Username for user.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the user. When omitted, a random password is generated using the following password policy: 10 characters with 1 digit, 1 symbol, with upper and lower case letters.\n"
                    },
                    "profileUpdatable": {
                        "type": "boolean",
                        "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/user:User": {
            "description": "## # Artifactory User Resource\n\nProvides an Artifactory user resource. This can be used to create and manage Artifactory users.\n\nWhen the optional attribute `password` is omitted, a random password is generated according to current Artifactory password policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a new Artifactory user called terraform\nconst test_user = new artifactory.User(\"test-user\", {\n    email: \"test-user@artifactory-terraform.com\",\n    groups: [\n        \"logged-in-users\",\n        \"readers\",\n    ],\n    password: \"my super secret password\",\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\n# Create a new Artifactory user called terraform\ntest_user = artifactory.User(\"test-user\",\n    email=\"test-user@artifactory-terraform.com\",\n    groups=[\n        \"logged-in-users\",\n        \"readers\",\n    ],\n    password=\"my super secret password\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Artifactory user called terraform\n        var test_user = new Artifactory.User(\"test-user\", new Artifactory.UserArgs\n        {\n            Email = \"test-user@artifactory-terraform.com\",\n            Groups = \n            {\n                \"logged-in-users\",\n                \"readers\",\n            },\n            Password = \"my super secret password\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewUser(ctx, \"test-user\", \u0026artifactory.UserArgs{\n\t\t\tEmail: pulumi.String(\"test-user@artifactory-terraform.com\"),\n\t\t\tGroups: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"logged-in-users\"),\n\t\t\t\tpulumi.String(\"readers\"),\n\t\t\t},\n\t\t\tPassword: pulumi.String(\"my super secret password\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUsers can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/user:User test-user myusername\n```\n\n ",
            "properties": {
                "admin": {
                    "type": "boolean",
                    "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                },
                "disableUiAccess": {
                    "type": "boolean",
                    "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email for user.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups this user is a part of.\n- Note: If \"groups\" attribute is not specified then user's group membership set to empty. User will not be part of default \"readers\" group automatically.\n"
                },
                "internalPasswordDisabled": {
                    "type": "boolean",
                    "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Username for user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the user. When omitted, a random password is generated using the following password policy: 10 characters with 1 digit, 1 symbol, with upper and lower case letters.\n"
                },
                "profileUpdatable": {
                    "type": "boolean",
                    "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                }
            },
            "required": [
                "email",
                "name"
            ],
            "inputProperties": {
                "admin": {
                    "type": "boolean",
                    "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                },
                "disableUiAccess": {
                    "type": "boolean",
                    "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email for user.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups this user is a part of.\n- Note: If \"groups\" attribute is not specified then user's group membership set to empty. User will not be part of default \"readers\" group automatically.\n"
                },
                "internalPasswordDisabled": {
                    "type": "boolean",
                    "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Username for user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the user. When omitted, a random password is generated using the following password policy: 10 characters with 1 digit, 1 symbol, with upper and lower case letters.\n"
                },
                "profileUpdatable": {
                    "type": "boolean",
                    "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                }
            },
            "requiredInputs": [
                "email"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "admin": {
                        "type": "boolean",
                        "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                    },
                    "disableUiAccess": {
                        "type": "boolean",
                        "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email for user.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups this user is a part of.\n- Note: If \"groups\" attribute is not specified then user's group membership set to empty. User will not be part of default \"readers\" group automatically.\n"
                    },
                    "internalPasswordDisabled": {
                        "type": "boolean",
                        "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Username for user.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the user. When omitted, a random password is generated using the following password policy: 10 characters with 1 digit, 1 symbol, with upper and lower case letters.\n"
                    },
                    "profileUpdatable": {
                        "type": "boolean",
                        "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualAlpineRepository:VirtualAlpineRepository": {
            "description": "## # Artifactory Virtual Alpine Repository Resource\n\nProvides an Artifactory virtual repository resource with specific alpine features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_alpine = new artifactory.VirtualAlpineRepository(\"foo-alpine\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-alpine\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_alpine = artifactory.VirtualAlpineRepository(\"foo-alpine\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-alpine\",\n    notes=\"Internal description\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_alpine = new Artifactory.VirtualAlpineRepository(\"foo-alpine\", new Artifactory.VirtualAlpineRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-alpine\",\n            Notes = \"Internal description\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualAlpineRepository(ctx, \"foo-alpine\", \u0026artifactory.VirtualAlpineRepositoryArgs{\n\t\t\tDescription:     pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern: pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern: pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:             pulumi.String(\"foo-alpine\"),\n\t\t\tNotes:           pulumi.String(\"Internal description\"),\n\t\t\tRepositories:    pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualAlpineRepository:VirtualAlpineRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "Primary keypair used to sign artifacts. Default value is empty.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "Primary keypair used to sign artifacts. Default value is empty.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualAlpineRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "primaryKeypairRef": {
                        "type": "string",
                        "description": "Primary keypair used to sign artifacts. Default value is empty.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualBowerRepository:VirtualBowerRepository": {
            "description": "## # Artifactory Virtual Bower Repository Resource\n\nProvides an Artifactory virtual repository resource with specific bower features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_bower = new artifactory.VirtualBowerRepository(\"foo-bower\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    externalDependenciesEnabled: false,\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-bower\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_bower = artifactory.VirtualBowerRepository(\"foo-bower\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    external_dependencies_enabled=False,\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-bower\",\n    notes=\"Internal description\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_bower = new Artifactory.VirtualBowerRepository(\"foo-bower\", new Artifactory.VirtualBowerRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            ExternalDependenciesEnabled = false,\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-bower\",\n            Notes = \"Internal description\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualBowerRepository(ctx, \"foo-bower\", \u0026artifactory.VirtualBowerRepositoryArgs{\n\t\t\tDescription:                 pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern:             pulumi.String(\"com/google/**\"),\n\t\t\tExternalDependenciesEnabled: pulumi.Bool(false),\n\t\t\tIncludesPattern:             pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:                         pulumi.String(\"foo-bower\"),\n\t\t\tNotes:                       pulumi.String(\"Internal description\"),\n\t\t\tRepositories:                pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualBowerRepository:VirtualBowerRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "When set, external dependencies are rewritten. Default value is false.\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An Allow List of Ant-style path expressions that specify where external dependencies may be downloaded from. By default, this is set to ** which means that dependencies may be downloaded from any external source.\n"
                },
                "externalDependenciesRemoteRepo": {
                    "type": "string",
                    "description": "The remote repository aggregated by this virtual repository in which the external dependency will be cached.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "When set, external dependencies are rewritten. Default value is false.\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An Allow List of Ant-style path expressions that specify where external dependencies may be downloaded from. By default, this is set to ** which means that dependencies may be downloaded from any external source.\n"
                },
                "externalDependenciesRemoteRepo": {
                    "type": "string",
                    "description": "The remote repository aggregated by this virtual repository in which the external dependency will be cached.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualBowerRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "externalDependenciesEnabled": {
                        "type": "boolean",
                        "description": "When set, external dependencies are rewritten. Default value is false.\n"
                    },
                    "externalDependenciesPatterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Allow List of Ant-style path expressions that specify where external dependencies may be downloaded from. By default, this is set to ** which means that dependencies may be downloaded from any external source.\n"
                    },
                    "externalDependenciesRemoteRepo": {
                        "type": "string",
                        "description": "The remote repository aggregated by this virtual repository in which the external dependency will be cached.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualChefRepository:VirtualChefRepository": {
            "description": "## # Artifactory Virtual Chef Repository Resource\n\nProvides an Artifactory virtual repository resource with specific chef features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_chef = new artifactory.VirtualChefRepository(\"foo-chef\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-chef\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_chef = artifactory.VirtualChefRepository(\"foo-chef\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-chef\",\n    notes=\"Internal description\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_chef = new Artifactory.VirtualChefRepository(\"foo-chef\", new Artifactory.VirtualChefRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-chef\",\n            Notes = \"Internal description\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualChefRepository(ctx, \"foo-chef\", \u0026artifactory.VirtualChefRepositoryArgs{\n\t\t\tDescription:     pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern: pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern: pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:             pulumi.String(\"foo-chef\"),\n\t\t\tNotes:           pulumi.String(\"Internal description\"),\n\t\t\tRepositories:    pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualChefRepository:VirtualChefRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualChefRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualComposerRepository:VirtualComposerRepository": {
            "description": "## # Artifactory Virtual PHP Composer Repository Resource\n\nProvides an Artifactory virtual repository resource with specific php composer features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_composer = new artifactory.VirtualComposerRepository(\"foo-composer\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-composer\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_composer = artifactory.VirtualComposerRepository(\"foo-composer\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-composer\",\n    notes=\"Internal description\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_composer = new Artifactory.VirtualComposerRepository(\"foo-composer\", new Artifactory.VirtualComposerRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-composer\",\n            Notes = \"Internal description\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualComposerRepository(ctx, \"foo-composer\", \u0026artifactory.VirtualComposerRepositoryArgs{\n\t\t\tDescription:     pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern: pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern: pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:             pulumi.String(\"foo-composer\"),\n\t\t\tNotes:           pulumi.String(\"Internal description\"),\n\t\t\tRepositories:    pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualComposerRepository:VirtualComposerRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualComposerRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualConanRepository:VirtualConanRepository": {
            "description": "## # Artifactory Virtual Conan Repository Resource\n\nProvides an Artifactory virtual repository resource with specific conan features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_conan = new artifactory.VirtualConanRepository(\"foo-conan\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-conan\",\n    notes: \"Internal description\",\n    repoLayoutRef: \"conan-default\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_conan = artifactory.VirtualConanRepository(\"foo-conan\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-conan\",\n    notes=\"Internal description\",\n    repo_layout_ref=\"conan-default\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_conan = new Artifactory.VirtualConanRepository(\"foo-conan\", new Artifactory.VirtualConanRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-conan\",\n            Notes = \"Internal description\",\n            RepoLayoutRef = \"conan-default\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualConanRepository(ctx, \"foo-conan\", \u0026artifactory.VirtualConanRepositoryArgs{\n\t\t\tDescription:     pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern: pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern: pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:             pulumi.String(\"foo-conan\"),\n\t\t\tNotes:           pulumi.String(\"Internal description\"),\n\t\t\tRepoLayoutRef:   pulumi.String(\"conan-default\"),\n\t\t\tRepositories:    pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualConanRepository:VirtualConanRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualConanRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualCondaRepository:VirtualCondaRepository": {
            "description": "## # Artifactory Virtual Conda Repository Resource\n\nProvides an Artifactory virtual repository resource with specific conda features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_conda = new artifactory.VirtualCondaRepository(\"foo-conda\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-conda\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_conda = artifactory.VirtualCondaRepository(\"foo-conda\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-conda\",\n    notes=\"Internal description\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_conda = new Artifactory.VirtualCondaRepository(\"foo-conda\", new Artifactory.VirtualCondaRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-conda\",\n            Notes = \"Internal description\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualCondaRepository(ctx, \"foo-conda\", \u0026artifactory.VirtualCondaRepositoryArgs{\n\t\t\tDescription:     pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern: pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern: pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:             pulumi.String(\"foo-conda\"),\n\t\t\tNotes:           pulumi.String(\"Internal description\"),\n\t\t\tRepositories:    pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualCondaRepository:VirtualCondaRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualCondaRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualCranRepository:VirtualCranRepository": {
            "description": "## # Artifactory Virtual Cran Repository Resource\n\nProvides an Artifactory virtual repository resource with specific cran features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_cran = new artifactory.VirtualCranRepository(\"foo-cran\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-cran\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_cran = artifactory.VirtualCranRepository(\"foo-cran\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-cran\",\n    notes=\"Internal description\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_cran = new Artifactory.VirtualCranRepository(\"foo-cran\", new Artifactory.VirtualCranRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-cran\",\n            Notes = \"Internal description\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualCranRepository(ctx, \"foo-cran\", \u0026artifactory.VirtualCranRepositoryArgs{\n\t\t\tDescription:     pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern: pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern: pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:             pulumi.String(\"foo-cran\"),\n\t\t\tNotes:           pulumi.String(\"Internal description\"),\n\t\t\tRepositories:    pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualCranRepository:VirtualCranRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualCranRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualDebianRepository:VirtualDebianRepository": {
            "description": "## # Artifactory Virtual Debian Repository Resource\n\nProvides an Artifactory virtual repository resource with specific debian features.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_debian = new artifactory.VirtualDebianRepository(\"foo-debian\", {\n    debianDefaultArchitectures: \"amd64,i386\",\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-debian\",\n    notes: \"Internal description\",\n    optionalIndexCompressionFormats: [\n        \"bz2\",\n        \"xz\",\n    ],\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_debian = artifactory.VirtualDebianRepository(\"foo-debian\",\n    debian_default_architectures=\"amd64,i386\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-debian\",\n    notes=\"Internal description\",\n    optional_index_compression_formats=[\n        \"bz2\",\n        \"xz\",\n    ],\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_debian = new Artifactory.VirtualDebianRepository(\"foo-debian\", new Artifactory.VirtualDebianRepositoryArgs\n        {\n            DebianDefaultArchitectures = \"amd64,i386\",\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-debian\",\n            Notes = \"Internal description\",\n            OptionalIndexCompressionFormats = \n            {\n                \"bz2\",\n                \"xz\",\n            },\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualDebianRepository(ctx, \"foo-debian\", \u0026artifactory.VirtualDebianRepositoryArgs{\n\t\t\tDebianDefaultArchitectures: pulumi.String(\"amd64,i386\"),\n\t\t\tDescription:                pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern:            pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern:            pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:                        pulumi.String(\"foo-debian\"),\n\t\t\tNotes:                      pulumi.String(\"Internal description\"),\n\t\t\tOptionalIndexCompressionFormats: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"bz2\"),\n\t\t\t\tpulumi.String(\"xz\"),\n\t\t\t},\n\t\t\tRepositories: pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualDebianRepository:VirtualDebianRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "debianDefaultArchitectures": {
                    "type": "string",
                    "description": "Specifying  architectures will speed up Artifactory's initial metadata indexing process. The default architecture values are amd64 and i386.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "optionalIndexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Index file formats you would like to create in addition to the default Gzip (.gzip extension). Supported values are 'bz2','lzma' and 'xz'. Default value is 'bz2'.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "Primary keypair used to sign artifacts. Default is empty.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "Secondary keypair used to sign artifacts. Default is empty.\n"
                }
            },
            "required": [
                "key",
                "optionalIndexCompressionFormats",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "debianDefaultArchitectures": {
                    "type": "string",
                    "description": "Specifying  architectures will speed up Artifactory's initial metadata indexing process. The default architecture values are amd64 and i386.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "optionalIndexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Index file formats you would like to create in addition to the default Gzip (.gzip extension). Supported values are 'bz2','lzma' and 'xz'. Default value is 'bz2'.\n"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "Primary keypair used to sign artifacts. Default is empty.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "Secondary keypair used to sign artifacts. Default is empty.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualDebianRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "debianDefaultArchitectures": {
                        "type": "string",
                        "description": "Specifying  architectures will speed up Artifactory's initial metadata indexing process. The default architecture values are amd64 and i386.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "optionalIndexCompressionFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Index file formats you would like to create in addition to the default Gzip (.gzip extension). Supported values are 'bz2','lzma' and 'xz'. Default value is 'bz2'.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "primaryKeypairRef": {
                        "type": "string",
                        "description": "Primary keypair used to sign artifacts. Default is empty.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    },
                    "secondaryKeypairRef": {
                        "type": "string",
                        "description": "Secondary keypair used to sign artifacts. Default is empty.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualDockerRepository:VirtualDockerRepository": {
            "description": "## # Artifactory Virtual Docker Repository Resource\n\nProvides an Artifactory virtual repository resource with specific docker features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_docker = new artifactory.VirtualDockerRepository(\"foo-docker\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-docker\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_docker = artifactory.VirtualDockerRepository(\"foo-docker\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-docker\",\n    notes=\"Internal description\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_docker = new Artifactory.VirtualDockerRepository(\"foo-docker\", new Artifactory.VirtualDockerRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-docker\",\n            Notes = \"Internal description\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualDockerRepository(ctx, \"foo-docker\", \u0026artifactory.VirtualDockerRepositoryArgs{\n\t\t\tDescription:     pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern: pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern: pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:             pulumi.String(\"foo-docker\"),\n\t\t\tNotes:           pulumi.String(\"Internal description\"),\n\t\t\tRepositories:    pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualDockerRepository:VirtualDockerRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualDockerRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualGemsRepository:VirtualGemsRepository": {
            "description": "## # Artifactory Virtual Gems Repository Resource\n\nProvides an Artifactory virtual repository resource with specific gems features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_gems = new artifactory.VirtualGemsRepository(\"foo-gems\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-gems\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_gems = artifactory.VirtualGemsRepository(\"foo-gems\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-gems\",\n    notes=\"Internal description\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_gems = new Artifactory.VirtualGemsRepository(\"foo-gems\", new Artifactory.VirtualGemsRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-gems\",\n            Notes = \"Internal description\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualGemsRepository(ctx, \"foo-gems\", \u0026artifactory.VirtualGemsRepositoryArgs{\n\t\t\tDescription:     pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern: pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern: pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:             pulumi.String(\"foo-gems\"),\n\t\t\tNotes:           pulumi.String(\"Internal description\"),\n\t\t\tRepositories:    pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualGemsRepository:VirtualGemsRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualGemsRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualGenericRepository:VirtualGenericRepository": {
            "description": "## # Artifactory Virtual Generic Repository Resource\n\nProvides an Artifactory virtual repository resource with generic package type. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_generic = new artifactory.VirtualGenericRepository(\"foo-generic\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-generic\",\n    notes: \"Internal description\",\n    repoLayoutRef: \"simple-default\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_generic = artifactory.VirtualGenericRepository(\"foo-generic\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-generic\",\n    notes=\"Internal description\",\n    repo_layout_ref=\"simple-default\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_generic = new Artifactory.VirtualGenericRepository(\"foo-generic\", new Artifactory.VirtualGenericRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-generic\",\n            Notes = \"Internal description\",\n            RepoLayoutRef = \"simple-default\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualGenericRepository(ctx, \"foo-generic\", \u0026artifactory.VirtualGenericRepositoryArgs{\n\t\t\tDescription:     pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern: pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern: pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:             pulumi.String(\"foo-generic\"),\n\t\t\tNotes:           pulumi.String(\"Internal description\"),\n\t\t\tRepoLayoutRef:   pulumi.String(\"simple-default\"),\n\t\t\tRepositories:    pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualGenericRepository:VirtualGenericRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by another Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the virtual repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "- This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default: 7200 seconds.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by another Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the virtual repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "- This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default: 7200 seconds.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualGenericRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by another Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no artifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the virtual repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "- This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default: 7200 seconds.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualGitlfsRepository:VirtualGitlfsRepository": {
            "description": "## # Artifactory Virtual Git LFS Repository Resource\n\nProvides an Artifactory virtual repository resource with specific git lfs features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_gitlfs = new artifactory.VirtualCgitlfsRepository(\"foo-gitlfs\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-gitlfs\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualGitlfsRepository:VirtualGitlfsRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualGitlfsRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualGradleRepository:VirtualGradleRepository": {
            "description": "## # Artifactory Virtual Gradle Repository Resource\n\nProvides an Artifactory virtual repository resource with specific gradle features.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_gradle = new artifactory.VirtualGradleRepository(\"foo-gradle\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-gradle\",\n    notes: \"Internal description\",\n    pomRepositoryReferencesCleanupPolicy: \"discard_active_reference\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_gradle = artifactory.VirtualGradleRepository(\"foo-gradle\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-gradle\",\n    notes=\"Internal description\",\n    pom_repository_references_cleanup_policy=\"discard_active_reference\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_gradle = new Artifactory.VirtualGradleRepository(\"foo-gradle\", new Artifactory.VirtualGradleRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-gradle\",\n            Notes = \"Internal description\",\n            PomRepositoryReferencesCleanupPolicy = \"discard_active_reference\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualGradleRepository(ctx, \"foo-gradle\", \u0026artifactory.VirtualGradleRepositoryArgs{\n\t\t\tDescription:                          pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern:                      pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern:                      pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:                                  pulumi.String(\"foo-gradle\"),\n\t\t\tNotes:                                pulumi.String(\"Internal description\"),\n\t\t\tPomRepositoryReferencesCleanupPolicy: pulumi.String(\"discard_active_reference\"),\n\t\t\tRepositories:                         pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualGradleRepository:VirtualGradleRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "forceMavenAuthentication",
                "key",
                "packageType",
                "pomRepositoryReferencesCleanupPolicy"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualGradleRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "forceMavenAuthentication": {
                        "type": "boolean",
                        "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "keyPair": {
                        "type": "string",
                        "description": "The keypair used to sign artifacts.\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "pomRepositoryReferencesCleanupPolicy": {
                        "type": "string",
                        "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualHelmRepository:VirtualHelmRepository": {
            "description": "## # Artifactory Virtual Helm Repository Resource\n\nProvides an Artifactory virtual repository resource with Helm package type.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_helm_virtual = new artifactory.VirtualHelmRepository(\"foo-helm-virtual\", {\n    key: \"foo-helm-virtual\",\n    useNamespaces: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_helm_virtual = artifactory.VirtualHelmRepository(\"foo-helm-virtual\",\n    key=\"foo-helm-virtual\",\n    use_namespaces=True)\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_helm_virtual = new Artifactory.VirtualHelmRepository(\"foo-helm-virtual\", new Artifactory.VirtualHelmRepositoryArgs\n        {\n            Key = \"foo-helm-virtual\",\n            UseNamespaces = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualHelmRepository(ctx, \"foo-helm-virtual\", \u0026artifactory.VirtualHelmRepositoryArgs{\n\t\t\tKey:           pulumi.String(\"foo-helm-virtual\"),\n\t\t\tUseNamespaces: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualHelmRepository:VirtualHelmRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                },
                "useNamespaces": {
                    "type": "boolean",
                    "description": "From Artifactory 7.24.1 (SaaS Version), you can explicitly state a specific aggregated local or remote repository to fetch from a virtual by assigning namespaces to local and remote repositories. See https://www.jfrog.com/confluence/display/JFROG/Kubernetes+Helm+Chart+Repositories#KubernetesHelmChartRepositories-NamespaceSupportforHelmVirtualRepositories. Default to 'false'.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                },
                "useNamespaces": {
                    "type": "boolean",
                    "description": "From Artifactory 7.24.1 (SaaS Version), you can explicitly state a specific aggregated local or remote repository to fetch from a virtual by assigning namespaces to local and remote repositories. See https://www.jfrog.com/confluence/display/JFROG/Kubernetes+Helm+Chart+Repositories#KubernetesHelmChartRepositories-NamespaceSupportforHelmVirtualRepositories. Default to 'false'.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualHelmRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    },
                    "useNamespaces": {
                        "type": "boolean",
                        "description": "From Artifactory 7.24.1 (SaaS Version), you can explicitly state a specific aggregated local or remote repository to fetch from a virtual by assigning namespaces to local and remote repositories. See https://www.jfrog.com/confluence/display/JFROG/Kubernetes+Helm+Chart+Repositories#KubernetesHelmChartRepositories-NamespaceSupportforHelmVirtualRepositories. Default to 'false'.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualIvyRepository:VirtualIvyRepository": {
            "description": "## # Artifactory Virtual Ivy Repository Resource\n\nProvides an Artifactory virtual repository resource with specific ivy features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_ivy = new artifactory.VirtualIvyRepository(\"foo-ivy\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-ivy\",\n    notes: \"Internal description\",\n    pomRepositoryReferencesCleanupPolicy: \"discard_active_reference\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_ivy = artifactory.VirtualIvyRepository(\"foo-ivy\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-ivy\",\n    notes=\"Internal description\",\n    pom_repository_references_cleanup_policy=\"discard_active_reference\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_ivy = new Artifactory.VirtualIvyRepository(\"foo-ivy\", new Artifactory.VirtualIvyRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-ivy\",\n            Notes = \"Internal description\",\n            PomRepositoryReferencesCleanupPolicy = \"discard_active_reference\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualIvyRepository(ctx, \"foo-ivy\", \u0026artifactory.VirtualIvyRepositoryArgs{\n\t\t\tDescription:                          pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern:                      pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern:                      pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:                                  pulumi.String(\"foo-ivy\"),\n\t\t\tNotes:                                pulumi.String(\"Internal description\"),\n\t\t\tPomRepositoryReferencesCleanupPolicy: pulumi.String(\"discard_active_reference\"),\n\t\t\tRepositories:                         pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualIvyRepository:VirtualIvyRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "forceMavenAuthentication",
                "key",
                "packageType",
                "pomRepositoryReferencesCleanupPolicy"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualIvyRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "forceMavenAuthentication": {
                        "type": "boolean",
                        "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "keyPair": {
                        "type": "string",
                        "description": "The keypair used to sign artifacts.\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "pomRepositoryReferencesCleanupPolicy": {
                        "type": "string",
                        "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualNpmRepository:VirtualNpmRepository": {
            "description": "## # Artifactory Virtual NPM Repository Resource\n\nProvides an Artifactory virtual repository resource with specific npm features.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_npm = new artifactory.VirtualNpmRepository(\"foo-npm\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-npm\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_npm = artifactory.VirtualNpmRepository(\"foo-npm\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-npm\",\n    notes=\"Internal description\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_npm = new Artifactory.VirtualNpmRepository(\"foo-npm\", new Artifactory.VirtualNpmRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-npm\",\n            Notes = \"Internal description\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualNpmRepository(ctx, \"foo-npm\", \u0026artifactory.VirtualNpmRepositoryArgs{\n\t\t\tDescription:     pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern: pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern: pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:             pulumi.String(\"foo-npm\"),\n\t\t\tNotes:           pulumi.String(\"Internal description\"),\n\t\t\tRepositories:    pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualNpmRepository:VirtualNpmRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualNpmRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated repositories. A value of 0 indicates no caching. Default value is 7200.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualNugetRepository:VirtualNugetRepository": {
            "description": "## # Artifactory Virtual Nuget Repository Resource\n\nProvides an Artifactory virtual repository resource with specific nuget features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_nuget = new artifactory.VirtualNugetRepository(\"foo-nuget\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    forceNugetAuthentication: true,\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-nuget\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_nuget = artifactory.VirtualNugetRepository(\"foo-nuget\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    force_nuget_authentication=True,\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-nuget\",\n    notes=\"Internal description\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_nuget = new Artifactory.VirtualNugetRepository(\"foo-nuget\", new Artifactory.VirtualNugetRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            ForceNugetAuthentication = true,\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-nuget\",\n            Notes = \"Internal description\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualNugetRepository(ctx, \"foo-nuget\", \u0026artifactory.VirtualNugetRepositoryArgs{\n\t\t\tDescription:              pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern:          pulumi.String(\"com/google/**\"),\n\t\t\tForceNugetAuthentication: pulumi.Bool(true),\n\t\t\tIncludesPattern:          pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:                      pulumi.String(\"foo-nuget\"),\n\t\t\tNotes:                    pulumi.String(\"Internal description\"),\n\t\t\tRepositories:             pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualNugetRepository:VirtualNugetRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceNugetAuthentication": {
                    "type": "boolean",
                    "description": "Force basic authentication credentials in order to use this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceNugetAuthentication": {
                    "type": "boolean",
                    "description": "Force basic authentication credentials in order to use this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualNugetRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "forceNugetAuthentication": {
                        "type": "boolean",
                        "description": "Force basic authentication credentials in order to use this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualP2Repository:VirtualP2Repository": {
            "description": "## # Artifactory Virtual P2 Repository Resource\n\nProvides an Artifactory virtual repository resource with specific P2 features.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_p2 = new artifactory.VirtualP2Repository(\"foo-p2\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-p2\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_p2 = artifactory.VirtualP2Repository(\"foo-p2\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-p2\",\n    notes=\"Internal description\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_p2 = new Artifactory.VirtualP2Repository(\"foo-p2\", new Artifactory.VirtualP2RepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-p2\",\n            Notes = \"Internal description\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualP2Repository(ctx, \"foo-p2\", \u0026artifactory.VirtualP2RepositoryArgs{\n\t\t\tDescription:     pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern: pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern: pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:             pulumi.String(\"foo-p2\"),\n\t\t\tNotes:           pulumi.String(\"Internal description\"),\n\t\t\tRepositories:    pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualP2Repository:VirtualP2Repository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualP2Repository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualPuppetRepository:VirtualPuppetRepository": {
            "description": "## # Artifactory Virtual Puppet Repository Resource\n\nProvides an Artifactory virtual repository resource with specific puppet features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_puppet = new artifactory.VirtualPuppetRepository(\"foo-puppet\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-puppet\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_puppet = artifactory.VirtualPuppetRepository(\"foo-puppet\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-puppet\",\n    notes=\"Internal description\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_puppet = new Artifactory.VirtualPuppetRepository(\"foo-puppet\", new Artifactory.VirtualPuppetRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-puppet\",\n            Notes = \"Internal description\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualPuppetRepository(ctx, \"foo-puppet\", \u0026artifactory.VirtualPuppetRepositoryArgs{\n\t\t\tDescription:     pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern: pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern: pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:             pulumi.String(\"foo-puppet\"),\n\t\t\tNotes:           pulumi.String(\"Internal description\"),\n\t\t\tRepositories:    pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualPuppetRepository:VirtualPuppetRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualPuppetRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualPypiRepository:VirtualPypiRepository": {
            "description": "## # Artifactory Virtual Pypi Repository Resource\n\nProvides an Artifactory virtual repository resource with specific pypi features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_pypi = new artifactory.VirtualPypiRepository(\"foo-pypi\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-pypi\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_pypi = artifactory.VirtualPypiRepository(\"foo-pypi\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-pypi\",\n    notes=\"Internal description\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_pypi = new Artifactory.VirtualPypiRepository(\"foo-pypi\", new Artifactory.VirtualPypiRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-pypi\",\n            Notes = \"Internal description\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualPypiRepository(ctx, \"foo-pypi\", \u0026artifactory.VirtualPypiRepositoryArgs{\n\t\t\tDescription:     pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern: pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern: pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:             pulumi.String(\"foo-pypi\"),\n\t\t\tNotes:           pulumi.String(\"Internal description\"),\n\t\t\tRepositories:    pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualPypiRepository:VirtualPypiRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualPypiRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualRpmRepository:VirtualRpmRepository": {
            "description": "## # Artifactory Virtual Rpm Repository Resource\n\nProvides an Artifactory virtual repository resource with Rpm package type.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\nimport * from \"fs\";\n\nconst primary_keypair = new artifactory.Keypair(\"primary-keypair\", {\n    pairName: \"primary-keypair\",\n    pairType: \"GPG\",\n    alias: \"foo-alias-1\",\n    privateKey: fs.readFileSync(\"samples/gpg.priv\"),\n    publicKey: fs.readFileSync(\"samples/gpg.pub\"),\n});\nconst secondary_keypair = new artifactory.Keypair(\"secondary-keypair\", {\n    pairName: \"secondary-keypair\",\n    pairType: \"GPG\",\n    alias: \"foo-alias-2\",\n    privateKey: fs.readFileSync(\"samples/gpg.priv\"),\n    publicKey: fs.readFileSync(\"samples/gpg.pub\"),\n});\nconst foo_rpm_virtual = new artifactory.VirtualRpmRepository(\"foo-rpm-virtual\", {\n    key: \"foo-rpm-virtual\",\n    primaryKeypairRef: primary_keypair.pairName,\n    secondaryKeypairRef: secondary_keypair.pairName,\n}, {\n    dependsOn: [\n        primary_keypair,\n        secondary_keypair,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nprimary_keypair = artifactory.Keypair(\"primary-keypair\",\n    pair_name=\"primary-keypair\",\n    pair_type=\"GPG\",\n    alias=\"foo-alias-1\",\n    private_key=(lambda path: open(path).read())(\"samples/gpg.priv\"),\n    public_key=(lambda path: open(path).read())(\"samples/gpg.pub\"))\nsecondary_keypair = artifactory.Keypair(\"secondary-keypair\",\n    pair_name=\"secondary-keypair\",\n    pair_type=\"GPG\",\n    alias=\"foo-alias-2\",\n    private_key=(lambda path: open(path).read())(\"samples/gpg.priv\"),\n    public_key=(lambda path: open(path).read())(\"samples/gpg.pub\"))\nfoo_rpm_virtual = artifactory.VirtualRpmRepository(\"foo-rpm-virtual\",\n    key=\"foo-rpm-virtual\",\n    primary_keypair_ref=primary_keypair.pair_name,\n    secondary_keypair_ref=secondary_keypair.pair_name,\n    opts=pulumi.ResourceOptions(depends_on=[\n            primary_keypair,\n            secondary_keypair,\n        ]))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var primary_keypair = new Artifactory.Keypair(\"primary-keypair\", new Artifactory.KeypairArgs\n        {\n            PairName = \"primary-keypair\",\n            PairType = \"GPG\",\n            Alias = \"foo-alias-1\",\n            PrivateKey = File.ReadAllText(\"samples/gpg.priv\"),\n            PublicKey = File.ReadAllText(\"samples/gpg.pub\"),\n        });\n        var secondary_keypair = new Artifactory.Keypair(\"secondary-keypair\", new Artifactory.KeypairArgs\n        {\n            PairName = \"secondary-keypair\",\n            PairType = \"GPG\",\n            Alias = \"foo-alias-2\",\n            PrivateKey = File.ReadAllText(\"samples/gpg.priv\"),\n            PublicKey = File.ReadAllText(\"samples/gpg.pub\"),\n        });\n        var foo_rpm_virtual = new Artifactory.VirtualRpmRepository(\"foo-rpm-virtual\", new Artifactory.VirtualRpmRepositoryArgs\n        {\n            Key = \"foo-rpm-virtual\",\n            PrimaryKeypairRef = primary_keypair.PairName,\n            SecondaryKeypairRef = secondary_keypair.PairName,\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                primary_keypair,\n                secondary_keypair,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewKeypair(ctx, \"primary-keypair\", \u0026artifactory.KeypairArgs{\n\t\t\tPairName:   pulumi.String(\"primary-keypair\"),\n\t\t\tPairType:   pulumi.String(\"GPG\"),\n\t\t\tAlias:      pulumi.String(\"foo-alias-1\"),\n\t\t\tPrivateKey: readFileOrPanic(\"samples/gpg.priv\"),\n\t\t\tPublicKey:  readFileOrPanic(\"samples/gpg.pub\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewKeypair(ctx, \"secondary-keypair\", \u0026artifactory.KeypairArgs{\n\t\t\tPairName:   pulumi.String(\"secondary-keypair\"),\n\t\t\tPairType:   pulumi.String(\"GPG\"),\n\t\t\tAlias:      pulumi.String(\"foo-alias-2\"),\n\t\t\tPrivateKey: readFileOrPanic(\"samples/gpg.priv\"),\n\t\t\tPublicKey:  readFileOrPanic(\"samples/gpg.pub\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = artifactory.NewVirtualRpmRepository(ctx, \"foo-rpm-virtual\", \u0026artifactory.VirtualRpmRepositoryArgs{\n\t\t\tKey:                 pulumi.String(\"foo-rpm-virtual\"),\n\t\t\tPrimaryKeypairRef:   primary_keypair.PairName,\n\t\t\tSecondaryKeypairRef: secondary_keypair.PairName,\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tprimary_keypair,\n\t\t\tsecondary_keypair,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualRpmRepository:VirtualRpmRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "The primary GPG key to be used to sign packages\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "The secondary GPG key to be used to sign packages\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "The primary GPG key to be used to sign packages\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "The secondary GPG key to be used to sign packages\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualRpmRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "primaryKeypairRef": {
                        "type": "string",
                        "description": "The primary GPG key to be used to sign packages\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    },
                    "secondaryKeypairRef": {
                        "type": "string",
                        "description": "The secondary GPG key to be used to sign packages\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualSbtRepository:VirtualSbtRepository": {
            "description": "## # Artifactory Virtual SBT Repository Resource\n\nProvides an Artifactory virtual repository resource with specific sbt features. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_sbt = new artifactory.VirtualSbtRepository(\"foo-sbt\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-sbt\",\n    notes: \"Internal description\",\n    pomRepositoryReferencesCleanupPolicy: \"discard_active_reference\",\n    repositories: [],\n});\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nfoo_sbt = artifactory.VirtualSbtRepository(\"foo-sbt\",\n    description=\"A test virtual repo\",\n    excludes_pattern=\"com/google/**\",\n    includes_pattern=\"com/jfrog/**,cloud/jfrog/**\",\n    key=\"foo-sbt\",\n    notes=\"Internal description\",\n    pom_repository_references_cleanup_policy=\"discard_active_reference\",\n    repositories=[])\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_sbt = new Artifactory.VirtualSbtRepository(\"foo-sbt\", new Artifactory.VirtualSbtRepositoryArgs\n        {\n            Description = \"A test virtual repo\",\n            ExcludesPattern = \"com/google/**\",\n            IncludesPattern = \"com/jfrog/**,cloud/jfrog/**\",\n            Key = \"foo-sbt\",\n            Notes = \"Internal description\",\n            PomRepositoryReferencesCleanupPolicy = \"discard_active_reference\",\n            Repositories = {},\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.NewVirtualSbtRepository(ctx, \"foo-sbt\", \u0026artifactory.VirtualSbtRepositoryArgs{\n\t\t\tDescription:                          pulumi.String(\"A test virtual repo\"),\n\t\t\tExcludesPattern:                      pulumi.String(\"com/google/**\"),\n\t\t\tIncludesPattern:                      pulumi.String(\"com/jfrog/**,cloud/jfrog/**\"),\n\t\t\tKey:                                  pulumi.String(\"foo-sbt\"),\n\t\t\tNotes:                                pulumi.String(\"Internal description\"),\n\t\t\tPomRepositoryReferencesCleanupPolicy: pulumi.String(\"discard_active_reference\"),\n\t\t\tRepositories:                         pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualSbtRepository:VirtualSbtRepository foo foo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "forceMavenAuthentication",
                "key",
                "packageType",
                "pomRepositoryReferencesCleanupPolicy"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualSbtRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "forceMavenAuthentication": {
                        "type": "boolean",
                        "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The Repository Key. A mandatory identifier for the repository and must be unique. It cannot begin with a number or\ncontain spaces or special characters. For local repositories, we recommend using a '-local' suffix (e.g.\n'libs-release-local').\n"
                    },
                    "keyPair": {
                        "type": "string",
                        "description": "The keypair used to sign artifacts.\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                    },
                    "pomRepositoryReferencesCleanupPolicy": {
                        "type": "string",
                        "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "artifactory:index/getFile:getFile": {
            "description": "## # Artifactory File Data Source\n\nProvides an Artifactory file datasource. This can be used to download a file from a given Artifactory repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// \nconst my_file = pulumi.output(artifactory.getFile({\n    outputPath: \"tmp/artifact.zip\",\n    path: \"/path/to/the/artifact.zip\",\n    repository: \"repo-key\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_file = artifactory.get_file(output_path=\"tmp/artifact.zip\",\n    path=\"/path/to/the/artifact.zip\",\n    repository=\"repo-key\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_file = Output.Create(Artifactory.GetFile.InvokeAsync(new Artifactory.GetFileArgs\n        {\n            OutputPath = \"tmp/artifact.zip\",\n            Path = \"/path/to/the/artifact.zip\",\n            Repository = \"repo-key\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.GetFile(ctx, \u0026GetFileArgs{\n\t\t\tOutputPath: \"tmp/artifact.zip\",\n\t\t\tPath:       \"/path/to/the/artifact.zip\",\n\t\t\tRepository: \"repo-key\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFile.\n",
                "properties": {
                    "forceOverwrite": {
                        "type": "boolean",
                        "description": "If set to true, an existing file in the output_path will be overwritten. Default: false\n"
                    },
                    "outputPath": {
                        "type": "string",
                        "description": "The local path the file should be downloaded to.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "The path to the file within the repository.\n"
                    },
                    "pathIsAliased": {
                        "type": "boolean",
                        "description": "If set to `true`, the provider will get the artifact directly from Artifactory without attempting to resolve it or verify it and will delegate this to artifactory\nif the file exists. More details in the [official documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-RetrieveLatestArtifact)\n"
                    },
                    "repository": {
                        "type": "string",
                        "description": "Name of the repository where the file is stored.\n"
                    }
                },
                "type": "object",
                "required": [
                    "outputPath",
                    "path",
                    "repository"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFile.\n",
                "properties": {
                    "created": {
                        "type": "string",
                        "description": "The time \u0026 date when the file was created.\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The user who created the file.\n"
                    },
                    "downloadUri": {
                        "type": "string",
                        "description": "The URI that can be used to download the file.\n"
                    },
                    "forceOverwrite": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The time \u0026 date when the file was last modified.\n"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "description": "The time \u0026 date when the file was last updated.\n"
                    },
                    "md5": {
                        "type": "string",
                        "description": "MD5 checksum of the file.\n"
                    },
                    "mimetype": {
                        "type": "string",
                        "description": "The mimetype of the file.\n"
                    },
                    "modifiedBy": {
                        "type": "string",
                        "description": "The user who last modified the file.\n"
                    },
                    "outputPath": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "pathIsAliased": {
                        "type": "boolean"
                    },
                    "repository": {
                        "type": "string"
                    },
                    "sha1": {
                        "type": "string",
                        "description": "SHA1 checksum of the file.\n"
                    },
                    "sha256": {
                        "type": "string",
                        "description": "SHA256 checksum of the file.\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The size of the file.\n"
                    }
                },
                "type": "object",
                "required": [
                    "created",
                    "createdBy",
                    "downloadUri",
                    "lastModified",
                    "lastUpdated",
                    "md5",
                    "mimetype",
                    "modifiedBy",
                    "outputPath",
                    "path",
                    "repository",
                    "sha1",
                    "sha256",
                    "size",
                    "id"
                ]
            }
        },
        "artifactory:index/getFileinfo:getFileinfo": {
            "description": "## # Artifactory File Info Data Source\n\nProvides an Artifactory fileinfo datasource. This can be used to read metadata of files stored in Artifactory repositories.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// \nconst my_file = pulumi.output(artifactory.getFileinfo({\n    path: \"/path/to/the/artifact.zip\",\n    repository: \"repo-key\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_artifactory as artifactory\n\nmy_file = artifactory.get_fileinfo(path=\"/path/to/the/artifact.zip\",\n    repository=\"repo-key\")\n```\n```csharp\nusing Pulumi;\nusing Artifactory = Pulumi.Artifactory;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_file = Output.Create(Artifactory.GetFileinfo.InvokeAsync(new Artifactory.GetFileinfoArgs\n        {\n            Path = \"/path/to/the/artifact.zip\",\n            Repository = \"repo-key\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := artifactory.GetFileinfo(ctx, \u0026GetFileinfoArgs{\n\t\t\tPath:       \"/path/to/the/artifact.zip\",\n\t\t\tRepository: \"repo-key\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFileinfo.\n",
                "properties": {
                    "path": {
                        "type": "string",
                        "description": "The path to the file within the repository.\n"
                    },
                    "repository": {
                        "type": "string",
                        "description": "Name of the repository where the file is stored.\n"
                    }
                },
                "type": "object",
                "required": [
                    "path",
                    "repository"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFileinfo.\n",
                "properties": {
                    "created": {
                        "type": "string",
                        "description": "The time \u0026 date when the file was created.\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The user who created the file.\n"
                    },
                    "downloadUri": {
                        "type": "string",
                        "description": "The URI that can be used to download the file.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The time \u0026 date when the file was last modified.\n"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "description": "The time \u0026 date when the file was last updated.\n"
                    },
                    "md5": {
                        "type": "string",
                        "description": "MD5 checksum of the file.\n"
                    },
                    "mimetype": {
                        "type": "string",
                        "description": "The mimetype of the file.\n"
                    },
                    "modifiedBy": {
                        "type": "string",
                        "description": "The user who last modified the file.\n"
                    },
                    "path": {
                        "type": "string"
                    },
                    "repository": {
                        "type": "string"
                    },
                    "sha1": {
                        "type": "string",
                        "description": "SHA1 checksum of the file.\n"
                    },
                    "sha256": {
                        "type": "string",
                        "description": "SHA256 checksum of the file.\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The size of the file.\n"
                    }
                },
                "type": "object",
                "required": [
                    "created",
                    "createdBy",
                    "downloadUri",
                    "lastModified",
                    "lastUpdated",
                    "md5",
                    "mimetype",
                    "modifiedBy",
                    "path",
                    "repository",
                    "sha1",
                    "sha256",
                    "size",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing artifactory cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/jfrog/terraform-provider-artifactory)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-artifactory` repo](https://github.com/pulumi/pulumi-artifactory/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`jfrog/terraform-provider-artifactory` repo](https://github.com/jfrog/terraform-provider-artifactory/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/jfrog/terraform-provider-artifactory)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-artifactory` repo](https://github.com/pulumi/pulumi-artifactory/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`jfrog/terraform-provider-artifactory` repo](https://github.com/jfrog/terraform-provider-artifactory/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}