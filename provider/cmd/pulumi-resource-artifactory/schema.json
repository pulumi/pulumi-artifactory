{
    "name": "artifactory",
    "description": "A Pulumi package for creating and managing artifactory cloud resources.",
    "keywords": [
        "pulumi",
        "artifactory"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`artifactory` Terraform Provider](https://github.com/jfrog/terraform-provider-artifactory).",
    "repository": "https://github.com/pulumi/pulumi-artifactory",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-artifactory/sdk/v2/go/artifactory"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing artifactory cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/jfrog/terraform-provider-artifactory)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-artifactory` repo](https://github.com/pulumi/pulumi-artifactory/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`jfrog/terraform-provider-artifactory` repo](https://github.com/jfrog/terraform-provider-artifactory/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/jfrog/terraform-provider-artifactory)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-artifactory` repo](https://github.com/pulumi/pulumi-artifactory/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`jfrog/terraform-provider-artifactory` repo](https://github.com/jfrog/terraform-provider-artifactory/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "accessToken": {
                "type": "string",
                "description": "This is a access token that can be given to you by your admin under `Identity and Access`. If not set, the 'api_key'\nattribute value will be used.\n"
            },
            "apiKey": {
                "type": "string",
                "description": "API token. Projects functionality will not work with any auth method other than access tokens\n"
            },
            "checkLicense": {
                "type": "boolean",
                "description": "Toggle for pre-flight checking of Artifactory Pro and Enterprise license. Default to `true`.\n",
                "default": false
            },
            "url": {
                "type": "string"
            }
        }
    },
    "types": {
        "artifactory:index/AccessTokenAdminToken:AccessTokenAdminToken": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "instanceId"
            ]
        },
        "artifactory:index/ArtifactPropertyWebhookCriteria:ArtifactPropertyWebhookCriteria": {
            "properties": {
                "anyLocal": {
                    "type": "boolean",
                    "description": "Trigger on any local repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "anyRemote": {
                    "type": "boolean",
                    "description": "Trigger on any remote repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, *\\*, ?).\\nFor example: \"org/apache/**\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, *\\*, ?).\\nFor example: \"org/apache/**\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Trigger on this list of repo keys.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "anyLocal",
                "anyRemote",
                "repoKeys"
            ]
        },
        "artifactory:index/ArtifactPropertyWebhookHandler:ArtifactPropertyWebhookHandler": {
            "properties": {
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory UI (Administration \u003e Proxies \u003e Configuration).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL. The value will be sent as `x-jfrog-event-auth` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "artifactory:index/ArtifactWebhookCriteria:ArtifactWebhookCriteria": {
            "properties": {
                "anyLocal": {
                    "type": "boolean",
                    "description": "Trigger on any local repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "anyRemote": {
                    "type": "boolean",
                    "description": "Trigger on any remote repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, *\\*, ?).\\nFor example: \"org/apache/**\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, *\\*, ?).\\nFor example: \"org/apache/**\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Trigger on this list of repo keys.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "anyLocal",
                "anyRemote",
                "repoKeys"
            ]
        },
        "artifactory:index/ArtifactWebhookHandler:ArtifactWebhookHandler": {
            "properties": {
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory UI (Administration \u003e Proxies \u003e Configuration).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL. The value will be sent as `x-jfrog-event-auth` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "artifactory:index/ArtifactoryReleaseBundleWebhookCriteria:ArtifactoryReleaseBundleWebhookCriteria": {
            "properties": {
                "anyReleaseBundle": {
                    "type": "boolean",
                    "description": "Trigger on any release bundle\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, *\\*, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, *\\*, ?).\\nFor example: \"org/apache/**\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registeredReleaseBundleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Trigger on this list of release bundle names\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "anyReleaseBundle",
                "registeredReleaseBundleNames"
            ]
        },
        "artifactory:index/ArtifactoryReleaseBundleWebhookHandler:ArtifactoryReleaseBundleWebhookHandler": {
            "properties": {
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory UI (Administration \u003e Proxies \u003e Configuration).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL. The value will be sent as `x-jfrog-event-auth` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "artifactory:index/BuildWebhookCriteria:BuildWebhookCriteria": {
            "properties": {
                "anyBuild": {
                    "type": "boolean",
                    "description": "Trigger on any build.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, *\\*, ?).\\nFor example: \"org/apache/**\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, *\\*, ?).\\nFor example: \"org/apache/**\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "selectedBuilds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Trigger on this list of build names.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "anyBuild",
                "selectedBuilds"
            ]
        },
        "artifactory:index/BuildWebhookHandler:BuildWebhookHandler": {
            "properties": {
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory UI (Administration \u003e Proxies \u003e Configuration).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL. The value will be sent as `x-jfrog-event-auth` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "artifactory:index/DistributionWebhookCriteria:DistributionWebhookCriteria": {
            "properties": {
                "anyReleaseBundle": {
                    "type": "boolean",
                    "description": "Trigger on any release bundle.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, *\\*, ?).\\nFor example: \"org/apache/**\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, *\\*, ?).\\nFor example: \"org/apache/**\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registeredReleaseBundleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Trigger on this list of release bundle names.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "anyReleaseBundle",
                "registeredReleaseBundleNames"
            ]
        },
        "artifactory:index/DistributionWebhookHandler:DistributionWebhookHandler": {
            "properties": {
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory UI (Administration \u003e Proxies \u003e Configuration).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL. The value will be sent as `x-jfrog-event-auth` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "artifactory:index/DockerWebhookCriteria:DockerWebhookCriteria": {
            "properties": {
                "anyLocal": {
                    "type": "boolean",
                    "description": "Trigger on any local repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "anyRemote": {
                    "type": "boolean",
                    "description": "Trigger on any remote repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, *\\*, ?).\\nFor example: \"org/apache/**\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, *\\*, ?).\\nFor example: \"org/apache/**\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Trigger on this list of repo keys.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "anyLocal",
                "anyRemote",
                "repoKeys"
            ]
        },
        "artifactory:index/DockerWebhookHandler:DockerWebhookHandler": {
            "properties": {
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory UI (Administration \u003e Proxies \u003e Configuration).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL. The value will be sent as `x-jfrog-event-auth` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "artifactory:index/FederatedAlpineRepositoryMember:FederatedAlpineRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedBowerRepositoryMember:FederatedBowerRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedCargoRepositoryMember:FederatedCargoRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedChefRepositoryMember:FederatedChefRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedCocoapodsRepositoryMember:FederatedCocoapodsRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedComposerRepositoryMember:FederatedComposerRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedConanRepositoryMember:FederatedConanRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedCondaRepositoryMember:FederatedCondaRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedCranRepositoryMember:FederatedCranRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedDebianRepositoryMember:FederatedDebianRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedDockerRepositoryMember:FederatedDockerRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedGemsRepositoryMember:FederatedGemsRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedGenericRepositoryMember:FederatedGenericRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedGitltfsRepositoryMember:FederatedGitltfsRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedGoRepositoryMember:FederatedGoRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedGradleRepositoryMember:FederatedGradleRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedHelmRepositoryMember:FederatedHelmRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedIvyRepositoryMember:FederatedIvyRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedMavenRepositoryMember:FederatedMavenRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedNpmRepositoryMember:FederatedNpmRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedNugetRepositoryMember:FederatedNugetRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedOpkgRepositoryMember:FederatedOpkgRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedPuppetRepositoryMember:FederatedPuppetRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedPypiRepositoryMember:FederatedPypiRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedRpmRepositoryMember:FederatedRpmRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedSbtRepositoryMember:FederatedSbtRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedTerraformModuleRepositoryMember:FederatedTerraformModuleRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedTerraformProviderRepositoryMember:FederatedTerraformProviderRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/FederatedVagrantRepositoryMember:FederatedVagrantRepositoryMember": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Represents the active state of the federated member. It is supported to change the enabled\nstatus of my own member. The config will be updated on the other federated members automatically.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Full URL to ending with the repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "url"
            ]
        },
        "artifactory:index/OauthSettingsOauthProvider:OauthSettingsOauthProvider": {
            "properties": {
                "apiUrl": {
                    "type": "string",
                    "description": "OAuth user info endpoint for the IdP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "description": "OAuth authorization endpoint for the IdP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "OAuth client ID configured on the IdP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "description": "OAuth client secret configured on the IdP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable the Artifactory OAuth provider.  Default value is `true`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Artifactory OAuth provider.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "OAuth token endpoint for the IdP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of OAuth provider. (e.g., `github`, `google`, `cloudfoundry`, or `openId`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "apiUrl",
                "authUrl",
                "clientId",
                "clientSecret",
                "name",
                "tokenUrl",
                "type"
            ]
        },
        "artifactory:index/PermissionTargetBuild:PermissionTargetBuild": {
            "properties": {
                "actions": {
                    "$ref": "#/types/artifactory:index/PermissionTargetBuildActions:PermissionTargetBuildActions",
                    "description": "-\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to exclude.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to include.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of repositories this permission target is applicable for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "repositories"
            ]
        },
        "artifactory:index/PermissionTargetBuildActions:PermissionTargetBuildActions": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetBuildActionsGroup:PermissionTargetBuildActionsGroup"
                    },
                    "description": "Groups this permission applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetBuildActionsUser:PermissionTargetBuildActionsUser"
                    },
                    "description": "Users this permission target applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/PermissionTargetBuildActionsGroup:PermissionTargetBuildActionsGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetBuildActionsUser:PermissionTargetBuildActionsUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetReleaseBundle:PermissionTargetReleaseBundle": {
            "properties": {
                "actions": {
                    "$ref": "#/types/artifactory:index/PermissionTargetReleaseBundleActions:PermissionTargetReleaseBundleActions",
                    "description": "-\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to exclude.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to include.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of repositories this permission target is applicable for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "repositories"
            ]
        },
        "artifactory:index/PermissionTargetReleaseBundleActions:PermissionTargetReleaseBundleActions": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetReleaseBundleActionsGroup:PermissionTargetReleaseBundleActionsGroup"
                    },
                    "description": "Groups this permission applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetReleaseBundleActionsUser:PermissionTargetReleaseBundleActionsUser"
                    },
                    "description": "Users this permission target applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/PermissionTargetReleaseBundleActionsGroup:PermissionTargetReleaseBundleActionsGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetReleaseBundleActionsUser:PermissionTargetReleaseBundleActionsUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetRepo:PermissionTargetRepo": {
            "properties": {
                "actions": {
                    "$ref": "#/types/artifactory:index/PermissionTargetRepoActions:PermissionTargetRepoActions",
                    "description": "-\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to exclude.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to include.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of repositories this permission target is applicable for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "repositories"
            ]
        },
        "artifactory:index/PermissionTargetRepoActions:PermissionTargetRepoActions": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetRepoActionsGroup:PermissionTargetRepoActionsGroup"
                    },
                    "description": "Groups this permission applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetRepoActionsUser:PermissionTargetRepoActionsUser"
                    },
                    "description": "Users this permission target applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/PermissionTargetRepoActionsGroup:PermissionTargetRepoActionsGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetRepoActionsUser:PermissionTargetRepoActionsUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetsBuild:PermissionTargetsBuild": {
            "properties": {
                "actions": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsBuildActions:PermissionTargetsBuildActions",
                    "description": "-\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to exclude.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to include.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of repositories this permission target is applicable for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "repositories"
            ]
        },
        "artifactory:index/PermissionTargetsBuildActions:PermissionTargetsBuildActions": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsBuildActionsGroup:PermissionTargetsBuildActionsGroup"
                    },
                    "description": "Groups this permission applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsBuildActionsUser:PermissionTargetsBuildActionsUser"
                    },
                    "description": "Users this permission target applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/PermissionTargetsBuildActionsGroup:PermissionTargetsBuildActionsGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetsBuildActionsUser:PermissionTargetsBuildActionsUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetsReleaseBundle:PermissionTargetsReleaseBundle": {
            "properties": {
                "actions": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsReleaseBundleActions:PermissionTargetsReleaseBundleActions",
                    "description": "-\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to exclude.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to include.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of repositories this permission target is applicable for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "repositories"
            ]
        },
        "artifactory:index/PermissionTargetsReleaseBundleActions:PermissionTargetsReleaseBundleActions": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsReleaseBundleActionsGroup:PermissionTargetsReleaseBundleActionsGroup"
                    },
                    "description": "Groups this permission applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsReleaseBundleActionsUser:PermissionTargetsReleaseBundleActionsUser"
                    },
                    "description": "Users this permission target applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/PermissionTargetsReleaseBundleActionsGroup:PermissionTargetsReleaseBundleActionsGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetsReleaseBundleActionsUser:PermissionTargetsReleaseBundleActionsUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetsRepo:PermissionTargetsRepo": {
            "properties": {
                "actions": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsRepoActions:PermissionTargetsRepoActions",
                    "description": "-\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to exclude.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pattern of artifacts to include.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of repositories this permission target is applicable for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "repositories"
            ]
        },
        "artifactory:index/PermissionTargetsRepoActions:PermissionTargetsRepoActions": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsRepoActionsGroup:PermissionTargetsRepoActionsGroup"
                    },
                    "description": "Groups this permission applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsRepoActionsUser:PermissionTargetsRepoActionsUser"
                    },
                    "description": "Users this permission target applies for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/PermissionTargetsRepoActionsGroup:PermissionTargetsRepoActionsGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PermissionTargetsRepoActionsUser:PermissionTargetsRepoActionsUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "permissions"
            ]
        },
        "artifactory:index/PushReplicationReplication:PushReplicationReplication": {
            "properties": {
                "checkBinaryExistenceInFilestore": {
                    "type": "boolean",
                    "description": "When true, enables distributed checksum storage. For more information, see\n[Optimizing Repository Replication with Checksum-Based Storage](https://www.jfrog.com/confluence/display/JFROG/Repository+Replication#RepositoryReplication-OptimizingRepositoryReplicationUsingStorageLevelSynchronizationOptions).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "When set, this replication will be enabled when saved.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "Required for local repository, but not needed for remote repository.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pathPrefix": {
                    "type": "string",
                    "description": "Only artifacts that located in path that matches the subpath within the remote repository will be replicated.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings. The proxy configuration will be used when communicating with the remote instance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "The network timeout in milliseconds to use for remote operations.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncDeletes": {
                    "type": "boolean",
                    "description": "When set, items that were deleted locally should also be deleted remotely (also applies to properties metadata). \nNote that enabling this option, will delete artifacts on the target that do not exist in the source repository.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncProperties": {
                    "type": "boolean",
                    "description": "When set, the task also synchronizes the properties of replicated artifacts.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncStatistics": {
                    "type": "boolean",
                    "description": "When set, artifact download statistics will also be replicated. Set to avoid inadvertent cleanup at the target instance when setting up replication for disaster recovery.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the target local repository on a remote Artifactory server. Required for local repository, but not needed for remote repository.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "Required for local repository, but not needed for remote repository.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "password",
                "url",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "password",
                        "socketTimeoutMillis",
                        "syncDeletes",
                        "syncProperties",
                        "syncStatistics",
                        "url",
                        "username"
                    ]
                }
            }
        },
        "artifactory:index/ReleaseBundleWebhookCriteria:ReleaseBundleWebhookCriteria": {
            "properties": {
                "anyReleaseBundle": {
                    "type": "boolean",
                    "description": "Trigger on any release bundle.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, *\\*, ?).\\nFor example: \"org/apache/**\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Simple comma separated wildcard patterns for repository artifact paths (with no leading slash).\\n Ant-style path expressions are supported (*, *\\*, ?).\\nFor example: \"org/apache/**\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registeredReleaseBundleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Trigger on this list of release bundle names.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "anyReleaseBundle",
                "registeredReleaseBundleNames"
            ]
        },
        "artifactory:index/ReleaseBundleWebhookHandler:ReleaseBundleWebhookHandler": {
            "properties": {
                "customHttpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom HTTP headers you wish to use to invoke the Webhook, comprise of key/value pair.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory UI (Administration \u003e Proxies \u003e Configuration).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secret": {
                    "type": "string",
                    "description": "Secret authentication token that will be sent to the configured URL. The value will be sent as `x-jfrog-event-auth` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Specifies the URL that the Webhook invokes. This will be the URL that Artifactory will send an HTTP POST request to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "artifactory:index/RemoteAlpineRepositoryContentSynchronisation:RemoteAlpineRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteBowerRepositoryContentSynchronisation:RemoteBowerRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteCargoRepositoryContentSynchronisation:RemoteCargoRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteChefRepositoryContentSynchronisation:RemoteChefRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteCocoapodsRepositoryContentSynchronisation:RemoteCocoapodsRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteComposerRepositoryContentSynchronisation:RemoteComposerRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteConanRepositoryContentSynchronisation:RemoteConanRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteCondaRepositoryContentSynchronisation:RemoteCondaRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteCranRepositoryContentSynchronisation:RemoteCranRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteDebianRepositoryContentSynchronisation:RemoteDebianRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteDockerRepositoryContentSynchronisation:RemoteDockerRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteGemsRepositoryContentSynchronisation:RemoteGemsRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteGenericRepositoryContentSynchronisation:RemoteGenericRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteGitlfsRepositoryContentSynchronisation:RemoteGitlfsRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteGoRepositoryContentSynchronisation:RemoteGoRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteGradleRepositoryContentSynchronisation:RemoteGradleRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteHelmRepositoryContentSynchronisation:RemoteHelmRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteIvyRepositoryContentSynchronisation:RemoteIvyRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteMavenRepositoryContentSynchronisation:RemoteMavenRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteNpmRepositoryContentSynchronisation:RemoteNpmRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteNugetRepositoryContentSynchronisation:RemoteNugetRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteOpkgRepositoryContentSynchronisation:RemoteOpkgRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteP2RepositoryContentSynchronisation:RemoteP2RepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemotePubRepositoryContentSynchronisation:RemotePubRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemotePuppetRepositoryContentSynchronisation:RemotePuppetRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemotePypiRepositoryContentSynchronisation:RemotePypiRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteRpmRepositoryContentSynchronisation:RemoteRpmRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteSbtRepositoryContentSynchronisation:RemoteSbtRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteTerraformRepositoryContentSynchronisation:RemoteTerraformRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/RemoteVcsRepositoryContentSynchronisation:RemoteVcsRepositoryContentSynchronisation": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertiesEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceOriginAbsenceDetection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statisticsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "artifactory:index/ReplicationConfigReplication:ReplicationConfigReplication": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "Requires password encryption to be turned off `POST /api/system/decrypt`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pathPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncDeletes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncProperties": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncStatistics": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "password",
                        "socketTimeoutMillis",
                        "syncDeletes",
                        "syncProperties",
                        "syncStatistics"
                    ]
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the artifactory package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "accessToken": {
                "type": "string",
                "description": "This is a access token that can be given to you by your admin under `Identity and Access`. If not set, the 'api_key'\nattribute value will be used.\n"
            },
            "apiKey": {
                "type": "string",
                "description": "API token. Projects functionality will not work with any auth method other than access tokens\n"
            },
            "checkLicense": {
                "type": "boolean",
                "description": "Toggle for pre-flight checking of Artifactory Pro and Enterprise license. Default to `true`.\n"
            },
            "url": {
                "type": "string"
            }
        },
        "inputProperties": {
            "accessToken": {
                "type": "string",
                "description": "This is a access token that can be given to you by your admin under `Identity and Access`. If not set, the 'api_key'\nattribute value will be used.\n"
            },
            "apiKey": {
                "type": "string",
                "description": "API token. Projects functionality will not work with any auth method other than access tokens\n"
            },
            "checkLicense": {
                "type": "boolean",
                "description": "Toggle for pre-flight checking of Artifactory Pro and Enterprise license. Default to `true`.\n",
                "default": false
            },
            "url": {
                "type": "string"
            }
        }
    },
    "resources": {
        "artifactory:index/accessToken:AccessToken": {
            "description": "\n\n\n## Import\n\nArtifactory **does not** retain access tokens and cannot be imported into state. ",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Returns the access token to authenciate to Artifactory\n",
                    "language": {
                        "csharp": {
                            "name": "Details"
                        }
                    }
                },
                "adminToken": {
                    "$ref": "#/types/artifactory:index/AccessTokenAdminToken:AccessTokenAdminToken",
                    "description": "(Optional) Specify the `instance_id` in this block to grant this token admin privileges. This can only be created when the authenticated user is an admin. `admin_token` cannot be specified with `groups`.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "(Optional) A space-separate list of the other Artifactory instances or services that should accept this token identified by their Artifactory Service IDs. You may set `\"jfrt@*\"` so the token to be accepted by all Artifactory instances.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "(Optional) The end date which the token is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`).\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "(Optional) A relative duration for which the token is valid until, for example `240h` (10 days) or `2400h30m`. Valid time units are \"s\", \"m\", \"h\".\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Optional) List of groups. The token is granted access based on the permissions of the groups. Specify `[\"*\"]` for all groups that the user belongs to. `groups` cannot be specified with `admin_token`.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Returns the refresh token when `refreshable` is true, or an empty string when `refreshable` is false.\n"
                },
                "refreshable": {
                    "type": "boolean",
                    "description": "(Optional) Is this token refreshable? Defaults to `false`\n"
                },
                "username": {
                    "type": "string",
                    "description": "(Required) The username or subject for the token. A non-admin can only specify their own username. Admins can specify any existing username, or a new name for a temporary token. Temporary tokens require `groups` to be set.\n"
                }
            },
            "required": [
                "accessToken",
                "endDate",
                "refreshToken",
                "username"
            ],
            "inputProperties": {
                "adminToken": {
                    "$ref": "#/types/artifactory:index/AccessTokenAdminToken:AccessTokenAdminToken",
                    "description": "(Optional) Specify the `instance_id` in this block to grant this token admin privileges. This can only be created when the authenticated user is an admin. `admin_token` cannot be specified with `groups`.\n",
                    "willReplaceOnChanges": true
                },
                "audience": {
                    "type": "string",
                    "description": "(Optional) A space-separate list of the other Artifactory instances or services that should accept this token identified by their Artifactory Service IDs. You may set `\"jfrt@*\"` so the token to be accepted by all Artifactory instances.\n",
                    "willReplaceOnChanges": true
                },
                "endDate": {
                    "type": "string",
                    "description": "(Optional) The end date which the token is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`).\n",
                    "willReplaceOnChanges": true
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "(Optional) A relative duration for which the token is valid until, for example `240h` (10 days) or `2400h30m`. Valid time units are \"s\", \"m\", \"h\".\n",
                    "willReplaceOnChanges": true
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Optional) List of groups. The token is granted access based on the permissions of the groups. Specify `[\"*\"]` for all groups that the user belongs to. `groups` cannot be specified with `admin_token`.\n",
                    "willReplaceOnChanges": true
                },
                "refreshable": {
                    "type": "boolean",
                    "description": "(Optional) Is this token refreshable? Defaults to `false`\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "(Required) The username or subject for the token. A non-admin can only specify their own username. Admins can specify any existing username, or a new name for a temporary token. Temporary tokens require `groups` to be set.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessToken resources.\n",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "Returns the access token to authenciate to Artifactory\n",
                        "language": {
                            "csharp": {
                                "name": "Details"
                            }
                        }
                    },
                    "adminToken": {
                        "$ref": "#/types/artifactory:index/AccessTokenAdminToken:AccessTokenAdminToken",
                        "description": "(Optional) Specify the `instance_id` in this block to grant this token admin privileges. This can only be created when the authenticated user is an admin. `admin_token` cannot be specified with `groups`.\n",
                        "willReplaceOnChanges": true
                    },
                    "audience": {
                        "type": "string",
                        "description": "(Optional) A space-separate list of the other Artifactory instances or services that should accept this token identified by their Artifactory Service IDs. You may set `\"jfrt@*\"` so the token to be accepted by all Artifactory instances.\n",
                        "willReplaceOnChanges": true
                    },
                    "endDate": {
                        "type": "string",
                        "description": "(Optional) The end date which the token is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`).\n",
                        "willReplaceOnChanges": true
                    },
                    "endDateRelative": {
                        "type": "string",
                        "description": "(Optional) A relative duration for which the token is valid until, for example `240h` (10 days) or `2400h30m`. Valid time units are \"s\", \"m\", \"h\".\n",
                        "willReplaceOnChanges": true
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Optional) List of groups. The token is granted access based on the permissions of the groups. Specify `[\"*\"]` for all groups that the user belongs to. `groups` cannot be specified with `admin_token`.\n",
                        "willReplaceOnChanges": true
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "Returns the refresh token when `refreshable` is true, or an empty string when `refreshable` is false.\n"
                    },
                    "refreshable": {
                        "type": "boolean",
                        "description": "(Optional) Is this token refreshable? Defaults to `false`\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "(Required) The username or subject for the token. A non-admin can only specify their own username. Admins can specify any existing username, or a new name for a temporary token. Temporary tokens require `groups` to be set.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/alpineRepository:AlpineRepository": {
            "description": "Creates a local Alpine repository.\n\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/alpineRepository:AlpineRepository terraform-local-test-alpine-repo-basic terraform-local-test-alpine-repo-basic\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "The RSA key to be used to sign alpine indices.\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "The RSA key to be used to sign alpine indices.\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlpineRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "indexCompressionFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "primaryKeypairRef": {
                        "type": "string",
                        "description": "The RSA key to be used to sign alpine indices.\n"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/anonymousUser:AnonymousUser": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Define a new Artifactory 'anonymous' user for import\nconst anonymous = new artifactory.AnonymousUser(\"anonymous\", {});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAnonymous user can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/anonymousUser:AnonymousUser anonymous-user anonymous\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Username for anonymous user. This should not be set in the HCL, or change after importing into Terraform state.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Username for anonymous user. This should not be set in the HCL, or change after importing into Terraform state.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AnonymousUser resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Username for anonymous user. This should not be set in the HCL, or change after importing into Terraform state.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/apiKey:ApiKey": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a new Artifactory API key for the configured user\nconst ci = new artifactory.ApiKey(\"ci\", {});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA user's API key can be imported using any identifier, e.g.\n\n```sh\n $ pulumi import artifactory:index/apiKey:ApiKey test import\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key.\n",
                    "language": {
                        "csharp": {
                            "name": "Key"
                        }
                    }
                }
            },
            "required": [
                "apiKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApiKey resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "The API key.\n",
                        "language": {
                            "csharp": {
                                "name": "Key"
                            }
                        }
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/artifactPropertyWebhook:ArtifactPropertyWebhook": {
            "description": "Provides an Artifactory webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.\n",
            "properties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ArtifactPropertyWebhookCriteria:ArtifactPropertyWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'.\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"added\", \"deleted\".\n"
                },
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/ArtifactPropertyWebhookHandler:ArtifactPropertyWebhookHandler"
                    },
                    "description": "At least one is required.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                }
            },
            "required": [
                "criteria",
                "eventTypes",
                "handlers",
                "key"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ArtifactPropertyWebhookCriteria:ArtifactPropertyWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'.\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"added\", \"deleted\".\n"
                },
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/ArtifactPropertyWebhookHandler:ArtifactPropertyWebhookHandler"
                    },
                    "description": "At least one is required.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                }
            },
            "requiredInputs": [
                "criteria",
                "eventTypes",
                "handlers",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ArtifactPropertyWebhook resources.\n",
                "properties": {
                    "criteria": {
                        "$ref": "#/types/artifactory:index/ArtifactPropertyWebhookCriteria:ArtifactPropertyWebhookCriteria",
                        "description": "Specifies where the webhook will be applied on which repositories.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Webhook description. Max length 1000 characters.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of webhook. Default to 'true'.\n"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"added\", \"deleted\".\n"
                    },
                    "handlers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/ArtifactPropertyWebhookHandler:ArtifactPropertyWebhookHandler"
                        },
                        "description": "At least one is required.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/artifactWebhook:ArtifactWebhook": {
            "description": "Provides an Artifactory webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.\n",
            "properties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ArtifactWebhookCriteria:ArtifactWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'.\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"deployed\", \"deleted\", \"moved\", \"copied\", \"cached\".\n"
                },
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/ArtifactWebhookHandler:ArtifactWebhookHandler"
                    },
                    "description": "At least one is required.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                }
            },
            "required": [
                "criteria",
                "eventTypes",
                "handlers",
                "key"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ArtifactWebhookCriteria:ArtifactWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'.\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"deployed\", \"deleted\", \"moved\", \"copied\", \"cached\".\n"
                },
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/ArtifactWebhookHandler:ArtifactWebhookHandler"
                    },
                    "description": "At least one is required.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                }
            },
            "requiredInputs": [
                "criteria",
                "eventTypes",
                "handlers",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ArtifactWebhook resources.\n",
                "properties": {
                    "criteria": {
                        "$ref": "#/types/artifactory:index/ArtifactWebhookCriteria:ArtifactWebhookCriteria",
                        "description": "Specifies where the webhook will be applied on which repositories.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Webhook description. Max length 1000 characters.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of webhook. Default to 'true'.\n"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"deployed\", \"deleted\", \"moved\", \"copied\", \"cached\".\n"
                    },
                    "handlers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/ArtifactWebhookHandler:ArtifactWebhookHandler"
                        },
                        "description": "At least one is required.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/artifactoryReleaseBundleWebhook:ArtifactoryReleaseBundleWebhook": {
            "description": "Provides an Artifactory webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst artifactory_release_bundle_webhook = new artifactory.ArtifactoryReleaseBundleWebhook(\"artifactory-release-bundle-webhook\", {\n    criteria: {\n        anyReleaseBundle: false,\n        excludePatterns: [\"bar/**\"],\n        includePatterns: [\"foo/**\"],\n        registeredReleaseBundleNames: [\"bundle-name\"],\n    },\n    eventTypes: [\n        \"received\",\n        \"delete_started\",\n        \"delete_completed\",\n        \"delete_failed\",\n    ],\n    handlers: [{\n        customHttpHeaders: {\n            \"header-1\": \"value-1\",\n            \"header-2\": \"value-2\",\n        },\n        proxy: \"proxy-key\",\n        secret: \"some-secret\",\n        url: \"http://tempurl.org/webhook\",\n    }],\n    key: \"artifactory-release-bundle-webhook\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ArtifactoryReleaseBundleWebhookCriteria:ArtifactoryReleaseBundleWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"received\", \"delete_started\", \"delete_completed\", \"delete_failed\"\n"
                },
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/ArtifactoryReleaseBundleWebhookHandler:ArtifactoryReleaseBundleWebhookHandler"
                    },
                    "description": "At least one is required.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                }
            },
            "required": [
                "criteria",
                "eventTypes",
                "handlers",
                "key"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ArtifactoryReleaseBundleWebhookCriteria:ArtifactoryReleaseBundleWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"received\", \"delete_started\", \"delete_completed\", \"delete_failed\"\n"
                },
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/ArtifactoryReleaseBundleWebhookHandler:ArtifactoryReleaseBundleWebhookHandler"
                    },
                    "description": "At least one is required.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                }
            },
            "requiredInputs": [
                "criteria",
                "eventTypes",
                "handlers",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ArtifactoryReleaseBundleWebhook resources.\n",
                "properties": {
                    "criteria": {
                        "$ref": "#/types/artifactory:index/ArtifactoryReleaseBundleWebhookCriteria:ArtifactoryReleaseBundleWebhookCriteria",
                        "description": "Specifies where the webhook will be applied on which repositories.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Webhook description. Max length 1000 characters.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of webhook. Default to 'true'\n"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"received\", \"delete_started\", \"delete_completed\", \"delete_failed\"\n"
                    },
                    "handlers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/ArtifactoryReleaseBundleWebhookHandler:ArtifactoryReleaseBundleWebhookHandler"
                        },
                        "description": "At least one is required.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/backup:Backup": {
            "description": "This resource can be used to manage the automatic and periodic backups of the entire Artifactory instance.\n\nWhen an `artifactory.Backup` resource is configured and enabled to true, backup of the entire Artifactory system will be done automatically and periodically. \nThe backup process creates a time-stamped directory in the target backup directory.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Configure Artifactory Backup system config\nconst backupConfigName = new artifactory.Backup(\"backup_config_name\", {\n    createArchive: false,\n    cronExp: \"0 0 12 * * ?\",\n    enabled: true,\n    excludeNewRepositories: true,\n    excludedRepositories: [],\n    key: \"backup_config_name\",\n    retentionPeriodHours: 1000,\n    sendMailOnError: true,\n});\n```\nNote: `Key` argument has to match to the resource name.   \nReference Link: [JFrog Artifactory Backup](https://www.jfrog.com/confluence/display/JFROG/Backups)\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nBackup config can be imported using the key, e.g.\n\n```sh\n $ pulumi import artifactory:index/backup:Backup backup_name backup_name\n```\n\n ",
            "properties": {
                "createArchive": {
                    "type": "boolean",
                    "description": "If set, backups will be created within a Zip archive (Slow and CPU intensive). Default value is `false`.\n"
                },
                "cronExp": {
                    "type": "string",
                    "description": "A valid CRON expression that you can use to control backup frequency. Eg: \"0 0 12 * * ? \".\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Flag to enable or disable the backup config. Default value is `true`.\n"
                },
                "excludeNewRepositories": {
                    "type": "boolean",
                    "description": "When set, new repositories will not be automatically added to the backup. Default value is `false`.\n"
                },
                "excludedRepositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of excluded repositories from the backup. Default is empty list.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The unique ID of the artifactory backup config.\n"
                },
                "retentionPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to keep a backup before Artifactory will clean it up to free up disk space. Applicable only to non-incremental backups. Default value is 168 hours ie: 7 days.\n"
                },
                "sendMailOnError": {
                    "type": "boolean",
                    "description": "If set, all Artifactory administrators will be notified by email if any problem is encountered during backup. Default value is `true`.\n"
                }
            },
            "required": [
                "cronExp",
                "key"
            ],
            "inputProperties": {
                "createArchive": {
                    "type": "boolean",
                    "description": "If set, backups will be created within a Zip archive (Slow and CPU intensive). Default value is `false`.\n"
                },
                "cronExp": {
                    "type": "string",
                    "description": "A valid CRON expression that you can use to control backup frequency. Eg: \"0 0 12 * * ? \".\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Flag to enable or disable the backup config. Default value is `true`.\n"
                },
                "excludeNewRepositories": {
                    "type": "boolean",
                    "description": "When set, new repositories will not be automatically added to the backup. Default value is `false`.\n"
                },
                "excludedRepositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of excluded repositories from the backup. Default is empty list.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The unique ID of the artifactory backup config.\n",
                    "willReplaceOnChanges": true
                },
                "retentionPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to keep a backup before Artifactory will clean it up to free up disk space. Applicable only to non-incremental backups. Default value is 168 hours ie: 7 days.\n"
                },
                "sendMailOnError": {
                    "type": "boolean",
                    "description": "If set, all Artifactory administrators will be notified by email if any problem is encountered during backup. Default value is `true`.\n"
                }
            },
            "requiredInputs": [
                "cronExp",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Backup resources.\n",
                "properties": {
                    "createArchive": {
                        "type": "boolean",
                        "description": "If set, backups will be created within a Zip archive (Slow and CPU intensive). Default value is `false`.\n"
                    },
                    "cronExp": {
                        "type": "string",
                        "description": "A valid CRON expression that you can use to control backup frequency. Eg: \"0 0 12 * * ? \".\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Flag to enable or disable the backup config. Default value is `true`.\n"
                    },
                    "excludeNewRepositories": {
                        "type": "boolean",
                        "description": "When set, new repositories will not be automatically added to the backup. Default value is `false`.\n"
                    },
                    "excludedRepositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of excluded repositories from the backup. Default is empty list.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The unique ID of the artifactory backup config.\n",
                        "willReplaceOnChanges": true
                    },
                    "retentionPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to keep a backup before Artifactory will clean it up to free up disk space. Applicable only to non-incremental backups. Default value is 168 hours ie: 7 days.\n"
                    },
                    "sendMailOnError": {
                        "type": "boolean",
                        "description": "If set, all Artifactory administrators will be notified by email if any problem is encountered during backup. Default value is `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/buildWebhook:BuildWebhook": {
            "description": "Provides an Artifactory webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst build_webhook = new artifactory.BuildWebhook(\"build-webhook\", {\n    criteria: {\n        anyBuild: true,\n        excludePatterns: [\"bar/**\"],\n        includePatterns: [\"foo/**\"],\n        selectedBuilds: [\"build-id\"],\n    },\n    eventTypes: [\n        \"uploaded\",\n        \"deleted\",\n        \"promoted\",\n    ],\n    handlers: [{\n        customHttpHeaders: {\n            \"header-1\": \"value-1\",\n            \"header-2\": \"value-2\",\n        },\n        proxy: \"proxy-key\",\n        secret: \"some-secret\",\n        url: \"http://tempurl.org/webhook\",\n    }],\n    key: \"build-webhook\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/BuildWebhookCriteria:BuildWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'.\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"uploaded\", \"deleted\", \"promoted\".\n"
                },
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/BuildWebhookHandler:BuildWebhookHandler"
                    },
                    "description": "At least one is required.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                }
            },
            "required": [
                "criteria",
                "eventTypes",
                "handlers",
                "key"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/BuildWebhookCriteria:BuildWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'.\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"uploaded\", \"deleted\", \"promoted\".\n"
                },
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/BuildWebhookHandler:BuildWebhookHandler"
                    },
                    "description": "At least one is required.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                }
            },
            "requiredInputs": [
                "criteria",
                "eventTypes",
                "handlers",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BuildWebhook resources.\n",
                "properties": {
                    "criteria": {
                        "$ref": "#/types/artifactory:index/BuildWebhookCriteria:BuildWebhookCriteria",
                        "description": "Specifies where the webhook will be applied on which repositories.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Webhook description. Max length 1000 characters.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of webhook. Default to 'true'.\n"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"uploaded\", \"deleted\", \"promoted\".\n"
                    },
                    "handlers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/BuildWebhookHandler:BuildWebhookHandler"
                        },
                        "description": "At least one is required.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/certificate:Certificate": {
            "description": "Provides an Artifactory certificate resource. This can be used to create and manage Artifactory certificates which can be used as client authentication against remote repositories.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\nimport * as fs from \"fs\";\n\n// Create a new Artifactory certificate called my-cert\nconst my_cert = new artifactory.Certificate(\"my-cert\", {\n    alias: \"my-cert\",\n    content: fs.readFileSync(\"/path/to/bundle.pem\", \"utf-8\"),\n});\n// This can then be used by a remote repository\nconst my_remote = new artifactory.RemoteMavenRepository(\"my-remote\", {\n    // more code\n    clientTlsCertificate: my_cert.alias,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCertificates can be imported using their alias, e.g.\n\n```sh\n $ pulumi import artifactory:index/certificate:Certificate my-cert my-cert\n```\n\n ",
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Name of certificate.\n"
                },
                "content": {
                    "type": "string",
                    "description": "PEM-encoded client certificate and private key.\n"
                },
                "file": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string",
                    "description": "SHA256 fingerprint of the certificate.\n"
                },
                "issuedBy": {
                    "type": "string",
                    "description": "Name of the certificate authority that issued the certificate.\n"
                },
                "issuedOn": {
                    "type": "string",
                    "description": "The time \u0026 date when the certificate is valid from.\n"
                },
                "issuedTo": {
                    "type": "string",
                    "description": "Name of whom the certificate has been issued to.\n"
                },
                "validUntil": {
                    "type": "string",
                    "description": "The time \u0026 date when the certificate expires.\n"
                }
            },
            "required": [
                "alias",
                "fingerprint",
                "issuedBy",
                "issuedOn",
                "issuedTo",
                "validUntil"
            ],
            "inputProperties": {
                "alias": {
                    "type": "string",
                    "description": "Name of certificate.\n",
                    "willReplaceOnChanges": true
                },
                "content": {
                    "type": "string",
                    "description": "PEM-encoded client certificate and private key.\n"
                },
                "file": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "alias"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Certificate resources.\n",
                "properties": {
                    "alias": {
                        "type": "string",
                        "description": "Name of certificate.\n",
                        "willReplaceOnChanges": true
                    },
                    "content": {
                        "type": "string",
                        "description": "PEM-encoded client certificate and private key.\n"
                    },
                    "file": {
                        "type": "string"
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "SHA256 fingerprint of the certificate.\n"
                    },
                    "issuedBy": {
                        "type": "string",
                        "description": "Name of the certificate authority that issued the certificate.\n"
                    },
                    "issuedOn": {
                        "type": "string",
                        "description": "The time \u0026 date when the certificate is valid from.\n"
                    },
                    "issuedTo": {
                        "type": "string",
                        "description": "Name of whom the certificate has been issued to.\n"
                    },
                    "validUntil": {
                        "type": "string",
                        "description": "The time \u0026 date when the certificate expires.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/debianRepository:DebianRepository": {
            "description": "Creates a local Debian repository and allows for the creation of a GPG key.\n\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/debianRepository:DebianRepository my-debian-repo my-debian-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The options are Bzip2 (.bz2 extension) (default), LZMA (.lzma extension)\nand XZ (.xz extension).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "The primary RSA key to be used to sign packages.\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "The secondary RSA key to be used to sign packages.\n"
                },
                "trivialLayout": {
                    "type": "boolean",
                    "description": "When set, the repository will use the deprecated trivial layout.\n",
                    "deprecationMessage": "You shouldn't be using this"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The options are Bzip2 (.bz2 extension) (default), LZMA (.lzma extension)\nand XZ (.xz extension).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "The primary RSA key to be used to sign packages.\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "The secondary RSA key to be used to sign packages.\n"
                },
                "trivialLayout": {
                    "type": "boolean",
                    "description": "When set, the repository will use the deprecated trivial layout.\n",
                    "deprecationMessage": "You shouldn't be using this"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DebianRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "indexCompressionFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The options are Bzip2 (.bz2 extension) (default), LZMA (.lzma extension)\nand XZ (.xz extension).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "primaryKeypairRef": {
                        "type": "string",
                        "description": "The primary RSA key to be used to sign packages.\n"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "secondaryKeypairRef": {
                        "type": "string",
                        "description": "The secondary RSA key to be used to sign packages.\n"
                    },
                    "trivialLayout": {
                        "type": "boolean",
                        "description": "When set, the repository will use the deprecated trivial layout.\n",
                        "deprecationMessage": "You shouldn't be using this"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/distributionWebhook:DistributionWebhook": {
            "description": "Provides an Artifactory webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst distribution_webhook = new artifactory.DistributionWebhook(\"distribution-webhook\", {\n    criteria: {\n        anyReleaseBundle: false,\n        excludePatterns: [\"bar/**\"],\n        includePatterns: [\"foo/**\"],\n        registeredReleaseBundleNames: [\"bundle-name\"],\n    },\n    eventTypes: [\n        \"distribute_started\",\n        \"distribute_completed\",\n        \"distribute_aborted\",\n        \"distribute_failed\",\n        \"delete_started\",\n        \"delete_completed\",\n        \"delete_failed\",\n    ],\n    handlers: [{\n        customHttpHeaders: {\n            \"header-1\": \"value-1\",\n            \"header-2\": \"value-2\",\n        },\n        proxy: \"proxy-key\",\n        secret: \"some-secret\",\n        url: \"http://tempurl.org/webhook\",\n    }],\n    key: \"distribution-webhook\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/DistributionWebhookCriteria:DistributionWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'.\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"distribute_started\", \"distribute_completed\", \"distribute_aborted\", \"distribute_failed\", \"delete_started\", \"delete_completed\", \"delete_failed\"\n"
                },
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/DistributionWebhookHandler:DistributionWebhookHandler"
                    },
                    "description": "At least one is required.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                }
            },
            "required": [
                "criteria",
                "eventTypes",
                "handlers",
                "key"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/DistributionWebhookCriteria:DistributionWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'.\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"distribute_started\", \"distribute_completed\", \"distribute_aborted\", \"distribute_failed\", \"delete_started\", \"delete_completed\", \"delete_failed\"\n"
                },
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/DistributionWebhookHandler:DistributionWebhookHandler"
                    },
                    "description": "At least one is required.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                }
            },
            "requiredInputs": [
                "criteria",
                "eventTypes",
                "handlers",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DistributionWebhook resources.\n",
                "properties": {
                    "criteria": {
                        "$ref": "#/types/artifactory:index/DistributionWebhookCriteria:DistributionWebhookCriteria",
                        "description": "Specifies where the webhook will be applied on which repositories.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Webhook description. Max length 1000 characters.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of webhook. Default to 'true'.\n"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"distribute_started\", \"distribute_completed\", \"distribute_aborted\", \"distribute_failed\", \"delete_started\", \"delete_completed\", \"delete_failed\"\n"
                    },
                    "handlers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/DistributionWebhookHandler:DistributionWebhookHandler"
                        },
                        "description": "At least one is required.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/dockerV1Repository:DockerV1Repository": {
            "description": "Creates a local Docker v1 repository - By choosing a V1 repository, you don't really have many options.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo = new artifactory.DockerV1Repository(\"foo\", {\n    key: \"foo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/dockerV1Repository:DockerV1Repository foo foo\n```\n\n ",
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "blockPushingSchema1": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "maxUniqueTags": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "tagRetention": {
                    "type": "integer"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "apiVersion",
                "blockPushingSchema1",
                "excludesPattern",
                "includesPattern",
                "key",
                "maxUniqueTags",
                "packageType",
                "tagRetention"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "maxUniqueTags": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DockerV1Repository resources.\n",
                "properties": {
                    "apiVersion": {
                        "type": "string"
                    },
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "blockPushingSchema1": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxUniqueTags": {
                        "type": "integer"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "tagRetention": {
                        "type": "integer"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/dockerV2Repository:DockerV2Repository": {
            "description": "Creates a local Docker v2 repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo = new artifactory.DockerV2Repository(\"foo\", {\n    key: \"foo\",\n    maxUniqueTags: 5,\n    tagRetention: 3,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/dockerV2Repository:DockerV2Repository foo foo\n```\n\n ",
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "description": "The Docker API version to use. This cannot be set\n"
                },
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "blockPushingSchema1": {
                    "type": "boolean",
                    "description": "When set, Artifactory will block the pushing of Docker images with manifest \nv2 schema 1 to this repository.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "maxUniqueTags": {
                    "type": "integer",
                    "description": "The maximum number of unique tags of a single Docker image to store in this \nrepository. Once the number tags for an image exceeds this setting, older tags are removed.\nA value of 0 (default) indicates there is no limit. This only applies to manifest v2.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "tagRetention": {
                    "type": "integer",
                    "description": "If greater than 1, overwritten tags will be saved by their digest, up to the set up \nnumber. This only applies to manifest V2.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "apiVersion",
                "blockPushingSchema1",
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "blockPushingSchema1": {
                    "type": "boolean",
                    "description": "When set, Artifactory will block the pushing of Docker images with manifest \nv2 schema 1 to this repository.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "maxUniqueTags": {
                    "type": "integer",
                    "description": "The maximum number of unique tags of a single Docker image to store in this \nrepository. Once the number tags for an image exceeds this setting, older tags are removed.\nA value of 0 (default) indicates there is no limit. This only applies to manifest v2.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "tagRetention": {
                    "type": "integer",
                    "description": "If greater than 1, overwritten tags will be saved by their digest, up to the set up \nnumber. This only applies to manifest V2.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DockerV2Repository resources.\n",
                "properties": {
                    "apiVersion": {
                        "type": "string",
                        "description": "The Docker API version to use. This cannot be set\n"
                    },
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "blockPushingSchema1": {
                        "type": "boolean",
                        "description": "When set, Artifactory will block the pushing of Docker images with manifest \nv2 schema 1 to this repository.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxUniqueTags": {
                        "type": "integer",
                        "description": "The maximum number of unique tags of a single Docker image to store in this \nrepository. Once the number tags for an image exceeds this setting, older tags are removed.\nA value of 0 (default) indicates there is no limit. This only applies to manifest v2.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "tagRetention": {
                        "type": "integer",
                        "description": "If greater than 1, overwritten tags will be saved by their digest, up to the set up \nnumber. This only applies to manifest V2.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/dockerWebhook:DockerWebhook": {
            "description": "Provides an Artifactory webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.\n",
            "properties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/DockerWebhookCriteria:DockerWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'.\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"pushed\", \"deleted\", \"promoted\".\n"
                },
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/DockerWebhookHandler:DockerWebhookHandler"
                    },
                    "description": "At least one is required.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                }
            },
            "required": [
                "criteria",
                "eventTypes",
                "handlers",
                "key"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/DockerWebhookCriteria:DockerWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'.\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"pushed\", \"deleted\", \"promoted\".\n"
                },
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/DockerWebhookHandler:DockerWebhookHandler"
                    },
                    "description": "At least one is required.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                }
            },
            "requiredInputs": [
                "criteria",
                "eventTypes",
                "handlers",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DockerWebhook resources.\n",
                "properties": {
                    "criteria": {
                        "$ref": "#/types/artifactory:index/DockerWebhookCriteria:DockerWebhookCriteria",
                        "description": "Specifies where the webhook will be applied on which repositories.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Webhook description. Max length 1000 characters.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of webhook. Default to 'true'.\n"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"pushed\", \"deleted\", \"promoted\".\n"
                    },
                    "handlers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/DockerWebhookHandler:DockerWebhookHandler"
                        },
                        "description": "At least one is required.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedAlpineRepository:FederatedAlpineRepository": {
            "description": "Creates a federated Alpine repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_alpine_repo = new artifactory.FederatedAlpineRepository(\"terraform-federated-test-alpine-repo\", {\n    key: \"terraform-federated-test-alpine-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-alpine-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-alpine-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedAlpineRepository:FederatedAlpineRepository terraform-federated-test-alpine-repo terraform-federated-test-alpine-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedAlpineRepositoryMember:FederatedAlpineRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "Used to sign index files in Alpine Linux repositories. See:\nhttps://www.jfrog.com/confluence/display/JFROG/Alpine+Linux+Repositories#AlpineLinuxRepositories-SigningAlpineLinuxIndex\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedAlpineRepositoryMember:FederatedAlpineRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "Used to sign index files in Alpine Linux repositories. See:\nhttps://www.jfrog.com/confluence/display/JFROG/Alpine+Linux+Repositories#AlpineLinuxRepositories-SigningAlpineLinuxIndex\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedAlpineRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "indexCompressionFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedAlpineRepositoryMember:FederatedAlpineRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "primaryKeypairRef": {
                        "type": "string",
                        "description": "Used to sign index files in Alpine Linux repositories. See:\nhttps://www.jfrog.com/confluence/display/JFROG/Alpine+Linux+Repositories#AlpineLinuxRepositories-SigningAlpineLinuxIndex\n"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedBowerRepository:FederatedBowerRepository": {
            "description": "Creates a federated Bower repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_bower_repo = new artifactory.FederatedBowerRepository(\"terraform-federated-test-bower-repo\", {\n    key: \"terraform-federated-test-bower-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-bower-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-bower-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedBowerRepository:FederatedBowerRepository terraform-federated-test-bower-repo terraform-federated-test-bower-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedBowerRepositoryMember:FederatedBowerRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedBowerRepositoryMember:FederatedBowerRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedBowerRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedBowerRepositoryMember:FederatedBowerRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedCargoRepository:FederatedCargoRepository": {
            "description": "Creates a federated Cargo repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_cargo_repo = new artifactory.FederatedCargoRepository(\"terraform-federated-test-cargo-repo\", {\n    key: \"terraform-federated-test-cargo-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-cargo-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-cargo-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedCargoRepository:FederatedCargoRepository terraform-federated-test-cargo-repo terraform-federated-test-cargo-repo\n```\n\n ",
            "properties": {
                "anonymousAccess": {
                    "type": "boolean",
                    "description": "Cargo client does not send credentials when performing download and search for crates. Enable this to allow anonymous\naccess to these resources (only), note that this will override the security anonymous access option. Default value is\n'false'.\n"
                },
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCargoRepositoryMember:FederatedCargoRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "anonymousAccess": {
                    "type": "boolean",
                    "description": "Cargo client does not send credentials when performing download and search for crates. Enable this to allow anonymous\naccess to these resources (only), note that this will override the security anonymous access option. Default value is\n'false'.\n"
                },
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCargoRepositoryMember:FederatedCargoRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedCargoRepository resources.\n",
                "properties": {
                    "anonymousAccess": {
                        "type": "boolean",
                        "description": "Cargo client does not send credentials when performing download and search for crates. Enable this to allow anonymous\naccess to these resources (only), note that this will override the security anonymous access option. Default value is\n'false'.\n"
                    },
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "indexCompressionFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedCargoRepositoryMember:FederatedCargoRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedChefRepository:FederatedChefRepository": {
            "description": "Creates a federated Chef repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_chef_repo = new artifactory.FederatedChefRepository(\"terraform-federated-test-chef-repo\", {\n    key: \"terraform-federated-test-chef-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-chef-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-chef-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedChefRepository:FederatedChefRepository terraform-federated-test-chef-repo terraform-federated-test-chef-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedChefRepositoryMember:FederatedChefRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedChefRepositoryMember:FederatedChefRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedChefRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedChefRepositoryMember:FederatedChefRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedCocoapodsRepository:FederatedCocoapodsRepository": {
            "description": "Creates a federated Cocoapods repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_cocoapods_repo = new artifactory.FederatedCocoapodsRepository(\"terraform-federated-test-cocoapods-repo\", {\n    key: \"terraform-federated-test-cocoapods-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-cocoapods-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-cocoapods-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedCocoapodsRepository:FederatedCocoapodsRepository terraform-federated-test-cocoapods-repo terraform-federated-test-cocoapods-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCocoapodsRepositoryMember:FederatedCocoapodsRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCocoapodsRepositoryMember:FederatedCocoapodsRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedCocoapodsRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedCocoapodsRepositoryMember:FederatedCocoapodsRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedComposerRepository:FederatedComposerRepository": {
            "description": "Creates a federated Composer repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_composer_repo = new artifactory.FederatedComposerRepository(\"terraform-federated-test-composer-repo\", {\n    key: \"terraform-federated-test-composer-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-composer-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-composer-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedComposerRepository:FederatedComposerRepository terraform-federated-test-composer-repo terraform-federated-test-composer-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedComposerRepositoryMember:FederatedComposerRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedComposerRepositoryMember:FederatedComposerRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedComposerRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedComposerRepositoryMember:FederatedComposerRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedConanRepository:FederatedConanRepository": {
            "description": "Creates a federated Conan repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_conan_repo = new artifactory.FederatedConanRepository(\"terraform-federated-test-conan-repo\", {\n    key: \"terraform-federated-test-conan-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-conan-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-conan-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedConanRepository:FederatedConanRepository resource \"artifactory_federated_conan_repository\" \"terraform-federated-test-conan-repo\" {\n```\n\n .terraform-federated-test-conan-repo terraform-federated-test-conan-repo ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedConanRepositoryMember:FederatedConanRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedConanRepositoryMember:FederatedConanRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedConanRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedConanRepositoryMember:FederatedConanRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedCondaRepository:FederatedCondaRepository": {
            "description": "Creates a federated Conda repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_conda_repo = new artifactory.FederatedCondaRepository(\"terraform-federated-test-conda-repo\", {\n    key: \"terraform-federated-test-conda-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-conda-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-conda-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedCondaRepository:FederatedCondaRepository terraform-federated-test-conda-repo terraform-federated-test-conda-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCondaRepositoryMember:FederatedCondaRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCondaRepositoryMember:FederatedCondaRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedCondaRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedCondaRepositoryMember:FederatedCondaRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedCranRepository:FederatedCranRepository": {
            "description": "Creates a federated Cran repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_cran_repo = new artifactory.FederatedCranRepository(\"terraform-federated-test-cran-repo\", {\n    key: \"terraform-federated-test-cran-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-cran-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-cran-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedCranRepository:FederatedCranRepository terraform-federated-test-cran-repo terraform-federated-test-cran-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCranRepositoryMember:FederatedCranRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedCranRepositoryMember:FederatedCranRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedCranRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedCranRepositoryMember:FederatedCranRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedDebianRepository:FederatedDebianRepository": {
            "description": "Creates a federated Debian repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_debian_repo = new artifactory.FederatedDebianRepository(\"terraform-federated-test-debian-repo\", {\n    key: \"terraform-federated-test-debian-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-debian-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-debian-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedDebianRepository:FederatedDebianRepository terraform-federated-test-debian-repo terraform-federated-test-debian-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedDebianRepositoryMember:FederatedDebianRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "Used to sign index files in Debian artifacts.\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "Used to sign index files in Debian artifacts.\n"
                },
                "trivialLayout": {
                    "type": "boolean",
                    "description": "When set, the repository will use the deprecated trivial layout.\n",
                    "deprecationMessage": "You shouldn't be using this"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedDebianRepositoryMember:FederatedDebianRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "Used to sign index files in Debian artifacts.\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "Used to sign index files in Debian artifacts.\n"
                },
                "trivialLayout": {
                    "type": "boolean",
                    "description": "When set, the repository will use the deprecated trivial layout.\n",
                    "deprecationMessage": "You shouldn't be using this"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedDebianRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "indexCompressionFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedDebianRepositoryMember:FederatedDebianRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "primaryKeypairRef": {
                        "type": "string",
                        "description": "Used to sign index files in Debian artifacts.\n"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "secondaryKeypairRef": {
                        "type": "string",
                        "description": "Used to sign index files in Debian artifacts.\n"
                    },
                    "trivialLayout": {
                        "type": "boolean",
                        "description": "When set, the repository will use the deprecated trivial layout.\n",
                        "deprecationMessage": "You shouldn't be using this"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedDockerRepository:FederatedDockerRepository": {
            "description": "Creates a federated Docker repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_docker_repo = new artifactory.FederatedDockerRepository(\"terraform-federated-test-docker-repo\", {\n    key: \"terraform-federated-test-docker-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-docker-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-docker-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedDockerRepository:FederatedDockerRepository terraform-federated-test-docker-repo terraform-federated-test-docker-repo\n```\n\n ",
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "description": "The Docker API version to use. This cannot be set\n"
                },
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "blockPushingSchema1": {
                    "type": "boolean",
                    "description": "When set, Artifactory will block the pushing of Docker images with manifest v2 schema 1 to this repository.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "maxUniqueTags": {
                    "type": "integer",
                    "description": "The maximum number of unique tags of a single Docker image to store in this repository. Once the number tags for an\nimage exceeds this setting, older tags are removed. A value of 0 (default) indicates there is no limit. This only\napplies to manifest v2\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedDockerRepositoryMember:FederatedDockerRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "tagRetention": {
                    "type": "integer",
                    "description": "If greater than 1, overwritten tags will be saved by their digest, up to the set up number. This only applies to\nmanifest V2\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "apiVersion",
                "blockPushingSchema1",
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "blockPushingSchema1": {
                    "type": "boolean",
                    "description": "When set, Artifactory will block the pushing of Docker images with manifest v2 schema 1 to this repository.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "maxUniqueTags": {
                    "type": "integer",
                    "description": "The maximum number of unique tags of a single Docker image to store in this repository. Once the number tags for an\nimage exceeds this setting, older tags are removed. A value of 0 (default) indicates there is no limit. This only\napplies to manifest v2\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedDockerRepositoryMember:FederatedDockerRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "tagRetention": {
                    "type": "integer",
                    "description": "If greater than 1, overwritten tags will be saved by their digest, up to the set up number. This only applies to\nmanifest V2\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedDockerRepository resources.\n",
                "properties": {
                    "apiVersion": {
                        "type": "string",
                        "description": "The Docker API version to use. This cannot be set\n"
                    },
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "blockPushingSchema1": {
                        "type": "boolean",
                        "description": "When set, Artifactory will block the pushing of Docker images with manifest v2 schema 1 to this repository.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxUniqueTags": {
                        "type": "integer",
                        "description": "The maximum number of unique tags of a single Docker image to store in this repository. Once the number tags for an\nimage exceeds this setting, older tags are removed. A value of 0 (default) indicates there is no limit. This only\napplies to manifest v2\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedDockerRepositoryMember:FederatedDockerRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "tagRetention": {
                        "type": "integer",
                        "description": "If greater than 1, overwritten tags will be saved by their digest, up to the set up number. This only applies to\nmanifest V2\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedGemsRepository:FederatedGemsRepository": {
            "description": "Creates a federated Gem repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_gem_repo = new artifactory.FederatedGemRepository(\"terraform-federated-test-gem-repo\", {\n    key: \"terraform-federated-test-gem-repo\",\n    member: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-gem-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-gem-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedGemsRepository:FederatedGemsRepository terraform-federated-test-gem-repo terraform-federated-test-gem-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGemsRepositoryMember:FederatedGemsRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGemsRepositoryMember:FederatedGemsRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedGemsRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedGemsRepositoryMember:FederatedGemsRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedGenericRepository:FederatedGenericRepository": {
            "description": "Creates a federated Generic repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_generic_repo = new artifactory.FederatedGenericRepository(\"terraform-federated-test-generic-repo\", {\n    key: \"terraform-federated-test-generic-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-generic-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-generic-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedGenericRepository:FederatedGenericRepository terraform-federated-test-generic-repo terraform-federated-test-generic-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGenericRepositoryMember:FederatedGenericRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGenericRepositoryMember:FederatedGenericRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedGenericRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedGenericRepositoryMember:FederatedGenericRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedGitltfsRepository:FederatedGitltfsRepository": {
            "description": "Creates a federated Gitlfs repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_gitlfs_repo = new artifactory.FederatedGitltfsRepository(\"terraform-federated-test-gitlfs-repo\", {\n    key: \"terraform-federated-test-gitlfs-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-gitlfs-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-gitlfs-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedGitltfsRepository:FederatedGitltfsRepository terraform-federated-test-gitlfs-repo terraform-federated-test-gitlfs-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGitltfsRepositoryMember:FederatedGitltfsRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGitltfsRepositoryMember:FederatedGitltfsRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedGitltfsRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedGitltfsRepositoryMember:FederatedGitltfsRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedGoRepository:FederatedGoRepository": {
            "description": "Creates a federated Go repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_go_repo = new artifactory.FederatedGoRepository(\"terraform-federated-test-go-repo\", {\n    key: \"terraform-federated-test-go-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-go-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-go-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedGoRepository:FederatedGoRepository terraform-federated-test-go-repo terraform-federated-test-go-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGoRepositoryMember:FederatedGoRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGoRepositoryMember:FederatedGoRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedGoRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedGoRepositoryMember:FederatedGoRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedGradleRepository:FederatedGradleRepository": {
            "description": "Creates a federated Gradle repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_gradle_repo = new artifactory.FederatedGradleRepository(\"terraform-federated-test-gradle-repo\", {\n    key: \"terraform-federated-test-gradle-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-gradle-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-gradle-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedGradleRepository:FederatedGradleRepository terraform-federated-test-gradle-repo terraform-federated-test-gradle-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGradleRepositoryMember:FederatedGradleRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedGradleRepositoryMember:FederatedGradleRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedGradleRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "checksumPolicyType": {
                        "type": "string",
                        "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedGradleRepositoryMember:FederatedGradleRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "snapshotVersionBehavior": {
                        "type": "string",
                        "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedHelmRepository:FederatedHelmRepository": {
            "description": "Creates a federated Helm repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_helm_repo = new artifactory.FederatedHelmRepository(\"terraform-federated-test-helm-repo\", {\n    key: \"terraform-federated-test-helm-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-helm-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-helm-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedHelmRepository:FederatedHelmRepository terraform-federated-test-helm-repo terraform-federated-test-helm-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedHelmRepositoryMember:FederatedHelmRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedHelmRepositoryMember:FederatedHelmRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedHelmRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedHelmRepositoryMember:FederatedHelmRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedIvyRepository:FederatedIvyRepository": {
            "description": "Creates a federated Ivy repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_ivy_repo = new artifactory.FederatedIvyRepository(\"terraform-federated-test-ivy-repo\", {\n    key: \"terraform-federated-test-ivy-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-ivy-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-ivy-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedIvyRepository:FederatedIvyRepository terraform-federated-test-ivy-repo terraform-federated-test-ivy-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedIvyRepositoryMember:FederatedIvyRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedIvyRepositoryMember:FederatedIvyRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedIvyRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "checksumPolicyType": {
                        "type": "string",
                        "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedIvyRepositoryMember:FederatedIvyRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "snapshotVersionBehavior": {
                        "type": "string",
                        "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedMavenRepository:FederatedMavenRepository": {
            "description": "Creates a federated Maven repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_maven_repo = new artifactory.FederatedMavenRepository(\"terraform-federated-test-maven-repo\", {\n    key: \"terraform-federated-test-maven-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-maven-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-maven-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedMavenRepository:FederatedMavenRepository terraform-federated-test-maven-repo terraform-federated-test-maven-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedMavenRepositoryMember:FederatedMavenRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedMavenRepositoryMember:FederatedMavenRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedMavenRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "checksumPolicyType": {
                        "type": "string",
                        "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedMavenRepositoryMember:FederatedMavenRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "snapshotVersionBehavior": {
                        "type": "string",
                        "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedNpmRepository:FederatedNpmRepository": {
            "description": "Creates a federated Npm repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_npm_repo = new artifactory.FederatedNpmRepository(\"terraform-federated-test-npm-repo\", {\n    key: \"terraform-federated-test-npm-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-npm-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-npm-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedNpmRepository:FederatedNpmRepository terraform-federated-test-npm-repo terraform-federated-test-npm-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedNpmRepositoryMember:FederatedNpmRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedNpmRepositoryMember:FederatedNpmRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedNpmRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedNpmRepositoryMember:FederatedNpmRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedNugetRepository:FederatedNugetRepository": {
            "description": "Creates a federated Nuget repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_nuget_repo = new artifactory.FederatedNugetRepository(\"terraform-federated-test-nuget-repo\", {\n    key: \"terraform-federated-test-nuget-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-nuget-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-nuget-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedNugetRepository:FederatedNugetRepository terraform-federated-test-nuget-repo terraform-federated-test-nuget-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "forceNugetAuthentication": {
                    "type": "boolean",
                    "description": "Force basic authentication credentials in order to use this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedNugetRepositoryMember:FederatedNugetRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "forceNugetAuthentication": {
                    "type": "boolean",
                    "description": "Force basic authentication credentials in order to use this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedNugetRepositoryMember:FederatedNugetRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedNugetRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "forceNugetAuthentication": {
                        "type": "boolean",
                        "description": "Force basic authentication credentials in order to use this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedNugetRepositoryMember:FederatedNugetRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedOpkgRepository:FederatedOpkgRepository": {
            "description": "Creates a federated Opkg repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_opkg_repo = new artifactory.FederatedOpkgRepository(\"terraform-federated-test-opkg-repo\", {\n    key: \"terraform-federated-test-opkg-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-opkg-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-opkg-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedOpkgRepository:FederatedOpkgRepository terraform-federated-test-opkg-repo terraform-federated-test-opkg-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedOpkgRepositoryMember:FederatedOpkgRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedOpkgRepositoryMember:FederatedOpkgRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedOpkgRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedOpkgRepositoryMember:FederatedOpkgRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedPuppetRepository:FederatedPuppetRepository": {
            "description": "Creates a federated Puppet repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_puppet_repo = new artifactory.FederatedPuppetRepository(\"terraform-federated-test-puppet-repo\", {\n    key: \"terraform-federated-test-puppet-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-puppet-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-puppet-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedPuppetRepository:FederatedPuppetRepository terraform-federated-test-puppet-repo terraform-federated-test-puppet-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedPuppetRepositoryMember:FederatedPuppetRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedPuppetRepositoryMember:FederatedPuppetRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedPuppetRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedPuppetRepositoryMember:FederatedPuppetRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedPypiRepository:FederatedPypiRepository": {
            "description": "Creates a federated Pypi repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_pypi_repo = new artifactory.FederatedPypiRepository(\"terraform-federated-test-pypi-repo\", {\n    key: \"terraform-federated-test-pypi-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-pypi-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-pypi-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedPypiRepository:FederatedPypiRepository terraform-federated-test-pypi-repo terraform-federated-test-pypi-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedPypiRepositoryMember:FederatedPypiRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedPypiRepositoryMember:FederatedPypiRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedPypiRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedPypiRepositoryMember:FederatedPypiRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedRpmRepository:FederatedRpmRepository": {
            "description": "Creates a federated Rpm repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_rpm_repo = new artifactory.FederatedRpmRepository(\"terraform-federated-test-rpm-repo\", {\n    key: \"terraform-federated-test-rpm-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-rpm-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-rpm-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedRpmRepository:FederatedRpmRepository terraform-federated-test-rpm-repo terraform-federated-test-rpm-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "calculateYumMetadata": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "enableFileListsIndexing": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedRpmRepositoryMember:FederatedRpmRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "Primary keypair used to sign artifacts.\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "Secondary keypair used to sign artifacts.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                },
                "yumGroupFileNames": {
                    "type": "string",
                    "description": "A comma separated list of XML file names containing RPM group component definitions. Artifactory includes the group\ndefinitions as part of the calculated RPM metadata, as well as automatically generating a gzipped version of the group\nfiles, if required.\n"
                },
                "yumRootDepth": {
                    "type": "integer",
                    "description": "The depth, relative to the repository's root folder, where RPM metadata is created. This is useful when your repository\ncontains multiple RPM repositories under parallel hierarchies. For example, if your RPMs are stored under\n'fedora/linux/$releasever/$basearch', specify a depth of 4.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "calculateYumMetadata": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "enableFileListsIndexing": {
                    "type": "boolean"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedRpmRepositoryMember:FederatedRpmRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "Primary keypair used to sign artifacts.\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "Secondary keypair used to sign artifacts.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                },
                "yumGroupFileNames": {
                    "type": "string",
                    "description": "A comma separated list of XML file names containing RPM group component definitions. Artifactory includes the group\ndefinitions as part of the calculated RPM metadata, as well as automatically generating a gzipped version of the group\nfiles, if required.\n"
                },
                "yumRootDepth": {
                    "type": "integer",
                    "description": "The depth, relative to the repository's root folder, where RPM metadata is created. This is useful when your repository\ncontains multiple RPM repositories under parallel hierarchies. For example, if your RPMs are stored under\n'fedora/linux/$releasever/$basearch', specify a depth of 4.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedRpmRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "calculateYumMetadata": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "enableFileListsIndexing": {
                        "type": "boolean"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedRpmRepositoryMember:FederatedRpmRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "primaryKeypairRef": {
                        "type": "string",
                        "description": "Primary keypair used to sign artifacts.\n"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "secondaryKeypairRef": {
                        "type": "string",
                        "description": "Secondary keypair used to sign artifacts.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    },
                    "yumGroupFileNames": {
                        "type": "string",
                        "description": "A comma separated list of XML file names containing RPM group component definitions. Artifactory includes the group\ndefinitions as part of the calculated RPM metadata, as well as automatically generating a gzipped version of the group\nfiles, if required.\n"
                    },
                    "yumRootDepth": {
                        "type": "integer",
                        "description": "The depth, relative to the repository's root folder, where RPM metadata is created. This is useful when your repository\ncontains multiple RPM repositories under parallel hierarchies. For example, if your RPMs are stored under\n'fedora/linux/$releasever/$basearch', specify a depth of 4.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedSbtRepository:FederatedSbtRepository": {
            "description": "Creates a federated SBT repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_sbt_repo = new artifactory.FederatedSbtRepository(\"terraform-federated-test-sbt-repo\", {\n    key: \"terraform-federated-test-sbt-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-sbt-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-sbt-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedSbtRepository:FederatedSbtRepository terraform-federated-test-sbt-repo terraform-federated-test-sbt-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedSbtRepositoryMember:FederatedSbtRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedSbtRepositoryMember:FederatedSbtRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedSbtRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "checksumPolicyType": {
                        "type": "string",
                        "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedSbtRepositoryMember:FederatedSbtRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "snapshotVersionBehavior": {
                        "type": "string",
                        "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedTerraformModuleRepository:FederatedTerraformModuleRepository": {
            "description": "Creates a federated Generic repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_terraform_module_repo = new artifactory.FederatedTerraformModuleRepository(\"terraform-federated-test-terraform_module-repo\", {\n    key: \"terraform-federated-test-terraform-module-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-terraform_module-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-terraform_module-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedTerraformModuleRepository:FederatedTerraformModuleRepository terraform-federated-test-terraform_module-repo terraform-federated-test-terraform-module-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedTerraformModuleRepositoryMember:FederatedTerraformModuleRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedTerraformModuleRepositoryMember:FederatedTerraformModuleRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedTerraformModuleRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedTerraformModuleRepositoryMember:FederatedTerraformModuleRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedTerraformProviderRepository:FederatedTerraformProviderRepository": {
            "description": "Creates a federated Generic repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_terraform_provider_repo = new artifactory.FederatedTerraformProviderRepository(\"terraform-federated-test-terraform_provider-repo\", {\n    key: \"terraform-federated-test-terraform-provider-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-terraform_provider-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-terraform_provider-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedTerraformProviderRepository:FederatedTerraformProviderRepository terraform-federated-test-terraform_provider-repo terraform-federated-test-terraform-provider-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedTerraformProviderRepositoryMember:FederatedTerraformProviderRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedTerraformProviderRepositoryMember:FederatedTerraformProviderRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedTerraformProviderRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedTerraformProviderRepositoryMember:FederatedTerraformProviderRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/federatedVagrantRepository:FederatedVagrantRepository": {
            "description": "Creates a federated Vagrant repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_federated_test_vagrant_repo = new artifactory.FederatedVagrantRepository(\"terraform-federated-test-vagrant-repo\", {\n    key: \"terraform-federated-test-vagrant-repo\",\n    members: [\n        {\n            enabled: true,\n            url: \"http://tempurl.org/artifactory/terraform-federated-test-vagrant-repo\",\n        },\n        {\n            enabled: true,\n            url: \"http://tempurl2.org/artifactory/terraform-federated-test-vagrant-repo-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFederated repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/federatedVagrantRepository:FederatedVagrantRepository terraform-federated-test-vagrant-repo terraform-federated-test-vagrant-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedVagrantRepositoryMember:FederatedVagrantRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "members",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/FederatedVagrantRepositoryMember:FederatedVagrantRepositoryMember"
                    },
                    "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FederatedVagrantRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/FederatedVagrantRepositoryMember:FederatedVagrantRepositoryMember"
                        },
                        "description": "The list of Federated members and must contain this repository URL (configured base URL\n`/artifactory/` + repo `key`). Note that each of the federated members will need to have a base URL set.\nPlease follow the [instruction](https://www.jfrog.com/confluence/display/JFROG/Working+with+Federated+Repositories#WorkingwithFederatedRepositories-SettingUpaFederatedRepository)\nto set up Federated repositories correctly.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/generalSecurity:GeneralSecurity": {
            "description": "This resource can be used to manage Artifactory's general security settings.\n\nOnly a single `artifactory.GeneralSecurity` resource is meant to be defined.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Configure Artifactory general security settings\nconst security = new artifactory.GeneralSecurity(\"security\", {\n    enableAnonymousAccess: true,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCurrent general security settings can be imported using `security` as the `ID`, e.g.\n\n```sh\n $ pulumi import artifactory:index/generalSecurity:GeneralSecurity security security\n```\n\n environments, or may change without notice. ",
            "properties": {
                "enableAnonymousAccess": {
                    "type": "boolean"
                }
            },
            "inputProperties": {
                "enableAnonymousAccess": {
                    "type": "boolean"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GeneralSecurity resources.\n",
                "properties": {
                    "enableAnonymousAccess": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/goRepository:GoRepository": {
            "description": "Creates a virtual Go repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Go+Registry#GoRegistry-VirtualRepositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst baz_go = new artifactory.GoRepository(\"baz-go\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    externalDependenciesEnabled: true,\n    externalDependenciesPatterns: [\n        \"**/github.com/**\",\n        \"**/go.googlesource.com/**\",\n    ],\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"baz-go\",\n    notes: \"Internal description\",\n    repoLayoutRef: \"go-default\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/goRepository:GoRepository baz-go baz-go\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "Shorthand for \"Enable 'go-import' Meta Tags\" on the UI. This must be set to true in order to use the allow list. \nWhen checked (default), Artifactory will automatically follow remote VCS roots in 'go-import' meta tags to download remote modules.\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "'go-import' Allow List on the UI.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "Shorthand for \"Enable 'go-import' Meta Tags\" on the UI. This must be set to true in order to use the allow list. \nWhen checked (default), Artifactory will automatically follow remote VCS roots in 'go-import' meta tags to download remote modules.\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "'go-import' Allow List on the UI.\n",
                    "willReplaceOnChanges": true
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GoRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "externalDependenciesEnabled": {
                        "type": "boolean",
                        "description": "Shorthand for \"Enable 'go-import' Meta Tags\" on the UI. This must be set to true in order to use the allow list. \nWhen checked (default), Artifactory will automatically follow remote VCS roots in 'go-import' meta tags to download remote modules.\n"
                    },
                    "externalDependenciesPatterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "'go-import' Allow List on the UI.\n",
                        "willReplaceOnChanges": true
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/group:Group": {
            "description": "\n\n\n## Import\n\nGroups can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/group:Group terraform-group mygroup\n```\n\n ",
            "properties": {
                "adminPrivileges": {
                    "type": "boolean",
                    "description": "Any users added to this group will automatically be assigned with admin privileges in the system.\n"
                },
                "autoJoin": {
                    "type": "boolean",
                    "description": "When this parameter is set, any new users defined in the system are automatically assigned to this group.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for the group\n"
                },
                "detachAllUsers": {
                    "type": "boolean",
                    "description": "When this override is set, an empty or missing usernames array will detach all users from the group\n"
                },
                "externalId": {
                    "type": "string",
                    "description": "New external group ID used to configure the corresponding group in Azure AD.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the group\n"
                },
                "policyManager": {
                    "type": "boolean",
                    "description": "When this override is set, User in the group can set Xray security and compliance policies. Default value is 'false'.\n"
                },
                "realm": {
                    "type": "string",
                    "description": "The realm for the group.\n"
                },
                "realmAttributes": {
                    "type": "string",
                    "description": "The realm attributes for the group.\n"
                },
                "reportsManager": {
                    "type": "boolean",
                    "description": "When this override is set, User in the group can manage Xray Reports on any resource type. Default value is 'false'.\n"
                },
                "usersNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of users assigned to the group. If missing or empty, tf will not manage group membership\n"
                },
                "watchManager": {
                    "type": "boolean",
                    "description": "When this override is set, User in the group can manage Xray Watches on any resource type. Default value is 'false'.\n"
                }
            },
            "required": [
                "adminPrivileges",
                "autoJoin",
                "name",
                "realm"
            ],
            "inputProperties": {
                "adminPrivileges": {
                    "type": "boolean",
                    "description": "Any users added to this group will automatically be assigned with admin privileges in the system.\n"
                },
                "autoJoin": {
                    "type": "boolean",
                    "description": "When this parameter is set, any new users defined in the system are automatically assigned to this group.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for the group\n"
                },
                "detachAllUsers": {
                    "type": "boolean",
                    "description": "When this override is set, an empty or missing usernames array will detach all users from the group\n"
                },
                "externalId": {
                    "type": "string",
                    "description": "New external group ID used to configure the corresponding group in Azure AD.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the group\n",
                    "willReplaceOnChanges": true
                },
                "policyManager": {
                    "type": "boolean",
                    "description": "When this override is set, User in the group can set Xray security and compliance policies. Default value is 'false'.\n"
                },
                "realm": {
                    "type": "string",
                    "description": "The realm for the group.\n"
                },
                "realmAttributes": {
                    "type": "string",
                    "description": "The realm attributes for the group.\n"
                },
                "reportsManager": {
                    "type": "boolean",
                    "description": "When this override is set, User in the group can manage Xray Reports on any resource type. Default value is 'false'.\n"
                },
                "usersNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of users assigned to the group. If missing or empty, tf will not manage group membership\n"
                },
                "watchManager": {
                    "type": "boolean",
                    "description": "When this override is set, User in the group can manage Xray Watches on any resource type. Default value is 'false'.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "adminPrivileges": {
                        "type": "boolean",
                        "description": "Any users added to this group will automatically be assigned with admin privileges in the system.\n"
                    },
                    "autoJoin": {
                        "type": "boolean",
                        "description": "When this parameter is set, any new users defined in the system are automatically assigned to this group.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description for the group\n"
                    },
                    "detachAllUsers": {
                        "type": "boolean",
                        "description": "When this override is set, an empty or missing usernames array will detach all users from the group\n"
                    },
                    "externalId": {
                        "type": "string",
                        "description": "New external group ID used to configure the corresponding group in Azure AD.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the group\n",
                        "willReplaceOnChanges": true
                    },
                    "policyManager": {
                        "type": "boolean",
                        "description": "When this override is set, User in the group can set Xray security and compliance policies. Default value is 'false'.\n"
                    },
                    "realm": {
                        "type": "string",
                        "description": "The realm for the group.\n"
                    },
                    "realmAttributes": {
                        "type": "string",
                        "description": "The realm attributes for the group.\n"
                    },
                    "reportsManager": {
                        "type": "boolean",
                        "description": "When this override is set, User in the group can manage Xray Reports on any resource type. Default value is 'false'.\n"
                    },
                    "usersNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of users assigned to the group. If missing or empty, tf will not manage group membership\n"
                    },
                    "watchManager": {
                        "type": "boolean",
                        "description": "When this override is set, User in the group can manage Xray Watches on any resource type. Default value is 'false'.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/keypair:Keypair": {
            "description": "RSA key pairs are used to sign and verify the Alpine Linux index files in JFrog Artifactory, while GPG key pairs are \nused to sign and validate packages integrity in JFrog Distribution. The JFrog Platform enables you to manage multiple \nRSA and GPG signing keys through the Keys Management UI and REST API. The JFrog Platform supports managing multiple \npairs of GPG signing keys to sign packages for authentication of several package types such as Debian, Opkg, and RPM \nthrough the Keys Management UI and REST API.\nPassphrases are not currently supported, though they exist in the API.\n\n\n\n## Import\n\nKeypair can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/keypair:Keypair my-keypair my-keypair\n```\n\n ",
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Will be used as a filename when retrieving the public key via REST API.\n"
                },
                "pairName": {
                    "type": "string",
                    "description": "A unique identifier for the Key Pair record.\n"
                },
                "pairType": {
                    "type": "string",
                    "description": "Key Pair type. Supported types - GPG and RSA.\n"
                },
                "passphrase": {
                    "type": "string",
                    "description": "Passphrase will be used to decrypt the private key. Validated server side.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "- Private key. PEM format will be validated.\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "Public key. PEM format will be validated.\n"
                },
                "unavailable": {
                    "type": "boolean",
                    "description": "Unknown usage. Returned in the json payload and cannot be set.\n"
                }
            },
            "required": [
                "alias",
                "pairName",
                "pairType",
                "privateKey",
                "publicKey",
                "unavailable"
            ],
            "inputProperties": {
                "alias": {
                    "type": "string",
                    "description": "Will be used as a filename when retrieving the public key via REST API.\n",
                    "willReplaceOnChanges": true
                },
                "pairName": {
                    "type": "string",
                    "description": "A unique identifier for the Key Pair record.\n",
                    "willReplaceOnChanges": true
                },
                "pairType": {
                    "type": "string",
                    "description": "Key Pair type. Supported types - GPG and RSA.\n",
                    "willReplaceOnChanges": true
                },
                "passphrase": {
                    "type": "string",
                    "description": "Passphrase will be used to decrypt the private key. Validated server side.\n",
                    "willReplaceOnChanges": true
                },
                "privateKey": {
                    "type": "string",
                    "description": "- Private key. PEM format will be validated.\n",
                    "willReplaceOnChanges": true
                },
                "publicKey": {
                    "type": "string",
                    "description": "Public key. PEM format will be validated.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "alias",
                "pairName",
                "pairType",
                "privateKey",
                "publicKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Keypair resources.\n",
                "properties": {
                    "alias": {
                        "type": "string",
                        "description": "Will be used as a filename when retrieving the public key via REST API.\n",
                        "willReplaceOnChanges": true
                    },
                    "pairName": {
                        "type": "string",
                        "description": "A unique identifier for the Key Pair record.\n",
                        "willReplaceOnChanges": true
                    },
                    "pairType": {
                        "type": "string",
                        "description": "Key Pair type. Supported types - GPG and RSA.\n",
                        "willReplaceOnChanges": true
                    },
                    "passphrase": {
                        "type": "string",
                        "description": "Passphrase will be used to decrypt the private key. Validated server side.\n",
                        "willReplaceOnChanges": true
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "- Private key. PEM format will be validated.\n",
                        "willReplaceOnChanges": true
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "Public key. PEM format will be validated.\n",
                        "willReplaceOnChanges": true
                    },
                    "unavailable": {
                        "type": "boolean",
                        "description": "Unknown usage. Returned in the json payload and cannot be set.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/ldapGroupSetting:LdapGroupSetting": {
            "description": "This resource can be used to manage Artifactory's LDAP Group settings for user authentication.\n\nLDAP Groups Add-on allows you to synchronize your LDAP groups with the system and leverage your existing organizational \nstructure for managing group-based permissions.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Configure Artifactory LDAP setting\nconst ldapGroupName = new artifactory.LdapGroupSetting(\"ldap_group_name\", {\n    descriptionAttribute: \"description\",\n    enabledLdap: \"ldap_name\",\n    filter: \"(objectClass=groupOfNames)\",\n    groupBaseDn: \"\",\n    groupMemberAttribute: \"uniqueMember\",\n    groupNameAttribute: \"cn\",\n    strategy: \"STATIC\",\n    subTree: true,\n});\n```\nNote: `Name` argument has to match to the resource name.   \nReference Link: [JFrog LDAP](https://www.jfrog.com/confluence/display/JFROG/LDAP)\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLDAP Group setting can be imported using the key, e.g.\n\n```sh\n $ pulumi import artifactory:index/ldapGroupSetting:LdapGroupSetting ldap_group_name ldap_group_name\n```\n\n ",
            "properties": {
                "descriptionAttribute": {
                    "type": "string",
                    "description": "An attribute on the group entry which denoting the group description. Used when importing groups.\n"
                },
                "filter": {
                    "type": "string",
                    "description": "The LDAP filter used to search for group entries. Used for importing groups.\n"
                },
                "groupBaseDn": {
                    "type": "string",
                    "description": "A search base for group entry DNs, relative to the DN on the LDAP server’s URL (and not relative to the LDAP Setting’s “Search Base”). Used when importing groups.\n"
                },
                "groupMemberAttribute": {
                    "type": "string",
                    "description": "A multi-value attribute on the group entry containing user DNs or IDs of the group members (e.g., uniqueMember,member).\n"
                },
                "groupNameAttribute": {
                    "type": "string",
                    "description": "Attribute on the group entry denoting the group name. Used when importing groups.\n"
                },
                "ldapSettingKey": {
                    "type": "string",
                    "description": "The LDAP setting key you want to use for group retrieval. The value for this field corresponds to 'enabledLdap' field of\nthe ldap group setting XML block of system configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Ldap group setting name.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The JFrog Platform Deployment (JPD) supports three ways of mapping groups to LDAP schemas:\n- STATIC: Group objects are aware of their members, however, the users are not aware of the groups they belong to. Each group object such as groupOfNames or groupOfUniqueNames holds its respective member attributes, typically member or uniqueMember, which is a user DN.\n- DYNAMIC: User objects are aware of what groups they belong to, but the group objects are not aware of their members. Each user object contains a custom attribute, such as group, that holds the group DNs or group names of which the user is a member.\n- HIERARCHICAL: The user's DN is indicative of the groups the user belongs to by using group names as part of user DN hierarchy. Each user DN contains a list of ou's or custom attributes that make up the group association. For example, uid=user1,ou=developers,ou=uk,dc=jfrog,dc=org indicates that user1 belongs to two groups: uk and developers.\n"
                },
                "subTree": {
                    "type": "boolean",
                    "description": "When set, enables deep search through the sub-tree of the LDAP URL + Search Base. True by default.\n"
                }
            },
            "required": [
                "descriptionAttribute",
                "filter",
                "groupMemberAttribute",
                "groupNameAttribute",
                "ldapSettingKey",
                "name",
                "strategy"
            ],
            "inputProperties": {
                "descriptionAttribute": {
                    "type": "string",
                    "description": "An attribute on the group entry which denoting the group description. Used when importing groups.\n"
                },
                "filter": {
                    "type": "string",
                    "description": "The LDAP filter used to search for group entries. Used for importing groups.\n"
                },
                "groupBaseDn": {
                    "type": "string",
                    "description": "A search base for group entry DNs, relative to the DN on the LDAP server’s URL (and not relative to the LDAP Setting’s “Search Base”). Used when importing groups.\n"
                },
                "groupMemberAttribute": {
                    "type": "string",
                    "description": "A multi-value attribute on the group entry containing user DNs or IDs of the group members (e.g., uniqueMember,member).\n"
                },
                "groupNameAttribute": {
                    "type": "string",
                    "description": "Attribute on the group entry denoting the group name. Used when importing groups.\n"
                },
                "ldapSettingKey": {
                    "type": "string",
                    "description": "The LDAP setting key you want to use for group retrieval. The value for this field corresponds to 'enabledLdap' field of\nthe ldap group setting XML block of system configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Ldap group setting name.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The JFrog Platform Deployment (JPD) supports three ways of mapping groups to LDAP schemas:\n- STATIC: Group objects are aware of their members, however, the users are not aware of the groups they belong to. Each group object such as groupOfNames or groupOfUniqueNames holds its respective member attributes, typically member or uniqueMember, which is a user DN.\n- DYNAMIC: User objects are aware of what groups they belong to, but the group objects are not aware of their members. Each user object contains a custom attribute, such as group, that holds the group DNs or group names of which the user is a member.\n- HIERARCHICAL: The user's DN is indicative of the groups the user belongs to by using group names as part of user DN hierarchy. Each user DN contains a list of ou's or custom attributes that make up the group association. For example, uid=user1,ou=developers,ou=uk,dc=jfrog,dc=org indicates that user1 belongs to two groups: uk and developers.\n"
                },
                "subTree": {
                    "type": "boolean",
                    "description": "When set, enables deep search through the sub-tree of the LDAP URL + Search Base. True by default.\n"
                }
            },
            "requiredInputs": [
                "descriptionAttribute",
                "filter",
                "groupMemberAttribute",
                "groupNameAttribute",
                "ldapSettingKey",
                "strategy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LdapGroupSetting resources.\n",
                "properties": {
                    "descriptionAttribute": {
                        "type": "string",
                        "description": "An attribute on the group entry which denoting the group description. Used when importing groups.\n"
                    },
                    "filter": {
                        "type": "string",
                        "description": "The LDAP filter used to search for group entries. Used for importing groups.\n"
                    },
                    "groupBaseDn": {
                        "type": "string",
                        "description": "A search base for group entry DNs, relative to the DN on the LDAP server’s URL (and not relative to the LDAP Setting’s “Search Base”). Used when importing groups.\n"
                    },
                    "groupMemberAttribute": {
                        "type": "string",
                        "description": "A multi-value attribute on the group entry containing user DNs or IDs of the group members (e.g., uniqueMember,member).\n"
                    },
                    "groupNameAttribute": {
                        "type": "string",
                        "description": "Attribute on the group entry denoting the group name. Used when importing groups.\n"
                    },
                    "ldapSettingKey": {
                        "type": "string",
                        "description": "The LDAP setting key you want to use for group retrieval. The value for this field corresponds to 'enabledLdap' field of\nthe ldap group setting XML block of system configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Ldap group setting name.\n"
                    },
                    "strategy": {
                        "type": "string",
                        "description": "The JFrog Platform Deployment (JPD) supports three ways of mapping groups to LDAP schemas:\n- STATIC: Group objects are aware of their members, however, the users are not aware of the groups they belong to. Each group object such as groupOfNames or groupOfUniqueNames holds its respective member attributes, typically member or uniqueMember, which is a user DN.\n- DYNAMIC: User objects are aware of what groups they belong to, but the group objects are not aware of their members. Each user object contains a custom attribute, such as group, that holds the group DNs or group names of which the user is a member.\n- HIERARCHICAL: The user's DN is indicative of the groups the user belongs to by using group names as part of user DN hierarchy. Each user DN contains a list of ou's or custom attributes that make up the group association. For example, uid=user1,ou=developers,ou=uk,dc=jfrog,dc=org indicates that user1 belongs to two groups: uk and developers.\n"
                    },
                    "subTree": {
                        "type": "boolean",
                        "description": "When set, enables deep search through the sub-tree of the LDAP URL + Search Base. True by default.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/ldapSetting:LdapSetting": {
            "description": "This resource can be used to manage Artifactory's LDAP settings for user authentication.\n\nWhen specified LDAP setting is active, Artifactory first attempts to authenticate the user against the LDAP server. \nIf LDAP authentication fails, it then tries to authenticate via its internal database.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Configure Artifactory LDAP setting\nconst ldapName = new artifactory.LdapSetting(\"ldap_name\", {\n    allowUserToAccessProfile: false,\n    autoCreateUser: true,\n    emailAttribute: \"mail\",\n    enabled: true,\n    key: \"ldap_name\",\n    ldapPoisoningProtection: true,\n    ldapUrl: \"ldap://ldap_server_url\",\n    managerDn: \"mgr_dn\",\n    managerPassword: \"mgr_passwd_random\",\n    pagingSupportEnabled: false,\n    searchBase: \"ou=users\",\n    searchFilter: \"(uid={0})\",\n    searchSubTree: true,\n    userDnPattern: \"uid={0},ou=People\",\n});\n```\nNote: `Key` argument has to match to the resource name.   \nReference Link: [JFrog LDAP](https://www.jfrog.com/confluence/display/JFROG/LDAP)\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLDAP setting can be imported using the key, e.g.\n\n```sh\n $ pulumi import artifactory:index/ldapSetting:LdapSetting ldap_name ldap_name\n```\n\n ",
            "properties": {
                "allowUserToAccessProfile": {
                    "type": "boolean",
                    "description": "When set, users created after logging in using LDAP will be able to access their profile page.  Default value is `false`.\n"
                },
                "autoCreateUser": {
                    "type": "boolean",
                    "description": "When set, the system will automatically create new users for those who have logged in using LDAP, and assign them to the default groups.  Default value is `true`.\n"
                },
                "emailAttribute": {
                    "type": "string",
                    "description": "An attribute that can be used to map a user's email address to a user created automatically in Artifactory. Default value is `mail`.\n- Note: If blank/empty string input was set for email_attribute, Default value \"mail\" takes effect. This is to match with Artifactory behavior.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "When set, these settings are enabled. Default value is `true`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The unique ID of the LDAP setting.\n"
                },
                "ldapPoisoningProtection": {
                    "type": "boolean",
                    "description": "Protects against LDAP poisoning by filtering out users exposed to vulnerabilities.  Default value is `true`.\n"
                },
                "ldapUrl": {
                    "type": "string",
                    "description": "Location of the LDAP server in the following format: ldap://myserver:myport/dc=sampledomain,dc=com. The URL should include the base DN used to search for and/or authenticate users.\n"
                },
                "managerDn": {
                    "type": "string",
                    "description": "The full DN of a user with permissions that allow querying the LDAP server. When working with LDAP Groups, the user should have permissions for any extra group attributes such as memberOf.\n"
                },
                "managerPassword": {
                    "type": "string",
                    "description": "The password of the user binding to the LDAP server when using \"search\" authentication.\n"
                },
                "pagingSupportEnabled": {
                    "type": "boolean",
                    "description": "When set, supports paging results for the LDAP server. This feature requires that the LDAP Server supports a PagedResultsControl configuration.  Default value is `true`.\n"
                },
                "searchBase": {
                    "type": "string",
                    "description": "The Context name in which to search relative to the base DN in the LDAP URL. Multiple search bases may be specified separated by a pipe ( | ).\n"
                },
                "searchFilter": {
                    "type": "string",
                    "description": "A filter expression used to search for the user DN that is used in LDAP authentication. This is an LDAP search filter (as defined in 'RFC 2254') with optional arguments. In this case, the username is the only argument, denoted by '{0}'. Possible examples are: uid={0}) - this would search for a username match on the uid attribute. Authentication using LDAP is performed from the DN found if successful. Default value is blank/empty. \n- Note: LDAP settings should provide a userDnPattern or a searchFilter (or both)\n"
                },
                "searchSubTree": {
                    "type": "boolean",
                    "description": "When set, enables deep search through the sub-tree of the LDAP URL + Search Base.  Default value is `true`.\n"
                },
                "userDnPattern": {
                    "type": "string",
                    "description": "A DN pattern used to log users directly in to the LDAP database. This pattern is used to create a DN string for \"direct\" user authentication, and is relative to the base DN in the LDAP URL. The pattern argument {0} is replaced with the username at runtime. This only works if anonymous binding is allowed and a direct user DN can be used (which is not the default case for Active Directory). For example: uid={0},ou=People. Default value is blank/empty.\n- Note: LDAP settings should provide a userDnPattern or a searchFilter (or both).\n"
                }
            },
            "required": [
                "key",
                "ldapUrl",
                "managerPassword"
            ],
            "inputProperties": {
                "allowUserToAccessProfile": {
                    "type": "boolean",
                    "description": "When set, users created after logging in using LDAP will be able to access their profile page.  Default value is `false`.\n"
                },
                "autoCreateUser": {
                    "type": "boolean",
                    "description": "When set, the system will automatically create new users for those who have logged in using LDAP, and assign them to the default groups.  Default value is `true`.\n"
                },
                "emailAttribute": {
                    "type": "string",
                    "description": "An attribute that can be used to map a user's email address to a user created automatically in Artifactory. Default value is `mail`.\n- Note: If blank/empty string input was set for email_attribute, Default value \"mail\" takes effect. This is to match with Artifactory behavior.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "When set, these settings are enabled. Default value is `true`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The unique ID of the LDAP setting.\n"
                },
                "ldapPoisoningProtection": {
                    "type": "boolean",
                    "description": "Protects against LDAP poisoning by filtering out users exposed to vulnerabilities.  Default value is `true`.\n"
                },
                "ldapUrl": {
                    "type": "string",
                    "description": "Location of the LDAP server in the following format: ldap://myserver:myport/dc=sampledomain,dc=com. The URL should include the base DN used to search for and/or authenticate users.\n"
                },
                "managerDn": {
                    "type": "string",
                    "description": "The full DN of a user with permissions that allow querying the LDAP server. When working with LDAP Groups, the user should have permissions for any extra group attributes such as memberOf.\n"
                },
                "managerPassword": {
                    "type": "string",
                    "description": "The password of the user binding to the LDAP server when using \"search\" authentication.\n"
                },
                "pagingSupportEnabled": {
                    "type": "boolean",
                    "description": "When set, supports paging results for the LDAP server. This feature requires that the LDAP Server supports a PagedResultsControl configuration.  Default value is `true`.\n"
                },
                "searchBase": {
                    "type": "string",
                    "description": "The Context name in which to search relative to the base DN in the LDAP URL. Multiple search bases may be specified separated by a pipe ( | ).\n"
                },
                "searchFilter": {
                    "type": "string",
                    "description": "A filter expression used to search for the user DN that is used in LDAP authentication. This is an LDAP search filter (as defined in 'RFC 2254') with optional arguments. In this case, the username is the only argument, denoted by '{0}'. Possible examples are: uid={0}) - this would search for a username match on the uid attribute. Authentication using LDAP is performed from the DN found if successful. Default value is blank/empty. \n- Note: LDAP settings should provide a userDnPattern or a searchFilter (or both)\n"
                },
                "searchSubTree": {
                    "type": "boolean",
                    "description": "When set, enables deep search through the sub-tree of the LDAP URL + Search Base.  Default value is `true`.\n"
                },
                "userDnPattern": {
                    "type": "string",
                    "description": "A DN pattern used to log users directly in to the LDAP database. This pattern is used to create a DN string for \"direct\" user authentication, and is relative to the base DN in the LDAP URL. The pattern argument {0} is replaced with the username at runtime. This only works if anonymous binding is allowed and a direct user DN can be used (which is not the default case for Active Directory). For example: uid={0},ou=People. Default value is blank/empty.\n- Note: LDAP settings should provide a userDnPattern or a searchFilter (or both).\n"
                }
            },
            "requiredInputs": [
                "key",
                "ldapUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LdapSetting resources.\n",
                "properties": {
                    "allowUserToAccessProfile": {
                        "type": "boolean",
                        "description": "When set, users created after logging in using LDAP will be able to access their profile page.  Default value is `false`.\n"
                    },
                    "autoCreateUser": {
                        "type": "boolean",
                        "description": "When set, the system will automatically create new users for those who have logged in using LDAP, and assign them to the default groups.  Default value is `true`.\n"
                    },
                    "emailAttribute": {
                        "type": "string",
                        "description": "An attribute that can be used to map a user's email address to a user created automatically in Artifactory. Default value is `mail`.\n- Note: If blank/empty string input was set for email_attribute, Default value \"mail\" takes effect. This is to match with Artifactory behavior.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "When set, these settings are enabled. Default value is `true`.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The unique ID of the LDAP setting.\n"
                    },
                    "ldapPoisoningProtection": {
                        "type": "boolean",
                        "description": "Protects against LDAP poisoning by filtering out users exposed to vulnerabilities.  Default value is `true`.\n"
                    },
                    "ldapUrl": {
                        "type": "string",
                        "description": "Location of the LDAP server in the following format: ldap://myserver:myport/dc=sampledomain,dc=com. The URL should include the base DN used to search for and/or authenticate users.\n"
                    },
                    "managerDn": {
                        "type": "string",
                        "description": "The full DN of a user with permissions that allow querying the LDAP server. When working with LDAP Groups, the user should have permissions for any extra group attributes such as memberOf.\n"
                    },
                    "managerPassword": {
                        "type": "string",
                        "description": "The password of the user binding to the LDAP server when using \"search\" authentication.\n"
                    },
                    "pagingSupportEnabled": {
                        "type": "boolean",
                        "description": "When set, supports paging results for the LDAP server. This feature requires that the LDAP Server supports a PagedResultsControl configuration.  Default value is `true`.\n"
                    },
                    "searchBase": {
                        "type": "string",
                        "description": "The Context name in which to search relative to the base DN in the LDAP URL. Multiple search bases may be specified separated by a pipe ( | ).\n"
                    },
                    "searchFilter": {
                        "type": "string",
                        "description": "A filter expression used to search for the user DN that is used in LDAP authentication. This is an LDAP search filter (as defined in 'RFC 2254') with optional arguments. In this case, the username is the only argument, denoted by '{0}'. Possible examples are: uid={0}) - this would search for a username match on the uid attribute. Authentication using LDAP is performed from the DN found if successful. Default value is blank/empty. \n- Note: LDAP settings should provide a userDnPattern or a searchFilter (or both)\n"
                    },
                    "searchSubTree": {
                        "type": "boolean",
                        "description": "When set, enables deep search through the sub-tree of the LDAP URL + Search Base.  Default value is `true`.\n"
                    },
                    "userDnPattern": {
                        "type": "string",
                        "description": "A DN pattern used to log users directly in to the LDAP database. This pattern is used to create a DN string for \"direct\" user authentication, and is relative to the base DN in the LDAP URL. The pattern argument {0} is replaced with the username at runtime. This only works if anonymous binding is allowed and a direct user DN can be used (which is not the default case for Active Directory). For example: uid={0},ou=People. Default value is blank/empty.\n- Note: LDAP settings should provide a userDnPattern or a searchFilter (or both).\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localBowerRepository:LocalBowerRepository": {
            "description": "Creates a local Bower repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_bower_repo = new artifactory.LocalBowerRepository(\"terraform-local-test-bower-repo\", {\n    key: \"terraform-local-test-bower-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localBowerRepository:LocalBowerRepository terraform-local-test-bower-repo terraform-local-test-bower-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalBowerRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localCargoRepository:LocalCargoRepository": {
            "description": "Creates a local Cargo repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_cargo_repo_basic = new artifactory.LocalCargoRepository(\"terraform-local-test-cargo-repo-basic\", {\n    anonymousAccess: false,\n    key: \"terraform-local-test-cargo-repo-basic\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localCargoRepository:LocalCargoRepository terraform-local-test-cargo-repo-basic terraform-local-test-cargo-repo-basic\n```\n\n ",
            "properties": {
                "anonymousAccess": {
                    "type": "boolean",
                    "description": "Cargo client does not send credentials when performing download and search for crates. \nEnable this to allow anonymous access to these resources (only), note that this will override the security anonymous access option.\nDefault value is `false`.\n"
                },
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "anonymousAccess": {
                    "type": "boolean",
                    "description": "Cargo client does not send credentials when performing download and search for crates. \nEnable this to allow anonymous access to these resources (only), note that this will override the security anonymous access option.\nDefault value is `false`.\n"
                },
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "indexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalCargoRepository resources.\n",
                "properties": {
                    "anonymousAccess": {
                        "type": "boolean",
                        "description": "Cargo client does not send credentials when performing download and search for crates. \nEnable this to allow anonymous access to these resources (only), note that this will override the security anonymous access option.\nDefault value is `false`.\n"
                    },
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "indexCompressionFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localChefRepository:LocalChefRepository": {
            "description": "Creates a local Chef repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_chef_repo = new artifactory.LocalChefRepository(\"terraform-local-test-chef-repo\", {\n    key: \"terraform-local-test-chef-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localChefRepository:LocalChefRepository terraform-local-test-chef-repo terraform-local-test-chef-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalChefRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localCocoapodsRepository:LocalCocoapodsRepository": {
            "description": "Creates a local Cocoapods repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_cocoapods_repo = new artifactory.LocalCocoapodsRepository(\"terraform-local-test-cocoapods-repo\", {\n    key: \"terraform-local-test-cocoapods-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localCocoapodsRepository:LocalCocoapodsRepository terraform-local-test-cocoapods-repo terraform-local-test-cocoapods-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalCocoapodsRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localComposerRepository:LocalComposerRepository": {
            "description": "Creates a local Composer repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_composer_repo = new artifactory.LocalComposerRepository(\"terraform-local-test-composer-repo\", {\n    key: \"terraform-local-test-composer-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localComposerRepository:LocalComposerRepository terraform-local-test-composer-repo terraform-local-test-composer-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalComposerRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localConanRepository:LocalConanRepository": {
            "description": "Creates a local Conan repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_conan_repo = new artifactory.LocalConanRepository(\"terraform-local-test-conan-repo\", {\n    key: \"terraform-local-test-conan-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localConanRepository:LocalConanRepository terraform-local-test-conan-repo terraform-local-test-conan-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalConanRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localCondaRepository:LocalCondaRepository": {
            "description": "Creates a local Conda repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_conda_repo = new artifactory.LocalCondaRepository(\"terraform-local-test-conda-repo\", {\n    key: \"terraform-local-test-conda-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localCondaRepository:LocalCondaRepository terraform-local-test-conda-repo terraform-local-test-conda-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalCondaRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localCranRepository:LocalCranRepository": {
            "description": "Creates a local Cran repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_cran_repo = new artifactory.LocalCranRepository(\"terraform-local-test-cran-repo\", {\n    key: \"terraform-local-test-cran-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localCranRepository:LocalCranRepository terraform-local-test-cran-repo terraform-local-test-cran-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalCranRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localGemsRepository:LocalGemsRepository": {
            "description": "Creates a local Gems repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_gems_repo = new artifactory.LocalGemsRepository(\"terraform-local-test-gems-repo\", {\n    key: \"terraform-local-test-gems-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localGemsRepository:LocalGemsRepository terraform-local-test-gems-repo terraform-local-test-gems-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalGemsRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localGenericRepository:LocalGenericRepository": {
            "description": "Creates a local Generic repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_generic_repo = new artifactory.LocalGenericRepository(\"terraform-local-test-generic-repo\", {\n    key: \"terraform-local-test-generic-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localGenericRepository:LocalGenericRepository terraform-local-test-generic-repo terraform-local-test-generic-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. \nIt cannot begin with a number or contain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. \nIt cannot begin with a number or contain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalGenericRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. \nIt cannot begin with a number or contain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localGitltfsRepository:LocalGitltfsRepository": {
            "description": "Creates a local Gitlfs repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_gitlfs_repo = new artifactory.LocalGitltfsRepository(\"terraform-local-test-gitlfs-repo\", {\n    key: \"terraform-local-test-gitlfs-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localGitltfsRepository:LocalGitltfsRepository terraform-local-test-gitlfs-repo terraform-local-test-gitlfs-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalGitltfsRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localGoRepository:LocalGoRepository": {
            "description": "Creates a local Go repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_go_repo = new artifactory.LocalGoRepository(\"terraform-local-test-go-repo\", {\n    key: \"terraform-local-test-go-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localGoRepository:LocalGoRepository terraform-local-test-go-repo terraform-local-test-go-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalGoRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localGradleRepository:LocalGradleRepository": {
            "description": "Creates a local Gradle repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_gradle_repo_basic = new artifactory.LocalGradleRepository(\"terraform-local-test-gradle-repo-basic\", {\n    checksumPolicyType: \"client-checksums\",\n    handleReleases: true,\n    handleSnapshots: true,\n    key: \"terraform-local-test-gradle-repo-basic\",\n    maxUniqueSnapshots: 10,\n    snapshotVersionBehavior: \"unique\",\n    suppressPomConsistencyChecks: true,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localGradleRepository:LocalGradleRepository terraform-local-test-gradle-repo-basic terraform-local-test-gradle-repo-basic\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed\nresource is missing or conflicts with the locally calculated checksum (bad checksum). The options are\n`client-checksums` and `generated-checksums`. For more details,\nplease refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy).\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository. Default is `true`.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository. Default is `true`.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions.\nThe options are -\n* `unique`: Version number is based on a time-stamp (default)\n* `non-unique`: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type\n* `deployer`: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).\nIf the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error.\nYou can disable this behavior by setting the Suppress POM Consistency Checks checkbox. True by default for Gradle repository.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed\nresource is missing or conflicts with the locally calculated checksum (bad checksum). The options are\n`client-checksums` and `generated-checksums`. For more details,\nplease refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy).\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository. Default is `true`.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository. Default is `true`.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions.\nThe options are -\n* `unique`: Version number is based on a time-stamp (default)\n* `non-unique`: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type\n* `deployer`: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).\nIf the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error.\nYou can disable this behavior by setting the Suppress POM Consistency Checks checkbox. True by default for Gradle repository.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalGradleRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "checksumPolicyType": {
                        "type": "string",
                        "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed\nresource is missing or conflicts with the locally calculated checksum (bad checksum). The options are\n`client-checksums` and `generated-checksums`. For more details,\nplease refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy).\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository. Default is `true`.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository. Default is `true`.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "snapshotVersionBehavior": {
                        "type": "string",
                        "description": "Specifies the naming convention for Maven SNAPSHOT versions.\nThe options are -\n* `unique`: Version number is based on a time-stamp (default)\n* `non-unique`: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type\n* `deployer`: Respects the settings in the Maven client that is deploying the artifact.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).\nIf the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error.\nYou can disable this behavior by setting the Suppress POM Consistency Checks checkbox. True by default for Gradle repository.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localHelmRepository:LocalHelmRepository": {
            "description": "Creates a local Helm repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_helm_repo = new artifactory.LocalHelmRepository(\"terraform-local-test-helm-repo\", {\n    key: \"terraform-local-test-helm-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localHelmRepository:LocalHelmRepository terraform-local-test-helm-repo terraform-local-test-helm-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalHelmRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localIvyRepository:LocalIvyRepository": {
            "description": "Creates a local Ivy repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_ivy_repo = new artifactory.LocalIvyRepository(\"terraform-local-test-ivy-repo\", {\n    key: \"terraform-local-test-ivy-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localIvyRepository:LocalIvyRepository terraform-local-test-ivy-repo terraform-local-test-ivy-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalIvyRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "checksumPolicyType": {
                        "type": "string",
                        "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "snapshotVersionBehavior": {
                        "type": "string",
                        "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localMavenRepository:LocalMavenRepository": {
            "description": "Creates a local Maven repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_maven_repo_basic = new artifactory.LocalMavenRepository(\"terraform-local-test-maven-repo-basic\", {\n    checksumPolicyType: \"client-checksums\",\n    handleReleases: true,\n    handleSnapshots: true,\n    key: \"terraform-local-test-maven-repo-basic\",\n    maxUniqueSnapshots: 10,\n    snapshotVersionBehavior: \"unique\",\n    suppressPomConsistencyChecks: false,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localMavenRepository:LocalMavenRepository terraform-local-test-maven-repo-basic terraform-local-test-maven-repo-basic\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed\nresource is missing or conflicts with the locally calculated checksum (bad checksum). The options are\n`client-checksums` and `generated-checksums`. For more details,\nplease refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy).\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository. Default is `true`.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository. Default is `true`.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions.\nThe options are -\n* `unique`: Version number is based on a time-stamp (default)\n* `non-unique`: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type\n* `deployer`: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).\nIf the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error.\nYou can disable this behavior by setting the Suppress POM Consistency Checks checkbox. False by default for Maven repository.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed\nresource is missing or conflicts with the locally calculated checksum (bad checksum). The options are\n`client-checksums` and `generated-checksums`. For more details,\nplease refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy).\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository. Default is `true`.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository. Default is `true`.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions.\nThe options are -\n* `unique`: Version number is based on a time-stamp (default)\n* `non-unique`: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type\n* `deployer`: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).\nIf the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error.\nYou can disable this behavior by setting the Suppress POM Consistency Checks checkbox. False by default for Maven repository.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalMavenRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "checksumPolicyType": {
                        "type": "string",
                        "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed\nresource is missing or conflicts with the locally calculated checksum (bad checksum). The options are\n`client-checksums` and `generated-checksums`. For more details,\nplease refer to [Checksum Policy](https://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy).\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository. Default is `true`.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository. Default is `true`.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "snapshotVersionBehavior": {
                        "type": "string",
                        "description": "Specifies the naming convention for Maven SNAPSHOT versions.\nThe options are -\n* `unique`: Version number is based on a time-stamp (default)\n* `non-unique`: Version number uses a self-overriding naming pattern of artifactId-version-SNAPSHOT.type\n* `deployer`: Respects the settings in the Maven client that is deploying the artifact.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path).\nIf the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error.\nYou can disable this behavior by setting the Suppress POM Consistency Checks checkbox. False by default for Maven repository.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localNpmRepository:LocalNpmRepository": {
            "description": "Creates a local Npm repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_npm_repo = new artifactory.LocalNpmRepository(\"terraform-local-test-npm-repo\", {\n    key: \"terraform-local-test-npm-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localNpmRepository:LocalNpmRepository terraform-local-test-npm-repo terraform-local-test-npm-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalNpmRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localNugetRepository:LocalNugetRepository": {
            "description": "Creates a local Nuget repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_nuget_repo_basic = new artifactory.LocalNugetRepository(\"terraform-local-test-nuget-repo-basic\", {\n    forceNugetAuthentication: true,\n    key: \"terraform-local-test-nuget-repo-basic\",\n    maxUniqueSnapshots: 5,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localNugetRepository:LocalNugetRepository terraform-local-test-nuget-repo-basic terraform-local-test-nuget-repo-basic\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "forceNugetAuthentication": {
                    "type": "boolean",
                    "description": "Force basic authentication credentials in order to use this repository.\nDefault is `false`.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store\nOnce the number of snapshots exceeds this setting, older versions are removed\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "forceNugetAuthentication": {
                    "type": "boolean",
                    "description": "Force basic authentication credentials in order to use this repository.\nDefault is `false`.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store\nOnce the number of snapshots exceeds this setting, older versions are removed\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalNugetRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "forceNugetAuthentication": {
                        "type": "boolean",
                        "description": "Force basic authentication credentials in order to use this repository.\nDefault is `false`.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "The maximum number of unique snapshots of a single artifact to store\nOnce the number of snapshots exceeds this setting, older versions are removed\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localOpkgRepository:LocalOpkgRepository": {
            "description": "Creates a local Opkg repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_opkg_repo = new artifactory.LocalOpkgRepository(\"terraform-local-test-opkg-repo\", {\n    key: \"terraform-local-test-opkg-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localOpkgRepository:LocalOpkgRepository terraform-local-test-opkg-repo terraform-local-test-opkg-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalOpkgRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localPubRepository:LocalPubRepository": {
            "description": "Creates a local Pub repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_pub_repo = new artifactory.LocalPubRepository(\"terraform-local-test-pub-repo\", {\n    key: \"terraform-local-test-pub-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localPubRepository:LocalPubRepository terraform-local-test-pub-repo terraform-local-test-pub-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalPubRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localPuppetRepository:LocalPuppetRepository": {
            "description": "Creates a local Puppet repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_puppet_repo = new artifactory.LocalPuppetRepository(\"terraform-local-test-puppet-repo\", {\n    key: \"terraform-local-test-puppet-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localPuppetRepository:LocalPuppetRepository terraform-local-test-puppet-repo terraform-local-test-puppet-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalPuppetRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localPypiRepository:LocalPypiRepository": {
            "description": "Creates a local Pypi repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_pypi_repo = new artifactory.LocalPypiRepository(\"terraform-local-test-pypi-repo\", {\n    key: \"terraform-local-test-pypi-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localPypiRepository:LocalPypiRepository terraform-local-test-pypi-repo terraform-local-test-pypi-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalPypiRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localRpmRepository:LocalRpmRepository": {
            "description": "Creates a local RPM repository.\n\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localRpmRepository:LocalRpmRepository terraform-local-test-rpm-repo-basic terraform-local-test-rpm-repo-basic\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "calculateYumMetadata": {
                    "type": "boolean",
                    "description": "Default: false.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "enableFileListsIndexing": {
                    "type": "boolean",
                    "description": "Default: false.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "The primary GPG key to be used to sign packages.\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "The secondary GPG key to be used to sign packages.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                },
                "yumGroupFileNames": {
                    "type": "string",
                    "description": "A comma separated list of XML file names containing RPM group component definitions. \nArtifactory includes the group definitions as part of the calculated RPM metadata, as well as automatically\ngenerating a gzipped version of the group files, if required. Default is empty string.\n"
                },
                "yumRootDepth": {
                    "type": "integer",
                    "description": "The depth, relative to the repository's root folder, where RPM metadata is created. \nThis is useful when your repository contains multiple RPM repositories under parallel hierarchies. For example, if\nyour RPMs are stored under 'fedora/linux/$releasever/$basearch', specify a depth of 4. Once the number of snapshots\nexceeds this setting, older versions are removed. A value of 0 (default) indicates there is no limit, and unique\nsnapshots are not cleaned up.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "calculateYumMetadata": {
                    "type": "boolean",
                    "description": "Default: false.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "enableFileListsIndexing": {
                    "type": "boolean",
                    "description": "Default: false.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "The primary GPG key to be used to sign packages.\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "The secondary GPG key to be used to sign packages.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                },
                "yumGroupFileNames": {
                    "type": "string",
                    "description": "A comma separated list of XML file names containing RPM group component definitions. \nArtifactory includes the group definitions as part of the calculated RPM metadata, as well as automatically\ngenerating a gzipped version of the group files, if required. Default is empty string.\n"
                },
                "yumRootDepth": {
                    "type": "integer",
                    "description": "The depth, relative to the repository's root folder, where RPM metadata is created. \nThis is useful when your repository contains multiple RPM repositories under parallel hierarchies. For example, if\nyour RPMs are stored under 'fedora/linux/$releasever/$basearch', specify a depth of 4. Once the number of snapshots\nexceeds this setting, older versions are removed. A value of 0 (default) indicates there is no limit, and unique\nsnapshots are not cleaned up.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalRpmRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "calculateYumMetadata": {
                        "type": "boolean",
                        "description": "Default: false.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "enableFileListsIndexing": {
                        "type": "boolean",
                        "description": "Default: false.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "primaryKeypairRef": {
                        "type": "string",
                        "description": "The primary GPG key to be used to sign packages.\n"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "secondaryKeypairRef": {
                        "type": "string",
                        "description": "The secondary GPG key to be used to sign packages.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    },
                    "yumGroupFileNames": {
                        "type": "string",
                        "description": "A comma separated list of XML file names containing RPM group component definitions. \nArtifactory includes the group definitions as part of the calculated RPM metadata, as well as automatically\ngenerating a gzipped version of the group files, if required. Default is empty string.\n"
                    },
                    "yumRootDepth": {
                        "type": "integer",
                        "description": "The depth, relative to the repository's root folder, where RPM metadata is created. \nThis is useful when your repository contains multiple RPM repositories under parallel hierarchies. For example, if\nyour RPMs are stored under 'fedora/linux/$releasever/$basearch', specify a depth of 4. Once the number of snapshots\nexceeds this setting, older versions are removed. A value of 0 (default) indicates there is no limit, and unique\nsnapshots are not cleaned up.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localSbtRepository:LocalSbtRepository": {
            "description": "Creates a local Sbt repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_sbt_repo = new artifactory.LocalSbtRepository(\"terraform-local-test-sbt-repo\", {\n    key: \"terraform-local-test-sbt-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localSbtRepository:LocalSbtRepository terraform-local-test-sbt-repo terraform-local-test-sbt-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "checksumPolicyType": {
                    "type": "string",
                    "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "snapshotVersionBehavior": {
                    "type": "string",
                    "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalSbtRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "checksumPolicyType": {
                        "type": "string",
                        "description": "Checksum policy determines how Artifactory behaves when a client checksum for a deployed resource is missing or\nconflicts with the locally calculated checksum (bad checksum). Options are: \"client-checksums\", or\n\"server-generated-checksums\". Default: \"client-checksums\"\\n For more details, please refer to Checksum Policy -\nhttps://www.jfrog.com/confluence/display/JFROG/Local+Repositories#LocalRepositories-ChecksumPolicy\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting,\nolder versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "snapshotVersionBehavior": {
                        "type": "string",
                        "description": "Specifies the naming convention for Maven SNAPSHOT versions. The options are - unique: Version number is based on a\ntime-stamp (default) non-unique: Version number uses a self-overriding naming pattern of\nartifactId-version-SNAPSHOT.type deployer: Respects the settings in the Maven client that is deploying the artifact.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "By default, Artifactory keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the\ngroupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the\ndeployment with a \"409 Conflict\" error. You can disable this behavior by setting the Suppress POM Consistency Checks\ncheckbox.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localTerraformBackendRepository:LocalTerraformBackendRepository": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_terraformbackend_repo = new artifactory.LocalTerraformBackendRepository(\"terraform-local-test-terraformbackend-repo\", {\n    key: \"terraform-local-test-terraformbackend-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localTerraformBackendRepository:LocalTerraformBackendRepository terraform-local-test-terraformbackend-repo terraform-local-test-terraformbackend-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalTerraformBackendRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localTerraformModuleRepository:LocalTerraformModuleRepository": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_terraform_module_repo = new artifactory.LocalTerraformModuleRepository(\"terraform-local-test-terraform-module-repo\", {\n    key: \"terraform-local-test-terraform-module-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localTerraformModuleRepository:LocalTerraformModuleRepository terraform-local-test-terraform-module-repo terraform-local-test-terraform-module-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalTerraformModuleRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localTerraformProviderRepository:LocalTerraformProviderRepository": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_terraform_provider_repo = new artifactory.LocalTerraformProviderRepository(\"terraform-local-test-terraform-provider-repo\", {\n    key: \"terraform-local-test-terraform-provider-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localTerraformProviderRepository:LocalTerraformProviderRepository terraform-local-test-terraform-provider-repo terraform-local-test-terraform-provider-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalTerraformProviderRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/localVagrantRepository:LocalVagrantRepository": {
            "description": "Creates a local Vagrant repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_local_test_vagrant_repo = new artifactory.LocalVagrantRepository(\"terraform-local-test-vagrant-repo\", {\n    key: \"terraform-local-test-vagrant-repo\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLocal repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/localVagrantRepository:LocalVagrantRepository terraform-local-test-vagrant-repo terraform-local-test-vagrant-repo\n```\n\n ",
            "properties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n"
                },
                "notes": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "excludesPattern",
                "includesPattern",
                "key",
                "packageType"
            ],
            "inputProperties": {
                "archiveBrowsingEnabled": {
                    "type": "boolean",
                    "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                },
                "description": {
                    "type": "string"
                },
                "downloadDirect": {
                    "type": "boolean",
                    "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "the identity key of the repo.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set name\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LocalVagrantRepository resources.\n",
                "properties": {
                    "archiveBrowsingEnabled": {
                        "type": "boolean",
                        "description": "When set, you may view content such as HTML or Javadoc files directly from Artifactory. This may not be safe and\ntherefore requires strict content moderation to prevent malicious users from uploading content that may compromise\nsecurity (e.g., cross-site scripting attacks).\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadDirect": {
                        "type": "boolean",
                        "description": "When set, download requests to this repository will redirect the client to download the artifact directly from the cloud\nstorage provider. Available in Enterprise+ and Edge licenses only.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "the identity key of the repo.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. When assigning repository to a project, repository key must be prefixed\nwith project key, separated by a dash.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set name\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/managedUser:ManagedUser": {
            "description": "Provides an Artifactory managed user resource. This can be used to create and maintain Artifactory users. For example, service account where password is known and managed externally.\n\nUnlike `artifactory.UnmanagedUser` and `artifactory.User`, the `password` attribute is required and cannot be empty.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a new Artifactory user called terraform\nconst test_user = new artifactory.ManagedUser(\"test-user\", {\n    email: \"test-user@artifactory-terraform.com\",\n    groups: [\n        \"logged-in-users\",\n        \"readers\",\n    ],\n    password: \"my super secret password\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUsers can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/managedUser:ManagedUser test-user myusername\n```\n\n ",
            "properties": {
                "admin": {
                    "type": "boolean",
                    "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                },
                "disableUiAccess": {
                    "type": "boolean",
                    "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email for user.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups this user is a part of.\n"
                },
                "internalPasswordDisabled": {
                    "type": "boolean",
                    "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Username for user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the user.\n"
                },
                "profileUpdatable": {
                    "type": "boolean",
                    "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                }
            },
            "required": [
                "email",
                "name",
                "password"
            ],
            "inputProperties": {
                "admin": {
                    "type": "boolean",
                    "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                },
                "disableUiAccess": {
                    "type": "boolean",
                    "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email for user.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups this user is a part of.\n"
                },
                "internalPasswordDisabled": {
                    "type": "boolean",
                    "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Username for user.\n",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "Password for the user.\n"
                },
                "profileUpdatable": {
                    "type": "boolean",
                    "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                }
            },
            "requiredInputs": [
                "email",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagedUser resources.\n",
                "properties": {
                    "admin": {
                        "type": "boolean",
                        "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                    },
                    "disableUiAccess": {
                        "type": "boolean",
                        "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email for user.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups this user is a part of.\n"
                    },
                    "internalPasswordDisabled": {
                        "type": "boolean",
                        "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Username for user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the user.\n"
                    },
                    "profileUpdatable": {
                        "type": "boolean",
                        "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/mavenRepository:MavenRepository": {
            "description": "Creates a virtual Maven repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Maven+Repository).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst bar = new artifactory.LocalMavenRepository(\"bar\", {\n    key: \"bar\",\n    repoLayoutRef: \"maven-2-default\",\n});\nconst baz = new artifactory.RemoteMavenRepository(\"baz\", {\n    key: \"baz\",\n    repoLayoutRef: \"maven-2-default\",\n    url: \"https://search.maven.com/\",\n});\nconst maven_virt_repo = new artifactory.MavenRepository(\"maven-virt-repo\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    forceMavenAuthentication: true,\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"maven-virt-repo\",\n    notes: \"Internal description\",\n    pomRepositoryReferencesCleanupPolicy: \"discard_active_reference\",\n    repoLayoutRef: \"maven-2-default\",\n    repositories: [\n        bar.key,\n        artifactory_local_maven_repository_baz.key,\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/mavenRepository:MavenRepository maven-virt-repo maven-virt-repo\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "Forces authentication when fetching from remote repos.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": "One of: `\"discard_active_reference\", \"discard_any_reference\", \"nothing\"`\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "forceMavenAuthentication",
                "key",
                "packageType",
                "pomRepositoryReferencesCleanupPolicy"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "Forces authentication when fetching from remote repos.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": "One of: `\"discard_active_reference\", \"discard_any_reference\", \"nothing\"`\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MavenRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "forceMavenAuthentication": {
                        "type": "boolean",
                        "description": "Forces authentication when fetching from remote repos.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "keyPair": {
                        "type": "string",
                        "description": "The keypair used to sign artifacts\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "pomRepositoryReferencesCleanupPolicy": {
                        "type": "string",
                        "description": "One of: `\"discard_active_reference\", \"discard_any_reference\", \"nothing\"`\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/oauthSettings:OauthSettings": {
            "description": "This resource can be used to manage Artifactory's OAuth SSO settings.\n\nOnly a single `artifactory.OauthSettings` resource is meant to be defined.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Configure Artifactory OAuth SSO settings\nconst oauth = new artifactory.OauthSettings(\"oauth\", {\n    allowUserToAccessProfile: true,\n    enable: true,\n    oauthProviders: [{\n        apiUrl: \"https://organization.okta.com/oauth2/v1/userinfo\",\n        authUrl: \"https://organization.okta.com/oauth2/v1/authorize\",\n        clientId: \"foo\",\n        clientSecret: \"bar\",\n        enabled: false,\n        name: \"okta\",\n        tokenUrl: \"https://organization.okta.com/oauth2/v1/token\",\n        type: \"openId\",\n    }],\n    persistUsers: true,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCurrent OAuth SSO settings can be imported using `oauth_settings` as the `ID`, e.g.\n\n```sh\n $ pulumi import artifactory:index/oauthSettings:OauthSettings oauth oauth_settings\n```\n\n ",
            "properties": {
                "allowUserToAccessProfile": {
                    "type": "boolean",
                    "description": "Allow persisted users to access their profile.  Default value is `false`.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable OAuth SSO.  Default value is `true`.\n"
                },
                "oauthProviders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/OauthSettingsOauthProvider:OauthSettingsOauthProvider"
                    },
                    "description": "OAuth provider settings block. Multiple blocks can be defined, at least one is required.\n"
                },
                "persistUsers": {
                    "type": "boolean",
                    "description": "Enable the creation of local Artifactory users.  Default value is `false`.\n"
                }
            },
            "required": [
                "oauthProviders"
            ],
            "inputProperties": {
                "allowUserToAccessProfile": {
                    "type": "boolean",
                    "description": "Allow persisted users to access their profile.  Default value is `false`.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable OAuth SSO.  Default value is `true`.\n"
                },
                "oauthProviders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/OauthSettingsOauthProvider:OauthSettingsOauthProvider"
                    },
                    "description": "OAuth provider settings block. Multiple blocks can be defined, at least one is required.\n"
                },
                "persistUsers": {
                    "type": "boolean",
                    "description": "Enable the creation of local Artifactory users.  Default value is `false`.\n"
                }
            },
            "requiredInputs": [
                "oauthProviders"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OauthSettings resources.\n",
                "properties": {
                    "allowUserToAccessProfile": {
                        "type": "boolean",
                        "description": "Allow persisted users to access their profile.  Default value is `false`.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable OAuth SSO.  Default value is `true`.\n"
                    },
                    "oauthProviders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/OauthSettingsOauthProvider:OauthSettingsOauthProvider"
                        },
                        "description": "OAuth provider settings block. Multiple blocks can be defined, at least one is required.\n"
                    },
                    "persistUsers": {
                        "type": "boolean",
                        "description": "Enable the creation of local Artifactory users.  Default value is `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/permissionTarget:PermissionTarget": {
            "description": "Provides an Artifactory permission target resource. This can be used to create and manage Artifactory permission targets.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a new Artifactory permission target called testpermission\nconst test_perm = new artifactory.PermissionTarget(\"test-perm\", {\n    build: {\n        actions: {\n            users: [{\n                name: \"anonymous\",\n                permissions: [\n                    \"read\",\n                    \"write\",\n                ],\n            }],\n        },\n        includesPatterns: [\"**\"],\n        repositories: [\"artifactory-build-info\"],\n    },\n    releaseBundle: {\n        actions: {\n            users: [{\n                name: \"anonymous\",\n                permissions: [\"read\"],\n            }],\n        },\n        includesPatterns: [\"**\"],\n        repositories: [\"release-bundles\"],\n    },\n    repo: {\n        actions: {\n            groups: [{\n                name: \"readers\",\n                permissions: [\"read\"],\n            }],\n            users: [{\n                name: \"anonymous\",\n                permissions: [\n                    \"read\",\n                    \"write\",\n                ],\n            }],\n        },\n        excludesPatterns: [\"bar/**\"],\n        includesPatterns: [\"foo/**\"],\n        repositories: [\"example-repo-local\"],\n    },\n});\n```\n{{% /example %}}\n{{% /examples %}}\n## Permissions\n\nThe provider supports the following `permission` enums:\n\n* `read`\n* `write`\n* `annotate`\n* `delete`\n* `manage`\n\nThe values can be mapped to the permissions from the official [documentation](https://www.jfrog.com/confluence/display/JFROG/Permissions):\n\n* `read` - matches `Read` permissions.\n* `write` - matches ` Deploy / Cache / Create` permissions.\n* `annotate` - matches `Annotate` permissions.\n* `delete` - matches `Delete / Overwrite` permissions.\n* `manage` - matches `Manage` permissions.\n\n\n## Import\n\nPermission targets can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/permissionTarget:PermissionTarget terraform-test-permission mypermission\n```\n\n ",
            "properties": {
                "build": {
                    "$ref": "#/types/artifactory:index/PermissionTargetBuild:PermissionTargetBuild",
                    "description": "As for repo but for artifactory-build-info permssions.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n"
                },
                "releaseBundle": {
                    "$ref": "#/types/artifactory:index/PermissionTargetReleaseBundle:PermissionTargetReleaseBundle",
                    "description": "As for repo for for release-bundles permissions.\n"
                },
                "repo": {
                    "$ref": "#/types/artifactory:index/PermissionTargetRepo:PermissionTargetRepo",
                    "description": "Repository permission configuration.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "build": {
                    "$ref": "#/types/artifactory:index/PermissionTargetBuild:PermissionTargetBuild",
                    "description": "As for repo but for artifactory-build-info permssions.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n",
                    "willReplaceOnChanges": true
                },
                "releaseBundle": {
                    "$ref": "#/types/artifactory:index/PermissionTargetReleaseBundle:PermissionTargetReleaseBundle",
                    "description": "As for repo for for release-bundles permissions.\n"
                },
                "repo": {
                    "$ref": "#/types/artifactory:index/PermissionTargetRepo:PermissionTargetRepo",
                    "description": "Repository permission configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PermissionTarget resources.\n",
                "properties": {
                    "build": {
                        "$ref": "#/types/artifactory:index/PermissionTargetBuild:PermissionTargetBuild",
                        "description": "As for repo but for artifactory-build-info permssions.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of permission.\n",
                        "willReplaceOnChanges": true
                    },
                    "releaseBundle": {
                        "$ref": "#/types/artifactory:index/PermissionTargetReleaseBundle:PermissionTargetReleaseBundle",
                        "description": "As for repo for for release-bundles permissions.\n"
                    },
                    "repo": {
                        "$ref": "#/types/artifactory:index/PermissionTargetRepo:PermissionTargetRepo",
                        "description": "Repository permission configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/permissionTargets:PermissionTargets": {
            "description": "Provides an Artifactory permission target resource. This can be used to create and manage Artifactory permission targets.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a new Artifactory permission target called testpermission\nconst test_perm = new artifactory.PermissionTarget(\"test-perm\", {\n    build: {\n        actions: {\n            users: [{\n                name: \"anonymous\",\n                permissions: [\n                    \"read\",\n                    \"write\",\n                ],\n            }],\n        },\n        includesPatterns: [\"**\"],\n        repositories: [\"artifactory-build-info\"],\n    },\n    releaseBundle: {\n        actions: {\n            users: [{\n                name: \"anonymous\",\n                permissions: [\"read\"],\n            }],\n        },\n        includesPatterns: [\"**\"],\n        repositories: [\"release-bundles\"],\n    },\n    repo: {\n        actions: {\n            groups: [{\n                name: \"readers\",\n                permissions: [\"read\"],\n            }],\n            users: [{\n                name: \"anonymous\",\n                permissions: [\n                    \"read\",\n                    \"write\",\n                ],\n            }],\n        },\n        excludesPatterns: [\"bar/**\"],\n        includesPatterns: [\"foo/**\"],\n        repositories: [\"example-repo-local\"],\n    },\n});\n```\n{{% /example %}}\n{{% /examples %}}\n## Permissions\n\nThe provider supports the following `permission` enums:\n\n* `read`\n* `write`\n* `annotate`\n* `delete`\n* `manage`\n\nThe values can be mapped to the permissions from the official [documentation](https://www.jfrog.com/confluence/display/JFROG/Permissions):\n\n* `read` - matches `Read` permissions.\n* `write` - matches ` Deploy / Cache / Create` permissions.\n* `annotate` - matches `Annotate` permissions.\n* `delete` - matches `Delete / Overwrite` permissions.\n* `manage` - matches `Manage` permissions.\n\n\n## Import\n\nPermission targets can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/permissionTargets:PermissionTargets terraform-test-permission mypermission\n```\n\n ",
            "properties": {
                "build": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsBuild:PermissionTargetsBuild",
                    "description": "As for repo but for artifactory-build-info permssions.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n"
                },
                "releaseBundle": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsReleaseBundle:PermissionTargetsReleaseBundle",
                    "description": "As for repo for for release-bundles permissions.\n"
                },
                "repo": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsRepo:PermissionTargetsRepo",
                    "description": "Repository permission configuration.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "build": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsBuild:PermissionTargetsBuild",
                    "description": "As for repo but for artifactory-build-info permssions.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n",
                    "willReplaceOnChanges": true
                },
                "releaseBundle": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsReleaseBundle:PermissionTargetsReleaseBundle",
                    "description": "As for repo for for release-bundles permissions.\n"
                },
                "repo": {
                    "$ref": "#/types/artifactory:index/PermissionTargetsRepo:PermissionTargetsRepo",
                    "description": "Repository permission configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PermissionTargets resources.\n",
                "properties": {
                    "build": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsBuild:PermissionTargetsBuild",
                        "description": "As for repo but for artifactory-build-info permssions.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of permission.\n",
                        "willReplaceOnChanges": true
                    },
                    "releaseBundle": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsReleaseBundle:PermissionTargetsReleaseBundle",
                        "description": "As for repo for for release-bundles permissions.\n"
                    },
                    "repo": {
                        "$ref": "#/types/artifactory:index/PermissionTargetsRepo:PermissionTargetsRepo",
                        "description": "Repository permission configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/pullReplication:PullReplication": {
            "description": "Provides an Artifactory pull replication resource. This can be used to create and manage pull replication in Artifactory\nfor a local or remote repo. Pull replication provides a convenient way to proactively populate a remote cache, and is very useful \nwhen waiting for new artifacts to arrive on demand (when first requested) is not desirable due to network latency.\nSee the [Official Documentation](https://www.jfrog.com/confluence/display/JFROG/Repository+Replication#RepositoryReplication-PullReplication).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a replication between two artifactory local repositories\nconst providerTestSource = new artifactory.LocalMavenRepository(\"provider_test_source\", {\n    key: \"provider_test_source\",\n});\nconst providerTestDest = new artifactory.RemoteMavenRepository(\"provider_test_dest\", {\n    key: \"provider_test_dest\",\n    password: \"bar\",\n    url: pulumi.interpolate`https://example.com/artifactory/${artifactory_local_maven_repository_artifactory_local_maven_repository.key}`,\n    username: \"foo\",\n});\nconst remote_rep = new artifactory.PullReplication(\"remote-rep\", {\n    cronExp: \"0 0 * * * ?\",\n    enableEventReplication: true,\n    repoKey: providerTestDest.key,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nPull replication config can be imported using its repo key, e.g.\n\n```sh\n $ pulumi import artifactory:index/pullReplication:PullReplication foo-rep repository-key\n```\n\n ",
            "properties": {
                "checkBinaryExistenceInFilestore": {
                    "type": "boolean",
                    "description": "When true, enables distributed checksum storage. For more information, see\n[Optimizing Repository Replication with Checksum-Based Storage](https://www.jfrog.com/confluence/display/JFROG/Repository+Replication#RepositoryReplication-OptimizingRepositoryReplicationUsingStorageLevelSynchronizationOptions).\n"
                },
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean",
                    "description": "When set, each event will trigger replication of the artifacts changed in this event. This can be any type of event on artifact, e.g. added, deleted or property change.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "When set, this replication will be enabled when saved.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Required for local repository, but not needed for remote repository.\n"
                },
                "pathPrefix": {
                    "type": "string",
                    "description": "Only artifacts that located in path that matches the subpath within the remote repository will be replicated.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "repoKey": {
                    "type": "string"
                },
                "socketTimeoutMillis": {
                    "type": "integer"
                },
                "syncDeletes": {
                    "type": "boolean",
                    "description": "When set, items that were deleted locally should also be deleted remotely (also applies to properties metadata).\n"
                },
                "syncProperties": {
                    "type": "boolean",
                    "description": "When set, the task also synchronizes the properties of replicated artifacts.\n"
                },
                "syncStatistics": {
                    "type": "boolean",
                    "description": "When set, artifact download statistics will also be replicated. Set to avoid inadvertent cleanup at the target instance when setting up replication for disaster recovery.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the target local repository on a remote Artifactory server. For some package types, you need to prefix the repository key in the URL with api/\u003cpkg\u003e. \nFor a list of package types where this is required, see the [note](https://www.jfrog.com/confluence/display/JFROG/Repository+Replication#RepositoryReplication-anchorPREFIX).\nRequired for local repository, but not needed for remote repository.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Required for local repository, but not needed for remote repository.\n"
                }
            },
            "required": [
                "cronExp",
                "enableEventReplication",
                "enabled",
                "repoKey",
                "socketTimeoutMillis",
                "syncDeletes",
                "syncProperties",
                "syncStatistics"
            ],
            "inputProperties": {
                "checkBinaryExistenceInFilestore": {
                    "type": "boolean",
                    "description": "When true, enables distributed checksum storage. For more information, see\n[Optimizing Repository Replication with Checksum-Based Storage](https://www.jfrog.com/confluence/display/JFROG/Repository+Replication#RepositoryReplication-OptimizingRepositoryReplicationUsingStorageLevelSynchronizationOptions).\n"
                },
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean",
                    "description": "When set, each event will trigger replication of the artifacts changed in this event. This can be any type of event on artifact, e.g. added, deleted or property change.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "When set, this replication will be enabled when saved.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Required for local repository, but not needed for remote repository.\n"
                },
                "pathPrefix": {
                    "type": "string",
                    "description": "Only artifacts that located in path that matches the subpath within the remote repository will be replicated.\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting\n"
                },
                "repoKey": {
                    "type": "string"
                },
                "socketTimeoutMillis": {
                    "type": "integer"
                },
                "syncDeletes": {
                    "type": "boolean",
                    "description": "When set, items that were deleted locally should also be deleted remotely (also applies to properties metadata).\n"
                },
                "syncProperties": {
                    "type": "boolean",
                    "description": "When set, the task also synchronizes the properties of replicated artifacts.\n"
                },
                "syncStatistics": {
                    "type": "boolean",
                    "description": "When set, artifact download statistics will also be replicated. Set to avoid inadvertent cleanup at the target instance when setting up replication for disaster recovery.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the target local repository on a remote Artifactory server. For some package types, you need to prefix the repository key in the URL with api/\u003cpkg\u003e. \nFor a list of package types where this is required, see the [note](https://www.jfrog.com/confluence/display/JFROG/Repository+Replication#RepositoryReplication-anchorPREFIX).\nRequired for local repository, but not needed for remote repository.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "Required for local repository, but not needed for remote repository.\n"
                }
            },
            "requiredInputs": [
                "cronExp",
                "repoKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PullReplication resources.\n",
                "properties": {
                    "checkBinaryExistenceInFilestore": {
                        "type": "boolean",
                        "description": "When true, enables distributed checksum storage. For more information, see\n[Optimizing Repository Replication with Checksum-Based Storage](https://www.jfrog.com/confluence/display/JFROG/Repository+Replication#RepositoryReplication-OptimizingRepositoryReplicationUsingStorageLevelSynchronizationOptions).\n"
                    },
                    "cronExp": {
                        "type": "string"
                    },
                    "enableEventReplication": {
                        "type": "boolean",
                        "description": "When set, each event will trigger replication of the artifacts changed in this event. This can be any type of event on artifact, e.g. added, deleted or property change.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "When set, this replication will be enabled when saved.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Required for local repository, but not needed for remote repository.\n"
                    },
                    "pathPrefix": {
                        "type": "string",
                        "description": "Only artifacts that located in path that matches the subpath within the remote repository will be replicated.\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting\n"
                    },
                    "repoKey": {
                        "type": "string"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer"
                    },
                    "syncDeletes": {
                        "type": "boolean",
                        "description": "When set, items that were deleted locally should also be deleted remotely (also applies to properties metadata).\n"
                    },
                    "syncProperties": {
                        "type": "boolean",
                        "description": "When set, the task also synchronizes the properties of replicated artifacts.\n"
                    },
                    "syncStatistics": {
                        "type": "boolean",
                        "description": "When set, artifact download statistics will also be replicated. Set to avoid inadvertent cleanup at the target instance when setting up replication for disaster recovery.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the target local repository on a remote Artifactory server. For some package types, you need to prefix the repository key in the URL with api/\u003cpkg\u003e. \nFor a list of package types where this is required, see the [note](https://www.jfrog.com/confluence/display/JFROG/Repository+Replication#RepositoryReplication-anchorPREFIX).\nRequired for local repository, but not needed for remote repository.\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required for local repository, but not needed for remote repository.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/pushReplication:PushReplication": {
            "description": "Provides an Artifactory push replication resource. This can be used to create and manage Artifactory push replications.\nPush replication is used to synchronize Local Repositories, and is implemented by the Artifactory server on the near \nend invoking a synchronization of artifacts to the far end.\nSee the [Official Documentation](https://www.jfrog.com/confluence/display/JFROG/Repository+Replication#RepositoryReplication-PushReplication).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a replication between two artifactory local repositories\nconst providerTestSource = new artifactory.LocalMavenRepository(\"provider_test_source\", {\n    key: \"provider_test_source\",\n});\nconst providerTestDest = new artifactory.LocalMavenRepository(\"provider_test_dest\", {\n    key: \"provider_test_dest\",\n});\nconst foo_rep = new artifactory.PushReplication(\"foo-rep\", {\n    cronExp: \"0 0 * * * ?\",\n    enableEventReplication: true,\n    replications: [{\n        password: \"$var.artifactory_password\",\n        url: \"$var.artifactory_url\",\n        username: \"$var.artifactory_username\",\n    }],\n    repoKey: providerTestSource.key,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nPush replication configs can be imported using their repo key, e.g.\n\n```sh\n $ pulumi import artifactory:index/pushReplication:PushReplication foo-rep provider_test_source\n```\n\n ",
            "properties": {
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean",
                    "description": "When set, each event will trigger replication of the artifacts changed in this event. This can be any type of event on artifact, e.g. added, deleted or property change.\n"
                },
                "replications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PushReplicationReplication:PushReplicationReplication"
                    }
                },
                "repoKey": {
                    "type": "string"
                }
            },
            "required": [
                "cronExp",
                "enableEventReplication",
                "repoKey"
            ],
            "inputProperties": {
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean",
                    "description": "When set, each event will trigger replication of the artifacts changed in this event. This can be any type of event on artifact, e.g. added, deleted or property change.\n"
                },
                "replications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/PushReplicationReplication:PushReplicationReplication"
                    }
                },
                "repoKey": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "cronExp",
                "repoKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PushReplication resources.\n",
                "properties": {
                    "cronExp": {
                        "type": "string"
                    },
                    "enableEventReplication": {
                        "type": "boolean",
                        "description": "When set, each event will trigger replication of the artifacts changed in this event. This can be any type of event on artifact, e.g. added, deleted or property change.\n"
                    },
                    "replications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/PushReplicationReplication:PushReplicationReplication"
                        }
                    },
                    "repoKey": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/releaseBundleWebhook:ReleaseBundleWebhook": {
            "description": "Provides an Artifactory webhook resource. This can be used to register and manage Artifactory webhook subscription which enables you to be notified or notify other users when such events take place in Artifactory.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst release_bundle_webhook = new artifactory.ReleaseBundleWebhook(\"release-bundle-webhook\", {\n    criteria: {\n        anyReleaseBundle: false,\n        excludePatterns: [\"bar/**\"],\n        includePatterns: [\"foo/**\"],\n        registeredReleaseBundleNames: [\"bundle-name\"],\n    },\n    eventTypes: [\n        \"created\",\n        \"signed\",\n        \"deleted\",\n    ],\n    handlers: [{\n        customHttpHeaders: {\n            \"header-1\": \"value-1\",\n            \"header-2\": \"value-2\",\n        },\n        proxy: \"proxy-key\",\n        secret: \"some-secret\",\n        url: \"http://tempurl.org/webhook\",\n    }],\n    key: \"release-bundle-webhook\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ReleaseBundleWebhookCriteria:ReleaseBundleWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'.\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"created\", \"signed\", \"deleted\".\n"
                },
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/ReleaseBundleWebhookHandler:ReleaseBundleWebhookHandler"
                    },
                    "description": "At least one is required.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                }
            },
            "required": [
                "criteria",
                "eventTypes",
                "handlers",
                "key"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/artifactory:index/ReleaseBundleWebhookCriteria:ReleaseBundleWebhookCriteria",
                    "description": "Specifies where the webhook will be applied on which repositories.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Webhook description. Max length 1000 characters.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of webhook. Default to 'true'.\n"
                },
                "eventTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"created\", \"signed\", \"deleted\".\n"
                },
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/ReleaseBundleWebhookHandler:ReleaseBundleWebhookHandler"
                    },
                    "description": "At least one is required.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                }
            },
            "requiredInputs": [
                "criteria",
                "eventTypes",
                "handlers",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ReleaseBundleWebhook resources.\n",
                "properties": {
                    "criteria": {
                        "$ref": "#/types/artifactory:index/ReleaseBundleWebhookCriteria:ReleaseBundleWebhookCriteria",
                        "description": "Specifies where the webhook will be applied on which repositories.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Webhook description. Max length 1000 characters.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of webhook. Default to 'true'.\n"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Events in Artifactory, Distribution, Release Bundle that function as the event trigger for the Webhook. Allow values: \"created\", \"signed\", \"deleted\".\n"
                    },
                    "handlers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/ReleaseBundleWebhookHandler:ReleaseBundleWebhookHandler"
                        },
                        "description": "At least one is required.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The identity key of the webhook. Must be between 2 and 200 characters. Cannot contain spaces.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteAlpineRepository:RemoteAlpineRepository": {
            "description": "Creates a remote Alpine repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Alpine+Linux+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_alpine = new artifactory.RemoteAlpineRepository(\"my-remote-alpine\", {\n    key: \"my-remote-alpine\",\n    url: \"http://dl-cdn.alpinelinux.org/alpine\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteAlpineRepository:RemoteAlpineRepository my-remote-alpine my-remote-alpine\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteAlpineRepositoryContentSynchronisation:RemoteAlpineRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteAlpineRepositoryContentSynchronisation:RemoteAlpineRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteAlpineRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteAlpineRepositoryContentSynchronisation:RemoteAlpineRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteBowerRepository:RemoteBowerRepository": {
            "description": "Creates a remote Bower repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Bower+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_bower = new artifactory.RemoteBowerRepository(\"my-remote-bower\", {\n    key: \"my-remote-bower\",\n    url: \"https://github.com/\",\n    vcsGitProvider: \"GITHUB\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteBowerRepository:RemoteBowerRepository my-remote-bower my-remote-bower\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bowerRegistryUrl": {
                    "type": "string",
                    "description": "Proxy remote Bower repository. Default value is \"https://registry.bower.io\".\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteBowerRepositoryContentSynchronisation:RemoteBowerRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"GITHUB\". \nPossible values are: \"GITHUB\", \"BITBUCKET\", \"OLDSTASH\", \"STASH\", \"ARTIFACTORY\", \"CUSTOM\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bowerRegistryUrl": {
                    "type": "string",
                    "description": "Proxy remote Bower repository. Default value is \"https://registry.bower.io\".\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteBowerRepositoryContentSynchronisation:RemoteBowerRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"GITHUB\". \nPossible values are: \"GITHUB\", \"BITBUCKET\", \"OLDSTASH\", \"STASH\", \"ARTIFACTORY\", \"CUSTOM\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteBowerRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bowerRegistryUrl": {
                        "type": "string",
                        "description": "Proxy remote Bower repository. Default value is \"https://registry.bower.io\".\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteBowerRepositoryContentSynchronisation:RemoteBowerRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "vcsGitDownloadUrl": {
                        "type": "string",
                        "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                    },
                    "vcsGitProvider": {
                        "type": "string",
                        "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"GITHUB\". \nPossible values are: \"GITHUB\", \"BITBUCKET\", \"OLDSTASH\", \"STASH\", \"ARTIFACTORY\", \"CUSTOM\".\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteCargoRepository:RemoteCargoRepository": {
            "description": "Creates a remote Cargo repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Cargo+Registry).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_cargo = new artifactory.RemoteCargoRepository(\"my-remote-cargo\", {\n    anonymousAccess: true,\n    gitRegistryUrl: \"https://github.com/rust-lang/foo.index\",\n    key: \"my-remote-cargo\",\n    url: \"https://github.com/rust-lang/crates.io-index\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n## Note\n\nIf you get a 400 error: `\"Custom Base URL should be defined prior to creating a Cargo repository\"`,\nyou must set the base url at: `http://${host}/ui/admin/configuration/general`\n\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteCargoRepository:RemoteCargoRepository my-remote-cargo my-remote-cargo\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "anonymousAccess": {
                    "type": "boolean",
                    "description": "Cargo client does not send credentials when performing download and search for crates. Enable this to allow anonymous access to these resources (only), note that this will override the security anonymous access option.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCargoRepositoryContentSynchronisation:RemoteCargoRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "gitRegistryUrl": {
                    "type": "string",
                    "description": "This is the index url, expected to be a git repository. Default value is \"https://github.com/rust-lang/crates.io-index\".\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "gitRegistryUrl",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "anonymousAccess": {
                    "type": "boolean",
                    "description": "Cargo client does not send credentials when performing download and search for crates. Enable this to allow anonymous access to these resources (only), note that this will override the security anonymous access option.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCargoRepositoryContentSynchronisation:RemoteCargoRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "gitRegistryUrl": {
                    "type": "string",
                    "description": "This is the index url, expected to be a git repository. Default value is \"https://github.com/rust-lang/crates.io-index\".\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "gitRegistryUrl",
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteCargoRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "anonymousAccess": {
                        "type": "boolean",
                        "description": "Cargo client does not send credentials when performing download and search for crates. Enable this to allow anonymous access to these resources (only), note that this will override the security anonymous access option.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteCargoRepositoryContentSynchronisation:RemoteCargoRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "gitRegistryUrl": {
                        "type": "string",
                        "description": "This is the index url, expected to be a git repository. Default value is \"https://github.com/rust-lang/crates.io-index\".\n"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteChefRepository:RemoteChefRepository": {
            "description": "Creates a remote Chef repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Chef+Cookbook+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_chef = new artifactory.RemoteChefRepository(\"my-remote-chef\", {\n    key: \"my-remote-chef\",\n    url: \"https://supermarket.chef.io\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteChefRepository:RemoteChefRepository my-remote-chef my-remote-chef\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteChefRepositoryContentSynchronisation:RemoteChefRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteChefRepositoryContentSynchronisation:RemoteChefRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteChefRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteChefRepositoryContentSynchronisation:RemoteChefRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteCocoapodsRepository:RemoteCocoapodsRepository": {
            "description": "Creates a remote CocoaPods repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/CocoaPods+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_cocoapods = new artifactory.RemoteCocoapodsRepository(\"my-remote-cocoapods\", {\n    key: \"my-remote-cocoapods\",\n    podsSpecsRepoUrl: \"https://github.com/CocoaPods/Spec\",\n    url: \"https://github.com/\",\n    vcsGitProvider: \"GITHUB\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteCocoapodsRepository:RemoteCocoapodsRepository my-remote-cocoapods my-remote-cocoapods\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCocoapodsRepositoryContentSynchronisation:RemoteCocoapodsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "podsSpecsRepoUrl": {
                    "type": "string",
                    "description": "Proxy remote CocoaPods Specs repositories. Default value is \"https://github.com/CocoaPods/Specs\".\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"GITHUB\". \nPossible values are: \"GITHUB\", \"BITBUCKET\", \"OLDSTASH\", \"STASH\", \"ARTIFACTORY\", \"CUSTOM\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCocoapodsRepositoryContentSynchronisation:RemoteCocoapodsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "podsSpecsRepoUrl": {
                    "type": "string",
                    "description": "Proxy remote CocoaPods Specs repositories. Default value is \"https://github.com/CocoaPods/Specs\".\n"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"GITHUB\". \nPossible values are: \"GITHUB\", \"BITBUCKET\", \"OLDSTASH\", \"STASH\", \"ARTIFACTORY\", \"CUSTOM\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteCocoapodsRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteCocoapodsRepositoryContentSynchronisation:RemoteCocoapodsRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "podsSpecsRepoUrl": {
                        "type": "string",
                        "description": "Proxy remote CocoaPods Specs repositories. Default value is \"https://github.com/CocoaPods/Specs\".\n"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "vcsGitDownloadUrl": {
                        "type": "string",
                        "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                    },
                    "vcsGitProvider": {
                        "type": "string",
                        "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"GITHUB\". \nPossible values are: \"GITHUB\", \"BITBUCKET\", \"OLDSTASH\", \"STASH\", \"ARTIFACTORY\", \"CUSTOM\".\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteComposerRepository:RemoteComposerRepository": {
            "description": "Creates a remote PHP Composer repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/PHP+Composer+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_composer = new artifactory.RemoteComposerRepository(\"my-remote-composer\", {\n    key: \"my-remote-composer\",\n    url: \"https://github.com/\",\n    vcsGitProvider: \"GITHUB\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteComposerRepository:RemoteComposerRepository my-remote-composer my-remote-composer\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "composerRegistryUrl": {
                    "type": "string",
                    "description": "Proxy remote Composer repository. Default value is \"https://packagist.org\".\n"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteComposerRepositoryContentSynchronisation:RemoteComposerRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"GITHUB\". \nPossible values are: \"GITHUB\", \"BITBUCKET\", \"OLDSTASH\", \"STASH\", \"ARTIFACTORY\", \"CUSTOM\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "composerRegistryUrl": {
                    "type": "string",
                    "description": "Proxy remote Composer repository. Default value is \"https://packagist.org\".\n"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteComposerRepositoryContentSynchronisation:RemoteComposerRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"GITHUB\". \nPossible values are: \"GITHUB\", \"BITBUCKET\", \"OLDSTASH\", \"STASH\", \"ARTIFACTORY\", \"CUSTOM\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteComposerRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "composerRegistryUrl": {
                        "type": "string",
                        "description": "Proxy remote Composer repository. Default value is \"https://packagist.org\".\n"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteComposerRepositoryContentSynchronisation:RemoteComposerRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "vcsGitDownloadUrl": {
                        "type": "string",
                        "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                    },
                    "vcsGitProvider": {
                        "type": "string",
                        "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"GITHUB\". \nPossible values are: \"GITHUB\", \"BITBUCKET\", \"OLDSTASH\", \"STASH\", \"ARTIFACTORY\", \"CUSTOM\".\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteConanRepository:RemoteConanRepository": {
            "description": "Creates a remote Conan repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Conan+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_conan = new artifactory.RemoteConanRepository(\"my-remote-conan\", {\n    key: \"my-remote-conan\",\n    url: \"https://conan.io/center/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteConanRepository:RemoteConanRepository my-remote-conan my-remote-conan\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteConanRepositoryContentSynchronisation:RemoteConanRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteConanRepositoryContentSynchronisation:RemoteConanRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteConanRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteConanRepositoryContentSynchronisation:RemoteConanRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteCondaRepository:RemoteCondaRepository": {
            "description": "Creates a remote Conda repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Conda+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_conda = new artifactory.RemoteCondaRepository(\"my-remote-conda\", {\n    key: \"my-remote-conda\",\n    url: \"https://repo.anaconda.com/pkgs/main\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteCondaRepository:RemoteCondaRepository my-remote-conda my-remote-conda\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCondaRepositoryContentSynchronisation:RemoteCondaRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCondaRepositoryContentSynchronisation:RemoteCondaRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteCondaRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteCondaRepositoryContentSynchronisation:RemoteCondaRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteCranRepository:RemoteCranRepository": {
            "description": "Creates a remote Cran repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/CRAN+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_cran = new artifactory.RemoteCranRepository(\"my-remote-cran\", {\n    key: \"my-remote-cran\",\n    url: \"https://cran.r-project.org/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteCranRepository:RemoteCranRepository my-remote-cran my-remote-cran\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCranRepositoryContentSynchronisation:RemoteCranRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteCranRepositoryContentSynchronisation:RemoteCranRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteCranRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteCranRepositoryContentSynchronisation:RemoteCranRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteDebianRepository:RemoteDebianRepository": {
            "description": "Creates a remote Debian repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Debian+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_debian = new artifactory.RemoteDebianRepository(\"my-remote-debian\", {\n    key: \"my-remote-Debian\",\n    url: \"http://archive.ubuntu.com/ubuntu/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteDebianRepository:RemoteDebianRepository my-remote-debian my-remote-debian\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteDebianRepositoryContentSynchronisation:RemoteDebianRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteDebianRepositoryContentSynchronisation:RemoteDebianRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteDebianRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteDebianRepositoryContentSynchronisation:RemoteDebianRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteDockerRepository:RemoteDockerRepository": {
            "description": "Creates remote Docker repository resource. \nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Docker+Registry)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_docker = new artifactory.RemoteDockerRepository(\"my-remote-docker\", {\n    blockPushingSchema1: true,\n    enableTokenAuthentication: true,\n    externalDependenciesEnabled: true,\n    externalDependenciesPatterns: [\"**/hub.docker.io/**\"],\n    key: \"my-remote-docker\",\n    url: \"https://hub.docker.io/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteDockerRepository:RemoteDockerRepository my-remote-docker my-remote-docker\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "blockPushingSchema1": {
                    "type": "boolean",
                    "description": "When set, Artifactory will block the pulling of Docker images with manifest v2\nschema 1 from the remote repository (i.e. the upstream). It will be possible to pull images with manifest v2 schema 1\nthat exist in the cache.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteDockerRepositoryContentSynchronisation:RemoteDockerRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "enableTokenAuthentication": {
                    "type": "boolean",
                    "description": "Enable token (Bearer) based authentication.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "Also known as 'Foreign Layers Caching' on the UI.\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An allow list of Ant-style path patterns that determine which remote VCS.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "blockPushingSchema1",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "enableTokenAuthentication",
                "excludesPattern",
                "externalDependenciesEnabled",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "blockPushingSchema1": {
                    "type": "boolean",
                    "description": "When set, Artifactory will block the pulling of Docker images with manifest v2\nschema 1 from the remote repository (i.e. the upstream). It will be possible to pull images with manifest v2 schema 1\nthat exist in the cache.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteDockerRepositoryContentSynchronisation:RemoteDockerRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "enableTokenAuthentication": {
                    "type": "boolean",
                    "description": "Enable token (Bearer) based authentication.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "Also known as 'Foreign Layers Caching' on the UI.\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An allow list of Ant-style path patterns that determine which remote VCS.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteDockerRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "blockPushingSchema1": {
                        "type": "boolean",
                        "description": "When set, Artifactory will block the pulling of Docker images with manifest v2\nschema 1 from the remote repository (i.e. the upstream). It will be possible to pull images with manifest v2 schema 1\nthat exist in the cache.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteDockerRepositoryContentSynchronisation:RemoteDockerRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "enableTokenAuthentication": {
                        "type": "boolean",
                        "description": "Enable token (Bearer) based authentication.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "externalDependenciesEnabled": {
                        "type": "boolean",
                        "description": "Also known as 'Foreign Layers Caching' on the UI.\n"
                    },
                    "externalDependenciesPatterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An allow list of Ant-style path patterns that determine which remote VCS.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteGemsRepository:RemoteGemsRepository": {
            "description": "Creates a remote Gems repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/RubyGems+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_gems = new artifactory.RemoteGemsRepository(\"my-remote-gems\", {\n    key: \"my-remote-gems\",\n    url: \"https://rubygems.org/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteGemsRepository:RemoteGemsRepository my-remote-gems my-remote-gems\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGemsRepositoryContentSynchronisation:RemoteGemsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGemsRepositoryContentSynchronisation:RemoteGemsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteGemsRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteGemsRepositoryContentSynchronisation:RemoteGemsRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteGenericRepository:RemoteGenericRepository": {
            "description": "Creates a remote Generic repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_generic = new artifactory.RemoteGenericRepository(\"my-remote-generic\", {\n    key: \"my-remote-generic\",\n    url: \"http://testartifactory.io/artifactory/example-generic/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteGenericRepository:RemoteGenericRepository my-remote-generic my-remote-generic\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGenericRepositoryContentSynchronisation:RemoteGenericRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGenericRepositoryContentSynchronisation:RemoteGenericRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteGenericRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteGenericRepositoryContentSynchronisation:RemoteGenericRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteGitlfsRepository:RemoteGitlfsRepository": {
            "description": "Creates a remote Gitlfs repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Git+LFS+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_gitlfs = new artifactory.RemoteGitlfsRepository(\"my-remote-gitlfs\", {\n    key: \"my-remote-gitlfs\",\n    url: \"http://testartifactory.io/artifactory/example-gitlfs/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteGitlfsRepository:RemoteGitlfsRepository my-remote-gitlfs my-remote-gitlfs\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGitlfsRepositoryContentSynchronisation:RemoteGitlfsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGitlfsRepositoryContentSynchronisation:RemoteGitlfsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteGitlfsRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteGitlfsRepositoryContentSynchronisation:RemoteGitlfsRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteGoRepository:RemoteGoRepository": {
            "description": "Creates a remote Go repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Go+Registry).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_go = new artifactory.RemoteGoRepository(\"my-remote-go\", {\n    key: \"my-remote-go\",\n    url: \"https://proxy.golang.org/\",\n    vcsGitProvider: \"ARTIFACTORY\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteGoRepository:RemoteGoRepository my-remote-go my-remote-go\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGoRepositoryContentSynchronisation:RemoteGoRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"ARTIFACTORY\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGoRepositoryContentSynchronisation:RemoteGoRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"ARTIFACTORY\".\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteGoRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteGoRepositoryContentSynchronisation:RemoteGoRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "vcsGitProvider": {
                        "type": "string",
                        "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub or a remote Artifactory instance. Default value is \"ARTIFACTORY\".\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteGradleRepository:RemoteGradleRepository": {
            "description": "Creates a remote Gradle repository resource.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Remote+Repositories#RemoteRepositories-Maven,Gradle,IvyandSBTRepositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst gradle_remote = new artifactory.RemoteGradleRepository(\"gradle-remote\", {\n    fetchJarsEagerly: true,\n    fetchSourcesEagerly: false,\n    key: \"gradle-remote-foo\",\n    rejectInvalidJars: true,\n    suppressPomConsistencyChecks: true,\n    url: \"https://repo1.maven.org/maven2/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteGradleRepository:RemoteGradleRepository gradle-remote gradle-remote\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGradleRepositoryContentSynchronisation:RemoteGradleRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteGradleRepositoryContentSynchronisation:RemoteGradleRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteGradleRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteGradleRepositoryContentSynchronisation:RemoteGradleRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "fetchJarsEagerly": {
                        "type": "boolean",
                        "description": "When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                    },
                    "fetchSourcesEagerly": {
                        "type": "boolean",
                        "description": "When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "rejectInvalidJars": {
                        "type": "boolean",
                        "description": "Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                    },
                    "remoteRepoChecksumPolicyType": {
                        "type": "string",
                        "description": "Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteHelmRepository:RemoteHelmRepository": {
            "description": "Provides a remote Helm repository. \nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Kubernetes+Helm+Chart+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst helm_remote = new artifactory.RemoteHelmRepository(\"helm-remote\", {\n    externalDependenciesEnabled: true,\n    externalDependenciesPatterns: [\"**github.com**\"],\n    helmChartsBaseUrl: \"https://foo.com\",\n    key: \"helm-remote-foo25\",\n    url: \"https://repo.chartcenter.io/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteHelmRepository:RemoteHelmRepository helm-remote helm-remote\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteHelmRepositoryContentSynchronisation:RemoteHelmRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "When set, external dependencies are rewritten.\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An Allow List of Ant-style path expressions that specify where external\ndependencies may be downloaded from. By default, this is set to ** which means that dependencies may be downloaded\nfrom any external source.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "helmChartsBaseUrl": {
                    "type": "string",
                    "description": "No documentation is available. Hopefully you know what this means.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteHelmRepositoryContentSynchronisation:RemoteHelmRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "When set, external dependencies are rewritten.\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An Allow List of Ant-style path expressions that specify where external\ndependencies may be downloaded from. By default, this is set to ** which means that dependencies may be downloaded\nfrom any external source.\n",
                    "willReplaceOnChanges": true
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "helmChartsBaseUrl": {
                    "type": "string",
                    "description": "No documentation is available. Hopefully you know what this means.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteHelmRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteHelmRepositoryContentSynchronisation:RemoteHelmRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "externalDependenciesEnabled": {
                        "type": "boolean",
                        "description": "When set, external dependencies are rewritten.\n"
                    },
                    "externalDependenciesPatterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Allow List of Ant-style path expressions that specify where external\ndependencies may be downloaded from. By default, this is set to ** which means that dependencies may be downloaded\nfrom any external source.\n",
                        "willReplaceOnChanges": true
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "helmChartsBaseUrl": {
                        "type": "string",
                        "description": "No documentation is available. Hopefully you know what this means.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteIvyRepository:RemoteIvyRepository": {
            "description": "Creates a remote Ivy repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Remote+Repositories#RemoteRepositories-Maven,Gradle,IvyandSBTRepositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst ivy_remote = new artifactory.RemoteIvyRepository(\"ivy-remote\", {\n    fetchJarsEagerly: true,\n    fetchSourcesEagerly: false,\n    key: \"ivy-remote-foo\",\n    rejectInvalidJars: true,\n    suppressPomConsistencyChecks: true,\n    url: \"https://repo1.maven.org/maven2/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteIvyRepository:RemoteIvyRepository ivy-remote ivy-remote\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteIvyRepositoryContentSynchronisation:RemoteIvyRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteIvyRepositoryContentSynchronisation:RemoteIvyRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteIvyRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteIvyRepositoryContentSynchronisation:RemoteIvyRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "fetchJarsEagerly": {
                        "type": "boolean",
                        "description": "When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                    },
                    "fetchSourcesEagerly": {
                        "type": "boolean",
                        "description": "When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "rejectInvalidJars": {
                        "type": "boolean",
                        "description": "Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                    },
                    "remoteRepoChecksumPolicyType": {
                        "type": "string",
                        "description": "Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "- By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteMavenRepository:RemoteMavenRepository": {
            "description": "Creates a remote Maven repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Maven+Repository).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst maven_remote = new artifactory.RemoteMavenRepository(\"maven-remote\", {\n    fetchJarsEagerly: true,\n    fetchSourcesEagerly: false,\n    key: \"maven-remote-foo\",\n    rejectInvalidJars: true,\n    suppressPomConsistencyChecks: false,\n    url: \"https://repo1.maven.org/maven2/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteMavenRepository:RemoteMavenRepository maven-remote maven-remote\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteMavenRepositoryContentSynchronisation:RemoteMavenRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteMavenRepositoryContentSynchronisation:RemoteMavenRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteMavenRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteMavenRepositoryContentSynchronisation:RemoteMavenRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "fetchJarsEagerly": {
                        "type": "boolean",
                        "description": "When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                    },
                    "fetchSourcesEagerly": {
                        "type": "boolean",
                        "description": "When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "rejectInvalidJars": {
                        "type": "boolean",
                        "description": "Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                    },
                    "remoteRepoChecksumPolicyType": {
                        "type": "string",
                        "description": "Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteNpmRepository:RemoteNpmRepository": {
            "description": "Creates a remote Npm repository. \nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/npm+Registry).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst npm_remote = new artifactory.RemoteNpmRepository(\"npm-remote\", {\n    key: \"npm-remote\",\n    listRemoteFolderItems: true,\n    mismatchingMimeTypesOverrideList: \"application/json,application/xml\",\n    url: \"https://registry.npmjs.org\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteNpmRepository:RemoteNpmRepository npm-remote npm-remote\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteNpmRepositoryContentSynchronisation:RemoteNpmRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteNpmRepositoryContentSynchronisation:RemoteNpmRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteNpmRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteNpmRepositoryContentSynchronisation:RemoteNpmRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteNugetRepository:RemoteNugetRepository": {
            "description": "Creates a remote Nuget repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/NuGet+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_nuget = new artifactory.RemoteNugetRepository(\"my-remote-nuget\", {\n    downloadContextPath: \"api/v2/package\",\n    forceNugetAuthentication: true,\n    key: \"my-remote-nuget\",\n    url: \"https://www.nuget.org/\",\n    v3FeedUrl: \"https://api.nuget.org/v3/index.json\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteNugetRepository:RemoteNugetRepository my-remote-nuget my-remote-nuget\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteNugetRepositoryContentSynchronisation:RemoteNugetRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "downloadContextPath": {
                    "type": "string",
                    "description": "The context path prefix through which NuGet downloads are served.\nFor example, the NuGet Gallery download URL is 'https://nuget.org/api/v2/package', so the repository\nURL should be configured as 'https://nuget.org' and the download context path should be configured as 'api/v2/package'. Default value is 'api/v2/package'.\n"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "feedContextPath": {
                    "type": "string",
                    "description": "When proxying a remote NuGet repository, customize feed resource location using this attribute. Default value is 'api/v2'.\n"
                },
                "forceNugetAuthentication": {
                    "type": "boolean",
                    "description": "Force basic authentication credentials in order to use this repository. Default value is 'false'.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "v3FeedUrl": {
                    "type": "string",
                    "description": "The URL to the NuGet v3 feed. Default value is 'https://api.nuget.org/v3/index.json'.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteNugetRepositoryContentSynchronisation:RemoteNugetRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "downloadContextPath": {
                    "type": "string",
                    "description": "The context path prefix through which NuGet downloads are served.\nFor example, the NuGet Gallery download URL is 'https://nuget.org/api/v2/package', so the repository\nURL should be configured as 'https://nuget.org' and the download context path should be configured as 'api/v2/package'. Default value is 'api/v2/package'.\n"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "feedContextPath": {
                    "type": "string",
                    "description": "When proxying a remote NuGet repository, customize feed resource location using this attribute. Default value is 'api/v2'.\n"
                },
                "forceNugetAuthentication": {
                    "type": "boolean",
                    "description": "Force basic authentication credentials in order to use this repository. Default value is 'false'.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "v3FeedUrl": {
                    "type": "string",
                    "description": "The URL to the NuGet v3 feed. Default value is 'https://api.nuget.org/v3/index.json'.\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteNugetRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteNugetRepositoryContentSynchronisation:RemoteNugetRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadContextPath": {
                        "type": "string",
                        "description": "The context path prefix through which NuGet downloads are served.\nFor example, the NuGet Gallery download URL is 'https://nuget.org/api/v2/package', so the repository\nURL should be configured as 'https://nuget.org' and the download context path should be configured as 'api/v2/package'. Default value is 'api/v2/package'.\n"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "feedContextPath": {
                        "type": "string",
                        "description": "When proxying a remote NuGet repository, customize feed resource location using this attribute. Default value is 'api/v2'.\n"
                    },
                    "forceNugetAuthentication": {
                        "type": "boolean",
                        "description": "Force basic authentication credentials in order to use this repository. Default value is 'false'.\n"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "v3FeedUrl": {
                        "type": "string",
                        "description": "The URL to the NuGet v3 feed. Default value is 'https://api.nuget.org/v3/index.json'.\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteOpkgRepository:RemoteOpkgRepository": {
            "description": "Creates a remote Opkg repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Opkg+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_opkg = new artifactory.RemoteOpkgRepository(\"my-remote-opkg\", {\n    key: \"my-remote-opkg\",\n    url: \"http://testartifactory.io/artifactory/example-opkg/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteOpkgRepository:RemoteOpkgRepository my-remote-opkg my-remote-opkg\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteOpkgRepositoryContentSynchronisation:RemoteOpkgRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteOpkgRepositoryContentSynchronisation:RemoteOpkgRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteOpkgRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteOpkgRepositoryContentSynchronisation:RemoteOpkgRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteP2Repository:RemoteP2Repository": {
            "description": "Creates a remote P2 repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/P2+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_p2 = new artifactory.RemoteP2Repository(\"my-remote-p2\", {\n    key: \"my-remote-p2\",\n    url: \"http://testartifactory.io/artifactory/example-p2/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteP2Repository:RemoteP2Repository my-remote-p2 my-remote-p2\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteP2RepositoryContentSynchronisation:RemoteP2RepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteP2RepositoryContentSynchronisation:RemoteP2RepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteP2Repository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteP2RepositoryContentSynchronisation:RemoteP2RepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remotePubRepository:RemotePubRepository": {
            "description": "Creates a remote Pub repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Pub+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_pub = new artifactory.RemotePubRepository(\"my-remote-pub\", {\n    key: \"my-remote-pub\",\n    url: \"https://pub.dartlang.org\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remotePubRepository:RemotePubRepository my-remote-pub my-remote-pub\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemotePubRepositoryContentSynchronisation:RemotePubRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repository URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemotePubRepositoryContentSynchronisation:RemotePubRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repository URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemotePubRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemotePubRepositoryContentSynchronisation:RemotePubRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repository URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remotePuppetRepository:RemotePuppetRepository": {
            "description": "Creates a remote Puppet repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Puppet+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_puppet = new artifactory.RemotePuppetRepository(\"my-remote-puppet\", {\n    key: \"my-remote-puppet\",\n    url: \"https://forgeapi.puppetlabs.com/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remotePuppetRepository:RemotePuppetRepository my-remote-puppet my-remote-puppet\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemotePuppetRepositoryContentSynchronisation:RemotePuppetRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemotePuppetRepositoryContentSynchronisation:RemotePuppetRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemotePuppetRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemotePuppetRepositoryContentSynchronisation:RemotePuppetRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remotePypiRepository:RemotePypiRepository": {
            "description": "Creates a remote Pypi repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/PyPI+Repositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst pypi_remote = new artifactory.RemotePypiRepository(\"pypi-remote\", {\n    key: \"pypi-remote-foo\",\n    pypiRegistryUrl: \"https://pypi.org\",\n    pypiRepositorySuffix: \"simple\",\n    url: \"https://files.pythonhosted.org\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remotePypiRepository:RemotePypiRepository pypi-remote pypi-remote\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemotePypiRepositoryContentSynchronisation:RemotePypiRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "pypiRegistryUrl": {
                    "type": "string",
                    "description": "To configure the remote repo to proxy public external PyPI repository, or a PyPI repository hosted on another Artifactory server. See JFrog Pypi documentation [here](https://www.jfrog.com/confluence/display/JFROG/PyPI+Repositories) for the usage details. Default value is 'https://pypi.org'.\n"
                },
                "pypiRepositorySuffix": {
                    "type": "string",
                    "description": "Usually should be left as a default for 'simple', unless the remote is a PyPI server that has custom registry suffix, like +simple in DevPI. Default value is 'simple'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemotePypiRepositoryContentSynchronisation:RemotePypiRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "pypiRegistryUrl": {
                    "type": "string",
                    "description": "To configure the remote repo to proxy public external PyPI repository, or a PyPI repository hosted on another Artifactory server. See JFrog Pypi documentation [here](https://www.jfrog.com/confluence/display/JFROG/PyPI+Repositories) for the usage details. Default value is 'https://pypi.org'.\n"
                },
                "pypiRepositorySuffix": {
                    "type": "string",
                    "description": "Usually should be left as a default for 'simple', unless the remote is a PyPI server that has custom registry suffix, like +simple in DevPI. Default value is 'simple'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemotePypiRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemotePypiRepositoryContentSynchronisation:RemotePypiRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "pypiRegistryUrl": {
                        "type": "string",
                        "description": "To configure the remote repo to proxy public external PyPI repository, or a PyPI repository hosted on another Artifactory server. See JFrog Pypi documentation [here](https://www.jfrog.com/confluence/display/JFROG/PyPI+Repositories) for the usage details. Default value is 'https://pypi.org'.\n"
                    },
                    "pypiRepositorySuffix": {
                        "type": "string",
                        "description": "Usually should be left as a default for 'simple', unless the remote is a PyPI server that has custom registry suffix, like +simple in DevPI. Default value is 'simple'.\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteRpmRepository:RemoteRpmRepository": {
            "description": "Creates a remote RPM repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/RPM+Repositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_rpm = new artifactory.RemoteRpmRepository(\"my-remote-rpm\", {\n    key: \"my-remote-rpm\",\n    url: \"http://mirror.centos.org/centos/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteRpmRepository:RemoteRpmRepository my-remote-rpm my-remote-rpm\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteRpmRepositoryContentSynchronisation:RemoteRpmRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteRpmRepositoryContentSynchronisation:RemoteRpmRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteRpmRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteRpmRepositoryContentSynchronisation:RemoteRpmRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteSbtRepository:RemoteSbtRepository": {
            "description": "Creates a remote Sbt repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/SBT+Repositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst sbt_remote = new artifactory.RemoteSbtRepository(\"sbt-remote\", {\n    fetchJarsEagerly: true,\n    fetchSourcesEagerly: false,\n    key: \"sbt-remote-foo\",\n    rejectInvalidJars: true,\n    suppressPomConsistencyChecks: true,\n    url: \"https://repo1.maven.org/maven2/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteSbtRepository:RemoteSbtRepository sbt-remote sbt-remote\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteSbtRepositoryContentSynchronisation:RemoteSbtRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteSbtRepositoryContentSynchronisation:RemoteSbtRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "fetchJarsEagerly": {
                    "type": "boolean",
                    "description": "When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                },
                "fetchSourcesEagerly": {
                    "type": "boolean",
                    "description": "- When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                },
                "handleReleases": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                },
                "handleSnapshots": {
                    "type": "boolean",
                    "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "rejectInvalidJars": {
                    "type": "boolean",
                    "description": "Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                },
                "remoteRepoChecksumPolicyType": {
                    "type": "string",
                    "description": "Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "suppressPomConsistencyChecks": {
                    "type": "boolean",
                    "description": "By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteSbtRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteSbtRepositoryContentSynchronisation:RemoteSbtRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "fetchJarsEagerly": {
                        "type": "boolean",
                        "description": "When set, if a POM is requested, Artifactory attempts to fetch the corresponding jar in the background. This will accelerate first access time to the jar when it is subsequently requested.\n"
                    },
                    "fetchSourcesEagerly": {
                        "type": "boolean",
                        "description": "- When set, if a binaries jar is requested, Artifactory attempts to fetch the corresponding source jar in the background. This will accelerate first access time to the source jar when it is subsequently requested.\n"
                    },
                    "handleReleases": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy release artifacts into this repository.\n"
                    },
                    "handleSnapshots": {
                        "type": "boolean",
                        "description": "If set, Artifactory allows you to deploy snapshot artifacts into this repository.\n"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "rejectInvalidJars": {
                        "type": "boolean",
                        "description": "Reject the caching of jar files that are found to be invalid. For example, pseudo jars retrieved behind a \"captive portal\".\n"
                    },
                    "remoteRepoChecksumPolicyType": {
                        "type": "string",
                        "description": "Checking the Checksum effectively verifies the integrity of a deployed resource. The Checksum Policy determines how the system behaves when a client checksum for a remote resource is missing or conflicts with the locally calculated checksum. Available policies are 'generate-if-absent', 'fail', 'ignore-and-generate', and 'pass-thru'.\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "suppressPomConsistencyChecks": {
                        "type": "boolean",
                        "description": "By default, the system keeps your repositories healthy by refusing POMs with incorrect coordinates (path). If the groupId:artifactId:version information inside the POM does not match the deployed path, Artifactory rejects the deployment with a \"409 Conflict\" error. You can disable this behavior by setting this attribute to 'true'.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteTerraformRepository:RemoteTerraformRepository": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_remote = new artifactory.RemoteTerraformRepository(\"terraform-remote\", {\n    key: \"terraform-remote\",\n    terraformProvidersUrl: \"https://releases.hashicorp.com\",\n    terraformRegistryUrl: \"https://registry.terraform.io\",\n    url: \"https://github.com/\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteTerraformRepository:RemoteTerraformRepository terraform-remote terraform-remote\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteTerraformRepositoryContentSynchronisation:RemoteTerraformRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "terraformProvidersUrl": {
                    "type": "string",
                    "description": "The base URL of the Provider's storage API. When using Smart remote repositories, set the URL to\n\u003cbase_Artifactory_URL\u003e/api/terraform/repokey/providers. Default value in UI is https://releases.hashicorp.com\n"
                },
                "terraformRegistryUrl": {
                    "type": "string",
                    "description": "The base URL of the registry API. When using Smart Remote Repositories, set the URL to\n\u003cbase_Artifactory_URL\u003e/api/terraform/repokey. Default value in UI is https://registry.terraform.io\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The base URL of the Module storage API.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteTerraformRepositoryContentSynchronisation:RemoteTerraformRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "terraformProvidersUrl": {
                    "type": "string",
                    "description": "The base URL of the Provider's storage API. When using Smart remote repositories, set the URL to\n\u003cbase_Artifactory_URL\u003e/api/terraform/repokey/providers. Default value in UI is https://releases.hashicorp.com\n"
                },
                "terraformRegistryUrl": {
                    "type": "string",
                    "description": "The base URL of the registry API. When using Smart Remote Repositories, set the URL to\n\u003cbase_Artifactory_URL\u003e/api/terraform/repokey. Default value in UI is https://registry.terraform.io\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The base URL of the Module storage API.\n"
                },
                "username": {
                    "type": "string"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteTerraformRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteTerraformRepositoryContentSynchronisation:RemoteTerraformRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "terraformProvidersUrl": {
                        "type": "string",
                        "description": "The base URL of the Provider's storage API. When using Smart remote repositories, set the URL to\n\u003cbase_Artifactory_URL\u003e/api/terraform/repokey/providers. Default value in UI is https://releases.hashicorp.com\n"
                    },
                    "terraformRegistryUrl": {
                        "type": "string",
                        "description": "The base URL of the registry API. When using Smart Remote Repositories, set the URL to\n\u003cbase_Artifactory_URL\u003e/api/terraform/repokey. Default value in UI is https://registry.terraform.io\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The base URL of the Module storage API.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/remoteVcsRepository:RemoteVcsRepository": {
            "description": "Creates a remote VCS repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/VCS+Repositories).\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst my_remote_vcs = new artifactory.RemoteGoRepository(\"my-remote-vcs\", {\n    key: \"my-remote-vcs\",\n    maxUniqueSnapshots: 5,\n    url: \"https://github.com/\",\n    vcsGitProvider: \"GITHUB\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRemote repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/remoteVcsRepository:RemoteVcsRepository my-remote-vcs my-remote-vcs\n```\n\n ",
            "properties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteVcsRepositoryContentSynchronisation:RemoteVcsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "failedRetrievalCachePeriodSecs": {
                    "type": "integer",
                    "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "packageType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub, Bitbucket, \nStash, a remote Artifactory instance or a custom Git repository. Allowed values are: 'GITHUB', 'BITBUCKET', 'OLDSTASH',\n'STASH', 'ARTIFACTORY', 'CUSTOM'. Default value is 'GITHUB'\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "required": [
                "allowAnyHostAuth",
                "blackedOut",
                "blockMismatchingMimeTypes",
                "bypassHeadRequests",
                "clientTlsCertificate",
                "contentSynchronisation",
                "description",
                "enableCookieManagement",
                "excludesPattern",
                "failedRetrievalCachePeriodSecs",
                "hardFail",
                "includesPattern",
                "key",
                "missedCachePeriodSeconds",
                "offline",
                "packageType",
                "priorityResolution",
                "remoteRepoLayoutRef",
                "retrievalCachePeriodSeconds",
                "shareConfiguration",
                "socketTimeoutMillis",
                "storeArtifactsLocally",
                "synchronizeProperties",
                "unusedArtifactsCleanupPeriodEnabled",
                "unusedArtifactsCleanupPeriodHours",
                "url"
            ],
            "inputProperties": {
                "allowAnyHostAuth": {
                    "type": "boolean",
                    "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                },
                "assumedOfflinePeriodSecs": {
                    "type": "integer",
                    "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                },
                "blackedOut": {
                    "type": "boolean",
                    "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                },
                "blockMismatchingMimeTypes": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "bypassHeadRequests": {
                    "type": "boolean",
                    "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                },
                "clientTlsCertificate": {
                    "type": "string"
                },
                "contentSynchronisation": {
                    "$ref": "#/types/artifactory:index/RemoteVcsRepositoryContentSynchronisation:RemoteVcsRepositoryContentSynchronisation"
                },
                "description": {
                    "type": "string"
                },
                "enableCookieManagement": {
                    "type": "boolean",
                    "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                },
                "hardFail": {
                    "type": "boolean",
                    "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "listRemoteFolderItems": {
                    "type": "boolean",
                    "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                },
                "maxUniqueSnapshots": {
                    "type": "integer",
                    "description": "The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                },
                "mismatchingMimeTypesOverrideList": {
                    "type": "string",
                    "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                },
                "missedCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                },
                "notes": {
                    "type": "string"
                },
                "offline": {
                    "type": "boolean",
                    "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                },
                "password": {
                    "type": "string"
                },
                "priorityResolution": {
                    "type": "boolean",
                    "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "propagateQueryParams": {
                    "type": "boolean",
                    "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                },
                "propertySets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property set names\n"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies settings\n"
                },
                "remoteRepoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the remote layout mapping\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                },
                "shareConfiguration": {
                    "type": "boolean"
                },
                "socketTimeoutMillis": {
                    "type": "integer",
                    "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                },
                "storeArtifactsLocally": {
                    "type": "boolean",
                    "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                },
                "synchronizeProperties": {
                    "type": "boolean",
                    "description": "When set, remote artifacts are fetched along with their properties.\n"
                },
                "unusedArtifactsCleanupPeriodEnabled": {
                    "type": "boolean"
                },
                "unusedArtifactsCleanupPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The remote repo URL.\n"
                },
                "username": {
                    "type": "string"
                },
                "vcsGitDownloadUrl": {
                    "type": "string",
                    "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                },
                "vcsGitProvider": {
                    "type": "string",
                    "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub, Bitbucket, \nStash, a remote Artifactory instance or a custom Git repository. Allowed values are: 'GITHUB', 'BITBUCKET', 'OLDSTASH',\n'STASH', 'ARTIFACTORY', 'CUSTOM'. Default value is 'GITHUB'\n"
                },
                "xrayIndex": {
                    "type": "boolean",
                    "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                }
            },
            "requiredInputs": [
                "key",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteVcsRepository resources.\n",
                "properties": {
                    "allowAnyHostAuth": {
                        "type": "boolean",
                        "description": "Also known as 'Lenient Host Authentication', Allow credentials of this repository to be used on requests redirected to\nany other host.\n"
                    },
                    "assumedOfflinePeriodSecs": {
                        "type": "integer",
                        "description": "The number of seconds the repository stays in assumed offline state after a connection error. At the end of this time,\nan online check is attempted in order to reset the offline status. A value of 0 means the repository is never assumed\noffline. Default to 300.\n"
                    },
                    "blackedOut": {
                        "type": "boolean",
                        "description": "(A.K.A 'Ignore Repository' on the UI) When set, the repository or its local cache do not participate in artifact\nresolution.\n"
                    },
                    "blockMismatchingMimeTypes": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "bypassHeadRequests": {
                        "type": "boolean",
                        "description": "Before caching an artifact, Artifactory first sends a HEAD request to the remote resource. In some remote resources,\nHEAD requests are disallowed and therefore rejected, even though downloading the artifact is allowed. When checked,\nArtifactory will bypass the HEAD request and cache the artifact directly using a GET request.\n"
                    },
                    "clientTlsCertificate": {
                        "type": "string"
                    },
                    "contentSynchronisation": {
                        "$ref": "#/types/artifactory:index/RemoteVcsRepositoryContentSynchronisation:RemoteVcsRepositoryContentSynchronisation"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableCookieManagement": {
                        "type": "boolean",
                        "description": "Enables cookie management if the remote repository uses cookies to manage client state.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*. By default no\nartifacts are excluded.\n"
                    },
                    "failedRetrievalCachePeriodSecs": {
                        "type": "integer",
                        "deprecationMessage": "This field is not returned in a get payload but is offered on the UI. It's inserted here for inclusive and informational reasons. It does not function"
                    },
                    "hardFail": {
                        "type": "boolean",
                        "description": "When set, Artifactory will return an error to the client that causes the build to fail if there is a failure to\ncommunicate with this repository.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "listRemoteFolderItems": {
                        "type": "boolean",
                        "description": "Lists the items of remote folders in simple and list browsing. The remote content is cached according to the value of\nthe 'Retrieval Cache Period'. Default value is 'false'.\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "The local address to be used when creating connections. Useful for specifying the interface to use on systems with\nmultiple network interfaces.\n"
                    },
                    "maxUniqueSnapshots": {
                        "type": "integer",
                        "description": "The maximum number of unique snapshots of a single artifact to store.\nOnce the number of snapshots exceeds this setting, older versions are removed.\nA value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.\n"
                    },
                    "mismatchingMimeTypesOverrideList": {
                        "type": "string",
                        "description": "The set of mime types that should override the block_mismatching_mime_types setting. Eg:\n\"application/json,application/xml\". Default value is empty.\n"
                    },
                    "missedCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to cache artifact retrieval misses (artifact not found). A value of 0 indicates no caching.\n"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "offline": {
                        "type": "boolean",
                        "description": "If set, Artifactory does not try to fetch remote artifacts. Only locally-cached artifacts are retrieved.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "priorityResolution": {
                        "type": "boolean",
                        "description": "Setting repositories with priority will cause metadata to be merged only from repositories set with this field\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "description": "When set, if query params are included in the request to Artifactory, they will be passed on to the remote repository.\n"
                    },
                    "propertySets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of property set names\n"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies settings\n"
                    },
                    "remoteRepoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the remote layout mapping\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "The metadataRetrievalTimeoutSecs field not allowed to be bigger then retrievalCachePeriodSecs field.\n"
                    },
                    "shareConfiguration": {
                        "type": "boolean"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer",
                        "description": "Network timeout (in ms) to use when establishing a connection and for unanswered requests. Timing out on a network\noperation is considered a retrieval failure.\n"
                    },
                    "storeArtifactsLocally": {
                        "type": "boolean",
                        "description": "When set, the repository should store cached artifacts locally. When not set, artifacts are not stored locally, and\ndirect repository-to-client streaming is used. This can be useful for multi-server setups over a high-speed LAN, with\none Artifactory caching certain data on central storage, and streaming it directly to satellite pass-though Artifactory\nservers.\n"
                    },
                    "synchronizeProperties": {
                        "type": "boolean",
                        "description": "When set, remote artifacts are fetched along with their properties.\n"
                    },
                    "unusedArtifactsCleanupPeriodEnabled": {
                        "type": "boolean"
                    },
                    "unusedArtifactsCleanupPeriodHours": {
                        "type": "integer",
                        "description": "The number of hours to wait before an artifact is deemed \"unused\" and eligible for cleanup from the repository. A value\nof 0 means automatic cleanup of cached artifacts is disabled.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The remote repo URL.\n"
                    },
                    "username": {
                        "type": "string"
                    },
                    "vcsGitDownloadUrl": {
                        "type": "string",
                        "description": "This attribute is used when vcs_git_provider is set to 'CUSTOM'. Provided URL will be used as proxy.\n"
                    },
                    "vcsGitProvider": {
                        "type": "string",
                        "description": "Artifactory supports proxying the following Git providers out-of-the-box: GitHub, Bitbucket, \nStash, a remote Artifactory instance or a custom Git repository. Allowed values are: 'GITHUB', 'BITBUCKET', 'OLDSTASH',\n'STASH', 'ARTIFACTORY', 'CUSTOM'. Default value is 'GITHUB'\n"
                    },
                    "xrayIndex": {
                        "type": "boolean",
                        "description": "Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via\nXray settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/replicationConfig:ReplicationConfig": {
            "description": "Note: this resource is deprecated in favor of `artifactory.PushReplication` resource.\n\nProvides an Artifactory replication config resource. This can be used to create and manage Artifactory replications.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a replication between two artifactory local repositories\nconst providerTestSource = new artifactory.LocalMavenRepository(\"provider_test_source\", {\n    key: \"provider_test_source\",\n});\nconst providerTestDest = new artifactory.LocalMavenRepository(\"provider_test_dest\", {\n    key: \"provider_test_dest\",\n});\nconst foo_rep = new artifactory.ReplicationConfig(\"foo-rep\", {\n    cronExp: \"0 0 * * * ?\",\n    enableEventReplication: true,\n    replications: [{\n        password: \"$var.artifactory_password\",\n        url: \"$var.artifactory_url\",\n        username: \"$var.artifactory_username\",\n    }],\n    repoKey: providerTestSource.key,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nReplication configs can be imported using their repo key, e.g.\n\n```sh\n $ pulumi import artifactory:index/replicationConfig:ReplicationConfig foo-rep provider_test_source\n```\n\n ",
            "properties": {
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean"
                },
                "replications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/ReplicationConfigReplication:ReplicationConfigReplication"
                    }
                },
                "repoKey": {
                    "type": "string"
                }
            },
            "required": [
                "cronExp",
                "enableEventReplication",
                "repoKey"
            ],
            "inputProperties": {
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean"
                },
                "replications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/artifactory:index/ReplicationConfigReplication:ReplicationConfigReplication"
                    }
                },
                "repoKey": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "cronExp",
                "repoKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ReplicationConfig resources.\n",
                "properties": {
                    "cronExp": {
                        "type": "string"
                    },
                    "enableEventReplication": {
                        "type": "boolean"
                    },
                    "replications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/artifactory:index/ReplicationConfigReplication:ReplicationConfigReplication"
                        }
                    },
                    "repoKey": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/samlSettings:SamlSettings": {
            "description": "This resource can be used to manage Artifactory's SAML SSO settings.\n\nOnly a single `artifactory.SamlSettings` resource is meant to be defined.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Configure Artifactory SAML SSO settings\nconst saml = new artifactory.SamlSettings(\"saml\", {\n    allowUserToAccessProfile: true,\n    autoRedirect: true,\n    certificate: \"test-certificate\",\n    emailAttribute: \"email\",\n    enable: true,\n    groupAttribute: \"groups\",\n    loginUrl: \"test-login-url\",\n    logoutUrl: \"test-logout-url\",\n    noAutoUserCreation: false,\n    serviceProviderName: \"okta\",\n    syncGroups: true,\n    useEncryptedAssertion: false,\n    verifyAudienceRestriction: true,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCurrent SAML SSO settings can be imported using `saml_settings` as the `ID`, e.g.\n\n```sh\n $ pulumi import artifactory:index/samlSettings:SamlSettings saml saml_settings\n```\n\n ",
            "properties": {
                "allowUserToAccessProfile": {
                    "type": "boolean",
                    "description": "Allow persisted users to access their profile.  Default value is `true`.\n"
                },
                "autoRedirect": {
                    "type": "boolean",
                    "description": "Auto redirect to login through the IdP when clicking on Artifactory's login link.  Default value is `false`.\n"
                },
                "certificate": {
                    "type": "string",
                    "description": "SAML certificate that contains the public key for the IdP service provider.  Used by Artifactory to verify sign-in requests. Default value is ``.\n"
                },
                "emailAttribute": {
                    "type": "string",
                    "description": "Name of the attribute in the SAML response from the IdP that contains the user's email. Default value is ``.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable SAML SSO.  Default value is `true`.\n"
                },
                "groupAttribute": {
                    "type": "string",
                    "description": "Name of the attribute in the SAML response from the IdP that contains the user's group memberships. Default value is ``.\n"
                },
                "loginUrl": {
                    "type": "string",
                    "description": "Service provider login url configured on the IdP.\n"
                },
                "logoutUrl": {
                    "type": "string",
                    "description": "Service provider logout url, or where to redirect after user logs out.\n"
                },
                "noAutoUserCreation": {
                    "type": "boolean",
                    "description": "When automatic user creation is off, authenticated users are not automatically created inside Artifactory. Instead, for every request from an SSO user, the user is temporarily associated with default groups (if such groups are defined), and the permissions for these groups apply. Without auto-user creation, you must manually create the user inside Artifactory to manage user permissions not attached to their default groups. Default value is `false`.\n"
                },
                "serviceProviderName": {
                    "type": "string",
                    "description": "The SAML service provider name. This should be a URI that is also known as the entityID, providerID, or entity identity.\n"
                },
                "syncGroups": {
                    "type": "boolean",
                    "description": "Associate user with Artifactory groups based on the `group_attribute` provided in the SAML response from the identity provider.  Default value is `false`.\n"
                },
                "useEncryptedAssertion": {
                    "type": "boolean",
                    "description": "When set, an X.509 public certificate will be created by Artifactory. Download this certificate and upload it to your IDP and choose your own encryption algorithm. This process will let you encrypt the assertion section in your SAML response. Default value is `false`.\n"
                },
                "verifyAudienceRestriction": {
                    "type": "boolean",
                    "description": "Enable \"audience\", or who the SAML assertion is intended for.  Ensures that the correct service provider intended for Artifactory is used on the IdP.  Default value is `true`.\n"
                }
            },
            "required": [
                "loginUrl",
                "logoutUrl",
                "serviceProviderName"
            ],
            "inputProperties": {
                "allowUserToAccessProfile": {
                    "type": "boolean",
                    "description": "Allow persisted users to access their profile.  Default value is `true`.\n"
                },
                "autoRedirect": {
                    "type": "boolean",
                    "description": "Auto redirect to login through the IdP when clicking on Artifactory's login link.  Default value is `false`.\n"
                },
                "certificate": {
                    "type": "string",
                    "description": "SAML certificate that contains the public key for the IdP service provider.  Used by Artifactory to verify sign-in requests. Default value is ``.\n"
                },
                "emailAttribute": {
                    "type": "string",
                    "description": "Name of the attribute in the SAML response from the IdP that contains the user's email. Default value is ``.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable SAML SSO.  Default value is `true`.\n"
                },
                "groupAttribute": {
                    "type": "string",
                    "description": "Name of the attribute in the SAML response from the IdP that contains the user's group memberships. Default value is ``.\n"
                },
                "loginUrl": {
                    "type": "string",
                    "description": "Service provider login url configured on the IdP.\n"
                },
                "logoutUrl": {
                    "type": "string",
                    "description": "Service provider logout url, or where to redirect after user logs out.\n"
                },
                "noAutoUserCreation": {
                    "type": "boolean",
                    "description": "When automatic user creation is off, authenticated users are not automatically created inside Artifactory. Instead, for every request from an SSO user, the user is temporarily associated with default groups (if such groups are defined), and the permissions for these groups apply. Without auto-user creation, you must manually create the user inside Artifactory to manage user permissions not attached to their default groups. Default value is `false`.\n"
                },
                "serviceProviderName": {
                    "type": "string",
                    "description": "The SAML service provider name. This should be a URI that is also known as the entityID, providerID, or entity identity.\n"
                },
                "syncGroups": {
                    "type": "boolean",
                    "description": "Associate user with Artifactory groups based on the `group_attribute` provided in the SAML response from the identity provider.  Default value is `false`.\n"
                },
                "useEncryptedAssertion": {
                    "type": "boolean",
                    "description": "When set, an X.509 public certificate will be created by Artifactory. Download this certificate and upload it to your IDP and choose your own encryption algorithm. This process will let you encrypt the assertion section in your SAML response. Default value is `false`.\n"
                },
                "verifyAudienceRestriction": {
                    "type": "boolean",
                    "description": "Enable \"audience\", or who the SAML assertion is intended for.  Ensures that the correct service provider intended for Artifactory is used on the IdP.  Default value is `true`.\n"
                }
            },
            "requiredInputs": [
                "loginUrl",
                "logoutUrl",
                "serviceProviderName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SamlSettings resources.\n",
                "properties": {
                    "allowUserToAccessProfile": {
                        "type": "boolean",
                        "description": "Allow persisted users to access their profile.  Default value is `true`.\n"
                    },
                    "autoRedirect": {
                        "type": "boolean",
                        "description": "Auto redirect to login through the IdP when clicking on Artifactory's login link.  Default value is `false`.\n"
                    },
                    "certificate": {
                        "type": "string",
                        "description": "SAML certificate that contains the public key for the IdP service provider.  Used by Artifactory to verify sign-in requests. Default value is ``.\n"
                    },
                    "emailAttribute": {
                        "type": "string",
                        "description": "Name of the attribute in the SAML response from the IdP that contains the user's email. Default value is ``.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable SAML SSO.  Default value is `true`.\n"
                    },
                    "groupAttribute": {
                        "type": "string",
                        "description": "Name of the attribute in the SAML response from the IdP that contains the user's group memberships. Default value is ``.\n"
                    },
                    "loginUrl": {
                        "type": "string",
                        "description": "Service provider login url configured on the IdP.\n"
                    },
                    "logoutUrl": {
                        "type": "string",
                        "description": "Service provider logout url, or where to redirect after user logs out.\n"
                    },
                    "noAutoUserCreation": {
                        "type": "boolean",
                        "description": "When automatic user creation is off, authenticated users are not automatically created inside Artifactory. Instead, for every request from an SSO user, the user is temporarily associated with default groups (if such groups are defined), and the permissions for these groups apply. Without auto-user creation, you must manually create the user inside Artifactory to manage user permissions not attached to their default groups. Default value is `false`.\n"
                    },
                    "serviceProviderName": {
                        "type": "string",
                        "description": "The SAML service provider name. This should be a URI that is also known as the entityID, providerID, or entity identity.\n"
                    },
                    "syncGroups": {
                        "type": "boolean",
                        "description": "Associate user with Artifactory groups based on the `group_attribute` provided in the SAML response from the identity provider.  Default value is `false`.\n"
                    },
                    "useEncryptedAssertion": {
                        "type": "boolean",
                        "description": "When set, an X.509 public certificate will be created by Artifactory. Download this certificate and upload it to your IDP and choose your own encryption algorithm. This process will let you encrypt the assertion section in your SAML response. Default value is `false`.\n"
                    },
                    "verifyAudienceRestriction": {
                        "type": "boolean",
                        "description": "Enable \"audience\", or who the SAML assertion is intended for.  Ensures that the correct service provider intended for Artifactory is used on the IdP.  Default value is `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/scopedToken:ScopedToken": {
            "description": "\n\n\n## Import\n\nArtifactory **does not** retain scoped tokens and cannot be imported into state. ",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Returns the access token to authenticate to Artifactory\n"
                },
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Optional) A list of the other instances or services that should accept this token identified by their Service-IDs. Limited to total 255 characters. Default to '*@*' if not set. Service ID must begin with 'jfrt@'. For instructions to retrieve the Artifactory Service ID see this [documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-GetServiceID).\n"
                },
                "description": {
                    "type": "string",
                    "description": "(Optional) Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.\n"
                },
                "expiresIn": {
                    "type": "integer",
                    "description": "(Optional) The amount of time, in seconds, it would take for the token to expire. An admin shall be able to set whether expiry is mandatory, what is the default expiry, and what is the maximum expiry allowed. Must be non-negative. Default value is based on configuration in `access.config.yaml`. See [API documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-RevokeTokenbyIDrevoketokenbyid) for details.\n"
                },
                "expiry": {
                    "type": "integer",
                    "description": "Returns the token expiry\n"
                },
                "issuedAt": {
                    "type": "integer",
                    "description": "Returns the token issued at date/time\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "Returns the token issuer\n"
                },
                "refreshable": {
                    "type": "boolean",
                    "description": "(Optional) Is this token refreshable? Defaults to `false`\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Optional) The scope of access that the token provides. Access to the REST API is always provided by default. Administrators can set any scope, while non-admin users can only set the scope to a subset of the groups to which they belong.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "Returns the token type\n"
                },
                "tokenType": {
                    "type": "string",
                    "description": "Returns the token type\n"
                },
                "username": {
                    "type": "string",
                    "description": "(Optional) The user name for which this token is created. The username is based on the authenticated user - either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: `\u003cservice-id\u003e/users/\u003cusername\u003e`. Limited to 255 characters.\n"
                }
            },
            "required": [
                "accessToken",
                "expiresIn",
                "expiry",
                "issuedAt",
                "issuer",
                "scopes",
                "subject",
                "tokenType"
            ],
            "inputProperties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Optional) A list of the other instances or services that should accept this token identified by their Service-IDs. Limited to total 255 characters. Default to '*@*' if not set. Service ID must begin with 'jfrt@'. For instructions to retrieve the Artifactory Service ID see this [documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-GetServiceID).\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "(Optional) Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.\n",
                    "willReplaceOnChanges": true
                },
                "expiresIn": {
                    "type": "integer",
                    "description": "(Optional) The amount of time, in seconds, it would take for the token to expire. An admin shall be able to set whether expiry is mandatory, what is the default expiry, and what is the maximum expiry allowed. Must be non-negative. Default value is based on configuration in `access.config.yaml`. See [API documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-RevokeTokenbyIDrevoketokenbyid) for details.\n",
                    "willReplaceOnChanges": true
                },
                "refreshable": {
                    "type": "boolean",
                    "description": "(Optional) Is this token refreshable? Defaults to `false`\n",
                    "willReplaceOnChanges": true
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Optional) The scope of access that the token provides. Access to the REST API is always provided by default. Administrators can set any scope, while non-admin users can only set the scope to a subset of the groups to which they belong.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "(Optional) The user name for which this token is created. The username is based on the authenticated user - either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: `\u003cservice-id\u003e/users/\u003cusername\u003e`. Limited to 255 characters.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ScopedToken resources.\n",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "Returns the access token to authenticate to Artifactory\n"
                    },
                    "audiences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Optional) A list of the other instances or services that should accept this token identified by their Service-IDs. Limited to total 255 characters. Default to '*@*' if not set. Service ID must begin with 'jfrt@'. For instructions to retrieve the Artifactory Service ID see this [documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-GetServiceID).\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "(Optional) Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "expiresIn": {
                        "type": "integer",
                        "description": "(Optional) The amount of time, in seconds, it would take for the token to expire. An admin shall be able to set whether expiry is mandatory, what is the default expiry, and what is the maximum expiry allowed. Must be non-negative. Default value is based on configuration in `access.config.yaml`. See [API documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-RevokeTokenbyIDrevoketokenbyid) for details.\n",
                        "willReplaceOnChanges": true
                    },
                    "expiry": {
                        "type": "integer",
                        "description": "Returns the token expiry\n"
                    },
                    "issuedAt": {
                        "type": "integer",
                        "description": "Returns the token issued at date/time\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "Returns the token issuer\n"
                    },
                    "refreshable": {
                        "type": "boolean",
                        "description": "(Optional) Is this token refreshable? Defaults to `false`\n",
                        "willReplaceOnChanges": true
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Optional) The scope of access that the token provides. Access to the REST API is always provided by default. Administrators can set any scope, while non-admin users can only set the scope to a subset of the groups to which they belong.\n",
                        "willReplaceOnChanges": true
                    },
                    "subject": {
                        "type": "string",
                        "description": "Returns the token type\n"
                    },
                    "tokenType": {
                        "type": "string",
                        "description": "Returns the token type\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "(Optional) The user name for which this token is created. The username is based on the authenticated user - either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: `\u003cservice-id\u003e/users/\u003cusername\u003e`. Limited to 255 characters.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/singleReplicationConfig:SingleReplicationConfig": {
            "description": "Note: this resource is deprecated in favor of `artifactory.PullReplication` resource.\n\nProvides an Artifactory single replication config resource. This can be used to create and manage a single Artifactory\nreplication. Primarily used when pull replication is needed.\n\n**WARNING: This should not be used on a repository with `artifactory.ReplicationConfig`. Using both together will cause\nunexpected behaviour and will almost certainly cause your replications to break.**\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a replication between two artifactory local repositories\nconst providerTestSource = new artifactory.LocalMavenRepository(\"provider_test_source\", {\n    key: \"provider_test_source\",\n});\nconst providerTestDest = new artifactory.LocalMavenRepository(\"provider_test_dest\", {\n    key: \"provider_test_dest\",\n});\nconst foo_rep = new artifactory.SingleReplicationConfig(\"foo-rep\", {\n    cronExp: \"0 0 * * * ?\",\n    enableEventReplication: true,\n    password: var_artifactory_password,\n    repoKey: providerTestSource.key,\n    url: var_artifactory_url,\n    username: var_artifactory_username,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nReplication configs can be imported using their repo key, e.g.\n\n```sh\n $ pulumi import artifactory:index/singleReplicationConfig:SingleReplicationConfig foo-rep repository-key\n```\n\n ",
            "properties": {
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "description": "Requires password encryption to be turned off `POST /api/system/decrypt`.\n"
                },
                "pathPrefix": {
                    "type": "string"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting.\n"
                },
                "repoKey": {
                    "type": "string"
                },
                "socketTimeoutMillis": {
                    "type": "integer"
                },
                "syncDeletes": {
                    "type": "boolean"
                },
                "syncProperties": {
                    "type": "boolean"
                },
                "syncStatistics": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "required": [
                "cronExp",
                "enableEventReplication",
                "enabled",
                "password",
                "repoKey",
                "socketTimeoutMillis",
                "syncDeletes",
                "syncProperties",
                "syncStatistics"
            ],
            "inputProperties": {
                "cronExp": {
                    "type": "string"
                },
                "enableEventReplication": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "pathPrefix": {
                    "type": "string"
                },
                "proxy": {
                    "type": "string",
                    "description": "Proxy key from Artifactory Proxies setting.\n"
                },
                "repoKey": {
                    "type": "string"
                },
                "socketTimeoutMillis": {
                    "type": "integer"
                },
                "syncDeletes": {
                    "type": "boolean"
                },
                "syncProperties": {
                    "type": "boolean"
                },
                "syncStatistics": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "cronExp",
                "repoKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SingleReplicationConfig resources.\n",
                "properties": {
                    "cronExp": {
                        "type": "string"
                    },
                    "enableEventReplication": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string",
                        "description": "Requires password encryption to be turned off `POST /api/system/decrypt`.\n"
                    },
                    "pathPrefix": {
                        "type": "string"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy key from Artifactory Proxies setting.\n"
                    },
                    "repoKey": {
                        "type": "string"
                    },
                    "socketTimeoutMillis": {
                        "type": "integer"
                    },
                    "syncDeletes": {
                        "type": "boolean"
                    },
                    "syncProperties": {
                        "type": "boolean"
                    },
                    "syncStatistics": {
                        "type": "boolean"
                    },
                    "url": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/unmanagedUser:UnmanagedUser": {
            "description": "Provides an Artifactory unmanaged user resource. This can be used to create and maintain Artifactory users.\n\nWhen the optional attribute `password` is omitted, a random password is generated according to current Artifactory password policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a new Artifactory user called terraform\nconst test_user = new artifactory.UnmanagedUser(\"test-user\", {\n    email: \"test-user@artifactory-terraform.com\",\n    groups: [\n        \"logged-in-users\",\n        \"readers\",\n    ],\n    password: \"my super secret password\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUsers can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/unmanagedUser:UnmanagedUser test-user myusername\n```\n\n ",
            "properties": {
                "admin": {
                    "type": "boolean",
                    "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                },
                "disableUiAccess": {
                    "type": "boolean",
                    "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email for user.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups this user is a part of.\n"
                },
                "internalPasswordDisabled": {
                    "type": "boolean",
                    "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Username for user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the user. When omitted, a random password is generated using the following password policy: 10 characters with 1 digit, 1 symbol, with upper and lower case letters.\n"
                },
                "profileUpdatable": {
                    "type": "boolean",
                    "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                }
            },
            "required": [
                "email",
                "name"
            ],
            "inputProperties": {
                "admin": {
                    "type": "boolean",
                    "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                },
                "disableUiAccess": {
                    "type": "boolean",
                    "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email for user.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups this user is a part of.\n"
                },
                "internalPasswordDisabled": {
                    "type": "boolean",
                    "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Username for user.\n",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "Password for the user. When omitted, a random password is generated using the following password policy: 10 characters with 1 digit, 1 symbol, with upper and lower case letters.\n"
                },
                "profileUpdatable": {
                    "type": "boolean",
                    "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                }
            },
            "requiredInputs": [
                "email"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UnmanagedUser resources.\n",
                "properties": {
                    "admin": {
                        "type": "boolean",
                        "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                    },
                    "disableUiAccess": {
                        "type": "boolean",
                        "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email for user.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups this user is a part of.\n"
                    },
                    "internalPasswordDisabled": {
                        "type": "boolean",
                        "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Username for user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the user. When omitted, a random password is generated using the following password policy: 10 characters with 1 digit, 1 symbol, with upper and lower case letters.\n"
                    },
                    "profileUpdatable": {
                        "type": "boolean",
                        "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/user:User": {
            "description": "Provides an Artifactory user resource. This can be used to create and manage Artifactory users.\n\nWhen the optional attribute `password` is omitted, a random password is generated according to current Artifactory password policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// Create a new Artifactory user called terraform\nconst test_user = new artifactory.User(\"test-user\", {\n    email: \"test-user@artifactory-terraform.com\",\n    groups: [\n        \"logged-in-users\",\n        \"readers\",\n    ],\n    password: \"my super secret password\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUsers can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/user:User test-user myusername\n```\n\n ",
            "properties": {
                "admin": {
                    "type": "boolean",
                    "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                },
                "disableUiAccess": {
                    "type": "boolean",
                    "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email for user.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups this user is a part of.\n- Note: If \"groups\" attribute is not specified then user's group membership set to empty. User will not be part of default \"readers\" group automatically.\n"
                },
                "internalPasswordDisabled": {
                    "type": "boolean",
                    "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Username for user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the user. When omitted, a random password is generated using the following password policy: 10 characters with 1 digit, 1 symbol, with upper and lower case letters.\n"
                },
                "profileUpdatable": {
                    "type": "boolean",
                    "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                }
            },
            "required": [
                "email",
                "name"
            ],
            "inputProperties": {
                "admin": {
                    "type": "boolean",
                    "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                },
                "disableUiAccess": {
                    "type": "boolean",
                    "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email for user.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups this user is a part of.\n- Note: If \"groups\" attribute is not specified then user's group membership set to empty. User will not be part of default \"readers\" group automatically.\n"
                },
                "internalPasswordDisabled": {
                    "type": "boolean",
                    "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Username for user.\n",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "Password for the user. When omitted, a random password is generated using the following password policy: 10 characters with 1 digit, 1 symbol, with upper and lower case letters.\n"
                },
                "profileUpdatable": {
                    "type": "boolean",
                    "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                }
            },
            "requiredInputs": [
                "email"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "admin": {
                        "type": "boolean",
                        "description": "When enabled, this user is an administrator with all the ensuing privileges. Default value is `false`.\n"
                    },
                    "disableUiAccess": {
                        "type": "boolean",
                        "description": "When set, this user can only access Artifactory through the REST API. This option cannot be set if the user has Admin privileges. Default value is `true`.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email for user.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups this user is a part of.\n- Note: If \"groups\" attribute is not specified then user's group membership set to empty. User will not be part of default \"readers\" group automatically.\n"
                    },
                    "internalPasswordDisabled": {
                        "type": "boolean",
                        "description": "When set, disables the fallback of using an internal password when external authentication (such as LDAP) is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Username for user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the user. When omitted, a random password is generated using the following password policy: 10 characters with 1 digit, 1 symbol, with upper and lower case letters.\n"
                    },
                    "profileUpdatable": {
                        "type": "boolean",
                        "description": "When set, this user can update his profile details (except for the password. Only an administrator can update the password). Default value is `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualAlpineRepository:VirtualAlpineRepository": {
            "description": "Creates a virtual Alpine repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Alpine+Linux+Repositories#AlpineLinuxRepositories-VirtualRepositorySettingupaVirtualRepository).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_alpine = new artifactory.VirtualAlpineRepository(\"foo-alpine\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-alpine\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualAlpineRepository:VirtualAlpineRepository foo-alpine foo-alpine\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "Primary keypair used to sign artifacts. Default value is empty.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "Primary keypair used to sign artifacts. Default value is empty.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualAlpineRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "primaryKeypairRef": {
                        "type": "string",
                        "description": "Primary keypair used to sign artifacts. Default value is empty.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualBowerRepository:VirtualBowerRepository": {
            "description": "Creates a virtual Bower repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Bower+Repositories#BowerRepositories-VirtualRepositories).\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_bower = new artifactory.VirtualBowerRepository(\"foo-bower\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    externalDependenciesEnabled: false,\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-bower\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualBowerRepository:VirtualBowerRepository foo-bower foo-bower\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "When set, external dependencies are rewritten. Default value is false.\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An Allow List of Ant-style path expressions that specify where external dependencies may be downloaded from. By default, this is set to ** which means that dependencies may be downloaded from any external source.\n"
                },
                "externalDependenciesRemoteRepo": {
                    "type": "string",
                    "description": "The remote repository aggregated by this virtual repository in which the external dependency will be cached.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "When set, external dependencies are rewritten. Default value is false.\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An Allow List of Ant-style path expressions that specify where external dependencies may be downloaded from. By default, this is set to ** which means that dependencies may be downloaded from any external source.\n",
                    "willReplaceOnChanges": true
                },
                "externalDependenciesRemoteRepo": {
                    "type": "string",
                    "description": "The remote repository aggregated by this virtual repository in which the external dependency will be cached.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualBowerRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "externalDependenciesEnabled": {
                        "type": "boolean",
                        "description": "When set, external dependencies are rewritten. Default value is false.\n"
                    },
                    "externalDependenciesPatterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Allow List of Ant-style path expressions that specify where external dependencies may be downloaded from. By default, this is set to ** which means that dependencies may be downloaded from any external source.\n",
                        "willReplaceOnChanges": true
                    },
                    "externalDependenciesRemoteRepo": {
                        "type": "string",
                        "description": "The remote repository aggregated by this virtual repository in which the external dependency will be cached.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualChefRepository:VirtualChefRepository": {
            "description": "Creates a virtual Chef repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Chef+Cookbook+Repositories#ChefCookbookRepositories-VirtualChefSupermarket).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_chef = new artifactory.VirtualChefRepository(\"foo-chef\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-chef\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualChefRepository:VirtualChefRepository foo-chef foo-chef\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualChefRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualComposerRepository:VirtualComposerRepository": {
            "description": "Creates a virtual PHP Composer repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/PHP+Composer+Repositories#PHPComposerRepositories-VirtualRepositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_composer = new artifactory.VirtualComposerRepository(\"foo-composer\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-composer\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualComposerRepository:VirtualComposerRepository foo-composer foo-composer\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualComposerRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualConanRepository:VirtualConanRepository": {
            "description": "Creates a virtual Conan repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Conan+Repositories#ConanRepositories-VirtualRepositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_conan = new artifactory.VirtualConanRepository(\"foo-conan\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-conan\",\n    notes: \"Internal description\",\n    repoLayoutRef: \"conan-default\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualConanRepository:VirtualConanRepository foo-conan foo-conan\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualConanRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualCondaRepository:VirtualCondaRepository": {
            "description": "Creates a virtual Conda repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Conda+Repositories#CondaRepositories-VirtualRepositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_conda = new artifactory.VirtualCondaRepository(\"foo-conda\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-conda\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualCondaRepository:VirtualCondaRepository foo-conda foo-conda\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualCondaRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualCranRepository:VirtualCranRepository": {
            "description": "Creates a virtual Cran repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/CRAN+Repositories#CRANRepositories-VirtualRepositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_cran = new artifactory.VirtualCranRepository(\"foo-cran\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-cran\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualCranRepository:VirtualCranRepository foo-cran foo-cran\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualCranRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualDebianRepository:VirtualDebianRepository": {
            "description": "Creates a virtual Debian repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Debian+Repositories#DebianRepositories-VirtualRepositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_debian = new artifactory.VirtualDebianRepository(\"foo-debian\", {\n    debianDefaultArchitectures: \"amd64,i386\",\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-debian\",\n    notes: \"Internal description\",\n    optionalIndexCompressionFormats: [\n        \"bz2\",\n        \"xz\",\n    ],\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualDebianRepository:VirtualDebianRepository foo-debian foo-debian\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "debianDefaultArchitectures": {
                    "type": "string",
                    "description": "Specifying  architectures will speed up Artifactory's initial metadata indexing process. The default architecture values are amd64 and i386.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "optionalIndexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Index file formats you would like to create in addition to the default Gzip (.gzip extension). Supported values are 'bz2','lzma' and 'xz'. Default value is 'bz2'.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "Primary keypair used to sign artifacts. Default is empty.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "Secondary keypair used to sign artifacts. Default is empty.\n"
                }
            },
            "required": [
                "key",
                "optionalIndexCompressionFormats",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "debianDefaultArchitectures": {
                    "type": "string",
                    "description": "Specifying  architectures will speed up Artifactory's initial metadata indexing process. The default architecture values are amd64 and i386.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "optionalIndexCompressionFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Index file formats you would like to create in addition to the default Gzip (.gzip extension). Supported values are 'bz2','lzma' and 'xz'. Default value is 'bz2'.\n"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "Primary keypair used to sign artifacts. Default is empty.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "Secondary keypair used to sign artifacts. Default is empty.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualDebianRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "debianDefaultArchitectures": {
                        "type": "string",
                        "description": "Specifying  architectures will speed up Artifactory's initial metadata indexing process. The default architecture values are amd64 and i386.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "optionalIndexCompressionFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Index file formats you would like to create in addition to the default Gzip (.gzip extension). Supported values are 'bz2','lzma' and 'xz'. Default value is 'bz2'.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "primaryKeypairRef": {
                        "type": "string",
                        "description": "Primary keypair used to sign artifacts. Default is empty.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    },
                    "secondaryKeypairRef": {
                        "type": "string",
                        "description": "Secondary keypair used to sign artifacts. Default is empty.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualDockerRepository:VirtualDockerRepository": {
            "description": "Creates a virtual Docker repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Docker+Registry#DockerRegistry-VirtualDockerRepositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_docker = new artifactory.VirtualDockerRepository(\"foo-docker\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-docker\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualDockerRepository:VirtualDockerRepository foo-docker foo-docker\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualDockerRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualGemsRepository:VirtualGemsRepository": {
            "description": "Creates a virtual Gems repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/RubyGems+Repositories#RubyGemsRepositories-VirtualRepositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_gems = new artifactory.VirtualGemsRepository(\"foo-gems\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-gems\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualGemsRepository:VirtualGemsRepository foo-gems foo-gems\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualGemsRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualGenericRepository:VirtualGenericRepository": {
            "description": "Creates a virtual Generic repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Virtual+Repositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_generic = new artifactory.VirtualGenericRepository(\"foo-generic\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-generic\",\n    notes: \"Internal description\",\n    repoLayoutRef: \"simple-default\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualGenericRepository:VirtualGenericRepository foo-generic foo-generic\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualGenericRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualGitlfsRepository:VirtualGitlfsRepository": {
            "description": "Creates a virtual Git LFS repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Git+LFS+Repositories#GitLFSRepositories-VirtualRepositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_gitlfs = new artifactory.VirtualCgitlfsRepository(\"foo-gitlfs\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-gitlfs\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualGitlfsRepository:VirtualGitlfsRepository foo-gitlfs foo-gitlfs\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualGitlfsRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualGradleRepository:VirtualGradleRepository": {
            "description": "Creates a virtual Gradle repository.\nOfficial documentation can be found [here](https://jfrog.com/blog/how-to-set-up-a-private-remote-and-virtual-maven-gradle-registry/).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_gradle = new artifactory.VirtualGradleRepository(\"foo-gradle\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-gradle\",\n    notes: \"Internal description\",\n    pomRepositoryReferencesCleanupPolicy: \"discard_active_reference\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualGradleRepository:VirtualGradleRepository foo-gradle foo-gradle\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "forceMavenAuthentication",
                "key",
                "packageType",
                "pomRepositoryReferencesCleanupPolicy"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualGradleRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "forceMavenAuthentication": {
                        "type": "boolean",
                        "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "keyPair": {
                        "type": "string",
                        "description": "The keypair used to sign artifacts.\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "pomRepositoryReferencesCleanupPolicy": {
                        "type": "string",
                        "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualHelmRepository:VirtualHelmRepository": {
            "description": "Creates a virtual Helm repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Kubernetes+Helm+Chart+Repositories#KubernetesHelmChartRepositories-VirtualRepositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_helm_virtual = new artifactory.VirtualHelmRepository(\"foo-helm-virtual\", {\n    key: \"foo-helm-virtual\",\n    useNamespaces: true,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualHelmRepository:VirtualHelmRepository foo-helm-virtual foo-helm-virtual\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                },
                "useNamespaces": {
                    "type": "boolean",
                    "description": "From Artifactory 7.24.1 (SaaS Version), you can explicitly state a specific aggregated local or remote repository to fetch from a virtual by assigning namespaces to local and remote repositories. See the documentation [here](https://www.jfrog.com/confluence/display/JFROG/Kubernetes+Helm+Chart+Repositories#KubernetesHelmChartRepositories-NamespaceSupportforHelmVirtualRepositories). Default is 'false'.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                },
                "useNamespaces": {
                    "type": "boolean",
                    "description": "From Artifactory 7.24.1 (SaaS Version), you can explicitly state a specific aggregated local or remote repository to fetch from a virtual by assigning namespaces to local and remote repositories. See the documentation [here](https://www.jfrog.com/confluence/display/JFROG/Kubernetes+Helm+Chart+Repositories#KubernetesHelmChartRepositories-NamespaceSupportforHelmVirtualRepositories). Default is 'false'.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualHelmRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    },
                    "useNamespaces": {
                        "type": "boolean",
                        "description": "From Artifactory 7.24.1 (SaaS Version), you can explicitly state a specific aggregated local or remote repository to fetch from a virtual by assigning namespaces to local and remote repositories. See the documentation [here](https://www.jfrog.com/confluence/display/JFROG/Kubernetes+Helm+Chart+Repositories#KubernetesHelmChartRepositories-NamespaceSupportforHelmVirtualRepositories). Default is 'false'.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualIvyRepository:VirtualIvyRepository": {
            "description": "Creates a virtual Ivy repository.\nOfficial documentation can be found [here](https://jfrog.com/blog/how-to-set-up-a-private-remote-and-virtual-maven-gradle-registry/).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_ivy = new artifactory.VirtualIvyRepository(\"foo-ivy\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-ivy\",\n    notes: \"Internal description\",\n    pomRepositoryReferencesCleanupPolicy: \"discard_active_reference\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualIvyRepository:VirtualIvyRepository foo-ivy foo-ivy\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "forceMavenAuthentication",
                "key",
                "packageType",
                "pomRepositoryReferencesCleanupPolicy"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualIvyRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "forceMavenAuthentication": {
                        "type": "boolean",
                        "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "keyPair": {
                        "type": "string",
                        "description": "The keypair used to sign artifacts.\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "pomRepositoryReferencesCleanupPolicy": {
                        "type": "string",
                        "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualNpmRepository:VirtualNpmRepository": {
            "description": "Creates a virtual repository resource with specific npm features.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/npm+Registry#npmRegistry-VirtualnpmRegistry).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_npm = new artifactory.VirtualNpmRepository(\"foo-npm\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-npm\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualNpmRepository:VirtualNpmRepository foo-npm foo-npm\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "When set, external dependencies are rewritten. Default value is false.\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An Allow List of Ant-style path expressions that specify where external dependencies may be downloaded from. By default,\nthis is set to ** which means that dependencies may be downloaded from any external source.\n"
                },
                "externalDependenciesRemoteRepo": {
                    "type": "string",
                    "description": "The remote repository aggregated by this virtual repository in which the external dependency will be cached.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "externalDependenciesEnabled": {
                    "type": "boolean",
                    "description": "When set, external dependencies are rewritten. Default value is false.\n"
                },
                "externalDependenciesPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An Allow List of Ant-style path expressions that specify where external dependencies may be downloaded from. By default,\nthis is set to ** which means that dependencies may be downloaded from any external source.\n",
                    "willReplaceOnChanges": true
                },
                "externalDependenciesRemoteRepo": {
                    "type": "string",
                    "description": "The remote repository aggregated by this virtual repository in which the external dependency will be cached.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualNpmRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "externalDependenciesEnabled": {
                        "type": "boolean",
                        "description": "When set, external dependencies are rewritten. Default value is false.\n"
                    },
                    "externalDependenciesPatterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Allow List of Ant-style path expressions that specify where external dependencies may be downloaded from. By default,\nthis is set to ** which means that dependencies may be downloaded from any external source.\n",
                        "willReplaceOnChanges": true
                    },
                    "externalDependenciesRemoteRepo": {
                        "type": "string",
                        "description": "The remote repository aggregated by this virtual repository in which the external dependency will be cached.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualNugetRepository:VirtualNugetRepository": {
            "description": "Creates a virtual Nuget repository. \nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/NuGet+Repositories#NuGetRepositories-VirtualRepositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_nuget = new artifactory.VirtualNugetRepository(\"foo-nuget\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    forceNugetAuthentication: true,\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-nuget\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualNugetRepository:VirtualNugetRepository foo-nuget foo-nuget\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceNugetAuthentication": {
                    "type": "boolean",
                    "description": "If set, user authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This is also enforced when aggregated repositories support anonymous requests. Default is `false`.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceNugetAuthentication": {
                    "type": "boolean",
                    "description": "If set, user authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This is also enforced when aggregated repositories support anonymous requests. Default is `false`.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualNugetRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "forceNugetAuthentication": {
                        "type": "boolean",
                        "description": "If set, user authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This is also enforced when aggregated repositories support anonymous requests. Default is `false`.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualP2Repository:VirtualP2Repository": {
            "description": "Creates a virtual P2 repository. \nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/P2+Repositories#P2Repositories-DefiningaVirtualRepository)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_p2 = new artifactory.VirtualP2Repository(\"foo-p2\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-p2\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualP2Repository:VirtualP2Repository foo-p2 foo-p2\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualP2Repository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualPubRepository:VirtualPubRepository": {
            "description": "Creates a virtual Pub repository. \nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Pub+Repositories#PubRepositories-SettingupaVirtualRepository).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_pub = new artifactory.VirtualPubRepository(\"foo-pub\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-pub\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualPubRepository:VirtualPubRepository foo-pub foo-pub\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualPubRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualPuppetRepository:VirtualPuppetRepository": {
            "description": "Creates a virtual Puppet repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/Puppet+Repositories#PuppetRepositories-VirtualPuppetRepository).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_puppet = new artifactory.VirtualPuppetRepository(\"foo-puppet\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-puppet\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualPuppetRepository:VirtualPuppetRepository foo-puppet foo-puppet\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualPuppetRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualPypiRepository:VirtualPypiRepository": {
            "description": "Creates a virtual Pypi repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/PyPI+Repositories#PyPIRepositories-VirtualRepositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_pypi = new artifactory.VirtualPypiRepository(\"foo-pypi\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-pypi\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualPypiRepository:VirtualPypiRepository foo-pypi foo-pypi\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualPypiRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualRpmRepository:VirtualRpmRepository": {
            "description": "Creates a virtual Rpm repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/RPM+Repositories).\n\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualRpmRepository:VirtualRpmRepository foo-rpm-virtual foo-rpm-virtual\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "The primary GPG key to be used to sign packages.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "The secondary GPG key to be used to sign packages.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "primaryKeypairRef": {
                    "type": "string",
                    "description": "The primary GPG key to be used to sign packages.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                },
                "secondaryKeypairRef": {
                    "type": "string",
                    "description": "The secondary GPG key to be used to sign packages.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualRpmRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "primaryKeypairRef": {
                        "type": "string",
                        "description": "The primary GPG key to be used to sign packages.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    },
                    "secondaryKeypairRef": {
                        "type": "string",
                        "description": "The secondary GPG key to be used to sign packages.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualSbtRepository:VirtualSbtRepository": {
            "description": "Creates a virtual SBT repository.\nOfficial documentation can be found [here](https://www.jfrog.com/confluence/display/JFROG/SBT+Repositories#SBTRepositories-VirtualRepositories).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst foo_sbt = new artifactory.VirtualSbtRepository(\"foo-sbt\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"foo-sbt\",\n    notes: \"Internal description\",\n    pomRepositoryReferencesCleanupPolicy: \"discard_active_reference\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualSbtRepository:VirtualSbtRepository foo-sbt foo-sbt\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "forceMavenAuthentication",
                "key",
                "packageType",
                "pomRepositoryReferencesCleanupPolicy"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "forceMavenAuthentication": {
                    "type": "boolean",
                    "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "keyPair": {
                    "type": "string",
                    "description": "The keypair used to sign artifacts.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "pomRepositoryReferencesCleanupPolicy": {
                    "type": "string",
                    "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualSbtRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "forceMavenAuthentication": {
                        "type": "boolean",
                        "description": "User authentication is required when accessing the repository. An anonymous request will display an HTTP 401 error. This\nis also enforced when aggregated repositories support anonymous requests.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "keyPair": {
                        "type": "string",
                        "description": "The keypair used to sign artifacts.\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "pomRepositoryReferencesCleanupPolicy": {
                        "type": "string",
                        "description": "- (1: discard_active_reference) Discard Active References - Removes repository elements that are declared directly under project or under a profile in the same POM that is activeByDefault.\n- (2: discard_any_reference) Discard Any References - Removes all repository elements regardless of whether they are included in an active profile or not.\n- (3: nothing) Nothing - Does not remove any repository elements declared in the POM.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        },
        "artifactory:index/virtualTerraformRepository:VirtualTerraformRepository": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\nconst terraform_virtual = new artifactory.VirtualTerraformRepository(\"terraform-virtual\", {\n    description: \"A test virtual repo\",\n    excludesPattern: \"com/google/**\",\n    includesPattern: \"com/jfrog/**,cloud/jfrog/**\",\n    key: \"terraform-remote\",\n    notes: \"Internal description\",\n    repositories: [],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVirtual repositories can be imported using their name, e.g.\n\n```sh\n $ pulumi import artifactory:index/virtualTerraformRepository:VirtualTerraformRepository terraform-virtual terraform-remote\n```\n\n ",
            "properties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "packageType": {
                    "type": "string",
                    "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "required": [
                "key",
                "packageType"
            ],
            "inputProperties": {
                "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                    "type": "boolean",
                    "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                },
                "defaultDeploymentRepo": {
                    "type": "string",
                    "description": "Default repository to deploy artifacts.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                },
                "excludesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                },
                "includesPattern": {
                    "type": "string",
                    "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                },
                "repoLayoutRef": {
                    "type": "string",
                    "description": "Repository layout key for the local repository\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The effective list of actual repositories included in this virtual repository.\n"
                },
                "retrievalCachePeriodSeconds": {
                    "type": "integer",
                    "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualTerraformRepository resources.\n",
                "properties": {
                    "artifactoryRequestsCanRetrieveRemoteArtifacts": {
                        "type": "boolean",
                        "description": "Whether the virtual repository should search through remote repositories when trying to resolve an artifact requested by\nanother Artifactory instance.\n"
                    },
                    "defaultDeploymentRepo": {
                        "type": "string",
                        "description": "Default repository to deploy artifacts.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text field that describes the content and purpose of the repository. If you choose to insert a link into this\nfield, clicking the link will prompt the user to confirm that they might be redirected to a new domain.\n"
                    },
                    "excludesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to exclude when evaluating artifact requests, in the form of x/y/**/z/*.By default no\nartifacts are excluded.\n"
                    },
                    "includesPattern": {
                        "type": "string",
                        "description": "List of artifact patterns to include when evaluating artifact requests in the form of x/y/**/z/*. When used, only\nartifacts matching one of the include patterns are served. By default, all artifacts are included (**/*).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A mandatory identifier for the repository that must be unique. It cannot begin with a number or\ncontain spaces or special characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to add additional notes about the repository. These are only visible to the administrator.\n"
                    },
                    "packageType": {
                        "type": "string",
                        "description": "The Package Type. This must be specified when the repository is created, and once set, cannot be changed.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Project environment for assigning this repository to. Allow values: \"DEV\" or \"PROD\"\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "Project key for assigning this repository to. Must be 3 - 10 lowercase alphanumeric characters. When assigning\nrepository to a project, repository key must be prefixed with project key, separated by a dash.\n"
                    },
                    "repoLayoutRef": {
                        "type": "string",
                        "description": "Repository layout key for the local repository\n"
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The effective list of actual repositories included in this virtual repository.\n"
                    },
                    "retrievalCachePeriodSeconds": {
                        "type": "integer",
                        "description": "This value refers to the number of seconds to cache metadata files before checking for newer versions on aggregated\nrepositories. A value of 0 indicates no caching.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "artifactory:index/getFile:getFile": {
            "description": "## # Artifactory File Data Source\n\nProvides an Artifactory file datasource. This can be used to download a file from a given Artifactory repository.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// \nconst my_file = pulumi.output(artifactory.getFile({\n    outputPath: \"tmp/artifact.zip\",\n    path: \"/path/to/the/artifact.zip\",\n    repository: \"repo-key\",\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFile.\n",
                "properties": {
                    "forceOverwrite": {
                        "type": "boolean",
                        "description": "If set to true, an existing file in the output_path will be overwritten. Default: false\n"
                    },
                    "outputPath": {
                        "type": "string",
                        "description": "The local path the file should be downloaded to.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "The path to the file within the repository.\n"
                    },
                    "pathIsAliased": {
                        "type": "boolean",
                        "description": "If set to `true`, the provider will get the artifact directly from Artifactory without attempting to resolve it or verify it and will delegate this to artifactory\nif the file exists. More details in the [official documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-RetrieveLatestArtifact)\n"
                    },
                    "repository": {
                        "type": "string",
                        "description": "Name of the repository where the file is stored.\n"
                    }
                },
                "type": "object",
                "required": [
                    "outputPath",
                    "path",
                    "repository"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFile.\n",
                "properties": {
                    "created": {
                        "type": "string",
                        "description": "The time \u0026 date when the file was created.\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The user who created the file.\n"
                    },
                    "downloadUri": {
                        "type": "string",
                        "description": "The URI that can be used to download the file.\n"
                    },
                    "forceOverwrite": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The time \u0026 date when the file was last modified.\n"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "description": "The time \u0026 date when the file was last updated.\n"
                    },
                    "md5": {
                        "type": "string",
                        "description": "MD5 checksum of the file.\n"
                    },
                    "mimetype": {
                        "type": "string",
                        "description": "The mimetype of the file.\n"
                    },
                    "modifiedBy": {
                        "type": "string",
                        "description": "The user who last modified the file.\n"
                    },
                    "outputPath": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "pathIsAliased": {
                        "type": "boolean"
                    },
                    "repository": {
                        "type": "string"
                    },
                    "sha1": {
                        "type": "string",
                        "description": "SHA1 checksum of the file.\n"
                    },
                    "sha256": {
                        "type": "string",
                        "description": "SHA256 checksum of the file.\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The size of the file.\n"
                    }
                },
                "type": "object",
                "required": [
                    "created",
                    "createdBy",
                    "downloadUri",
                    "lastModified",
                    "lastUpdated",
                    "md5",
                    "mimetype",
                    "modifiedBy",
                    "outputPath",
                    "path",
                    "repository",
                    "sha1",
                    "sha256",
                    "size",
                    "id"
                ]
            }
        },
        "artifactory:index/getFileinfo:getFileinfo": {
            "description": "## # Artifactory File Info Data Source\n\nProvides an Artifactory fileinfo datasource. This can be used to read metadata of files stored in Artifactory repositories.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as artifactory from \"@pulumi/artifactory\";\n\n// \nconst my_file = pulumi.output(artifactory.getFileinfo({\n    path: \"/path/to/the/artifact.zip\",\n    repository: \"repo-key\",\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFileinfo.\n",
                "properties": {
                    "path": {
                        "type": "string",
                        "description": "The path to the file within the repository.\n"
                    },
                    "repository": {
                        "type": "string",
                        "description": "Name of the repository where the file is stored.\n"
                    }
                },
                "type": "object",
                "required": [
                    "path",
                    "repository"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFileinfo.\n",
                "properties": {
                    "created": {
                        "type": "string",
                        "description": "The time \u0026 date when the file was created.\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The user who created the file.\n"
                    },
                    "downloadUri": {
                        "type": "string",
                        "description": "The URI that can be used to download the file.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The time \u0026 date when the file was last modified.\n"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "description": "The time \u0026 date when the file was last updated.\n"
                    },
                    "md5": {
                        "type": "string",
                        "description": "MD5 checksum of the file.\n"
                    },
                    "mimetype": {
                        "type": "string",
                        "description": "The mimetype of the file.\n"
                    },
                    "modifiedBy": {
                        "type": "string",
                        "description": "The user who last modified the file.\n"
                    },
                    "path": {
                        "type": "string"
                    },
                    "repository": {
                        "type": "string"
                    },
                    "sha1": {
                        "type": "string",
                        "description": "SHA1 checksum of the file.\n"
                    },
                    "sha256": {
                        "type": "string",
                        "description": "SHA256 checksum of the file.\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The size of the file.\n"
                    }
                },
                "type": "object",
                "required": [
                    "created",
                    "createdBy",
                    "downloadUri",
                    "lastModified",
                    "lastUpdated",
                    "md5",
                    "mimetype",
                    "modifiedBy",
                    "path",
                    "repository",
                    "sha1",
                    "sha256",
                    "size",
                    "id"
                ]
            }
        }
    }
}